<Type Name="SyntaxEditorExtensions" FullName="Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions">
  <TypeSignature Language="C#" Value="public static class SyntaxEditorExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SyntaxEditorExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module SyntaxEditorExtensions" />
  <TypeSignature Language="F#" Value="type SyntaxEditorExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class SyntaxEditorExtensions abstract sealed" />
  <TypeSignature Language="C++ CX" Value="public ref class SyntaxEditorExtensions abstract sealed" />
  <TypeSignature Language="C++ WINRT" Value="class SyntaxEditorExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public static void AddAttribute (this Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, Microsoft.CodeAnalysis.SyntaxNode declaration, Microsoft.CodeAnalysis.SyntaxNode attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAttribute(class Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, class Microsoft.CodeAnalysis.SyntaxNode declaration, class Microsoft.CodeAnalysis.SyntaxNode attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddAttribute(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddAttribute (editor As SyntaxEditor, declaration As SyntaxNode, attribute As SyntaxNode)" />
      <MemberSignature Language="F#" Value="static member AddAttribute : Microsoft.CodeAnalysis.Editing.SyntaxEditor * Microsoft.CodeAnalysis.SyntaxNode * Microsoft.CodeAnalysis.SyntaxNode -&gt; unit" Usage="Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddAttribute (editor, declaration, attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddAttribute(Microsoft::CodeAnalysis::Editing::SyntaxEditor ^ editor, Microsoft::CodeAnalysis::SyntaxNode ^ declaration, Microsoft::CodeAnalysis::SyntaxNode ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editor" Type="Microsoft.CodeAnalysis.Editing.SyntaxEditor" RefType="this" />
        <Parameter Name="declaration" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="attribute" Type="Microsoft.CodeAnalysis.SyntaxNode" />
      </Parameters>
      <Docs>
        <param name="editor">To be added.</param>
        <param name="declaration">To be added.</param>
        <param name="attribute">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributeArgument">
      <MemberSignature Language="C#" Value="public static void AddAttributeArgument (this Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, Microsoft.CodeAnalysis.SyntaxNode attributeDeclaration, Microsoft.CodeAnalysis.SyntaxNode attributeArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddAttributeArgument(class Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, class Microsoft.CodeAnalysis.SyntaxNode attributeDeclaration, class Microsoft.CodeAnalysis.SyntaxNode attributeArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddAttributeArgument(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddAttributeArgument (editor As SyntaxEditor, attributeDeclaration As SyntaxNode, attributeArgument As SyntaxNode)" />
      <MemberSignature Language="F#" Value="static member AddAttributeArgument : Microsoft.CodeAnalysis.Editing.SyntaxEditor * Microsoft.CodeAnalysis.SyntaxNode * Microsoft.CodeAnalysis.SyntaxNode -&gt; unit" Usage="Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddAttributeArgument (editor, attributeDeclaration, attributeArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddAttributeArgument(Microsoft::CodeAnalysis::Editing::SyntaxEditor ^ editor, Microsoft::CodeAnalysis::SyntaxNode ^ attributeDeclaration, Microsoft::CodeAnalysis::SyntaxNode ^ attributeArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editor" Type="Microsoft.CodeAnalysis.Editing.SyntaxEditor" RefType="this" />
        <Parameter Name="attributeDeclaration" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="attributeArgument" Type="Microsoft.CodeAnalysis.SyntaxNode" />
      </Parameters>
      <Docs>
        <param name="editor">To be added.</param>
        <param name="attributeDeclaration">To be added.</param>
        <param name="attributeArgument">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBaseType">
      <MemberSignature Language="C#" Value="public static void AddBaseType (this Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, Microsoft.CodeAnalysis.SyntaxNode declaration, Microsoft.CodeAnalysis.SyntaxNode baseType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddBaseType(class Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, class Microsoft.CodeAnalysis.SyntaxNode declaration, class Microsoft.CodeAnalysis.SyntaxNode baseType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddBaseType(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddBaseType (editor As SyntaxEditor, declaration As SyntaxNode, baseType As SyntaxNode)" />
      <MemberSignature Language="F#" Value="static member AddBaseType : Microsoft.CodeAnalysis.Editing.SyntaxEditor * Microsoft.CodeAnalysis.SyntaxNode * Microsoft.CodeAnalysis.SyntaxNode -&gt; unit" Usage="Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddBaseType (editor, declaration, baseType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddBaseType(Microsoft::CodeAnalysis::Editing::SyntaxEditor ^ editor, Microsoft::CodeAnalysis::SyntaxNode ^ declaration, Microsoft::CodeAnalysis::SyntaxNode ^ baseType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editor" Type="Microsoft.CodeAnalysis.Editing.SyntaxEditor" RefType="this" />
        <Parameter Name="declaration" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="baseType" Type="Microsoft.CodeAnalysis.SyntaxNode" />
      </Parameters>
      <Docs>
        <param name="editor">To be added.</param>
        <param name="declaration">To be added.</param>
        <param name="baseType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInterfaceType">
      <MemberSignature Language="C#" Value="public static void AddInterfaceType (this Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, Microsoft.CodeAnalysis.SyntaxNode declaration, Microsoft.CodeAnalysis.SyntaxNode interfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddInterfaceType(class Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, class Microsoft.CodeAnalysis.SyntaxNode declaration, class Microsoft.CodeAnalysis.SyntaxNode interfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddInterfaceType(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddInterfaceType (editor As SyntaxEditor, declaration As SyntaxNode, interfaceType As SyntaxNode)" />
      <MemberSignature Language="F#" Value="static member AddInterfaceType : Microsoft.CodeAnalysis.Editing.SyntaxEditor * Microsoft.CodeAnalysis.SyntaxNode * Microsoft.CodeAnalysis.SyntaxNode -&gt; unit" Usage="Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddInterfaceType (editor, declaration, interfaceType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddInterfaceType(Microsoft::CodeAnalysis::Editing::SyntaxEditor ^ editor, Microsoft::CodeAnalysis::SyntaxNode ^ declaration, Microsoft::CodeAnalysis::SyntaxNode ^ interfaceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editor" Type="Microsoft.CodeAnalysis.Editing.SyntaxEditor" RefType="this" />
        <Parameter Name="declaration" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="interfaceType" Type="Microsoft.CodeAnalysis.SyntaxNode" />
      </Parameters>
      <Docs>
        <param name="editor">To be added.</param>
        <param name="declaration">To be added.</param>
        <param name="interfaceType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMember">
      <MemberSignature Language="C#" Value="public static void AddMember (this Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, Microsoft.CodeAnalysis.SyntaxNode declaration, Microsoft.CodeAnalysis.SyntaxNode member);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMember(class Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, class Microsoft.CodeAnalysis.SyntaxNode declaration, class Microsoft.CodeAnalysis.SyntaxNode member) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddMember(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddMember (editor As SyntaxEditor, declaration As SyntaxNode, member As SyntaxNode)" />
      <MemberSignature Language="F#" Value="static member AddMember : Microsoft.CodeAnalysis.Editing.SyntaxEditor * Microsoft.CodeAnalysis.SyntaxNode * Microsoft.CodeAnalysis.SyntaxNode -&gt; unit" Usage="Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddMember (editor, declaration, member)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddMember(Microsoft::CodeAnalysis::Editing::SyntaxEditor ^ editor, Microsoft::CodeAnalysis::SyntaxNode ^ declaration, Microsoft::CodeAnalysis::SyntaxNode ^ member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editor" Type="Microsoft.CodeAnalysis.Editing.SyntaxEditor" RefType="this" />
        <Parameter Name="declaration" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="member" Type="Microsoft.CodeAnalysis.SyntaxNode" />
      </Parameters>
      <Docs>
        <param name="editor">To be added.</param>
        <param name="declaration">To be added.</param>
        <param name="member">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParameter">
      <MemberSignature Language="C#" Value="public static void AddParameter (this Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, Microsoft.CodeAnalysis.SyntaxNode declaration, Microsoft.CodeAnalysis.SyntaxNode parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddParameter(class Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, class Microsoft.CodeAnalysis.SyntaxNode declaration, class Microsoft.CodeAnalysis.SyntaxNode parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddParameter(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddParameter (editor As SyntaxEditor, declaration As SyntaxNode, parameter As SyntaxNode)" />
      <MemberSignature Language="F#" Value="static member AddParameter : Microsoft.CodeAnalysis.Editing.SyntaxEditor * Microsoft.CodeAnalysis.SyntaxNode * Microsoft.CodeAnalysis.SyntaxNode -&gt; unit" Usage="Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddParameter (editor, declaration, parameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddParameter(Microsoft::CodeAnalysis::Editing::SyntaxEditor ^ editor, Microsoft::CodeAnalysis::SyntaxNode ^ declaration, Microsoft::CodeAnalysis::SyntaxNode ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editor" Type="Microsoft.CodeAnalysis.Editing.SyntaxEditor" RefType="this" />
        <Parameter Name="declaration" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="parameter" Type="Microsoft.CodeAnalysis.SyntaxNode" />
      </Parameters>
      <Docs>
        <param name="editor">To be added.</param>
        <param name="declaration">To be added.</param>
        <param name="parameter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddReturnAttribute">
      <MemberSignature Language="C#" Value="public static void AddReturnAttribute (this Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, Microsoft.CodeAnalysis.SyntaxNode declaration, Microsoft.CodeAnalysis.SyntaxNode attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddReturnAttribute(class Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, class Microsoft.CodeAnalysis.SyntaxNode declaration, class Microsoft.CodeAnalysis.SyntaxNode attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddReturnAttribute(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub AddReturnAttribute (editor As SyntaxEditor, declaration As SyntaxNode, attribute As SyntaxNode)" />
      <MemberSignature Language="F#" Value="static member AddReturnAttribute : Microsoft.CodeAnalysis.Editing.SyntaxEditor * Microsoft.CodeAnalysis.SyntaxNode * Microsoft.CodeAnalysis.SyntaxNode -&gt; unit" Usage="Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddReturnAttribute (editor, declaration, attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void AddReturnAttribute(Microsoft::CodeAnalysis::Editing::SyntaxEditor ^ editor, Microsoft::CodeAnalysis::SyntaxNode ^ declaration, Microsoft::CodeAnalysis::SyntaxNode ^ attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editor" Type="Microsoft.CodeAnalysis.Editing.SyntaxEditor" RefType="this" />
        <Parameter Name="declaration" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="attribute" Type="Microsoft.CodeAnalysis.SyntaxNode" />
      </Parameters>
      <Docs>
        <param name="editor">To be added.</param>
        <param name="declaration">To be added.</param>
        <param name="attribute">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertMembers">
      <MemberSignature Language="C#" Value="public static void InsertMembers (this Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, Microsoft.CodeAnalysis.SyntaxNode declaration, int index, System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.SyntaxNode&gt; members);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InsertMembers(class Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, class Microsoft.CodeAnalysis.SyntaxNode declaration, int32 index, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.SyntaxNode&gt; members) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.InsertMembers(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub InsertMembers (editor As SyntaxEditor, declaration As SyntaxNode, index As Integer, members As IEnumerable(Of SyntaxNode))" />
      <MemberSignature Language="F#" Value="static member InsertMembers : Microsoft.CodeAnalysis.Editing.SyntaxEditor * Microsoft.CodeAnalysis.SyntaxNode * int * seq&lt;Microsoft.CodeAnalysis.SyntaxNode&gt; -&gt; unit" Usage="Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.InsertMembers (editor, declaration, index, members)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void InsertMembers(Microsoft::CodeAnalysis::Editing::SyntaxEditor ^ editor, Microsoft::CodeAnalysis::SyntaxNode ^ declaration, int index, System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::SyntaxNode ^&gt; ^ members);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editor" Type="Microsoft.CodeAnalysis.Editing.SyntaxEditor" RefType="this" />
        <Parameter Name="declaration" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="members" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.SyntaxNode&gt;" />
      </Parameters>
      <Docs>
        <param name="editor">To be added.</param>
        <param name="declaration">To be added.</param>
        <param name="index">To be added.</param>
        <param name="members">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParameter">
      <MemberSignature Language="C#" Value="public static void InsertParameter (this Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, Microsoft.CodeAnalysis.SyntaxNode declaration, int index, Microsoft.CodeAnalysis.SyntaxNode parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InsertParameter(class Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, class Microsoft.CodeAnalysis.SyntaxNode declaration, int32 index, class Microsoft.CodeAnalysis.SyntaxNode parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.InsertParameter(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Int32,Microsoft.CodeAnalysis.SyntaxNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub InsertParameter (editor As SyntaxEditor, declaration As SyntaxNode, index As Integer, parameter As SyntaxNode)" />
      <MemberSignature Language="F#" Value="static member InsertParameter : Microsoft.CodeAnalysis.Editing.SyntaxEditor * Microsoft.CodeAnalysis.SyntaxNode * int * Microsoft.CodeAnalysis.SyntaxNode -&gt; unit" Usage="Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.InsertParameter (editor, declaration, index, parameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void InsertParameter(Microsoft::CodeAnalysis::Editing::SyntaxEditor ^ editor, Microsoft::CodeAnalysis::SyntaxNode ^ declaration, int index, Microsoft::CodeAnalysis::SyntaxNode ^ parameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editor" Type="Microsoft.CodeAnalysis.Editing.SyntaxEditor" RefType="this" />
        <Parameter Name="declaration" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="parameter" Type="Microsoft.CodeAnalysis.SyntaxNode" />
      </Parameters>
      <Docs>
        <param name="editor">To be added.</param>
        <param name="declaration">To be added.</param>
        <param name="index">To be added.</param>
        <param name="parameter">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccessibility">
      <MemberSignature Language="C#" Value="public static void SetAccessibility (this Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, Microsoft.CodeAnalysis.SyntaxNode declaration, Microsoft.CodeAnalysis.Accessibility accessibility);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAccessibility(class Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, class Microsoft.CodeAnalysis.SyntaxNode declaration, valuetype Microsoft.CodeAnalysis.Accessibility accessibility) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetAccessibility(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Accessibility)" />
      <MemberSignature Language="F#" Value="static member SetAccessibility : Microsoft.CodeAnalysis.Editing.SyntaxEditor * Microsoft.CodeAnalysis.SyntaxNode * Microsoft.CodeAnalysis.Accessibility -&gt; unit" Usage="Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetAccessibility (editor, declaration, accessibility)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetAccessibility(Microsoft::CodeAnalysis::Editing::SyntaxEditor ^ editor, Microsoft::CodeAnalysis::SyntaxNode ^ declaration, Microsoft::CodeAnalysis::Accessibility accessibility);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editor" Type="Microsoft.CodeAnalysis.Editing.SyntaxEditor" RefType="this" />
        <Parameter Name="declaration" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="accessibility" Type="Microsoft.CodeAnalysis.Accessibility" />
      </Parameters>
      <Docs>
        <param name="editor">To be added.</param>
        <param name="declaration">To be added.</param>
        <param name="accessibility">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetExpression">
      <MemberSignature Language="C#" Value="public static void SetExpression (this Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, Microsoft.CodeAnalysis.SyntaxNode declaration, Microsoft.CodeAnalysis.SyntaxNode expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetExpression(class Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, class Microsoft.CodeAnalysis.SyntaxNode declaration, class Microsoft.CodeAnalysis.SyntaxNode expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetExpression(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetExpression (editor As SyntaxEditor, declaration As SyntaxNode, expression As SyntaxNode)" />
      <MemberSignature Language="F#" Value="static member SetExpression : Microsoft.CodeAnalysis.Editing.SyntaxEditor * Microsoft.CodeAnalysis.SyntaxNode * Microsoft.CodeAnalysis.SyntaxNode -&gt; unit" Usage="Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetExpression (editor, declaration, expression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetExpression(Microsoft::CodeAnalysis::Editing::SyntaxEditor ^ editor, Microsoft::CodeAnalysis::SyntaxNode ^ declaration, Microsoft::CodeAnalysis::SyntaxNode ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editor" Type="Microsoft.CodeAnalysis.Editing.SyntaxEditor" RefType="this" />
        <Parameter Name="declaration" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="expression" Type="Microsoft.CodeAnalysis.SyntaxNode" />
      </Parameters>
      <Docs>
        <param name="editor">To be added.</param>
        <param name="declaration">To be added.</param>
        <param name="expression">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGetAccessorStatements">
      <MemberSignature Language="C#" Value="public static void SetGetAccessorStatements (this Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, Microsoft.CodeAnalysis.SyntaxNode declaration, System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.SyntaxNode&gt; statements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetGetAccessorStatements(class Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, class Microsoft.CodeAnalysis.SyntaxNode declaration, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.SyntaxNode&gt; statements) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetGetAccessorStatements(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetGetAccessorStatements (editor As SyntaxEditor, declaration As SyntaxNode, statements As IEnumerable(Of SyntaxNode))" />
      <MemberSignature Language="F#" Value="static member SetGetAccessorStatements : Microsoft.CodeAnalysis.Editing.SyntaxEditor * Microsoft.CodeAnalysis.SyntaxNode * seq&lt;Microsoft.CodeAnalysis.SyntaxNode&gt; -&gt; unit" Usage="Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetGetAccessorStatements (editor, declaration, statements)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetGetAccessorStatements(Microsoft::CodeAnalysis::Editing::SyntaxEditor ^ editor, Microsoft::CodeAnalysis::SyntaxNode ^ declaration, System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::SyntaxNode ^&gt; ^ statements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editor" Type="Microsoft.CodeAnalysis.Editing.SyntaxEditor" RefType="this" />
        <Parameter Name="declaration" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="statements" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.SyntaxNode&gt;" />
      </Parameters>
      <Docs>
        <param name="editor">To be added.</param>
        <param name="declaration">To be added.</param>
        <param name="statements">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetModifiers">
      <MemberSignature Language="C#" Value="public static void SetModifiers (this Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, Microsoft.CodeAnalysis.SyntaxNode declaration, Microsoft.CodeAnalysis.Editing.DeclarationModifiers modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetModifiers(class Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, class Microsoft.CodeAnalysis.SyntaxNode declaration, valuetype Microsoft.CodeAnalysis.Editing.DeclarationModifiers modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetModifiers(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Editing.DeclarationModifiers)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetModifiers (editor As SyntaxEditor, declaration As SyntaxNode, modifiers As DeclarationModifiers)" />
      <MemberSignature Language="F#" Value="static member SetModifiers : Microsoft.CodeAnalysis.Editing.SyntaxEditor * Microsoft.CodeAnalysis.SyntaxNode * Microsoft.CodeAnalysis.Editing.DeclarationModifiers -&gt; unit" Usage="Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetModifiers (editor, declaration, modifiers)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetModifiers(Microsoft::CodeAnalysis::Editing::SyntaxEditor ^ editor, Microsoft::CodeAnalysis::SyntaxNode ^ declaration, Microsoft::CodeAnalysis::Editing::DeclarationModifiers modifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editor" Type="Microsoft.CodeAnalysis.Editing.SyntaxEditor" RefType="this" />
        <Parameter Name="declaration" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="modifiers" Type="Microsoft.CodeAnalysis.Editing.DeclarationModifiers" />
      </Parameters>
      <Docs>
        <param name="editor">To be added.</param>
        <param name="declaration">To be added.</param>
        <param name="modifiers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetName">
      <MemberSignature Language="C#" Value="public static void SetName (this Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, Microsoft.CodeAnalysis.SyntaxNode declaration, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetName(class Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, class Microsoft.CodeAnalysis.SyntaxNode declaration, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetName(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetName (editor As SyntaxEditor, declaration As SyntaxNode, name As String)" />
      <MemberSignature Language="F#" Value="static member SetName : Microsoft.CodeAnalysis.Editing.SyntaxEditor * Microsoft.CodeAnalysis.SyntaxNode * string -&gt; unit" Usage="Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetName (editor, declaration, name)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetName(Microsoft::CodeAnalysis::Editing::SyntaxEditor ^ editor, Microsoft::CodeAnalysis::SyntaxNode ^ declaration, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editor" Type="Microsoft.CodeAnalysis.Editing.SyntaxEditor" RefType="this" />
        <Parameter Name="declaration" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="editor">To be added.</param>
        <param name="declaration">To be added.</param>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSetAccessorStatements">
      <MemberSignature Language="C#" Value="public static void SetSetAccessorStatements (this Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, Microsoft.CodeAnalysis.SyntaxNode declaration, System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.SyntaxNode&gt; statements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetSetAccessorStatements(class Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, class Microsoft.CodeAnalysis.SyntaxNode declaration, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.SyntaxNode&gt; statements) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetSetAccessorStatements(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetSetAccessorStatements (editor As SyntaxEditor, declaration As SyntaxNode, statements As IEnumerable(Of SyntaxNode))" />
      <MemberSignature Language="F#" Value="static member SetSetAccessorStatements : Microsoft.CodeAnalysis.Editing.SyntaxEditor * Microsoft.CodeAnalysis.SyntaxNode * seq&lt;Microsoft.CodeAnalysis.SyntaxNode&gt; -&gt; unit" Usage="Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetSetAccessorStatements (editor, declaration, statements)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetSetAccessorStatements(Microsoft::CodeAnalysis::Editing::SyntaxEditor ^ editor, Microsoft::CodeAnalysis::SyntaxNode ^ declaration, System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::SyntaxNode ^&gt; ^ statements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editor" Type="Microsoft.CodeAnalysis.Editing.SyntaxEditor" RefType="this" />
        <Parameter Name="declaration" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="statements" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.SyntaxNode&gt;" />
      </Parameters>
      <Docs>
        <param name="editor">To be added.</param>
        <param name="declaration">To be added.</param>
        <param name="statements">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStatements">
      <MemberSignature Language="C#" Value="public static void SetStatements (this Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, Microsoft.CodeAnalysis.SyntaxNode declaration, System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.SyntaxNode&gt; statements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetStatements(class Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, class Microsoft.CodeAnalysis.SyntaxNode declaration, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.SyntaxNode&gt; statements) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetStatements(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetStatements (editor As SyntaxEditor, declaration As SyntaxNode, statements As IEnumerable(Of SyntaxNode))" />
      <MemberSignature Language="F#" Value="static member SetStatements : Microsoft.CodeAnalysis.Editing.SyntaxEditor * Microsoft.CodeAnalysis.SyntaxNode * seq&lt;Microsoft.CodeAnalysis.SyntaxNode&gt; -&gt; unit" Usage="Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetStatements (editor, declaration, statements)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetStatements(Microsoft::CodeAnalysis::Editing::SyntaxEditor ^ editor, Microsoft::CodeAnalysis::SyntaxNode ^ declaration, System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::SyntaxNode ^&gt; ^ statements);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editor" Type="Microsoft.CodeAnalysis.Editing.SyntaxEditor" RefType="this" />
        <Parameter Name="declaration" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="statements" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.SyntaxNode&gt;" />
      </Parameters>
      <Docs>
        <param name="editor">To be added.</param>
        <param name="declaration">To be added.</param>
        <param name="statements">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetType">
      <MemberSignature Language="C#" Value="public static void SetType (this Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, Microsoft.CodeAnalysis.SyntaxNode declaration, Microsoft.CodeAnalysis.SyntaxNode type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetType(class Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, class Microsoft.CodeAnalysis.SyntaxNode declaration, class Microsoft.CodeAnalysis.SyntaxNode type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetType(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetType (editor As SyntaxEditor, declaration As SyntaxNode, type As SyntaxNode)" />
      <MemberSignature Language="F#" Value="static member SetType : Microsoft.CodeAnalysis.Editing.SyntaxEditor * Microsoft.CodeAnalysis.SyntaxNode * Microsoft.CodeAnalysis.SyntaxNode -&gt; unit" Usage="Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetType (editor, declaration, type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetType(Microsoft::CodeAnalysis::Editing::SyntaxEditor ^ editor, Microsoft::CodeAnalysis::SyntaxNode ^ declaration, Microsoft::CodeAnalysis::SyntaxNode ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editor" Type="Microsoft.CodeAnalysis.Editing.SyntaxEditor" RefType="this" />
        <Parameter Name="declaration" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="type" Type="Microsoft.CodeAnalysis.SyntaxNode" />
      </Parameters>
      <Docs>
        <param name="editor">To be added.</param>
        <param name="declaration">To be added.</param>
        <param name="type">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTypeConstraint">
      <MemberSignature Language="C#" Value="public static void SetTypeConstraint (this Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, Microsoft.CodeAnalysis.SyntaxNode declaration, string typeParameterName, Microsoft.CodeAnalysis.Editing.SpecialTypeConstraintKind kind, System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.SyntaxNode&gt; types);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTypeConstraint(class Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, class Microsoft.CodeAnalysis.SyntaxNode declaration, string typeParameterName, valuetype Microsoft.CodeAnalysis.Editing.SpecialTypeConstraintKind kind, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.SyntaxNode&gt; types) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetTypeConstraint(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.String,Microsoft.CodeAnalysis.Editing.SpecialTypeConstraintKind,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetTypeConstraint (editor As SyntaxEditor, declaration As SyntaxNode, typeParameterName As String, kind As SpecialTypeConstraintKind, types As IEnumerable(Of SyntaxNode))" />
      <MemberSignature Language="F#" Value="static member SetTypeConstraint : Microsoft.CodeAnalysis.Editing.SyntaxEditor * Microsoft.CodeAnalysis.SyntaxNode * string * Microsoft.CodeAnalysis.Editing.SpecialTypeConstraintKind * seq&lt;Microsoft.CodeAnalysis.SyntaxNode&gt; -&gt; unit" Usage="Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetTypeConstraint (editor, declaration, typeParameterName, kind, types)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetTypeConstraint(Microsoft::CodeAnalysis::Editing::SyntaxEditor ^ editor, Microsoft::CodeAnalysis::SyntaxNode ^ declaration, System::String ^ typeParameterName, Microsoft::CodeAnalysis::Editing::SpecialTypeConstraintKind kind, System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::SyntaxNode ^&gt; ^ types);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editor" Type="Microsoft.CodeAnalysis.Editing.SyntaxEditor" RefType="this" />
        <Parameter Name="declaration" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="typeParameterName" Type="System.String" />
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.Editing.SpecialTypeConstraintKind" />
        <Parameter Name="types" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.SyntaxNode&gt;" />
      </Parameters>
      <Docs>
        <param name="editor">To be added.</param>
        <param name="declaration">To be added.</param>
        <param name="typeParameterName">To be added.</param>
        <param name="kind">To be added.</param>
        <param name="types">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTypeParameters">
      <MemberSignature Language="C#" Value="public static void SetTypeParameters (this Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, Microsoft.CodeAnalysis.SyntaxNode declaration, System.Collections.Generic.IEnumerable&lt;string&gt; typeParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTypeParameters(class Microsoft.CodeAnalysis.Editing.SyntaxEditor editor, class Microsoft.CodeAnalysis.SyntaxNode declaration, class System.Collections.Generic.IEnumerable`1&lt;string&gt; typeParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetTypeParameters(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetTypeParameters (editor As SyntaxEditor, declaration As SyntaxNode, typeParameters As IEnumerable(Of String))" />
      <MemberSignature Language="F#" Value="static member SetTypeParameters : Microsoft.CodeAnalysis.Editing.SyntaxEditor * Microsoft.CodeAnalysis.SyntaxNode * seq&lt;string&gt; -&gt; unit" Usage="Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetTypeParameters (editor, declaration, typeParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetTypeParameters(Microsoft::CodeAnalysis::Editing::SyntaxEditor ^ editor, Microsoft::CodeAnalysis::SyntaxNode ^ declaration, System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ typeParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="editor" Type="Microsoft.CodeAnalysis.Editing.SyntaxEditor" RefType="this" />
        <Parameter Name="declaration" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="typeParameters" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="editor">To be added.</param>
        <param name="declaration">To be added.</param>
        <param name="typeParameters">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>