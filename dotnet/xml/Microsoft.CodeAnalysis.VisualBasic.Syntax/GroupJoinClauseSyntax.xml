<Type Name="GroupJoinClauseSyntax" FullName="Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax">
  <TypeSignature Language="C#" Value="public sealed class GroupJoinClauseSyntax : Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed GroupJoinClauseSyntax extends Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GroupJoinClauseSyntax&#xA;Inherits JoinClauseSyntax" />
  <TypeSignature Language="F#" Value="type GroupJoinClauseSyntax = class&#xA;    inherit JoinClauseSyntax" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
 Represents the "Group Join" query operator.
 </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor -&gt; unit" Usage="groupJoinClauseSyntax.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public override TResult Accept&lt;TResult&gt; (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResult Accept&lt;TResult&gt;(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1&lt;!!TResult&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResult) (visitor As VisualBasicSyntaxVisitor(Of TResult)) As TResult" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;'Result&gt; -&gt; 'Result" Usage="groupJoinClauseSyntax.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAdditionalJoins">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax AddAdditionalJoins (params Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax AddAdditionalJoins(class Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.AddAdditionalJoins(Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddAdditionalJoins (ParamArray items As JoinClauseSyntax()) As GroupJoinClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.AddAdditionalJoins : Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax[] -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax" Usage="groupJoinClauseSyntax.AddAdditionalJoins items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAggregationVariables">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax AddAggregationVariables (params Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax AddAggregationVariables(class Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.AddAggregationVariables(Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddAggregationVariables (ParamArray items As AggregationRangeVariableSyntax()) As GroupJoinClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.AddAggregationVariables : Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax[] -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax" Usage="groupJoinClauseSyntax.AddAggregationVariables items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalJoins">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax&gt; AdditionalJoins { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax&gt; AdditionalJoins" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.AdditionalJoins" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdditionalJoins As SyntaxList(Of JoinClauseSyntax)" />
      <MemberSignature Language="F#" Value="member this.AdditionalJoins : Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax&gt;" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.AdditionalJoins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 An additional Join or Group Join query operator.
 </summary>
        <value>To be added.</value>
        <remarks>
 If nothing is present, an empty list is returned.
 </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddJoinConditions">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax AddJoinConditions (params Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax AddJoinConditions(class Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.AddJoinConditions(Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddJoinConditions (ParamArray items As JoinConditionSyntax()) As GroupJoinClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.AddJoinConditions : Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax[] -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax" Usage="groupJoinClauseSyntax.AddJoinConditions items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddJoinedVariables">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax AddJoinedVariables (params Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax AddJoinedVariables(class Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.AddJoinedVariables(Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddJoinedVariables (ParamArray items As CollectionRangeVariableSyntax()) As GroupJoinClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.AddJoinedVariables : Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax[] -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax" Usage="groupJoinClauseSyntax.AddJoinedVariables items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AggregationVariables">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt; AggregationVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SeparatedSyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt; AggregationVariables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.AggregationVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AggregationVariables As SeparatedSyntaxList(Of AggregationRangeVariableSyntax)" />
      <MemberSignature Language="F#" Value="member this.AggregationVariables : Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt;" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.AggregationVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The list of new variables that calculate aggregations.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken GroupKeyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken GroupKeyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.GroupKeyword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GroupKeyword As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.GroupKeyword : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.GroupKeyword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The "Group" keyword.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntoKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken IntoKeyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken IntoKeyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.IntoKeyword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IntoKeyword As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.IntoKeyword : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.IntoKeyword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The "Into" keyword.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JoinConditions">
      <MemberSignature Language="C#" Value="public override Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax&gt; JoinConditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SeparatedSyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax&gt; JoinConditions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.JoinConditions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JoinConditions As SeparatedSyntaxList(Of JoinConditionSyntax)" />
      <MemberSignature Language="F#" Value="member this.JoinConditions : Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax&gt;" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.JoinConditions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The conditions indicating what expressions to compare during the join. Each
 condition is a JoinCondition, and the separators are "And" keywords.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JoinedVariables">
      <MemberSignature Language="C#" Value="public override Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax&gt; JoinedVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SeparatedSyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax&gt; JoinedVariables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.JoinedVariables" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JoinedVariables As SeparatedSyntaxList(Of CollectionRangeVariableSyntax)" />
      <MemberSignature Language="F#" Value="member this.JoinedVariables : Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax&gt;" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.JoinedVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 Defines the collection range variables being joined to.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JoinKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken JoinKeyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken JoinKeyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.JoinKeyword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property JoinKeyword As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.JoinKeyword : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.JoinKeyword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The "Join" keyword.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken OnKeyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken OnKeyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.OnKeyword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OnKeyword As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.OnKeyword : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.OnKeyword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The "On" keyword.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax Update (Microsoft.CodeAnalysis.SyntaxToken groupKeyword, Microsoft.CodeAnalysis.SyntaxToken joinKeyword, Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax&gt; joinedVariables, Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax&gt; additionalJoins, Microsoft.CodeAnalysis.SyntaxToken onKeyword, Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax&gt; joinConditions, Microsoft.CodeAnalysis.SyntaxToken intoKeyword, Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt; aggregationVariables);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax Update(valuetype Microsoft.CodeAnalysis.SyntaxToken groupKeyword, valuetype Microsoft.CodeAnalysis.SyntaxToken joinKeyword, valuetype Microsoft.CodeAnalysis.SeparatedSyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax&gt; joinedVariables, valuetype Microsoft.CodeAnalysis.SyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax&gt; additionalJoins, valuetype Microsoft.CodeAnalysis.SyntaxToken onKeyword, valuetype Microsoft.CodeAnalysis.SeparatedSyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax&gt; joinConditions, valuetype Microsoft.CodeAnalysis.SyntaxToken intoKeyword, valuetype Microsoft.CodeAnalysis.SeparatedSyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt; aggregationVariables) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax})" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (groupKeyword As SyntaxToken, joinKeyword As SyntaxToken, joinedVariables As SeparatedSyntaxList(Of CollectionRangeVariableSyntax), additionalJoins As SyntaxList(Of JoinClauseSyntax), onKeyword As SyntaxToken, joinConditions As SeparatedSyntaxList(Of JoinConditionSyntax), intoKeyword As SyntaxToken, aggregationVariables As SeparatedSyntaxList(Of AggregationRangeVariableSyntax)) As GroupJoinClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.Update : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax&gt; * Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax&gt; * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax&gt; * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt; -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax" Usage="groupJoinClauseSyntax.Update (groupKeyword, joinKeyword, joinedVariables, additionalJoins, onKeyword, joinConditions, intoKeyword, aggregationVariables)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="joinKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="joinedVariables" Type="Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax&gt;" />
        <Parameter Name="additionalJoins" Type="Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax&gt;" />
        <Parameter Name="onKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="joinConditions" Type="Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax&gt;" />
        <Parameter Name="intoKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="aggregationVariables" Type="Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt;" />
      </Parameters>
      <Docs>
        <param name="groupKeyword">
 The value for the GroupKeyword property.
 </param>
        <param name="joinKeyword">
 The value for the JoinKeyword property.
 </param>
        <param name="joinedVariables">
 The value for the JoinedVariables property.
 </param>
        <param name="additionalJoins">
 The value for the AdditionalJoins property.
 </param>
        <param name="onKeyword">
 The value for the OnKeyword property.
 </param>
        <param name="joinConditions">
 The value for the JoinConditions property.
 </param>
        <param name="intoKeyword">
 The value for the IntoKeyword property.
 </param>
        <param name="aggregationVariables">
 The value for the AggregationVariables property.
 </param>
        <summary>
 Returns a copy of this with the specified changes. Returns this instance if
 there are no actual changes.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAdditionalJoins">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax WithAdditionalJoins (Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax&gt; additionalJoins);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax WithAdditionalJoins(valuetype Microsoft.CodeAnalysis.SyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax&gt; additionalJoins) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.WithAdditionalJoins(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAdditionalJoins (additionalJoins As SyntaxList(Of JoinClauseSyntax)) As GroupJoinClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithAdditionalJoins : Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax&gt; -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax" Usage="groupJoinClauseSyntax.WithAdditionalJoins additionalJoins" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="additionalJoins" Type="Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax&gt;" />
      </Parameters>
      <Docs>
        <param name="additionalJoins">To be added.</param>
        <summary>
 Returns a copy of this with the AdditionalJoins property changed to the
 specified value. Returns this instance if the specified value is the same as
 the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAggregationVariables">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax WithAggregationVariables (Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt; aggregationVariables);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax WithAggregationVariables(valuetype Microsoft.CodeAnalysis.SeparatedSyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt; aggregationVariables) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.WithAggregationVariables(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAggregationVariables (aggregationVariables As SeparatedSyntaxList(Of AggregationRangeVariableSyntax)) As GroupJoinClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithAggregationVariables : Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt; -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax" Usage="groupJoinClauseSyntax.WithAggregationVariables aggregationVariables" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aggregationVariables" Type="Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt;" />
      </Parameters>
      <Docs>
        <param name="aggregationVariables">To be added.</param>
        <summary>
 Returns a copy of this with the AggregationVariables property changed to the
 specified value. Returns this instance if the specified value is the same as
 the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithGroupKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax WithGroupKeyword (Microsoft.CodeAnalysis.SyntaxToken groupKeyword);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax WithGroupKeyword(valuetype Microsoft.CodeAnalysis.SyntaxToken groupKeyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.WithGroupKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithGroupKeyword (groupKeyword As SyntaxToken) As GroupJoinClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithGroupKeyword : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax" Usage="groupJoinClauseSyntax.WithGroupKeyword groupKeyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="groupKeyword">To be added.</param>
        <summary>
 Returns a copy of this with the GroupKeyword property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithIntoKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax WithIntoKeyword (Microsoft.CodeAnalysis.SyntaxToken intoKeyword);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax WithIntoKeyword(valuetype Microsoft.CodeAnalysis.SyntaxToken intoKeyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.WithIntoKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithIntoKeyword (intoKeyword As SyntaxToken) As GroupJoinClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithIntoKeyword : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax" Usage="groupJoinClauseSyntax.WithIntoKeyword intoKeyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intoKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="intoKeyword">To be added.</param>
        <summary>
 Returns a copy of this with the IntoKeyword property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithJoinConditions">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax WithJoinConditions (Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax&gt; joinConditions);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax WithJoinConditions(valuetype Microsoft.CodeAnalysis.SeparatedSyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax&gt; joinConditions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.WithJoinConditions(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithJoinConditions (joinConditions As SeparatedSyntaxList(Of JoinConditionSyntax)) As GroupJoinClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithJoinConditions : Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax&gt; -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax" Usage="groupJoinClauseSyntax.WithJoinConditions joinConditions" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="joinConditions" Type="Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax&gt;" />
      </Parameters>
      <Docs>
        <param name="joinConditions">To be added.</param>
        <summary>
 Returns a copy of this with the JoinConditions property changed to the
 specified value. Returns this instance if the specified value is the same as
 the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithJoinedVariables">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax WithJoinedVariables (Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax&gt; joinedVariables);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax WithJoinedVariables(valuetype Microsoft.CodeAnalysis.SeparatedSyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax&gt; joinedVariables) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.WithJoinedVariables(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithJoinedVariables (joinedVariables As SeparatedSyntaxList(Of CollectionRangeVariableSyntax)) As GroupJoinClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithJoinedVariables : Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax&gt; -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax" Usage="groupJoinClauseSyntax.WithJoinedVariables joinedVariables" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="joinedVariables" Type="Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax&gt;" />
      </Parameters>
      <Docs>
        <param name="joinedVariables">To be added.</param>
        <summary>
 Returns a copy of this with the JoinedVariables property changed to the
 specified value. Returns this instance if the specified value is the same as
 the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithJoinKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax WithJoinKeyword (Microsoft.CodeAnalysis.SyntaxToken joinKeyword);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax WithJoinKeyword(valuetype Microsoft.CodeAnalysis.SyntaxToken joinKeyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.WithJoinKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithJoinKeyword (joinKeyword As SyntaxToken) As GroupJoinClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithJoinKeyword : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax" Usage="groupJoinClauseSyntax.WithJoinKeyword joinKeyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="joinKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="joinKeyword">To be added.</param>
        <summary>
 Returns a copy of this with the JoinKeyword property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithOnKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax WithOnKeyword (Microsoft.CodeAnalysis.SyntaxToken onKeyword);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax WithOnKeyword(valuetype Microsoft.CodeAnalysis.SyntaxToken onKeyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.WithOnKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithOnKeyword (onKeyword As SyntaxToken) As GroupJoinClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithOnKeyword : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax" Usage="groupJoinClauseSyntax.WithOnKeyword onKeyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="onKeyword">To be added.</param>
        <summary>
 Returns a copy of this with the OnKeyword property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>