<Type Name="CatchClauseSyntax" FullName="Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax">
  <TypeSignature Language="C#" Value="public sealed class CatchClauseSyntax : Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CatchClauseSyntax extends Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CatchClauseSyntax&#xA;Inherits CSharpSyntaxNode" />
  <TypeSignature Language="F#" Value="type CatchClauseSyntax = class&#xA;    inherit CSharpSyntaxNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatchClauseSyntax sealed : Microsoft::CodeAnalysis::CSharp::CSharpSyntaxNode" />
  <TypeSignature Language="C++ CX" Value="public ref class CatchClauseSyntax sealed : Microsoft::CodeAnalysis::CSharp::CSharpSyntaxNode" />
  <TypeSignature Language="C++ WINRT" Value="class CatchClauseSyntax sealed : Microsoft::CodeAnalysis::CSharp::CSharpSyntaxNode" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As CSharpSyntaxVisitor)" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor -&gt; unit" Usage="catchClauseSyntax.Accept visitor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(Microsoft::CodeAnalysis::CSharp::CSharpSyntaxVisitor ^ visitor);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override void Accept(Microsoft::CodeAnalysis::CSharp::CSharpSyntaxVisitor ^ visitor);" />
      <MemberSignature Language="C++ WINRT" Value=" override void Accept(Microsoft::CodeAnalysis::CSharp::CSharpSyntaxVisitor const &amp; visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public override TResult Accept&lt;TResult&gt; (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor&lt;TResult&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResult Accept&lt;TResult&gt;(class Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1&lt;!!TResult&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResult) (visitor As CSharpSyntaxVisitor(Of TResult)) As TResult" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor&lt;'Result&gt; -&gt; 'Result" Usage="catchClauseSyntax.Accept visitor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; override TResult Accept(Microsoft::CodeAnalysis::CSharp::CSharpSyntaxVisitor&lt;TResult&gt; ^ visitor);" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename TResult&gt;&#xA; override TResult Accept(Microsoft::CodeAnalysis::CSharp::CSharpSyntaxVisitor&lt;TResult&gt; const &amp; visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBlockStatements">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax AddBlockStatements (params Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax AddBlockStatements(class Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.AddBlockStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddBlockStatements (ParamArray items As StatementSyntax()) As CatchClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.AddBlockStatements : Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[] -&gt; Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax" Usage="catchClauseSyntax.AddBlockStatements items" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::CSharp::Syntax::CatchClauseSyntax ^ AddBlockStatements(... cli::array &lt;Microsoft::CodeAnalysis::CSharp::Syntax::StatementSyntax ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Block">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax Block { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax Block" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.Block" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Block As BlockSyntax" />
      <MemberSignature Language="F#" Value="member this.Block : Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax" Usage="Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.Block" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::CSharp::Syntax::BlockSyntax ^ Block { Microsoft::CodeAnalysis::CSharp::Syntax::BlockSyntax ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::CodeAnalysis::CSharp::Syntax::BlockSyntax ^ Block { Microsoft::CodeAnalysis::CSharp::Syntax::BlockSyntax ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatchKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken CatchKeyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken CatchKeyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.CatchKeyword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CatchKeyword As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.CatchKeyword : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.CatchKeyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken CatchKeyword { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Declaration">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax Declaration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax Declaration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.Declaration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Declaration As CatchDeclarationSyntax" />
      <MemberSignature Language="F#" Value="member this.Declaration : Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax" Usage="Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.Declaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::CSharp::Syntax::CatchDeclarationSyntax ^ Declaration { Microsoft::CodeAnalysis::CSharp::Syntax::CatchDeclarationSyntax ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::CodeAnalysis::CSharp::Syntax::CatchDeclarationSyntax ^ Declaration { Microsoft::CodeAnalysis::CSharp::Syntax::CatchDeclarationSyntax ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax Filter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax Filter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.Filter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Filter As CatchFilterClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.Filter : Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax" Usage="Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.Filter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::CSharp::Syntax::CatchFilterClauseSyntax ^ Filter { Microsoft::CodeAnalysis::CSharp::Syntax::CatchFilterClauseSyntax ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::CodeAnalysis::CSharp::Syntax::CatchFilterClauseSyntax ^ Filter { Microsoft::CodeAnalysis::CSharp::Syntax::CatchFilterClauseSyntax ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax Update (Microsoft.CodeAnalysis.SyntaxToken catchKeyword, Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax declaration, Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax filter, Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax block);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax Update(valuetype Microsoft.CodeAnalysis.SyntaxToken catchKeyword, class Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax declaration, class Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax filter, class Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax block) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (catchKeyword As SyntaxToken, declaration As CatchDeclarationSyntax, filter As CatchFilterClauseSyntax, block As BlockSyntax) As CatchClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.Update : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax -&gt; Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax" Usage="catchClauseSyntax.Update (catchKeyword, declaration, filter, block)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::CSharp::Syntax::CatchClauseSyntax ^ Update(Microsoft::CodeAnalysis::SyntaxToken catchKeyword, Microsoft::CodeAnalysis::CSharp::Syntax::CatchDeclarationSyntax ^ declaration, Microsoft::CodeAnalysis::CSharp::Syntax::CatchFilterClauseSyntax ^ filter, Microsoft::CodeAnalysis::CSharp::Syntax::BlockSyntax ^ block);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catchKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="declaration" Type="Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax" />
        <Parameter Name="filter" Type="Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax" />
        <Parameter Name="block" Type="Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax" />
      </Parameters>
      <Docs>
        <param name="catchKeyword">To be added.</param>
        <param name="declaration">To be added.</param>
        <param name="filter">To be added.</param>
        <param name="block">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithBlock">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax WithBlock (Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax block);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax WithBlock(class Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax block) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.WithBlock(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithBlock (block As BlockSyntax) As CatchClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithBlock : Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax -&gt; Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax" Usage="catchClauseSyntax.WithBlock block" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::CSharp::Syntax::CatchClauseSyntax ^ WithBlock(Microsoft::CodeAnalysis::CSharp::Syntax::BlockSyntax ^ block);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::CodeAnalysis::CSharp::Syntax::CatchClauseSyntax ^ WithBlock(Microsoft::CodeAnalysis::CSharp::Syntax::BlockSyntax ^ block);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::CodeAnalysis::CSharp::Syntax::CatchClauseSyntax WithBlock(Microsoft::CodeAnalysis::CSharp::Syntax::BlockSyntax const &amp; block);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="block" Type="Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax" />
      </Parameters>
      <Docs>
        <param name="block">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithCatchKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax WithCatchKeyword (Microsoft.CodeAnalysis.SyntaxToken catchKeyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax WithCatchKeyword(valuetype Microsoft.CodeAnalysis.SyntaxToken catchKeyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.WithCatchKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithCatchKeyword (catchKeyword As SyntaxToken) As CatchClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithCatchKeyword : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax" Usage="catchClauseSyntax.WithCatchKeyword catchKeyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::CSharp::Syntax::CatchClauseSyntax ^ WithCatchKeyword(Microsoft::CodeAnalysis::SyntaxToken catchKeyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catchKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="catchKeyword">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDeclaration">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax WithDeclaration (Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax declaration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax WithDeclaration(class Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax declaration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.WithDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithDeclaration (declaration As CatchDeclarationSyntax) As CatchClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithDeclaration : Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax -&gt; Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax" Usage="catchClauseSyntax.WithDeclaration declaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::CSharp::Syntax::CatchClauseSyntax ^ WithDeclaration(Microsoft::CodeAnalysis::CSharp::Syntax::CatchDeclarationSyntax ^ declaration);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::CodeAnalysis::CSharp::Syntax::CatchClauseSyntax ^ WithDeclaration(Microsoft::CodeAnalysis::CSharp::Syntax::CatchDeclarationSyntax ^ declaration);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::CodeAnalysis::CSharp::Syntax::CatchClauseSyntax WithDeclaration(Microsoft::CodeAnalysis::CSharp::Syntax::CatchDeclarationSyntax const &amp; declaration);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="declaration" Type="Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax" />
      </Parameters>
      <Docs>
        <param name="declaration">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithFilter">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax WithFilter (Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax WithFilter(class Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.WithFilter(Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithFilter (filter As CatchFilterClauseSyntax) As CatchClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithFilter : Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax -&gt; Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax" Usage="catchClauseSyntax.WithFilter filter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::CSharp::Syntax::CatchClauseSyntax ^ WithFilter(Microsoft::CodeAnalysis::CSharp::Syntax::CatchFilterClauseSyntax ^ filter);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::CodeAnalysis::CSharp::Syntax::CatchClauseSyntax ^ WithFilter(Microsoft::CodeAnalysis::CSharp::Syntax::CatchFilterClauseSyntax ^ filter);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::CodeAnalysis::CSharp::Syntax::CatchClauseSyntax WithFilter(Microsoft::CodeAnalysis::CSharp::Syntax::CatchFilterClauseSyntax const &amp; filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax" />
      </Parameters>
      <Docs>
        <param name="filter">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>