<Type Name="EditAndContinueMethodDebugInformation" FullName="Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation">
  <TypeSignature Language="C#" Value="public struct EditAndContinueMethodDebugInformation" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit EditAndContinueMethodDebugInformation extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation" />
  <TypeSignature Language="VB.NET" Value="Public Structure EditAndContinueMethodDebugInformation" />
  <TypeSignature Language="F#" Value="type EditAndContinueMethodDebugInformation = struct" />
  <TypeSignature Language="C++ CLI" Value="public value class EditAndContinueMethodDebugInformation" />
  <TypeSignature Language="C++ WINRT" Value="struct EditAndContinueMethodDebugInformation" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Debugging information associated with the specified method that is emitted by the compiler to support Edit and Continue.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation Create (System.Collections.Immutable.ImmutableArray&lt;byte&gt; compressedSlotMap, System.Collections.Immutable.ImmutableArray&lt;byte&gt; compressedLambdaMap);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation Create(valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; compressedSlotMap, valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; compressedLambdaMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation.Create(System.Collections.Immutable.ImmutableArray{System.Byte},System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (compressedSlotMap As ImmutableArray(Of Byte), compressedLambdaMap As ImmutableArray(Of Byte)) As EditAndContinueMethodDebugInformation" />
      <MemberSignature Language="F#" Value="static member Create : System.Collections.Immutable.ImmutableArray&lt;byte&gt; * System.Collections.Immutable.ImmutableArray&lt;byte&gt; -&gt; Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation" Usage="Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation.Create (compressedSlotMap, compressedLambdaMap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::CodeAnalysis::Emit::EditAndContinueMethodDebugInformation Create(System::Collections::Immutable::ImmutableArray&lt;System::Byte&gt; compressedSlotMap, System::Collections::Immutable::ImmutableArray&lt;System::Byte&gt; compressedLambdaMap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compressedSlotMap" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" />
        <Parameter Name="compressedLambdaMap" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="compressedSlotMap">Local variable slot map.</param>
        <param name="compressedLambdaMap">Lambda and closure map.</param>
        <summary>
            Deserializes Edit and Continue method debug information from specified blobs.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.InvalidDataException">Invalid data.</exception>
      </Docs>
    </Member>
  </Members>
</Type>