<Type Name="SyntaxTreeValueProvider&lt;TValue&gt;" FullName="Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeValueProvider&lt;TValue&gt;">
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TValue&gt;&#xA;public ref class SyntaxTreeValueProvider sealed" />
  <TypeSignature Language="C#" Value="public sealed class SyntaxTreeValueProvider&lt;TValue&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SyntaxTreeValueProvider`1&lt;TValue&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeValueProvider`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SyntaxTreeValueProvider(Of TValue)" />
  <TypeSignature Language="F#" Value="type SyntaxTreeValueProvider&lt;'Value&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.3.0.0</AssemblyVersion>
    <AssemblyVersion>3.4.0.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>3.6.0.0</AssemblyVersion>
    <AssemblyVersion>3.7.0.0</AssemblyVersion>
    <AssemblyVersion>3.8.0.0</AssemblyVersion>
    <AssemblyVersion>3.9.0.0</AssemblyVersion>
    <AssemblyVersion>3.10.0.0</AssemblyVersion>
    <AssemblyVersion>3.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>4.8.0.0</AssemblyVersion>
    <AssemblyVersion>4.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TValue" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TValue">To be added.</typeparam>
    <summary>
            Provides custom values associated with <see cref="T:Microsoft.CodeAnalysis.SyntaxTree" /> instances using the given computeValue delegate.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyntaxTreeValueProvider (Func&lt;Microsoft.CodeAnalysis.SyntaxTree,TValue&gt; computeValue, System.Collections.Generic.IEqualityComparer&lt;Microsoft.CodeAnalysis.SyntaxTree&gt; syntaxTreeComparer = default);" FrameworkAlternate="roslyn-dotnet-3.0;roslyn-dotnet-3.1;roslyn-dotnet-3.2;roslyn-dotnet-3.2.1;roslyn-dotnet-3.3.1;roslyn-dotnet-3.4.0;roslyn-dotnet-3.5.0;roslyn-dotnet-3.6.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;class Microsoft.CodeAnalysis.SyntaxTree, !TValue&gt; computeValue, class System.Collections.Generic.IEqualityComparer`1&lt;class Microsoft.CodeAnalysis.SyntaxTree&gt; syntaxTreeComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeValueProvider`1.#ctor(System.Func{Microsoft.CodeAnalysis.SyntaxTree,`0},System.Collections.Generic.IEqualityComparer{Microsoft.CodeAnalysis.SyntaxTree})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (computeValue As Func(Of SyntaxTree, TValue), Optional syntaxTreeComparer As IEqualityComparer(Of SyntaxTree) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeValueProvider&lt;'Value&gt; : Func&lt;Microsoft.CodeAnalysis.SyntaxTree, 'Value&gt; * System.Collections.Generic.IEqualityComparer&lt;Microsoft.CodeAnalysis.SyntaxTree&gt; -&gt; Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeValueProvider&lt;'Value&gt;" Usage="new Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeValueProvider&lt;'Value&gt; (computeValue, syntaxTreeComparer)" />
      <MemberSignature Language="C#" Value="public SyntaxTreeValueProvider (Func&lt;Microsoft.CodeAnalysis.SyntaxTree,TValue&gt; computeValue, System.Collections.Generic.IEqualityComparer&lt;Microsoft.CodeAnalysis.SyntaxTree&gt;? syntaxTreeComparer = default);" FrameworkAlternate="roslyn-dotnet-3.10.0;roslyn-dotnet-3.11.0;roslyn-dotnet-3.7.0;roslyn-dotnet-3.8.0;roslyn-dotnet-3.9.0;roslyn-dotnet-4.0.1;roslyn-dotnet-4.1.0;roslyn-dotnet-4.2.0;roslyn-dotnet-4.3.0;roslyn-dotnet-4.4.0;roslyn-dotnet-4.5.0;roslyn-dotnet-4.6.0;roslyn-dotnet-4.7.0;roslyn-dotnet-4.8.0;roslyn-dotnet-4.9.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.3.0.0</AssemblyVersion>
        <AssemblyVersion>3.4.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.10.0.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="computeValue" Type="System.Func&lt;Microsoft.CodeAnalysis.SyntaxTree,TValue&gt;" />
        <Parameter Name="syntaxTreeComparer" Type="System.Collections.Generic.IEqualityComparer&lt;Microsoft.CodeAnalysis.SyntaxTree&gt;" />
      </Parameters>
      <Docs>
        <param name="computeValue">Delegate to compute the value associated with a given <see cref="T:Microsoft.CodeAnalysis.SyntaxTree" /> instance.</param>
        <param name="syntaxTreeComparer">Optional equality comparer to determine equivalent <see cref="T:Microsoft.CodeAnalysis.SyntaxTree" /> instances that have the same value.
            If no comparer is provided, then <see cref="T:Microsoft.CodeAnalysis.SyntaxTreeComparer" /> is used by default.</param>
        <summary>
            Provides values associated with <see cref="T:Microsoft.CodeAnalysis.SyntaxTree" /> instances using the given <paramref name="computeValue" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
