<Type Name="AnonymousFunctionExpressionSyntax" FullName="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax">
  <TypeSignature Language="C#" Value="public abstract class AnonymousFunctionExpressionSyntax : Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AnonymousFunctionExpressionSyntax extends Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AnonymousFunctionExpressionSyntax&#xA;Inherits ExpressionSyntax" />
  <TypeSignature Language="F#" Value="type AnonymousFunctionExpressionSyntax = class&#xA;    inherit ExpressionSyntax" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnonymousFunctionExpressionSyntax abstract : Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class AnonymousFunctionExpressionSyntax abstract : Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class AnonymousFunctionExpressionSyntax abstract : Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides the base class from which the classes that represent anonymous function expressions are derived.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AsyncKeyword">
      <MemberSignature Language="C#" Value="public abstract Microsoft.CodeAnalysis.SyntaxToken AsyncKeyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken AsyncKeyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax.AsyncKeyword" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property AsyncKeyword As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.AsyncKeyword : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax.AsyncKeyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Microsoft::CodeAnalysis::SyntaxToken AsyncKeyword { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the "async" token.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Body">
      <MemberSignature Language="C#" Value="public abstract Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode Body { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode Body" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax.Body" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Body As CSharpSyntaxNode" />
      <MemberSignature Language="F#" Value="member this.Body : Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" Usage="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax.Body" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Microsoft::CodeAnalysis::CSharp::CSharpSyntaxNode ^ Body { Microsoft::CodeAnalysis::CSharp::CSharpSyntaxNode ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; abstract property Microsoft::CodeAnalysis::CSharp::CSharpSyntaxNode ^ Body { Microsoft::CodeAnalysis::CSharp::CSharpSyntaxNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ExpressionSyntax or BlockSyntax representing the body of the lambda expression.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>