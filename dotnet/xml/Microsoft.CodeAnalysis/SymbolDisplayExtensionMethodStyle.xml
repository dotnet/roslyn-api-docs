<Type Name="SymbolDisplayExtensionMethodStyle" FullName="Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle">
  <TypeSignature Language="C#" Value="public enum SymbolDisplayExtensionMethodStyle" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SymbolDisplayExtensionMethodStyle extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
            Specifies how to display extension methods.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Displays the extension method based on its <see cref="T:Microsoft.CodeAnalysis.MethodKind" />.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="InstanceMethod">
      <MemberSignature Language="C#" Value="InstanceMethod" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle InstanceMethod = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle.InstanceMethod" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Displays the extension method in the form of an instance method. 
            For example, IEnumerable&lt;TSource&gt;.ElementAt&lt;TSource&gt;(int index).
            </summary>
      </Docs>
    </Member>
    <Member MemberName="StaticMethod">
      <MemberSignature Language="C#" Value="StaticMethod" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle StaticMethod = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle.StaticMethod" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Displays the extension method as a static method. 
            For example, Enumerable.ElementAt&lt;TSource&gt;(this IEnumerable&lt;TSource&gt; source, int index).
            </summary>
      </Docs>
    </Member>
  </Members>
</Type>