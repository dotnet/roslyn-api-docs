<Type Name="EmitResult" FullName="Microsoft.CodeAnalysis.Emit.EmitResult">
  <TypeSignature Language="C#" Value="public class EmitResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EmitResult extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Emit.EmitResult" />
  <TypeSignature Language="VB.NET" Value="Public Class EmitResult" />
  <TypeSignature Language="F#" Value="type EmitResult = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmitResult" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class EmitResult" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class EmitResult" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{GetDebuggerDisplay(), nq}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            The result of the Compilation.Emit method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Diagnostics">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.Diagnostic&gt; Diagnostics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.Diagnostic&gt; Diagnostics" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Emit.EmitResult.Diagnostics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Diagnostics As ImmutableArray(Of Diagnostic)" />
      <MemberSignature Language="F#" Value="member this.Diagnostics : System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.Diagnostic&gt;" Usage="Microsoft.CodeAnalysis.Emit.EmitResult.Diagnostics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::Diagnostic ^&gt; Diagnostics { System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::Diagnostic ^&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.Diagnostic&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A list of all the diagnostics associated with compilations. This include parse errors, declaration errors,
            compilation errors, and emitting errors.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDebuggerDisplay">
      <MemberSignature Language="C#" Value="protected virtual string GetDebuggerDisplay ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetDebuggerDisplay() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Emit.EmitResult.GetDebuggerDisplay" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDebuggerDisplay () As String" />
      <MemberSignature Language="F#" Value="abstract member GetDebuggerDisplay : unit -&gt; string&#xA;override this.GetDebuggerDisplay : unit -&gt; string" Usage="emitResult.GetDebuggerDisplay " />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetDebuggerDisplay();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; virtual Platform::String ^ GetDebuggerDisplay();" />
      <MemberSignature Language="C++ WINRT" Value=" virtual std::wstring GetDebuggerDisplay();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Success">
      <MemberSignature Language="C#" Value="public bool Success { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Success" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Emit.EmitResult.Success" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Success As Boolean" />
      <MemberSignature Language="F#" Value="member this.Success : bool" Usage="Microsoft.CodeAnalysis.Emit.EmitResult.Success" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Success { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool Success { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            True if the compilation successfully produced an executable.
            If false then the diagnostics should include at least one error diagnostic
            indicating the cause of the failure.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>