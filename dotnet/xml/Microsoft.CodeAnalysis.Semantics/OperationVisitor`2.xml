<Type Name="OperationVisitor&lt;TArgument,TResult&gt;" FullName="Microsoft.CodeAnalysis.Semantics.OperationVisitor&lt;TArgument,TResult&gt;">
  <TypeSignature Language="C#" Value="public abstract class OperationVisitor&lt;TArgument,TResult&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit OperationVisitor`2&lt;TArgument, TResult&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class OperationVisitor(Of TArgument, TResult)" />
  <TypeSignature Language="F#" Value="type OperationVisitor&lt;'Argument, 'Result&gt; = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TArgument" />
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TArgument">
            The type of the additional argument passed to this visitor's Visit method.
            </typeparam>
    <typeparam name="TResult">
            The type of the return value of this visitor's Visit method.
            </typeparam>
    <summary>
            Represents a <see cref="T:Microsoft.CodeAnalysis.IOperation" /> visitor that visits only the single IOperation
            passed into its Visit method with an additional argument of the type specified by the
            <typeparamref name="TArgument" /> parameter and produces a value of the type specified by
            the <typeparamref name="TResult" /> parameter.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OperationVisitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultVisit">
      <MemberSignature Language="C#" Value="public virtual TResult DefaultVisit (Microsoft.CodeAnalysis.IOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult DefaultVisit(class Microsoft.CodeAnalysis.IOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.DefaultVisit(Microsoft.CodeAnalysis.IOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DefaultVisit (operation As IOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member DefaultVisit : Microsoft.CodeAnalysis.IOperation * 'Argument -&gt; 'Result&#xA;override this.DefaultVisit : Microsoft.CodeAnalysis.IOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.DefaultVisit (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.IOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public virtual TResult Visit (Microsoft.CodeAnalysis.IOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult Visit(class Microsoft.CodeAnalysis.IOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.Visit(Microsoft.CodeAnalysis.IOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Visit (operation As IOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member Visit : Microsoft.CodeAnalysis.IOperation * 'Argument -&gt; 'Result&#xA;override this.Visit : Microsoft.CodeAnalysis.IOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.Visit (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.IOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAddressOfExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitAddressOfExpression (Microsoft.CodeAnalysis.Semantics.IAddressOfExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitAddressOfExpression(class Microsoft.CodeAnalysis.Semantics.IAddressOfExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitAddressOfExpression(Microsoft.CodeAnalysis.Semantics.IAddressOfExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitAddressOfExpression (operation As IAddressOfExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitAddressOfExpression : Microsoft.CodeAnalysis.Semantics.IAddressOfExpression * 'Argument -&gt; 'Result&#xA;override this.VisitAddressOfExpression : Microsoft.CodeAnalysis.Semantics.IAddressOfExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitAddressOfExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IAddressOfExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitArgument">
      <MemberSignature Language="C#" Value="public virtual TResult VisitArgument (Microsoft.CodeAnalysis.Semantics.IArgument operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitArgument(class Microsoft.CodeAnalysis.Semantics.IArgument operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitArgument(Microsoft.CodeAnalysis.Semantics.IArgument,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitArgument (operation As IArgument, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitArgument : Microsoft.CodeAnalysis.Semantics.IArgument * 'Argument -&gt; 'Result&#xA;override this.VisitArgument : Microsoft.CodeAnalysis.Semantics.IArgument * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitArgument (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IArgument" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitArrayCreationExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitArrayCreationExpression (Microsoft.CodeAnalysis.Semantics.IArrayCreationExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitArrayCreationExpression(class Microsoft.CodeAnalysis.Semantics.IArrayCreationExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitArrayCreationExpression(Microsoft.CodeAnalysis.Semantics.IArrayCreationExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitArrayCreationExpression (operation As IArrayCreationExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitArrayCreationExpression : Microsoft.CodeAnalysis.Semantics.IArrayCreationExpression * 'Argument -&gt; 'Result&#xA;override this.VisitArrayCreationExpression : Microsoft.CodeAnalysis.Semantics.IArrayCreationExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitArrayCreationExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IArrayCreationExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitArrayElementReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitArrayElementReferenceExpression (Microsoft.CodeAnalysis.Semantics.IArrayElementReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitArrayElementReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IArrayElementReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitArrayElementReferenceExpression(Microsoft.CodeAnalysis.Semantics.IArrayElementReferenceExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitArrayElementReferenceExpression (operation As IArrayElementReferenceExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitArrayElementReferenceExpression : Microsoft.CodeAnalysis.Semantics.IArrayElementReferenceExpression * 'Argument -&gt; 'Result&#xA;override this.VisitArrayElementReferenceExpression : Microsoft.CodeAnalysis.Semantics.IArrayElementReferenceExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitArrayElementReferenceExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IArrayElementReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitArrayInitializer">
      <MemberSignature Language="C#" Value="public virtual TResult VisitArrayInitializer (Microsoft.CodeAnalysis.Semantics.IArrayInitializer operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitArrayInitializer(class Microsoft.CodeAnalysis.Semantics.IArrayInitializer operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitArrayInitializer(Microsoft.CodeAnalysis.Semantics.IArrayInitializer,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitArrayInitializer (operation As IArrayInitializer, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitArrayInitializer : Microsoft.CodeAnalysis.Semantics.IArrayInitializer * 'Argument -&gt; 'Result&#xA;override this.VisitArrayInitializer : Microsoft.CodeAnalysis.Semantics.IArrayInitializer * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitArrayInitializer (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IArrayInitializer" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAssignmentExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitAssignmentExpression (Microsoft.CodeAnalysis.Semantics.IAssignmentExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitAssignmentExpression(class Microsoft.CodeAnalysis.Semantics.IAssignmentExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitAssignmentExpression(Microsoft.CodeAnalysis.Semantics.IAssignmentExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitAssignmentExpression (operation As IAssignmentExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitAssignmentExpression : Microsoft.CodeAnalysis.Semantics.IAssignmentExpression * 'Argument -&gt; 'Result&#xA;override this.VisitAssignmentExpression : Microsoft.CodeAnalysis.Semantics.IAssignmentExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitAssignmentExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IAssignmentExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAwaitExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitAwaitExpression (Microsoft.CodeAnalysis.Semantics.IAwaitExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitAwaitExpression(class Microsoft.CodeAnalysis.Semantics.IAwaitExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitAwaitExpression(Microsoft.CodeAnalysis.Semantics.IAwaitExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitAwaitExpression (operation As IAwaitExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitAwaitExpression : Microsoft.CodeAnalysis.Semantics.IAwaitExpression * 'Argument -&gt; 'Result&#xA;override this.VisitAwaitExpression : Microsoft.CodeAnalysis.Semantics.IAwaitExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitAwaitExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IAwaitExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitBinaryOperatorExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitBinaryOperatorExpression (Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitBinaryOperatorExpression(class Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitBinaryOperatorExpression(Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitBinaryOperatorExpression (operation As IBinaryOperatorExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitBinaryOperatorExpression : Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression * 'Argument -&gt; 'Result&#xA;override this.VisitBinaryOperatorExpression : Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitBinaryOperatorExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitBlockStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitBlockStatement (Microsoft.CodeAnalysis.Semantics.IBlockStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitBlockStatement(class Microsoft.CodeAnalysis.Semantics.IBlockStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitBlockStatement(Microsoft.CodeAnalysis.Semantics.IBlockStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitBlockStatement (operation As IBlockStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitBlockStatement : Microsoft.CodeAnalysis.Semantics.IBlockStatement * 'Argument -&gt; 'Result&#xA;override this.VisitBlockStatement : Microsoft.CodeAnalysis.Semantics.IBlockStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitBlockStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IBlockStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitBranchStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitBranchStatement (Microsoft.CodeAnalysis.Semantics.IBranchStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitBranchStatement(class Microsoft.CodeAnalysis.Semantics.IBranchStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitBranchStatement(Microsoft.CodeAnalysis.Semantics.IBranchStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitBranchStatement (operation As IBranchStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitBranchStatement : Microsoft.CodeAnalysis.Semantics.IBranchStatement * 'Argument -&gt; 'Result&#xA;override this.VisitBranchStatement : Microsoft.CodeAnalysis.Semantics.IBranchStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitBranchStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IBranchStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCatchClause">
      <MemberSignature Language="C#" Value="public virtual TResult VisitCatchClause (Microsoft.CodeAnalysis.Semantics.ICatchClause operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitCatchClause(class Microsoft.CodeAnalysis.Semantics.ICatchClause operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitCatchClause(Microsoft.CodeAnalysis.Semantics.ICatchClause,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitCatchClause (operation As ICatchClause, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitCatchClause : Microsoft.CodeAnalysis.Semantics.ICatchClause * 'Argument -&gt; 'Result&#xA;override this.VisitCatchClause : Microsoft.CodeAnalysis.Semantics.ICatchClause * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitCatchClause (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ICatchClause" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCompoundAssignmentExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitCompoundAssignmentExpression (Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitCompoundAssignmentExpression(class Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitCompoundAssignmentExpression(Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitCompoundAssignmentExpression (operation As ICompoundAssignmentExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitCompoundAssignmentExpression : Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression * 'Argument -&gt; 'Result&#xA;override this.VisitCompoundAssignmentExpression : Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitCompoundAssignmentExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitConditionalAccessExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitConditionalAccessExpression (Microsoft.CodeAnalysis.Semantics.IConditionalAccessExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitConditionalAccessExpression(class Microsoft.CodeAnalysis.Semantics.IConditionalAccessExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitConditionalAccessExpression(Microsoft.CodeAnalysis.Semantics.IConditionalAccessExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitConditionalAccessExpression (operation As IConditionalAccessExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitConditionalAccessExpression : Microsoft.CodeAnalysis.Semantics.IConditionalAccessExpression * 'Argument -&gt; 'Result&#xA;override this.VisitConditionalAccessExpression : Microsoft.CodeAnalysis.Semantics.IConditionalAccessExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitConditionalAccessExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IConditionalAccessExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitConditionalAccessInstanceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitConditionalAccessInstanceExpression (Microsoft.CodeAnalysis.Semantics.IConditionalAccessInstanceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitConditionalAccessInstanceExpression(class Microsoft.CodeAnalysis.Semantics.IConditionalAccessInstanceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitConditionalAccessInstanceExpression(Microsoft.CodeAnalysis.Semantics.IConditionalAccessInstanceExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitConditionalAccessInstanceExpression (operation As IConditionalAccessInstanceExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitConditionalAccessInstanceExpression : Microsoft.CodeAnalysis.Semantics.IConditionalAccessInstanceExpression * 'Argument -&gt; 'Result&#xA;override this.VisitConditionalAccessInstanceExpression : Microsoft.CodeAnalysis.Semantics.IConditionalAccessInstanceExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitConditionalAccessInstanceExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IConditionalAccessInstanceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitConditionalChoiceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitConditionalChoiceExpression (Microsoft.CodeAnalysis.Semantics.IConditionalChoiceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitConditionalChoiceExpression(class Microsoft.CodeAnalysis.Semantics.IConditionalChoiceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitConditionalChoiceExpression(Microsoft.CodeAnalysis.Semantics.IConditionalChoiceExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitConditionalChoiceExpression (operation As IConditionalChoiceExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitConditionalChoiceExpression : Microsoft.CodeAnalysis.Semantics.IConditionalChoiceExpression * 'Argument -&gt; 'Result&#xA;override this.VisitConditionalChoiceExpression : Microsoft.CodeAnalysis.Semantics.IConditionalChoiceExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitConditionalChoiceExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IConditionalChoiceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitConversionExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitConversionExpression (Microsoft.CodeAnalysis.Semantics.IConversionExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitConversionExpression(class Microsoft.CodeAnalysis.Semantics.IConversionExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitConversionExpression(Microsoft.CodeAnalysis.Semantics.IConversionExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitConversionExpression (operation As IConversionExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitConversionExpression : Microsoft.CodeAnalysis.Semantics.IConversionExpression * 'Argument -&gt; 'Result&#xA;override this.VisitConversionExpression : Microsoft.CodeAnalysis.Semantics.IConversionExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitConversionExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IConversionExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitDefaultValueExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitDefaultValueExpression (Microsoft.CodeAnalysis.Semantics.IDefaultValueExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitDefaultValueExpression(class Microsoft.CodeAnalysis.Semantics.IDefaultValueExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitDefaultValueExpression(Microsoft.CodeAnalysis.Semantics.IDefaultValueExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitDefaultValueExpression (operation As IDefaultValueExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitDefaultValueExpression : Microsoft.CodeAnalysis.Semantics.IDefaultValueExpression * 'Argument -&gt; 'Result&#xA;override this.VisitDefaultValueExpression : Microsoft.CodeAnalysis.Semantics.IDefaultValueExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitDefaultValueExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IDefaultValueExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitEmptyStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitEmptyStatement (Microsoft.CodeAnalysis.Semantics.IEmptyStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitEmptyStatement(class Microsoft.CodeAnalysis.Semantics.IEmptyStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitEmptyStatement(Microsoft.CodeAnalysis.Semantics.IEmptyStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitEmptyStatement (operation As IEmptyStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitEmptyStatement : Microsoft.CodeAnalysis.Semantics.IEmptyStatement * 'Argument -&gt; 'Result&#xA;override this.VisitEmptyStatement : Microsoft.CodeAnalysis.Semantics.IEmptyStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitEmptyStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IEmptyStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitEndStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitEndStatement (Microsoft.CodeAnalysis.Semantics.IEndStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitEndStatement(class Microsoft.CodeAnalysis.Semantics.IEndStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitEndStatement(Microsoft.CodeAnalysis.Semantics.IEndStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitEndStatement (operation As IEndStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitEndStatement : Microsoft.CodeAnalysis.Semantics.IEndStatement * 'Argument -&gt; 'Result&#xA;override this.VisitEndStatement : Microsoft.CodeAnalysis.Semantics.IEndStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitEndStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IEndStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitEventAssignmentExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitEventAssignmentExpression (Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitEventAssignmentExpression(class Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitEventAssignmentExpression(Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitEventAssignmentExpression (operation As IEventAssignmentExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitEventAssignmentExpression : Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression * 'Argument -&gt; 'Result&#xA;override this.VisitEventAssignmentExpression : Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitEventAssignmentExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitEventReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitEventReferenceExpression (Microsoft.CodeAnalysis.Semantics.IEventReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitEventReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IEventReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitEventReferenceExpression(Microsoft.CodeAnalysis.Semantics.IEventReferenceExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitEventReferenceExpression (operation As IEventReferenceExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitEventReferenceExpression : Microsoft.CodeAnalysis.Semantics.IEventReferenceExpression * 'Argument -&gt; 'Result&#xA;override this.VisitEventReferenceExpression : Microsoft.CodeAnalysis.Semantics.IEventReferenceExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitEventReferenceExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IEventReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExpressionStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitExpressionStatement (Microsoft.CodeAnalysis.Semantics.IExpressionStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitExpressionStatement(class Microsoft.CodeAnalysis.Semantics.IExpressionStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitExpressionStatement(Microsoft.CodeAnalysis.Semantics.IExpressionStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitExpressionStatement (operation As IExpressionStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitExpressionStatement : Microsoft.CodeAnalysis.Semantics.IExpressionStatement * 'Argument -&gt; 'Result&#xA;override this.VisitExpressionStatement : Microsoft.CodeAnalysis.Semantics.IExpressionStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitExpressionStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IExpressionStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFieldInitializer">
      <MemberSignature Language="C#" Value="public virtual TResult VisitFieldInitializer (Microsoft.CodeAnalysis.Semantics.IFieldInitializer operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitFieldInitializer(class Microsoft.CodeAnalysis.Semantics.IFieldInitializer operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitFieldInitializer(Microsoft.CodeAnalysis.Semantics.IFieldInitializer,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitFieldInitializer (operation As IFieldInitializer, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitFieldInitializer : Microsoft.CodeAnalysis.Semantics.IFieldInitializer * 'Argument -&gt; 'Result&#xA;override this.VisitFieldInitializer : Microsoft.CodeAnalysis.Semantics.IFieldInitializer * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitFieldInitializer (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IFieldInitializer" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFieldReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitFieldReferenceExpression (Microsoft.CodeAnalysis.Semantics.IFieldReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitFieldReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IFieldReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitFieldReferenceExpression(Microsoft.CodeAnalysis.Semantics.IFieldReferenceExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitFieldReferenceExpression (operation As IFieldReferenceExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitFieldReferenceExpression : Microsoft.CodeAnalysis.Semantics.IFieldReferenceExpression * 'Argument -&gt; 'Result&#xA;override this.VisitFieldReferenceExpression : Microsoft.CodeAnalysis.Semantics.IFieldReferenceExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitFieldReferenceExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IFieldReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFixedStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitFixedStatement (Microsoft.CodeAnalysis.Semantics.IFixedStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitFixedStatement(class Microsoft.CodeAnalysis.Semantics.IFixedStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitFixedStatement(Microsoft.CodeAnalysis.Semantics.IFixedStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitFixedStatement (operation As IFixedStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitFixedStatement : Microsoft.CodeAnalysis.Semantics.IFixedStatement * 'Argument -&gt; 'Result&#xA;override this.VisitFixedStatement : Microsoft.CodeAnalysis.Semantics.IFixedStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitFixedStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IFixedStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitForEachLoopStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitForEachLoopStatement (Microsoft.CodeAnalysis.Semantics.IForEachLoopStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitForEachLoopStatement(class Microsoft.CodeAnalysis.Semantics.IForEachLoopStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitForEachLoopStatement(Microsoft.CodeAnalysis.Semantics.IForEachLoopStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitForEachLoopStatement (operation As IForEachLoopStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitForEachLoopStatement : Microsoft.CodeAnalysis.Semantics.IForEachLoopStatement * 'Argument -&gt; 'Result&#xA;override this.VisitForEachLoopStatement : Microsoft.CodeAnalysis.Semantics.IForEachLoopStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitForEachLoopStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IForEachLoopStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitForLoopStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitForLoopStatement (Microsoft.CodeAnalysis.Semantics.IForLoopStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitForLoopStatement(class Microsoft.CodeAnalysis.Semantics.IForLoopStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitForLoopStatement(Microsoft.CodeAnalysis.Semantics.IForLoopStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitForLoopStatement (operation As IForLoopStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitForLoopStatement : Microsoft.CodeAnalysis.Semantics.IForLoopStatement * 'Argument -&gt; 'Result&#xA;override this.VisitForLoopStatement : Microsoft.CodeAnalysis.Semantics.IForLoopStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitForLoopStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IForLoopStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIfStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitIfStatement (Microsoft.CodeAnalysis.Semantics.IIfStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitIfStatement(class Microsoft.CodeAnalysis.Semantics.IIfStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitIfStatement(Microsoft.CodeAnalysis.Semantics.IIfStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitIfStatement (operation As IIfStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitIfStatement : Microsoft.CodeAnalysis.Semantics.IIfStatement * 'Argument -&gt; 'Result&#xA;override this.VisitIfStatement : Microsoft.CodeAnalysis.Semantics.IIfStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitIfStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IIfStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIncrementExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitIncrementExpression (Microsoft.CodeAnalysis.Semantics.IIncrementExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitIncrementExpression(class Microsoft.CodeAnalysis.Semantics.IIncrementExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitIncrementExpression(Microsoft.CodeAnalysis.Semantics.IIncrementExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitIncrementExpression (operation As IIncrementExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitIncrementExpression : Microsoft.CodeAnalysis.Semantics.IIncrementExpression * 'Argument -&gt; 'Result&#xA;override this.VisitIncrementExpression : Microsoft.CodeAnalysis.Semantics.IIncrementExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitIncrementExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IIncrementExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIndexedPropertyReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitIndexedPropertyReferenceExpression (Microsoft.CodeAnalysis.Semantics.IIndexedPropertyReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitIndexedPropertyReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IIndexedPropertyReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitIndexedPropertyReferenceExpression(Microsoft.CodeAnalysis.Semantics.IIndexedPropertyReferenceExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitIndexedPropertyReferenceExpression (operation As IIndexedPropertyReferenceExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitIndexedPropertyReferenceExpression : Microsoft.CodeAnalysis.Semantics.IIndexedPropertyReferenceExpression * 'Argument -&gt; 'Result&#xA;override this.VisitIndexedPropertyReferenceExpression : Microsoft.CodeAnalysis.Semantics.IIndexedPropertyReferenceExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitIndexedPropertyReferenceExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IIndexedPropertyReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInstanceReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitInstanceReferenceExpression (Microsoft.CodeAnalysis.Semantics.IInstanceReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitInstanceReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IInstanceReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitInstanceReferenceExpression(Microsoft.CodeAnalysis.Semantics.IInstanceReferenceExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitInstanceReferenceExpression (operation As IInstanceReferenceExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitInstanceReferenceExpression : Microsoft.CodeAnalysis.Semantics.IInstanceReferenceExpression * 'Argument -&gt; 'Result&#xA;override this.VisitInstanceReferenceExpression : Microsoft.CodeAnalysis.Semantics.IInstanceReferenceExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitInstanceReferenceExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IInstanceReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInvalidExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitInvalidExpression (Microsoft.CodeAnalysis.Semantics.IInvalidExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitInvalidExpression(class Microsoft.CodeAnalysis.Semantics.IInvalidExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitInvalidExpression(Microsoft.CodeAnalysis.Semantics.IInvalidExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitInvalidExpression (operation As IInvalidExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitInvalidExpression : Microsoft.CodeAnalysis.Semantics.IInvalidExpression * 'Argument -&gt; 'Result&#xA;override this.VisitInvalidExpression : Microsoft.CodeAnalysis.Semantics.IInvalidExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitInvalidExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IInvalidExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInvalidStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitInvalidStatement (Microsoft.CodeAnalysis.Semantics.IInvalidStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitInvalidStatement(class Microsoft.CodeAnalysis.Semantics.IInvalidStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitInvalidStatement(Microsoft.CodeAnalysis.Semantics.IInvalidStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitInvalidStatement (operation As IInvalidStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitInvalidStatement : Microsoft.CodeAnalysis.Semantics.IInvalidStatement * 'Argument -&gt; 'Result&#xA;override this.VisitInvalidStatement : Microsoft.CodeAnalysis.Semantics.IInvalidStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitInvalidStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IInvalidStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInvocationExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitInvocationExpression (Microsoft.CodeAnalysis.Semantics.IInvocationExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitInvocationExpression(class Microsoft.CodeAnalysis.Semantics.IInvocationExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitInvocationExpression(Microsoft.CodeAnalysis.Semantics.IInvocationExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitInvocationExpression (operation As IInvocationExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitInvocationExpression : Microsoft.CodeAnalysis.Semantics.IInvocationExpression * 'Argument -&gt; 'Result&#xA;override this.VisitInvocationExpression : Microsoft.CodeAnalysis.Semantics.IInvocationExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitInvocationExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IInvocationExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIsTypeExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitIsTypeExpression (Microsoft.CodeAnalysis.Semantics.IIsTypeExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitIsTypeExpression(class Microsoft.CodeAnalysis.Semantics.IIsTypeExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitIsTypeExpression(Microsoft.CodeAnalysis.Semantics.IIsTypeExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitIsTypeExpression (operation As IIsTypeExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitIsTypeExpression : Microsoft.CodeAnalysis.Semantics.IIsTypeExpression * 'Argument -&gt; 'Result&#xA;override this.VisitIsTypeExpression : Microsoft.CodeAnalysis.Semantics.IIsTypeExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitIsTypeExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IIsTypeExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLabelStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitLabelStatement (Microsoft.CodeAnalysis.Semantics.ILabelStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitLabelStatement(class Microsoft.CodeAnalysis.Semantics.ILabelStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitLabelStatement(Microsoft.CodeAnalysis.Semantics.ILabelStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitLabelStatement (operation As ILabelStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitLabelStatement : Microsoft.CodeAnalysis.Semantics.ILabelStatement * 'Argument -&gt; 'Result&#xA;override this.VisitLabelStatement : Microsoft.CodeAnalysis.Semantics.ILabelStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitLabelStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ILabelStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLambdaExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitLambdaExpression (Microsoft.CodeAnalysis.Semantics.ILambdaExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitLambdaExpression(class Microsoft.CodeAnalysis.Semantics.ILambdaExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitLambdaExpression(Microsoft.CodeAnalysis.Semantics.ILambdaExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitLambdaExpression (operation As ILambdaExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitLambdaExpression : Microsoft.CodeAnalysis.Semantics.ILambdaExpression * 'Argument -&gt; 'Result&#xA;override this.VisitLambdaExpression : Microsoft.CodeAnalysis.Semantics.ILambdaExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitLambdaExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ILambdaExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLateBoundMemberReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitLateBoundMemberReferenceExpression (Microsoft.CodeAnalysis.Semantics.ILateBoundMemberReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitLateBoundMemberReferenceExpression(class Microsoft.CodeAnalysis.Semantics.ILateBoundMemberReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitLateBoundMemberReferenceExpression(Microsoft.CodeAnalysis.Semantics.ILateBoundMemberReferenceExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitLateBoundMemberReferenceExpression (operation As ILateBoundMemberReferenceExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitLateBoundMemberReferenceExpression : Microsoft.CodeAnalysis.Semantics.ILateBoundMemberReferenceExpression * 'Argument -&gt; 'Result&#xA;override this.VisitLateBoundMemberReferenceExpression : Microsoft.CodeAnalysis.Semantics.ILateBoundMemberReferenceExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitLateBoundMemberReferenceExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ILateBoundMemberReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLiteralExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitLiteralExpression (Microsoft.CodeAnalysis.Semantics.ILiteralExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitLiteralExpression(class Microsoft.CodeAnalysis.Semantics.ILiteralExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitLiteralExpression(Microsoft.CodeAnalysis.Semantics.ILiteralExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitLiteralExpression (operation As ILiteralExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitLiteralExpression : Microsoft.CodeAnalysis.Semantics.ILiteralExpression * 'Argument -&gt; 'Result&#xA;override this.VisitLiteralExpression : Microsoft.CodeAnalysis.Semantics.ILiteralExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitLiteralExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ILiteralExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLocalReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitLocalReferenceExpression (Microsoft.CodeAnalysis.Semantics.ILocalReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitLocalReferenceExpression(class Microsoft.CodeAnalysis.Semantics.ILocalReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitLocalReferenceExpression(Microsoft.CodeAnalysis.Semantics.ILocalReferenceExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitLocalReferenceExpression (operation As ILocalReferenceExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitLocalReferenceExpression : Microsoft.CodeAnalysis.Semantics.ILocalReferenceExpression * 'Argument -&gt; 'Result&#xA;override this.VisitLocalReferenceExpression : Microsoft.CodeAnalysis.Semantics.ILocalReferenceExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitLocalReferenceExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ILocalReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLockStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitLockStatement (Microsoft.CodeAnalysis.Semantics.ILockStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitLockStatement(class Microsoft.CodeAnalysis.Semantics.ILockStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitLockStatement(Microsoft.CodeAnalysis.Semantics.ILockStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitLockStatement (operation As ILockStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitLockStatement : Microsoft.CodeAnalysis.Semantics.ILockStatement * 'Argument -&gt; 'Result&#xA;override this.VisitLockStatement : Microsoft.CodeAnalysis.Semantics.ILockStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitLockStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ILockStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitMethodBindingExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitMethodBindingExpression (Microsoft.CodeAnalysis.Semantics.IMethodBindingExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitMethodBindingExpression(class Microsoft.CodeAnalysis.Semantics.IMethodBindingExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitMethodBindingExpression(Microsoft.CodeAnalysis.Semantics.IMethodBindingExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitMethodBindingExpression (operation As IMethodBindingExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitMethodBindingExpression : Microsoft.CodeAnalysis.Semantics.IMethodBindingExpression * 'Argument -&gt; 'Result&#xA;override this.VisitMethodBindingExpression : Microsoft.CodeAnalysis.Semantics.IMethodBindingExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitMethodBindingExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IMethodBindingExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitNullCoalescingExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitNullCoalescingExpression (Microsoft.CodeAnalysis.Semantics.INullCoalescingExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitNullCoalescingExpression(class Microsoft.CodeAnalysis.Semantics.INullCoalescingExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitNullCoalescingExpression(Microsoft.CodeAnalysis.Semantics.INullCoalescingExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitNullCoalescingExpression (operation As INullCoalescingExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitNullCoalescingExpression : Microsoft.CodeAnalysis.Semantics.INullCoalescingExpression * 'Argument -&gt; 'Result&#xA;override this.VisitNullCoalescingExpression : Microsoft.CodeAnalysis.Semantics.INullCoalescingExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitNullCoalescingExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.INullCoalescingExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitObjectCreationExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitObjectCreationExpression (Microsoft.CodeAnalysis.Semantics.IObjectCreationExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitObjectCreationExpression(class Microsoft.CodeAnalysis.Semantics.IObjectCreationExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitObjectCreationExpression(Microsoft.CodeAnalysis.Semantics.IObjectCreationExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitObjectCreationExpression (operation As IObjectCreationExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitObjectCreationExpression : Microsoft.CodeAnalysis.Semantics.IObjectCreationExpression * 'Argument -&gt; 'Result&#xA;override this.VisitObjectCreationExpression : Microsoft.CodeAnalysis.Semantics.IObjectCreationExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitObjectCreationExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IObjectCreationExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitOmittedArgumentExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitOmittedArgumentExpression (Microsoft.CodeAnalysis.Semantics.IOmittedArgumentExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitOmittedArgumentExpression(class Microsoft.CodeAnalysis.Semantics.IOmittedArgumentExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitOmittedArgumentExpression(Microsoft.CodeAnalysis.Semantics.IOmittedArgumentExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitOmittedArgumentExpression (operation As IOmittedArgumentExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitOmittedArgumentExpression : Microsoft.CodeAnalysis.Semantics.IOmittedArgumentExpression * 'Argument -&gt; 'Result&#xA;override this.VisitOmittedArgumentExpression : Microsoft.CodeAnalysis.Semantics.IOmittedArgumentExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitOmittedArgumentExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IOmittedArgumentExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitParameterInitializer">
      <MemberSignature Language="C#" Value="public virtual TResult VisitParameterInitializer (Microsoft.CodeAnalysis.Semantics.IParameterInitializer operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitParameterInitializer(class Microsoft.CodeAnalysis.Semantics.IParameterInitializer operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitParameterInitializer(Microsoft.CodeAnalysis.Semantics.IParameterInitializer,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitParameterInitializer (operation As IParameterInitializer, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitParameterInitializer : Microsoft.CodeAnalysis.Semantics.IParameterInitializer * 'Argument -&gt; 'Result&#xA;override this.VisitParameterInitializer : Microsoft.CodeAnalysis.Semantics.IParameterInitializer * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitParameterInitializer (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IParameterInitializer" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitParameterReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitParameterReferenceExpression (Microsoft.CodeAnalysis.Semantics.IParameterReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitParameterReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IParameterReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitParameterReferenceExpression(Microsoft.CodeAnalysis.Semantics.IParameterReferenceExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitParameterReferenceExpression (operation As IParameterReferenceExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitParameterReferenceExpression : Microsoft.CodeAnalysis.Semantics.IParameterReferenceExpression * 'Argument -&gt; 'Result&#xA;override this.VisitParameterReferenceExpression : Microsoft.CodeAnalysis.Semantics.IParameterReferenceExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitParameterReferenceExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IParameterReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitParenthesizedExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitParenthesizedExpression (Microsoft.CodeAnalysis.Semantics.IParenthesizedExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitParenthesizedExpression(class Microsoft.CodeAnalysis.Semantics.IParenthesizedExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitParenthesizedExpression(Microsoft.CodeAnalysis.Semantics.IParenthesizedExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitParenthesizedExpression (operation As IParenthesizedExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitParenthesizedExpression : Microsoft.CodeAnalysis.Semantics.IParenthesizedExpression * 'Argument -&gt; 'Result&#xA;override this.VisitParenthesizedExpression : Microsoft.CodeAnalysis.Semantics.IParenthesizedExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitParenthesizedExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IParenthesizedExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitPlaceholderExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitPlaceholderExpression (Microsoft.CodeAnalysis.Semantics.IPlaceholderExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitPlaceholderExpression(class Microsoft.CodeAnalysis.Semantics.IPlaceholderExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitPlaceholderExpression(Microsoft.CodeAnalysis.Semantics.IPlaceholderExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitPlaceholderExpression (operation As IPlaceholderExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitPlaceholderExpression : Microsoft.CodeAnalysis.Semantics.IPlaceholderExpression * 'Argument -&gt; 'Result&#xA;override this.VisitPlaceholderExpression : Microsoft.CodeAnalysis.Semantics.IPlaceholderExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitPlaceholderExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IPlaceholderExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitPointerIndirectionReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitPointerIndirectionReferenceExpression (Microsoft.CodeAnalysis.Semantics.IPointerIndirectionReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitPointerIndirectionReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IPointerIndirectionReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitPointerIndirectionReferenceExpression(Microsoft.CodeAnalysis.Semantics.IPointerIndirectionReferenceExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitPointerIndirectionReferenceExpression (operation As IPointerIndirectionReferenceExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitPointerIndirectionReferenceExpression : Microsoft.CodeAnalysis.Semantics.IPointerIndirectionReferenceExpression * 'Argument -&gt; 'Result&#xA;override this.VisitPointerIndirectionReferenceExpression : Microsoft.CodeAnalysis.Semantics.IPointerIndirectionReferenceExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitPointerIndirectionReferenceExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IPointerIndirectionReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitPropertyInitializer">
      <MemberSignature Language="C#" Value="public virtual TResult VisitPropertyInitializer (Microsoft.CodeAnalysis.Semantics.IPropertyInitializer operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitPropertyInitializer(class Microsoft.CodeAnalysis.Semantics.IPropertyInitializer operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitPropertyInitializer(Microsoft.CodeAnalysis.Semantics.IPropertyInitializer,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitPropertyInitializer (operation As IPropertyInitializer, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitPropertyInitializer : Microsoft.CodeAnalysis.Semantics.IPropertyInitializer * 'Argument -&gt; 'Result&#xA;override this.VisitPropertyInitializer : Microsoft.CodeAnalysis.Semantics.IPropertyInitializer * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitPropertyInitializer (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IPropertyInitializer" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitPropertyReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitPropertyReferenceExpression (Microsoft.CodeAnalysis.Semantics.IPropertyReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitPropertyReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IPropertyReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitPropertyReferenceExpression(Microsoft.CodeAnalysis.Semantics.IPropertyReferenceExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitPropertyReferenceExpression (operation As IPropertyReferenceExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitPropertyReferenceExpression : Microsoft.CodeAnalysis.Semantics.IPropertyReferenceExpression * 'Argument -&gt; 'Result&#xA;override this.VisitPropertyReferenceExpression : Microsoft.CodeAnalysis.Semantics.IPropertyReferenceExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitPropertyReferenceExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IPropertyReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitRangeCaseClause">
      <MemberSignature Language="C#" Value="public virtual TResult VisitRangeCaseClause (Microsoft.CodeAnalysis.Semantics.IRangeCaseClause operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitRangeCaseClause(class Microsoft.CodeAnalysis.Semantics.IRangeCaseClause operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitRangeCaseClause(Microsoft.CodeAnalysis.Semantics.IRangeCaseClause,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitRangeCaseClause (operation As IRangeCaseClause, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitRangeCaseClause : Microsoft.CodeAnalysis.Semantics.IRangeCaseClause * 'Argument -&gt; 'Result&#xA;override this.VisitRangeCaseClause : Microsoft.CodeAnalysis.Semantics.IRangeCaseClause * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitRangeCaseClause (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IRangeCaseClause" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitRelationalCaseClause">
      <MemberSignature Language="C#" Value="public virtual TResult VisitRelationalCaseClause (Microsoft.CodeAnalysis.Semantics.IRelationalCaseClause operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitRelationalCaseClause(class Microsoft.CodeAnalysis.Semantics.IRelationalCaseClause operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitRelationalCaseClause(Microsoft.CodeAnalysis.Semantics.IRelationalCaseClause,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitRelationalCaseClause (operation As IRelationalCaseClause, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitRelationalCaseClause : Microsoft.CodeAnalysis.Semantics.IRelationalCaseClause * 'Argument -&gt; 'Result&#xA;override this.VisitRelationalCaseClause : Microsoft.CodeAnalysis.Semantics.IRelationalCaseClause * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitRelationalCaseClause (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IRelationalCaseClause" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitReturnStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitReturnStatement (Microsoft.CodeAnalysis.Semantics.IReturnStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitReturnStatement(class Microsoft.CodeAnalysis.Semantics.IReturnStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitReturnStatement(Microsoft.CodeAnalysis.Semantics.IReturnStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitReturnStatement (operation As IReturnStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitReturnStatement : Microsoft.CodeAnalysis.Semantics.IReturnStatement * 'Argument -&gt; 'Result&#xA;override this.VisitReturnStatement : Microsoft.CodeAnalysis.Semantics.IReturnStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitReturnStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IReturnStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSingleValueCaseClause">
      <MemberSignature Language="C#" Value="public virtual TResult VisitSingleValueCaseClause (Microsoft.CodeAnalysis.Semantics.ISingleValueCaseClause operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitSingleValueCaseClause(class Microsoft.CodeAnalysis.Semantics.ISingleValueCaseClause operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitSingleValueCaseClause(Microsoft.CodeAnalysis.Semantics.ISingleValueCaseClause,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitSingleValueCaseClause (operation As ISingleValueCaseClause, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitSingleValueCaseClause : Microsoft.CodeAnalysis.Semantics.ISingleValueCaseClause * 'Argument -&gt; 'Result&#xA;override this.VisitSingleValueCaseClause : Microsoft.CodeAnalysis.Semantics.ISingleValueCaseClause * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitSingleValueCaseClause (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ISingleValueCaseClause" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSizeOfExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitSizeOfExpression (Microsoft.CodeAnalysis.Semantics.ISizeOfExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitSizeOfExpression(class Microsoft.CodeAnalysis.Semantics.ISizeOfExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitSizeOfExpression(Microsoft.CodeAnalysis.Semantics.ISizeOfExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitSizeOfExpression (operation As ISizeOfExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitSizeOfExpression : Microsoft.CodeAnalysis.Semantics.ISizeOfExpression * 'Argument -&gt; 'Result&#xA;override this.VisitSizeOfExpression : Microsoft.CodeAnalysis.Semantics.ISizeOfExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitSizeOfExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ISizeOfExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitStopStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitStopStatement (Microsoft.CodeAnalysis.Semantics.IStopStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitStopStatement(class Microsoft.CodeAnalysis.Semantics.IStopStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitStopStatement(Microsoft.CodeAnalysis.Semantics.IStopStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitStopStatement (operation As IStopStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitStopStatement : Microsoft.CodeAnalysis.Semantics.IStopStatement * 'Argument -&gt; 'Result&#xA;override this.VisitStopStatement : Microsoft.CodeAnalysis.Semantics.IStopStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitStopStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IStopStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSwitchCase">
      <MemberSignature Language="C#" Value="public virtual TResult VisitSwitchCase (Microsoft.CodeAnalysis.Semantics.ISwitchCase operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitSwitchCase(class Microsoft.CodeAnalysis.Semantics.ISwitchCase operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitSwitchCase(Microsoft.CodeAnalysis.Semantics.ISwitchCase,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitSwitchCase (operation As ISwitchCase, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitSwitchCase : Microsoft.CodeAnalysis.Semantics.ISwitchCase * 'Argument -&gt; 'Result&#xA;override this.VisitSwitchCase : Microsoft.CodeAnalysis.Semantics.ISwitchCase * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitSwitchCase (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ISwitchCase" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSwitchStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitSwitchStatement (Microsoft.CodeAnalysis.Semantics.ISwitchStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitSwitchStatement(class Microsoft.CodeAnalysis.Semantics.ISwitchStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitSwitchStatement(Microsoft.CodeAnalysis.Semantics.ISwitchStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitSwitchStatement (operation As ISwitchStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitSwitchStatement : Microsoft.CodeAnalysis.Semantics.ISwitchStatement * 'Argument -&gt; 'Result&#xA;override this.VisitSwitchStatement : Microsoft.CodeAnalysis.Semantics.ISwitchStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitSwitchStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ISwitchStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSyntheticLocalReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitSyntheticLocalReferenceExpression (Microsoft.CodeAnalysis.Semantics.ISyntheticLocalReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitSyntheticLocalReferenceExpression(class Microsoft.CodeAnalysis.Semantics.ISyntheticLocalReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitSyntheticLocalReferenceExpression(Microsoft.CodeAnalysis.Semantics.ISyntheticLocalReferenceExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitSyntheticLocalReferenceExpression (operation As ISyntheticLocalReferenceExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitSyntheticLocalReferenceExpression : Microsoft.CodeAnalysis.Semantics.ISyntheticLocalReferenceExpression * 'Argument -&gt; 'Result&#xA;override this.VisitSyntheticLocalReferenceExpression : Microsoft.CodeAnalysis.Semantics.ISyntheticLocalReferenceExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitSyntheticLocalReferenceExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ISyntheticLocalReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitThrowStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitThrowStatement (Microsoft.CodeAnalysis.Semantics.IThrowStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitThrowStatement(class Microsoft.CodeAnalysis.Semantics.IThrowStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitThrowStatement(Microsoft.CodeAnalysis.Semantics.IThrowStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitThrowStatement (operation As IThrowStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitThrowStatement : Microsoft.CodeAnalysis.Semantics.IThrowStatement * 'Argument -&gt; 'Result&#xA;override this.VisitThrowStatement : Microsoft.CodeAnalysis.Semantics.IThrowStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitThrowStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IThrowStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTryStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitTryStatement (Microsoft.CodeAnalysis.Semantics.ITryStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitTryStatement(class Microsoft.CodeAnalysis.Semantics.ITryStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitTryStatement(Microsoft.CodeAnalysis.Semantics.ITryStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitTryStatement (operation As ITryStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitTryStatement : Microsoft.CodeAnalysis.Semantics.ITryStatement * 'Argument -&gt; 'Result&#xA;override this.VisitTryStatement : Microsoft.CodeAnalysis.Semantics.ITryStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitTryStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ITryStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTypeOfExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitTypeOfExpression (Microsoft.CodeAnalysis.Semantics.ITypeOfExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitTypeOfExpression(class Microsoft.CodeAnalysis.Semantics.ITypeOfExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitTypeOfExpression(Microsoft.CodeAnalysis.Semantics.ITypeOfExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitTypeOfExpression (operation As ITypeOfExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitTypeOfExpression : Microsoft.CodeAnalysis.Semantics.ITypeOfExpression * 'Argument -&gt; 'Result&#xA;override this.VisitTypeOfExpression : Microsoft.CodeAnalysis.Semantics.ITypeOfExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitTypeOfExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ITypeOfExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTypeParameterObjectCreationExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitTypeParameterObjectCreationExpression (Microsoft.CodeAnalysis.Semantics.ITypeParameterObjectCreationExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitTypeParameterObjectCreationExpression(class Microsoft.CodeAnalysis.Semantics.ITypeParameterObjectCreationExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitTypeParameterObjectCreationExpression(Microsoft.CodeAnalysis.Semantics.ITypeParameterObjectCreationExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitTypeParameterObjectCreationExpression (operation As ITypeParameterObjectCreationExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitTypeParameterObjectCreationExpression : Microsoft.CodeAnalysis.Semantics.ITypeParameterObjectCreationExpression * 'Argument -&gt; 'Result&#xA;override this.VisitTypeParameterObjectCreationExpression : Microsoft.CodeAnalysis.Semantics.ITypeParameterObjectCreationExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitTypeParameterObjectCreationExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ITypeParameterObjectCreationExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitUnaryOperatorExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitUnaryOperatorExpression (Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitUnaryOperatorExpression(class Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitUnaryOperatorExpression(Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitUnaryOperatorExpression (operation As IUnaryOperatorExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitUnaryOperatorExpression : Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression * 'Argument -&gt; 'Result&#xA;override this.VisitUnaryOperatorExpression : Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitUnaryOperatorExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitUnboundLambdaExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitUnboundLambdaExpression (Microsoft.CodeAnalysis.Semantics.IUnboundLambdaExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitUnboundLambdaExpression(class Microsoft.CodeAnalysis.Semantics.IUnboundLambdaExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitUnboundLambdaExpression(Microsoft.CodeAnalysis.Semantics.IUnboundLambdaExpression,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitUnboundLambdaExpression (operation As IUnboundLambdaExpression, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitUnboundLambdaExpression : Microsoft.CodeAnalysis.Semantics.IUnboundLambdaExpression * 'Argument -&gt; 'Result&#xA;override this.VisitUnboundLambdaExpression : Microsoft.CodeAnalysis.Semantics.IUnboundLambdaExpression * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitUnboundLambdaExpression (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IUnboundLambdaExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitUsingStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitUsingStatement (Microsoft.CodeAnalysis.Semantics.IUsingStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitUsingStatement(class Microsoft.CodeAnalysis.Semantics.IUsingStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitUsingStatement(Microsoft.CodeAnalysis.Semantics.IUsingStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitUsingStatement (operation As IUsingStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitUsingStatement : Microsoft.CodeAnalysis.Semantics.IUsingStatement * 'Argument -&gt; 'Result&#xA;override this.VisitUsingStatement : Microsoft.CodeAnalysis.Semantics.IUsingStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitUsingStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IUsingStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitVariableDeclaration">
      <MemberSignature Language="C#" Value="public virtual TResult VisitVariableDeclaration (Microsoft.CodeAnalysis.Semantics.IVariableDeclaration operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitVariableDeclaration(class Microsoft.CodeAnalysis.Semantics.IVariableDeclaration operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitVariableDeclaration(Microsoft.CodeAnalysis.Semantics.IVariableDeclaration,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitVariableDeclaration (operation As IVariableDeclaration, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitVariableDeclaration : Microsoft.CodeAnalysis.Semantics.IVariableDeclaration * 'Argument -&gt; 'Result&#xA;override this.VisitVariableDeclaration : Microsoft.CodeAnalysis.Semantics.IVariableDeclaration * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitVariableDeclaration (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IVariableDeclaration" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitVariableDeclarationStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitVariableDeclarationStatement (Microsoft.CodeAnalysis.Semantics.IVariableDeclarationStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitVariableDeclarationStatement(class Microsoft.CodeAnalysis.Semantics.IVariableDeclarationStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitVariableDeclarationStatement(Microsoft.CodeAnalysis.Semantics.IVariableDeclarationStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitVariableDeclarationStatement (operation As IVariableDeclarationStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitVariableDeclarationStatement : Microsoft.CodeAnalysis.Semantics.IVariableDeclarationStatement * 'Argument -&gt; 'Result&#xA;override this.VisitVariableDeclarationStatement : Microsoft.CodeAnalysis.Semantics.IVariableDeclarationStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitVariableDeclarationStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IVariableDeclarationStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitWhileUntilLoopStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitWhileUntilLoopStatement (Microsoft.CodeAnalysis.Semantics.IWhileUntilLoopStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitWhileUntilLoopStatement(class Microsoft.CodeAnalysis.Semantics.IWhileUntilLoopStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitWhileUntilLoopStatement(Microsoft.CodeAnalysis.Semantics.IWhileUntilLoopStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitWhileUntilLoopStatement (operation As IWhileUntilLoopStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitWhileUntilLoopStatement : Microsoft.CodeAnalysis.Semantics.IWhileUntilLoopStatement * 'Argument -&gt; 'Result&#xA;override this.VisitWhileUntilLoopStatement : Microsoft.CodeAnalysis.Semantics.IWhileUntilLoopStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitWhileUntilLoopStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IWhileUntilLoopStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitWithStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitWithStatement (Microsoft.CodeAnalysis.Semantics.IWithStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitWithStatement(class Microsoft.CodeAnalysis.Semantics.IWithStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitWithStatement(Microsoft.CodeAnalysis.Semantics.IWithStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitWithStatement (operation As IWithStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitWithStatement : Microsoft.CodeAnalysis.Semantics.IWithStatement * 'Argument -&gt; 'Result&#xA;override this.VisitWithStatement : Microsoft.CodeAnalysis.Semantics.IWithStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitWithStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IWithStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitYieldBreakStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitYieldBreakStatement (Microsoft.CodeAnalysis.Semantics.IReturnStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitYieldBreakStatement(class Microsoft.CodeAnalysis.Semantics.IReturnStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitYieldBreakStatement(Microsoft.CodeAnalysis.Semantics.IReturnStatement,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitYieldBreakStatement (operation As IReturnStatement, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitYieldBreakStatement : Microsoft.CodeAnalysis.Semantics.IReturnStatement * 'Argument -&gt; 'Result&#xA;override this.VisitYieldBreakStatement : Microsoft.CodeAnalysis.Semantics.IReturnStatement * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitYieldBreakStatement (operation, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IReturnStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>