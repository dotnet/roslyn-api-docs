<Type Name="InterpolatedStringExpressionSyntax" FullName="Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax">
  <TypeSignature Language="C#" Value="public sealed class InterpolatedStringExpressionSyntax : Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed InterpolatedStringExpressionSyntax extends Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
 Represents an interpolated string expression.
 </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public override TResult Accept&lt;TResult&gt; (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResult Accept&lt;TResult&gt;(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1&lt;!!TResult&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddContents">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax AddContents (params Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax AddContents(class Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax.AddContents(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contents">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax&gt; Contents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax&gt; Contents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax.Contents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The contents of the interpolated string.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DollarSignDoubleQuoteToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken DollarSignDoubleQuoteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken DollarSignDoubleQuoteToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax.DollarSignDoubleQuoteToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The opening '$"', '$“', or '$”' token.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DoubleQuoteToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken DoubleQuoteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken DoubleQuoteToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax.DoubleQuoteToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The closing '"', '”', or '“' token.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax Update (Microsoft.CodeAnalysis.SyntaxToken dollarSignDoubleQuoteToken, Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax&gt; contents, Microsoft.CodeAnalysis.SyntaxToken doubleQuoteToken);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax Update(valuetype Microsoft.CodeAnalysis.SyntaxToken dollarSignDoubleQuoteToken, valuetype Microsoft.CodeAnalysis.SyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax&gt; contents, valuetype Microsoft.CodeAnalysis.SyntaxToken doubleQuoteToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dollarSignDoubleQuoteToken" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="contents" Type="Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax&gt;" />
        <Parameter Name="doubleQuoteToken" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="dollarSignDoubleQuoteToken">
 The value for the DollarSignDoubleQuoteToken property.
 </param>
        <param name="contents">
 The value for the Contents property.
 </param>
        <param name="doubleQuoteToken">
 The value for the DoubleQuoteToken property.
 </param>
        <summary>
 Returns a copy of this with the specified changes. Returns this instance if
 there are no actual changes.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithContents">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax WithContents (Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax&gt; contents);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax WithContents(valuetype Microsoft.CodeAnalysis.SyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax&gt; contents) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax.WithContents(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contents" Type="Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax&gt;" />
      </Parameters>
      <Docs>
        <param name="contents">To be added.</param>
        <summary>
 Returns a copy of this with the Contents property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDollarSignDoubleQuoteToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax WithDollarSignDoubleQuoteToken (Microsoft.CodeAnalysis.SyntaxToken dollarSignDoubleQuoteToken);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax WithDollarSignDoubleQuoteToken(valuetype Microsoft.CodeAnalysis.SyntaxToken dollarSignDoubleQuoteToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax.WithDollarSignDoubleQuoteToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dollarSignDoubleQuoteToken" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="dollarSignDoubleQuoteToken">To be added.</param>
        <summary>
 Returns a copy of this with the DollarSignDoubleQuoteToken property changed to
 the specified value. Returns this instance if the specified value is the same
 as the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDoubleQuoteToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax WithDoubleQuoteToken (Microsoft.CodeAnalysis.SyntaxToken doubleQuoteToken);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax WithDoubleQuoteToken(valuetype Microsoft.CodeAnalysis.SyntaxToken doubleQuoteToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax.WithDoubleQuoteToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="doubleQuoteToken" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="doubleQuoteToken">To be added.</param>
        <summary>
 Returns a copy of this with the DoubleQuoteToken property changed to the
 specified value. Returns this instance if the specified value is the same as
 the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>