<Type Name="RuleSet" FullName="Microsoft.CodeAnalysis.RuleSet">
  <TypeSignature Language="C#" Value="public class RuleSet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RuleSet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.RuleSet" />
  <TypeSignature Language="VB.NET" Value="Public Class RuleSet" />
  <TypeSignature Language="F#" Value="type RuleSet = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuleSet" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a set of rules as specified in a ruleset file.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RuleSet (string filePath, Microsoft.CodeAnalysis.ReportDiagnostic generalOption, System.Collections.Immutable.ImmutableDictionary&lt;string,Microsoft.CodeAnalysis.ReportDiagnostic&gt; specificOptions, System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.RuleSetInclude&gt; includes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filePath, valuetype Microsoft.CodeAnalysis.ReportDiagnostic generalOption, class System.Collections.Immutable.ImmutableDictionary`2&lt;string, valuetype Microsoft.CodeAnalysis.ReportDiagnostic&gt; specificOptions, valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.RuleSetInclude&gt; includes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.RuleSet.#ctor(System.String,Microsoft.CodeAnalysis.ReportDiagnostic,System.Collections.Immutable.ImmutableDictionary{System.String,Microsoft.CodeAnalysis.ReportDiagnostic},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.RuleSetInclude})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filePath As String, generalOption As ReportDiagnostic, specificOptions As ImmutableDictionary(Of String, ReportDiagnostic), includes As ImmutableArray(Of RuleSetInclude))" />
      <MemberSignature Language="F#" Value="new Microsoft.CodeAnalysis.RuleSet : string * Microsoft.CodeAnalysis.ReportDiagnostic * System.Collections.Immutable.ImmutableDictionary&lt;string, Microsoft.CodeAnalysis.ReportDiagnostic&gt; * System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.RuleSetInclude&gt; -&gt; Microsoft.CodeAnalysis.RuleSet" Usage="new Microsoft.CodeAnalysis.RuleSet (filePath, generalOption, specificOptions, includes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RuleSet(System::String ^ filePath, Microsoft::CodeAnalysis::ReportDiagnostic generalOption, System::Collections::Immutable::ImmutableDictionary&lt;System::String ^, Microsoft::CodeAnalysis::ReportDiagnostic&gt; ^ specificOptions, System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::RuleSetInclude ^&gt; includes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="generalOption" Type="Microsoft.CodeAnalysis.ReportDiagnostic" />
        <Parameter Name="specificOptions" Type="System.Collections.Immutable.ImmutableDictionary&lt;System.String,Microsoft.CodeAnalysis.ReportDiagnostic&gt;" />
        <Parameter Name="includes" Type="System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.RuleSetInclude&gt;" />
      </Parameters>
      <Docs>
        <param name="filePath">To be added.</param>
        <param name="generalOption">To be added.</param>
        <param name="specificOptions">To be added.</param>
        <param name="includes">To be added.</param>
        <summary>
            Create a RuleSet.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public string FilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.RuleSet.FilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePath As String" />
      <MemberSignature Language="F#" Value="member this.FilePath : string" Usage="Microsoft.CodeAnalysis.RuleSet.FilePath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilePath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The file path of the ruleset file.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneralDiagnosticOption">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.ReportDiagnostic GeneralDiagnosticOption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.ReportDiagnostic GeneralDiagnosticOption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.RuleSet.GeneralDiagnosticOption" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GeneralDiagnosticOption As ReportDiagnostic" />
      <MemberSignature Language="F#" Value="member this.GeneralDiagnosticOption : Microsoft.CodeAnalysis.ReportDiagnostic" Usage="Microsoft.CodeAnalysis.RuleSet.GeneralDiagnosticOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::ReportDiagnostic GeneralDiagnosticOption { Microsoft::CodeAnalysis::ReportDiagnostic get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ReportDiagnostic</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The global option specified by the IncludeAll tag.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDiagnosticOptionsFromRulesetFile">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.ReportDiagnostic GetDiagnosticOptionsFromRulesetFile (string rulesetFileFullPath, out System.Collections.Generic.Dictionary&lt;string,Microsoft.CodeAnalysis.ReportDiagnostic&gt; specificDiagnosticOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.CodeAnalysis.ReportDiagnostic GetDiagnosticOptionsFromRulesetFile(string rulesetFileFullPath, [out] class System.Collections.Generic.Dictionary`2&lt;string, valuetype Microsoft.CodeAnalysis.ReportDiagnostic&gt;&amp; specificDiagnosticOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.RuleSet.GetDiagnosticOptionsFromRulesetFile(System.String,System.Collections.Generic.Dictionary{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDiagnosticOptionsFromRulesetFile (rulesetFileFullPath As String, ByRef specificDiagnosticOptions As Dictionary(Of String, ReportDiagnostic)) As ReportDiagnostic" />
      <MemberSignature Language="F#" Value="static member GetDiagnosticOptionsFromRulesetFile : string *  -&gt; Microsoft.CodeAnalysis.ReportDiagnostic" Usage="Microsoft.CodeAnalysis.RuleSet.GetDiagnosticOptionsFromRulesetFile (rulesetFileFullPath, specificDiagnosticOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::CodeAnalysis::ReportDiagnostic GetDiagnosticOptionsFromRulesetFile(System::String ^ rulesetFileFullPath, [Runtime::InteropServices::Out] System::Collections::Generic::Dictionary&lt;System::String ^, Microsoft::CodeAnalysis::ReportDiagnostic&gt; ^ % specificDiagnosticOptions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ReportDiagnostic</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rulesetFileFullPath" Type="System.String" />
        <Parameter Name="specificDiagnosticOptions" Type="System.Collections.Generic.Dictionary&lt;System.String,Microsoft.CodeAnalysis.ReportDiagnostic&gt;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="rulesetFileFullPath">To be added.</param>
        <param name="specificDiagnosticOptions">To be added.</param>
        <summary>
            Parses the ruleset file at the given <paramref name="rulesetFileFullPath" /> and returns the following diagnostic options from the parsed file:
            1) A map of <paramref name="specificDiagnosticOptions" /> from rule ID to <see cref="T:Microsoft.CodeAnalysis.ReportDiagnostic" /> option.
            2) A global <see cref="T:Microsoft.CodeAnalysis.ReportDiagnostic" /> option for all rules in the ruleset file.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEffectiveIncludesFromFile">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableArray&lt;string&gt; GetEffectiveIncludesFromFile (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Collections.Immutable.ImmutableArray`1&lt;string&gt; GetEffectiveIncludesFromFile(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.RuleSet.GetEffectiveIncludesFromFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEffectiveIncludesFromFile (filePath As String) As ImmutableArray(Of String)" />
      <MemberSignature Language="F#" Value="static member GetEffectiveIncludesFromFile : string -&gt; System.Collections.Immutable.ImmutableArray&lt;string&gt;" Usage="Microsoft.CodeAnalysis.RuleSet.GetEffectiveIncludesFromFile filePath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Immutable::ImmutableArray&lt;System::String ^&gt; GetEffectiveIncludesFromFile(System::String ^ filePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">To be added.</param>
        <summary>
            Get the paths to all files contributing rules to the ruleset from the specified file.
            See also: <seealso cref="M:Microsoft.CodeAnalysis.RuleSet.LoadEffectiveRuleSetFromFile(System.String)" />.
            </summary>
        <returns>
            The full paths to included files, or an empty array if there were errors.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Includes">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.RuleSetInclude&gt; Includes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.RuleSetInclude&gt; Includes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.RuleSet.Includes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Includes As ImmutableArray(Of RuleSetInclude)" />
      <MemberSignature Language="F#" Value="member this.Includes : System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.RuleSetInclude&gt;" Usage="Microsoft.CodeAnalysis.RuleSet.Includes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::RuleSetInclude ^&gt; Includes { System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::RuleSetInclude ^&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.RuleSetInclude&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            List of rulesets included by this ruleset.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadEffectiveRuleSetFromFile">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.RuleSet LoadEffectiveRuleSetFromFile (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CodeAnalysis.RuleSet LoadEffectiveRuleSetFromFile(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.RuleSet.LoadEffectiveRuleSetFromFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadEffectiveRuleSetFromFile (filePath As String) As RuleSet" />
      <MemberSignature Language="F#" Value="static member LoadEffectiveRuleSetFromFile : string -&gt; Microsoft.CodeAnalysis.RuleSet" Usage="Microsoft.CodeAnalysis.RuleSet.LoadEffectiveRuleSetFromFile filePath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::CodeAnalysis::RuleSet ^ LoadEffectiveRuleSetFromFile(System::String ^ filePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.RuleSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">To be added.</param>
        <summary>
            Load the ruleset from the specified file. This ruleset will contain
            all the rules resolved from the includes specified in the ruleset file
            as well. See also: <seealso cref="M:Microsoft.CodeAnalysis.RuleSet.GetEffectiveIncludesFromFile(System.String)" />.
            </summary>
        <returns>
            A ruleset that contains resolved rules or null if there were errors.
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpecificDiagnosticOptions">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableDictionary&lt;string,Microsoft.CodeAnalysis.ReportDiagnostic&gt; SpecificDiagnosticOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Immutable.ImmutableDictionary`2&lt;string, valuetype Microsoft.CodeAnalysis.ReportDiagnostic&gt; SpecificDiagnosticOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.RuleSet.SpecificDiagnosticOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpecificDiagnosticOptions As ImmutableDictionary(Of String, ReportDiagnostic)" />
      <MemberSignature Language="F#" Value="member this.SpecificDiagnosticOptions : System.Collections.Immutable.ImmutableDictionary&lt;string, Microsoft.CodeAnalysis.ReportDiagnostic&gt;" Usage="Microsoft.CodeAnalysis.RuleSet.SpecificDiagnosticOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Immutable::ImmutableDictionary&lt;System::String ^, Microsoft::CodeAnalysis::ReportDiagnostic&gt; ^ SpecificDiagnosticOptions { System::Collections::Immutable::ImmutableDictionary&lt;System::String ^, Microsoft::CodeAnalysis::ReportDiagnostic&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableDictionary&lt;System.String,Microsoft.CodeAnalysis.ReportDiagnostic&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Individual rule ids and their associated actions.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithEffectiveAction">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.RuleSet WithEffectiveAction (Microsoft.CodeAnalysis.ReportDiagnostic action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.RuleSet WithEffectiveAction(valuetype Microsoft.CodeAnalysis.ReportDiagnostic action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.RuleSet.WithEffectiveAction(Microsoft.CodeAnalysis.ReportDiagnostic)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithEffectiveAction (action As ReportDiagnostic) As RuleSet" />
      <MemberSignature Language="F#" Value="member this.WithEffectiveAction : Microsoft.CodeAnalysis.ReportDiagnostic -&gt; Microsoft.CodeAnalysis.RuleSet" Usage="ruleSet.WithEffectiveAction action" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::RuleSet ^ WithEffectiveAction(Microsoft::CodeAnalysis::ReportDiagnostic action);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.RuleSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="Microsoft.CodeAnalysis.ReportDiagnostic" />
      </Parameters>
      <Docs>
        <param name="action">To be added.</param>
        <summary>
            Create a RuleSet with a global effective action applied on it.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>