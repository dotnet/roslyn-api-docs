<Type Name="XmlCrefAttributeSyntax" FullName="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax">
  <TypeSignature Language="C#" Value="public sealed class XmlCrefAttributeSyntax : Microsoft.CodeAnalysis.VisualBasic.Syntax.BaseXmlAttributeSyntax" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlCrefAttributeSyntax extends Microsoft.CodeAnalysis.VisualBasic.Syntax.BaseXmlAttributeSyntax" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlCrefAttributeSyntax&#xA;Inherits BaseXmlAttributeSyntax" />
  <TypeSignature Language="F#" Value="type XmlCrefAttributeSyntax = class&#xA;    inherit BaseXmlAttributeSyntax" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlCrefAttributeSyntax sealed : Microsoft::CodeAnalysis::VisualBasic::Syntax::BaseXmlAttributeSyntax" />
  <TypeSignature Language="C++ CX" Value="public ref class XmlCrefAttributeSyntax sealed : Microsoft::CodeAnalysis::VisualBasic::Syntax::BaseXmlAttributeSyntax" />
  <TypeSignature Language="C++ WINRT" Value="class XmlCrefAttributeSyntax sealed : Microsoft::CodeAnalysis::VisualBasic::Syntax::BaseXmlAttributeSyntax" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.VisualBasic.Syntax.BaseXmlAttributeSyntax</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
 A symbol referenced by a cref attribute (e.g. in a &lt;see&gt; or
 &lt;seealso&gt; documentation comment tag). For example, the M in &lt;see
 cref="M" /&gt;.
 </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor -&gt; unit" Usage="xmlCrefAttributeSyntax.Accept visitor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor ^ visitor);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override void Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor ^ visitor);" />
      <MemberSignature Language="C++ WINRT" Value=" override void Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor const &amp; visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public override TResult Accept&lt;TResult&gt; (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResult Accept&lt;TResult&gt;(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1&lt;!!TResult&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResult) (visitor As VisualBasicSyntaxVisitor(Of TResult)) As TResult" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;'Result&gt; -&gt; 'Result" Usage="xmlCrefAttributeSyntax.Accept visitor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; override TResult Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor&lt;TResult&gt; ^ visitor);" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename TResult&gt;&#xA; override TResult Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor&lt;TResult&gt; const &amp; visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndQuoteToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken EndQuoteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken EndQuoteToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.EndQuoteToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndQuoteToken As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.EndQuoteToken : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.EndQuoteToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken EndQuoteToken { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EqualsToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken EqualsToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken EqualsToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.EqualsToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EqualsToken As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.EqualsToken : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.EqualsToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken EqualsToken { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As XmlNameSyntax" />
      <MemberSignature Language="F#" Value="member this.Name : Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.Name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::XmlNameSyntax ^ Name { Microsoft::CodeAnalysis::VisualBasic::Syntax::XmlNameSyntax ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::XmlNameSyntax ^ Name { Microsoft::CodeAnalysis::VisualBasic::Syntax::XmlNameSyntax ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reference">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax Reference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax Reference" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.Reference" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Reference As CrefReferenceSyntax" />
      <MemberSignature Language="F#" Value="member this.Reference : Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.Reference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::CrefReferenceSyntax ^ Reference { Microsoft::CodeAnalysis::VisualBasic::Syntax::CrefReferenceSyntax ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::CrefReferenceSyntax ^ Reference { Microsoft::CodeAnalysis::VisualBasic::Syntax::CrefReferenceSyntax ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartQuoteToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken StartQuoteToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken StartQuoteToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.StartQuoteToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartQuoteToken As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.StartQuoteToken : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.StartQuoteToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken StartQuoteToken { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax Update (Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax name, Microsoft.CodeAnalysis.SyntaxToken equalsToken, Microsoft.CodeAnalysis.SyntaxToken startQuoteToken, Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax reference, Microsoft.CodeAnalysis.SyntaxToken endQuoteToken);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax Update(class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax name, valuetype Microsoft.CodeAnalysis.SyntaxToken equalsToken, valuetype Microsoft.CodeAnalysis.SyntaxToken startQuoteToken, class Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax reference, valuetype Microsoft.CodeAnalysis.SyntaxToken endQuoteToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (name As XmlNameSyntax, equalsToken As SyntaxToken, startQuoteToken As SyntaxToken, reference As CrefReferenceSyntax, endQuoteToken As SyntaxToken) As XmlCrefAttributeSyntax" />
      <MemberSignature Language="F#" Value="member this.Update : Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax * Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax" Usage="xmlCrefAttributeSyntax.Update (name, equalsToken, startQuoteToken, reference, endQuoteToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::XmlCrefAttributeSyntax ^ Update(Microsoft::CodeAnalysis::VisualBasic::Syntax::XmlNameSyntax ^ name, Microsoft::CodeAnalysis::SyntaxToken equalsToken, Microsoft::CodeAnalysis::SyntaxToken startQuoteToken, Microsoft::CodeAnalysis::VisualBasic::Syntax::CrefReferenceSyntax ^ reference, Microsoft::CodeAnalysis::SyntaxToken endQuoteToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax" />
        <Parameter Name="equalsToken" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="startQuoteToken" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="reference" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax" />
        <Parameter Name="endQuoteToken" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="name">
 The value for the Name property.
 </param>
        <param name="equalsToken">
 The value for the EqualsToken property.
 </param>
        <param name="startQuoteToken">
 The value for the StartQuoteToken property.
 </param>
        <param name="reference">
 The value for the Reference property.
 </param>
        <param name="endQuoteToken">
 The value for the EndQuoteToken property.
 </param>
        <summary>
 Returns a copy of this with the specified changes. Returns this instance if
 there are no actual changes.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithEndQuoteToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax WithEndQuoteToken (Microsoft.CodeAnalysis.SyntaxToken endQuoteToken);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax WithEndQuoteToken(valuetype Microsoft.CodeAnalysis.SyntaxToken endQuoteToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.WithEndQuoteToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithEndQuoteToken (endQuoteToken As SyntaxToken) As XmlCrefAttributeSyntax" />
      <MemberSignature Language="F#" Value="member this.WithEndQuoteToken : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax" Usage="xmlCrefAttributeSyntax.WithEndQuoteToken endQuoteToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::XmlCrefAttributeSyntax ^ WithEndQuoteToken(Microsoft::CodeAnalysis::SyntaxToken endQuoteToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endQuoteToken" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="endQuoteToken">To be added.</param>
        <summary>
 Returns a copy of this with the EndQuoteToken property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithEqualsToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax WithEqualsToken (Microsoft.CodeAnalysis.SyntaxToken equalsToken);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax WithEqualsToken(valuetype Microsoft.CodeAnalysis.SyntaxToken equalsToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.WithEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithEqualsToken (equalsToken As SyntaxToken) As XmlCrefAttributeSyntax" />
      <MemberSignature Language="F#" Value="member this.WithEqualsToken : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax" Usage="xmlCrefAttributeSyntax.WithEqualsToken equalsToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::XmlCrefAttributeSyntax ^ WithEqualsToken(Microsoft::CodeAnalysis::SyntaxToken equalsToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="equalsToken" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="equalsToken">To be added.</param>
        <summary>
 Returns a copy of this with the EqualsToken property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithName">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax WithName (Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax name);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax WithName(class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.WithName(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithName (name As XmlNameSyntax) As XmlCrefAttributeSyntax" />
      <MemberSignature Language="F#" Value="member this.WithName : Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax" Usage="xmlCrefAttributeSyntax.WithName name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::XmlCrefAttributeSyntax ^ WithName(Microsoft::CodeAnalysis::VisualBasic::Syntax::XmlNameSyntax ^ name);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::XmlCrefAttributeSyntax ^ WithName(Microsoft::CodeAnalysis::VisualBasic::Syntax::XmlNameSyntax ^ name);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::CodeAnalysis::VisualBasic::Syntax::XmlCrefAttributeSyntax WithName(Microsoft::CodeAnalysis::VisualBasic::Syntax::XmlNameSyntax const &amp; name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>
 Returns a copy of this with the Name property changed to the specified value.
 Returns this instance if the specified value is the same as the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithReference">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax WithReference (Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax reference);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax WithReference(class Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax reference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.WithReference(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithReference (reference As CrefReferenceSyntax) As XmlCrefAttributeSyntax" />
      <MemberSignature Language="F#" Value="member this.WithReference : Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax" Usage="xmlCrefAttributeSyntax.WithReference reference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::XmlCrefAttributeSyntax ^ WithReference(Microsoft::CodeAnalysis::VisualBasic::Syntax::CrefReferenceSyntax ^ reference);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::XmlCrefAttributeSyntax ^ WithReference(Microsoft::CodeAnalysis::VisualBasic::Syntax::CrefReferenceSyntax ^ reference);" />
      <MemberSignature Language="C++ WINRT" Value="Microsoft::CodeAnalysis::VisualBasic::Syntax::XmlCrefAttributeSyntax WithReference(Microsoft::CodeAnalysis::VisualBasic::Syntax::CrefReferenceSyntax const &amp; reference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax" />
      </Parameters>
      <Docs>
        <param name="reference">To be added.</param>
        <summary>
 Returns a copy of this with the Reference property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithStartQuoteToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax WithStartQuoteToken (Microsoft.CodeAnalysis.SyntaxToken startQuoteToken);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax WithStartQuoteToken(valuetype Microsoft.CodeAnalysis.SyntaxToken startQuoteToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.WithStartQuoteToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithStartQuoteToken (startQuoteToken As SyntaxToken) As XmlCrefAttributeSyntax" />
      <MemberSignature Language="F#" Value="member this.WithStartQuoteToken : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax" Usage="xmlCrefAttributeSyntax.WithStartQuoteToken startQuoteToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::XmlCrefAttributeSyntax ^ WithStartQuoteToken(Microsoft::CodeAnalysis::SyntaxToken startQuoteToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startQuoteToken" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="startQuoteToken">To be added.</param>
        <summary>
 Returns a copy of this with the StartQuoteToken property changed to the
 specified value. Returns this instance if the specified value is the same as
 the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>