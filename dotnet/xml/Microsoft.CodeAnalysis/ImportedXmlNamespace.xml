<Type Name="ImportedXmlNamespace" FullName="Microsoft.CodeAnalysis.ImportedXmlNamespace">
  <TypeSignature Language="C#" Value="public readonly struct ImportedXmlNamespace" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ImportedXmlNamespace extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.ImportedXmlNamespace" />
  <TypeSignature Language="VB.NET" Value="Public Structure ImportedXmlNamespace" />
  <TypeSignature Language="F#" Value="type ImportedXmlNamespace = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>4.8.0.0</AssemblyVersion>
    <AssemblyVersion>4.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents an imported xml namespace name. This corresponds to <c>Imports &lt;xmlns:prefix = "name"&gt;</c> in
            Visual Basic.  It does not exist for C#.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DeclaringSyntaxReference">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxReference? DeclaringSyntaxReference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.SyntaxReference DeclaringSyntaxReference" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.ImportedXmlNamespace.DeclaringSyntaxReference" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringSyntaxReference As SyntaxReference" />
      <MemberSignature Language="F#" Value="member this.DeclaringSyntaxReference : Microsoft.CodeAnalysis.SyntaxReference" Usage="Microsoft.CodeAnalysis.ImportedXmlNamespace.DeclaringSyntaxReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Location in source where the <c>Imports</c> clause was declared. May be null for a project-level import
            directive.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespace">
      <MemberSignature Language="C#" Value="public string XmlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XmlNamespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.ImportedXmlNamespace.XmlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlNamespace As String" />
      <MemberSignature Language="F#" Value="member this.XmlNamespace : string" Usage="Microsoft.CodeAnalysis.ImportedXmlNamespace.XmlNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
