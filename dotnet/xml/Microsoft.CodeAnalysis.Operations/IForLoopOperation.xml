<Type Name="IForLoopOperation" FullName="Microsoft.CodeAnalysis.Operations.IForLoopOperation">
  <TypeSignature Language="C#" Value="public interface IForLoopOperation : Microsoft.CodeAnalysis.Operations.ILoopOperation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IForLoopOperation implements class Microsoft.CodeAnalysis.IOperation, class Microsoft.CodeAnalysis.Operations.ILoopOperation" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Operations.IForLoopOperation" />
  <TypeSignature Language="VB.NET" Value="Public Interface IForLoopOperation&#xA;Implements ILoopOperation" />
  <TypeSignature Language="F#" Value="type IForLoopOperation = interface&#xA;    interface ILoopOperation&#xA;    interface IOperation" />
  <TypeSignature Language="C++ CLI" Value="public interface class IForLoopOperation : Microsoft::CodeAnalysis::Operations::ILoopOperation" />
  <TypeSignature Language="C++ CX" Value="public interface class IForLoopOperation : Microsoft::CodeAnalysis::Operations::ILoopOperation" />
  <TypeSignature Language="C++ WINRT" Value="__interface IForLoopOperation : Microsoft::CodeAnalysis::Operations::ILoopOperation" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.CodeAnalysis.Operations.ILoopOperation</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents a for loop.
            <para>
            Current usage:
             (1) C# 'for' loop statement
            </para></summary>
    <remarks>
            This interface is reserved for implementation by its associated APIs. We reserve the right to
            change it in the future.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="AtLoopBottom">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.IOperation&gt; AtLoopBottom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.IOperation&gt; AtLoopBottom" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.IForLoopOperation.AtLoopBottom" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AtLoopBottom As ImmutableArray(Of IOperation)" />
      <MemberSignature Language="F#" Value="member this.AtLoopBottom : System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.IOperation&gt;" Usage="Microsoft.CodeAnalysis.Operations.IForLoopOperation.AtLoopBottom" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::IOperation ^&gt; AtLoopBottom { System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::IOperation ^&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.IOperation&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            List of operations to execute at the bottom of the loop. For C#, this comes from the third clause of the for statement.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Before">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.IOperation&gt; Before { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.IOperation&gt; Before" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.IForLoopOperation.Before" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Before As ImmutableArray(Of IOperation)" />
      <MemberSignature Language="F#" Value="member this.Before : System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.IOperation&gt;" Usage="Microsoft.CodeAnalysis.Operations.IForLoopOperation.Before" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::IOperation ^&gt; Before { System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::IOperation ^&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.IOperation&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            List of operations to execute before entry to the loop. For C#, this comes from the first clause of the for statement.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IOperation Condition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IOperation Condition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.IForLoopOperation.Condition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Condition As IOperation" />
      <MemberSignature Language="F#" Value="member this.Condition : Microsoft.CodeAnalysis.IOperation" Usage="Microsoft.CodeAnalysis.Operations.IForLoopOperation.Condition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::IOperation ^ Condition { Microsoft::CodeAnalysis::IOperation ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::CodeAnalysis::IOperation ^ Condition { Microsoft::CodeAnalysis::IOperation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Condition of the loop. For C#, this comes from the second clause of the for statement.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionLocals">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.ILocalSymbol&gt; ConditionLocals { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.ILocalSymbol&gt; ConditionLocals" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.IForLoopOperation.ConditionLocals" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionLocals As ImmutableArray(Of ILocalSymbol)" />
      <MemberSignature Language="F#" Value="member this.ConditionLocals : System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.ILocalSymbol&gt;" Usage="Microsoft.CodeAnalysis.Operations.IForLoopOperation.ConditionLocals" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.ILocalSymbol&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Locals declared within the loop Condition and are in scope throughout the <see cref="P:Microsoft.CodeAnalysis.Operations.IForLoopOperation.Condition" />,
            <see cref="P:Microsoft.CodeAnalysis.Operations.ILoopOperation.Body" /> and <see cref="P:Microsoft.CodeAnalysis.Operations.IForLoopOperation.AtLoopBottom" />.
            They are considered to be declared per iteration.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>