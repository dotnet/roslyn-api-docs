<Type Name="CSharpParseOptions" FullName="Microsoft.CodeAnalysis.CSharp.CSharpParseOptions">
  <TypeSignature Language="C#" Value="public sealed class CSharpParseOptions : Microsoft.CodeAnalysis.ParseOptions, IEquatable&lt;Microsoft.CodeAnalysis.CSharp.CSharpParseOptions&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CSharpParseOptions extends Microsoft.CodeAnalysis.ParseOptions implements class System.IEquatable`1&lt;class Microsoft.CodeAnalysis.CSharp.CSharpParseOptions&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CSharpParseOptions&#xA;Inherits ParseOptions&#xA;Implements IEquatable(Of CSharpParseOptions)" />
  <TypeSignature Language="F#" Value="type CSharpParseOptions = class&#xA;    inherit ParseOptions&#xA;    interface IEquatable&lt;CSharpParseOptions&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.ParseOptions</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.CodeAnalysis.CSharp.CSharpParseOptions&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            This class stores several source parsing related options and offers access to their values.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpParseOptions (Microsoft.CodeAnalysis.CSharp.LanguageVersion languageVersion = Microsoft.CodeAnalysis.CSharp.LanguageVersion.Default, Microsoft.CodeAnalysis.DocumentationMode documentationMode = Microsoft.CodeAnalysis.DocumentationMode.Parse, Microsoft.CodeAnalysis.SourceCodeKind kind = Microsoft.CodeAnalysis.SourceCodeKind.Regular, System.Collections.Generic.IEnumerable&lt;string&gt; preprocessorSymbols = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.CodeAnalysis.CSharp.LanguageVersion languageVersion, valuetype Microsoft.CodeAnalysis.DocumentationMode documentationMode, valuetype Microsoft.CodeAnalysis.SourceCodeKind kind, class System.Collections.Generic.IEnumerable`1&lt;string&gt; preprocessorSymbols) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.#ctor(Microsoft.CodeAnalysis.CSharp.LanguageVersion,Microsoft.CodeAnalysis.DocumentationMode,Microsoft.CodeAnalysis.SourceCodeKind,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="F#" Value="new Microsoft.CodeAnalysis.CSharp.CSharpParseOptions : Microsoft.CodeAnalysis.CSharp.LanguageVersion * Microsoft.CodeAnalysis.DocumentationMode * Microsoft.CodeAnalysis.SourceCodeKind * seq&lt;string&gt; -&gt; Microsoft.CodeAnalysis.CSharp.CSharpParseOptions" Usage="new Microsoft.CodeAnalysis.CSharp.CSharpParseOptions (languageVersion, documentationMode, kind, preprocessorSymbols)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="languageVersion" Type="Microsoft.CodeAnalysis.CSharp.LanguageVersion" />
        <Parameter Name="documentationMode" Type="Microsoft.CodeAnalysis.DocumentationMode" />
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.SourceCodeKind" />
        <Parameter Name="preprocessorSymbols" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="languageVersion">To be added.</param>
        <param name="documentationMode">To be added.</param>
        <param name="kind">To be added.</param>
        <param name="preprocessorSymbols">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithDocumentationMode">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.ParseOptions CommonWithDocumentationMode (Microsoft.CodeAnalysis.DocumentationMode documentationMode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.ParseOptions CommonWithDocumentationMode(valuetype Microsoft.CodeAnalysis.DocumentationMode documentationMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.CommonWithDocumentationMode(Microsoft.CodeAnalysis.DocumentationMode)" />
      <MemberSignature Language="F#" Value="override this.CommonWithDocumentationMode : Microsoft.CodeAnalysis.DocumentationMode -&gt; Microsoft.CodeAnalysis.ParseOptions" Usage="cSharpParseOptions.CommonWithDocumentationMode documentationMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ParseOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentationMode" Type="Microsoft.CodeAnalysis.DocumentationMode" />
      </Parameters>
      <Docs>
        <param name="documentationMode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithFeatures">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.ParseOptions CommonWithFeatures (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; features);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.ParseOptions CommonWithFeatures(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; features) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.CommonWithFeatures(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CommonWithFeatures (features As IEnumerable(Of KeyValuePair(Of String, String))) As ParseOptions" />
      <MemberSignature Language="F#" Value="override this.CommonWithFeatures : seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; Microsoft.CodeAnalysis.ParseOptions" Usage="cSharpParseOptions.CommonWithFeatures features" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ParseOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="features" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="features">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithKind">
      <MemberSignature Language="C#" Value="public override Microsoft.CodeAnalysis.ParseOptions CommonWithKind (Microsoft.CodeAnalysis.SourceCodeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.CodeAnalysis.ParseOptions CommonWithKind(valuetype Microsoft.CodeAnalysis.SourceCodeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.CommonWithKind(Microsoft.CodeAnalysis.SourceCodeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CommonWithKind (kind As SourceCodeKind) As ParseOptions" />
      <MemberSignature Language="F#" Value="override this.CommonWithKind : Microsoft.CodeAnalysis.SourceCodeKind -&gt; Microsoft.CodeAnalysis.ParseOptions" Usage="cSharpParseOptions.CommonWithKind kind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ParseOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.SourceCodeKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.CSharp.CSharpParseOptions Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.CodeAnalysis.CSharp.CSharpParseOptions Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As CSharpParseOptions" />
      <MemberSignature Language="F#" Value="member this.Default : Microsoft.CodeAnalysis.CSharp.CSharpParseOptions" Usage="Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpParseOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The default parse options.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.CodeAnalysis.CSharp.CSharpParseOptions other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Microsoft.CodeAnalysis.CSharp.CSharpParseOptions other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.Equals(Microsoft.CodeAnalysis.CSharp.CSharpParseOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As CSharpParseOptions) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.CodeAnalysis.CSharp.CSharpParseOptions -&gt; bool" Usage="cSharpParseOptions.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.CodeAnalysis.CSharp.CSharpParseOptions" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="cSharpParseOptions.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Features">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IReadOnlyDictionary&lt;string,string&gt; Features { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;string, string&gt; Features" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.Features" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Features As IReadOnlyDictionary(Of String, String)" />
      <MemberSignature Language="F#" Value="member this.Features : System.Collections.Generic.IReadOnlyDictionary&lt;string, string&gt;" Usage="Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.Features" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="cSharpParseOptions.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public override string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.Language" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Language As String" />
      <MemberSignature Language="F#" Value="member this.Language : string" Usage="Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageVersion">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.LanguageVersion LanguageVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.CSharp.LanguageVersion LanguageVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.LanguageVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LanguageVersion As LanguageVersion" />
      <MemberSignature Language="F#" Value="member this.LanguageVersion : Microsoft.CodeAnalysis.CSharp.LanguageVersion" Usage="Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.LanguageVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.LanguageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the effective language version, which the compiler uses to select the
            language rules to apply to the program.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreprocessorSymbolNames">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;string&gt; PreprocessorSymbolNames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; PreprocessorSymbolNames" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.PreprocessorSymbolNames" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PreprocessorSymbolNames As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="member this.PreprocessorSymbolNames : seq&lt;string&gt;" Usage="Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.PreprocessorSymbolNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the names of defined preprocessor symbols.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpecifiedLanguageVersion">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.LanguageVersion SpecifiedLanguageVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.CSharp.LanguageVersion SpecifiedLanguageVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.SpecifiedLanguageVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpecifiedLanguageVersion As LanguageVersion" />
      <MemberSignature Language="F#" Value="member this.SpecifiedLanguageVersion : Microsoft.CodeAnalysis.CSharp.LanguageVersion" Usage="Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.SpecifiedLanguageVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.LanguageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the specified language version, which is the value that was specified in
            the call to the constructor, or modified using the <see cref="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.WithLanguageVersion(Microsoft.CodeAnalysis.CSharp.LanguageVersion)" /> method,
            or provided on the command line.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDocumentationMode">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpParseOptions WithDocumentationMode (Microsoft.CodeAnalysis.DocumentationMode documentationMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpParseOptions WithDocumentationMode(valuetype Microsoft.CodeAnalysis.DocumentationMode documentationMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.WithDocumentationMode(Microsoft.CodeAnalysis.DocumentationMode)" />
      <MemberSignature Language="F#" Value="override this.WithDocumentationMode : Microsoft.CodeAnalysis.DocumentationMode -&gt; Microsoft.CodeAnalysis.CSharp.CSharpParseOptions" Usage="cSharpParseOptions.WithDocumentationMode documentationMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpParseOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentationMode" Type="Microsoft.CodeAnalysis.DocumentationMode" />
      </Parameters>
      <Docs>
        <param name="documentationMode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithFeatures">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpParseOptions WithFeatures (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; features);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpParseOptions WithFeatures(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; features) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.WithFeatures(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithFeatures (features As IEnumerable(Of KeyValuePair(Of String, String))) As CSharpParseOptions" />
      <MemberSignature Language="F#" Value="override this.WithFeatures : seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; Microsoft.CodeAnalysis.CSharp.CSharpParseOptions" Usage="cSharpParseOptions.WithFeatures features" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpParseOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="features" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="features">To be added.</param>
        <summary>
            Enable some experimental language features for testing.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithKind">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpParseOptions WithKind (Microsoft.CodeAnalysis.SourceCodeKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpParseOptions WithKind(valuetype Microsoft.CodeAnalysis.SourceCodeKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.WithKind(Microsoft.CodeAnalysis.SourceCodeKind)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithKind (kind As SourceCodeKind) As CSharpParseOptions" />
      <MemberSignature Language="F#" Value="override this.WithKind : Microsoft.CodeAnalysis.SourceCodeKind -&gt; Microsoft.CodeAnalysis.CSharp.CSharpParseOptions" Usage="cSharpParseOptions.WithKind kind" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpParseOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.SourceCodeKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithLanguageVersion">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpParseOptions WithLanguageVersion (Microsoft.CodeAnalysis.CSharp.LanguageVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpParseOptions WithLanguageVersion(valuetype Microsoft.CodeAnalysis.CSharp.LanguageVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.WithLanguageVersion(Microsoft.CodeAnalysis.CSharp.LanguageVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithLanguageVersion (version As LanguageVersion) As CSharpParseOptions" />
      <MemberSignature Language="F#" Value="member this.WithLanguageVersion : Microsoft.CodeAnalysis.CSharp.LanguageVersion -&gt; Microsoft.CodeAnalysis.CSharp.CSharpParseOptions" Usage="cSharpParseOptions.WithLanguageVersion version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpParseOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="Microsoft.CodeAnalysis.CSharp.LanguageVersion" />
      </Parameters>
      <Docs>
        <param name="version">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithPreprocessorSymbols">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpParseOptions WithPreprocessorSymbols (System.Collections.Generic.IEnumerable&lt;string&gt; preprocessorSymbols);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpParseOptions WithPreprocessorSymbols(class System.Collections.Generic.IEnumerable`1&lt;string&gt; preprocessorSymbols) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.WithPreprocessorSymbols(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithPreprocessorSymbols (preprocessorSymbols As IEnumerable(Of String)) As CSharpParseOptions" />
      <MemberSignature Language="F#" Value="member this.WithPreprocessorSymbols : seq&lt;string&gt; -&gt; Microsoft.CodeAnalysis.CSharp.CSharpParseOptions" Usage="cSharpParseOptions.WithPreprocessorSymbols preprocessorSymbols" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpParseOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preprocessorSymbols" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="preprocessorSymbols">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithPreprocessorSymbols">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpParseOptions WithPreprocessorSymbols (System.Collections.Immutable.ImmutableArray&lt;string&gt; symbols);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpParseOptions WithPreprocessorSymbols(valuetype System.Collections.Immutable.ImmutableArray`1&lt;string&gt; symbols) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.WithPreprocessorSymbols(System.Collections.Immutable.ImmutableArray{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithPreprocessorSymbols (symbols As ImmutableArray(Of String)) As CSharpParseOptions" />
      <MemberSignature Language="F#" Value="member this.WithPreprocessorSymbols : System.Collections.Immutable.ImmutableArray&lt;string&gt; -&gt; Microsoft.CodeAnalysis.CSharp.CSharpParseOptions" Usage="cSharpParseOptions.WithPreprocessorSymbols symbols" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpParseOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="symbols" Type="System.Collections.Immutable.ImmutableArray&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="symbols">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithPreprocessorSymbols">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpParseOptions WithPreprocessorSymbols (params string[] preprocessorSymbols);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpParseOptions WithPreprocessorSymbols(string[] preprocessorSymbols) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.WithPreprocessorSymbols(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function WithPreprocessorSymbols (ParamArray preprocessorSymbols As String()) As CSharpParseOptions" />
      <MemberSignature Language="F#" Value="member this.WithPreprocessorSymbols : string[] -&gt; Microsoft.CodeAnalysis.CSharp.CSharpParseOptions" Usage="cSharpParseOptions.WithPreprocessorSymbols preprocessorSymbols" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpParseOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="preprocessorSymbols" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="preprocessorSymbols">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>