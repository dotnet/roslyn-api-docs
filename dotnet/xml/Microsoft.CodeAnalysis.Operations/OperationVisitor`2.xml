<Type Name="OperationVisitor&lt;TArgument,TResult&gt;" FullName="Microsoft.CodeAnalysis.Operations.OperationVisitor&lt;TArgument,TResult&gt;">
  <TypeSignature Language="C#" Value="public abstract class OperationVisitor&lt;TArgument,TResult&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit OperationVisitor`2&lt;TArgument, TResult&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Operations.OperationVisitor`2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class OperationVisitor(Of TArgument, TResult)" />
  <TypeSignature Language="F#" Value="type OperationVisitor&lt;'Argument, 'Result&gt; = class" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TArgument, typename TResult&gt;&#xA;public ref class OperationVisitor abstract" />
  <TypeSignature Language="C++ WINRT" Value="template &lt;typename TArgument, typename TResult&gt;&#xA;[Windows::Foundation::Metadata::WebHostHidden]&#xA;class OperationVisitor abstract" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TArgument" />
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TArgument">
            The type of the additional argument passed to this visitor's Visit method.
            </typeparam>
    <typeparam name="TResult">
            The type of the return value of this visitor's Visit method.
            </typeparam>
    <summary>
            Represents a <see cref="T:Microsoft.CodeAnalysis.IOperation" /> visitor that visits only the single IOperation
            passed into its Visit method with an additional argument of the type specified by the
            <typeparamref name="TArgument" /> parameter and produces a value of the type specified by
            the <typeparamref name="TResult" /> parameter.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OperationVisitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; OperationVisitor();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; OperationVisitor();" />
      <MemberSignature Language="C++ WINRT" Value=" OperationVisitor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultVisit">
      <MemberSignature Language="C#" Value="public virtual TResult DefaultVisit (Microsoft.CodeAnalysis.IOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult DefaultVisit(class Microsoft.CodeAnalysis.IOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.DefaultVisit(Microsoft.CodeAnalysis.IOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DefaultVisit (operation As IOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member DefaultVisit : Microsoft.CodeAnalysis.IOperation * 'Argument -&gt; 'Result&#xA;override this.DefaultVisit : Microsoft.CodeAnalysis.IOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.DefaultVisit (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult DefaultVisit(Microsoft::CodeAnalysis::IOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult DefaultVisit(Microsoft::CodeAnalysis::IOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult DefaultVisit(Microsoft::CodeAnalysis::IOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.IOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public virtual TResult Visit (Microsoft.CodeAnalysis.IOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult Visit(class Microsoft.CodeAnalysis.IOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.Visit(Microsoft.CodeAnalysis.IOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Visit (operation As IOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member Visit : Microsoft.CodeAnalysis.IOperation * 'Argument -&gt; 'Result&#xA;override this.Visit : Microsoft.CodeAnalysis.IOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.Visit (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult Visit(Microsoft::CodeAnalysis::IOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult Visit(Microsoft::CodeAnalysis::IOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult Visit(Microsoft::CodeAnalysis::IOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.IOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAddressOf">
      <MemberSignature Language="C#" Value="public virtual TResult VisitAddressOf (Microsoft.CodeAnalysis.Operations.IAddressOfOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitAddressOf(class Microsoft.CodeAnalysis.Operations.IAddressOfOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitAddressOf(Microsoft.CodeAnalysis.Operations.IAddressOfOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitAddressOf (operation As IAddressOfOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitAddressOf : Microsoft.CodeAnalysis.Operations.IAddressOfOperation * 'Argument -&gt; 'Result&#xA;override this.VisitAddressOf : Microsoft.CodeAnalysis.Operations.IAddressOfOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitAddressOf (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitAddressOf(Microsoft::CodeAnalysis::Operations::IAddressOfOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitAddressOf(Microsoft::CodeAnalysis::Operations::IAddressOfOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitAddressOf(Microsoft::CodeAnalysis::Operations::IAddressOfOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IAddressOfOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAnonymousFunction">
      <MemberSignature Language="C#" Value="public virtual TResult VisitAnonymousFunction (Microsoft.CodeAnalysis.Operations.IAnonymousFunctionOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitAnonymousFunction(class Microsoft.CodeAnalysis.Operations.IAnonymousFunctionOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitAnonymousFunction(Microsoft.CodeAnalysis.Operations.IAnonymousFunctionOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitAnonymousFunction (operation As IAnonymousFunctionOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitAnonymousFunction : Microsoft.CodeAnalysis.Operations.IAnonymousFunctionOperation * 'Argument -&gt; 'Result&#xA;override this.VisitAnonymousFunction : Microsoft.CodeAnalysis.Operations.IAnonymousFunctionOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitAnonymousFunction (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitAnonymousFunction(Microsoft::CodeAnalysis::Operations::IAnonymousFunctionOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitAnonymousFunction(Microsoft::CodeAnalysis::Operations::IAnonymousFunctionOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitAnonymousFunction(Microsoft::CodeAnalysis::Operations::IAnonymousFunctionOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IAnonymousFunctionOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAnonymousObjectCreation">
      <MemberSignature Language="C#" Value="public virtual TResult VisitAnonymousObjectCreation (Microsoft.CodeAnalysis.Operations.IAnonymousObjectCreationOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitAnonymousObjectCreation(class Microsoft.CodeAnalysis.Operations.IAnonymousObjectCreationOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitAnonymousObjectCreation(Microsoft.CodeAnalysis.Operations.IAnonymousObjectCreationOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitAnonymousObjectCreation (operation As IAnonymousObjectCreationOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitAnonymousObjectCreation : Microsoft.CodeAnalysis.Operations.IAnonymousObjectCreationOperation * 'Argument -&gt; 'Result&#xA;override this.VisitAnonymousObjectCreation : Microsoft.CodeAnalysis.Operations.IAnonymousObjectCreationOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitAnonymousObjectCreation (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitAnonymousObjectCreation(Microsoft::CodeAnalysis::Operations::IAnonymousObjectCreationOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitAnonymousObjectCreation(Microsoft::CodeAnalysis::Operations::IAnonymousObjectCreationOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitAnonymousObjectCreation(Microsoft::CodeAnalysis::Operations::IAnonymousObjectCreationOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IAnonymousObjectCreationOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitArgument">
      <MemberSignature Language="C#" Value="public virtual TResult VisitArgument (Microsoft.CodeAnalysis.Operations.IArgumentOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitArgument(class Microsoft.CodeAnalysis.Operations.IArgumentOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitArgument(Microsoft.CodeAnalysis.Operations.IArgumentOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitArgument (operation As IArgumentOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitArgument : Microsoft.CodeAnalysis.Operations.IArgumentOperation * 'Argument -&gt; 'Result&#xA;override this.VisitArgument : Microsoft.CodeAnalysis.Operations.IArgumentOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitArgument (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitArgument(Microsoft::CodeAnalysis::Operations::IArgumentOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitArgument(Microsoft::CodeAnalysis::Operations::IArgumentOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitArgument(Microsoft::CodeAnalysis::Operations::IArgumentOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IArgumentOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitArrayCreation">
      <MemberSignature Language="C#" Value="public virtual TResult VisitArrayCreation (Microsoft.CodeAnalysis.Operations.IArrayCreationOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitArrayCreation(class Microsoft.CodeAnalysis.Operations.IArrayCreationOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitArrayCreation(Microsoft.CodeAnalysis.Operations.IArrayCreationOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitArrayCreation (operation As IArrayCreationOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitArrayCreation : Microsoft.CodeAnalysis.Operations.IArrayCreationOperation * 'Argument -&gt; 'Result&#xA;override this.VisitArrayCreation : Microsoft.CodeAnalysis.Operations.IArrayCreationOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitArrayCreation (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitArrayCreation(Microsoft::CodeAnalysis::Operations::IArrayCreationOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitArrayCreation(Microsoft::CodeAnalysis::Operations::IArrayCreationOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitArrayCreation(Microsoft::CodeAnalysis::Operations::IArrayCreationOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IArrayCreationOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitArrayElementReference">
      <MemberSignature Language="C#" Value="public virtual TResult VisitArrayElementReference (Microsoft.CodeAnalysis.Operations.IArrayElementReferenceOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitArrayElementReference(class Microsoft.CodeAnalysis.Operations.IArrayElementReferenceOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitArrayElementReference(Microsoft.CodeAnalysis.Operations.IArrayElementReferenceOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitArrayElementReference (operation As IArrayElementReferenceOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitArrayElementReference : Microsoft.CodeAnalysis.Operations.IArrayElementReferenceOperation * 'Argument -&gt; 'Result&#xA;override this.VisitArrayElementReference : Microsoft.CodeAnalysis.Operations.IArrayElementReferenceOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitArrayElementReference (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitArrayElementReference(Microsoft::CodeAnalysis::Operations::IArrayElementReferenceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitArrayElementReference(Microsoft::CodeAnalysis::Operations::IArrayElementReferenceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitArrayElementReference(Microsoft::CodeAnalysis::Operations::IArrayElementReferenceOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IArrayElementReferenceOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitArrayInitializer">
      <MemberSignature Language="C#" Value="public virtual TResult VisitArrayInitializer (Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitArrayInitializer(class Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitArrayInitializer(Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitArrayInitializer (operation As IArrayInitializerOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitArrayInitializer : Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation * 'Argument -&gt; 'Result&#xA;override this.VisitArrayInitializer : Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitArrayInitializer (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitArrayInitializer(Microsoft::CodeAnalysis::Operations::IArrayInitializerOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitArrayInitializer(Microsoft::CodeAnalysis::Operations::IArrayInitializerOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitArrayInitializer(Microsoft::CodeAnalysis::Operations::IArrayInitializerOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAwait">
      <MemberSignature Language="C#" Value="public virtual TResult VisitAwait (Microsoft.CodeAnalysis.Operations.IAwaitOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitAwait(class Microsoft.CodeAnalysis.Operations.IAwaitOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitAwait(Microsoft.CodeAnalysis.Operations.IAwaitOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitAwait (operation As IAwaitOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitAwait : Microsoft.CodeAnalysis.Operations.IAwaitOperation * 'Argument -&gt; 'Result&#xA;override this.VisitAwait : Microsoft.CodeAnalysis.Operations.IAwaitOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitAwait (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitAwait(Microsoft::CodeAnalysis::Operations::IAwaitOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitAwait(Microsoft::CodeAnalysis::Operations::IAwaitOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitAwait(Microsoft::CodeAnalysis::Operations::IAwaitOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IAwaitOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitBinaryOperator">
      <MemberSignature Language="C#" Value="public virtual TResult VisitBinaryOperator (Microsoft.CodeAnalysis.Operations.IBinaryOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitBinaryOperator(class Microsoft.CodeAnalysis.Operations.IBinaryOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitBinaryOperator(Microsoft.CodeAnalysis.Operations.IBinaryOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitBinaryOperator (operation As IBinaryOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitBinaryOperator : Microsoft.CodeAnalysis.Operations.IBinaryOperation * 'Argument -&gt; 'Result&#xA;override this.VisitBinaryOperator : Microsoft.CodeAnalysis.Operations.IBinaryOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitBinaryOperator (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitBinaryOperator(Microsoft::CodeAnalysis::Operations::IBinaryOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitBinaryOperator(Microsoft::CodeAnalysis::Operations::IBinaryOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitBinaryOperator(Microsoft::CodeAnalysis::Operations::IBinaryOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IBinaryOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitBlock">
      <MemberSignature Language="C#" Value="public virtual TResult VisitBlock (Microsoft.CodeAnalysis.Operations.IBlockOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitBlock(class Microsoft.CodeAnalysis.Operations.IBlockOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitBlock(Microsoft.CodeAnalysis.Operations.IBlockOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitBlock (operation As IBlockOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitBlock : Microsoft.CodeAnalysis.Operations.IBlockOperation * 'Argument -&gt; 'Result&#xA;override this.VisitBlock : Microsoft.CodeAnalysis.Operations.IBlockOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitBlock (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitBlock(Microsoft::CodeAnalysis::Operations::IBlockOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitBlock(Microsoft::CodeAnalysis::Operations::IBlockOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitBlock(Microsoft::CodeAnalysis::Operations::IBlockOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IBlockOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitBranch">
      <MemberSignature Language="C#" Value="public virtual TResult VisitBranch (Microsoft.CodeAnalysis.Operations.IBranchOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitBranch(class Microsoft.CodeAnalysis.Operations.IBranchOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitBranch(Microsoft.CodeAnalysis.Operations.IBranchOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitBranch (operation As IBranchOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitBranch : Microsoft.CodeAnalysis.Operations.IBranchOperation * 'Argument -&gt; 'Result&#xA;override this.VisitBranch : Microsoft.CodeAnalysis.Operations.IBranchOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitBranch (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitBranch(Microsoft::CodeAnalysis::Operations::IBranchOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitBranch(Microsoft::CodeAnalysis::Operations::IBranchOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitBranch(Microsoft::CodeAnalysis::Operations::IBranchOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IBranchOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCatchClause">
      <MemberSignature Language="C#" Value="public virtual TResult VisitCatchClause (Microsoft.CodeAnalysis.Operations.ICatchClauseOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitCatchClause(class Microsoft.CodeAnalysis.Operations.ICatchClauseOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitCatchClause(Microsoft.CodeAnalysis.Operations.ICatchClauseOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitCatchClause (operation As ICatchClauseOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitCatchClause : Microsoft.CodeAnalysis.Operations.ICatchClauseOperation * 'Argument -&gt; 'Result&#xA;override this.VisitCatchClause : Microsoft.CodeAnalysis.Operations.ICatchClauseOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitCatchClause (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitCatchClause(Microsoft::CodeAnalysis::Operations::ICatchClauseOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitCatchClause(Microsoft::CodeAnalysis::Operations::ICatchClauseOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitCatchClause(Microsoft::CodeAnalysis::Operations::ICatchClauseOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.ICatchClauseOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCoalesce">
      <MemberSignature Language="C#" Value="public virtual TResult VisitCoalesce (Microsoft.CodeAnalysis.Operations.ICoalesceOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitCoalesce(class Microsoft.CodeAnalysis.Operations.ICoalesceOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitCoalesce(Microsoft.CodeAnalysis.Operations.ICoalesceOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitCoalesce (operation As ICoalesceOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitCoalesce : Microsoft.CodeAnalysis.Operations.ICoalesceOperation * 'Argument -&gt; 'Result&#xA;override this.VisitCoalesce : Microsoft.CodeAnalysis.Operations.ICoalesceOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitCoalesce (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitCoalesce(Microsoft::CodeAnalysis::Operations::ICoalesceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitCoalesce(Microsoft::CodeAnalysis::Operations::ICoalesceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitCoalesce(Microsoft::CodeAnalysis::Operations::ICoalesceOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.ICoalesceOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCollectionElementInitializer">
      <MemberSignature Language="C#" Value="public virtual TResult VisitCollectionElementInitializer (Microsoft.CodeAnalysis.Operations.ICollectionElementInitializerOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitCollectionElementInitializer(class Microsoft.CodeAnalysis.Operations.ICollectionElementInitializerOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitCollectionElementInitializer(Microsoft.CodeAnalysis.Operations.ICollectionElementInitializerOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitCollectionElementInitializer (operation As ICollectionElementInitializerOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitCollectionElementInitializer : Microsoft.CodeAnalysis.Operations.ICollectionElementInitializerOperation * 'Argument -&gt; 'Result&#xA;override this.VisitCollectionElementInitializer : Microsoft.CodeAnalysis.Operations.ICollectionElementInitializerOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitCollectionElementInitializer (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitCollectionElementInitializer(Microsoft::CodeAnalysis::Operations::ICollectionElementInitializerOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitCollectionElementInitializer(Microsoft::CodeAnalysis::Operations::ICollectionElementInitializerOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitCollectionElementInitializer(Microsoft::CodeAnalysis::Operations::ICollectionElementInitializerOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.ICollectionElementInitializerOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCompoundAssignment">
      <MemberSignature Language="C#" Value="public virtual TResult VisitCompoundAssignment (Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitCompoundAssignment(class Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitCompoundAssignment(Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitCompoundAssignment (operation As ICompoundAssignmentOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitCompoundAssignment : Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation * 'Argument -&gt; 'Result&#xA;override this.VisitCompoundAssignment : Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitCompoundAssignment (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitCompoundAssignment(Microsoft::CodeAnalysis::Operations::ICompoundAssignmentOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitCompoundAssignment(Microsoft::CodeAnalysis::Operations::ICompoundAssignmentOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitCompoundAssignment(Microsoft::CodeAnalysis::Operations::ICompoundAssignmentOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitConditional">
      <MemberSignature Language="C#" Value="public virtual TResult VisitConditional (Microsoft.CodeAnalysis.Operations.IConditionalOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitConditional(class Microsoft.CodeAnalysis.Operations.IConditionalOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitConditional(Microsoft.CodeAnalysis.Operations.IConditionalOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitConditional (operation As IConditionalOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitConditional : Microsoft.CodeAnalysis.Operations.IConditionalOperation * 'Argument -&gt; 'Result&#xA;override this.VisitConditional : Microsoft.CodeAnalysis.Operations.IConditionalOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitConditional (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitConditional(Microsoft::CodeAnalysis::Operations::IConditionalOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitConditional(Microsoft::CodeAnalysis::Operations::IConditionalOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitConditional(Microsoft::CodeAnalysis::Operations::IConditionalOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IConditionalOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitConditionalAccess">
      <MemberSignature Language="C#" Value="public virtual TResult VisitConditionalAccess (Microsoft.CodeAnalysis.Operations.IConditionalAccessOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitConditionalAccess(class Microsoft.CodeAnalysis.Operations.IConditionalAccessOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitConditionalAccess(Microsoft.CodeAnalysis.Operations.IConditionalAccessOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitConditionalAccess (operation As IConditionalAccessOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitConditionalAccess : Microsoft.CodeAnalysis.Operations.IConditionalAccessOperation * 'Argument -&gt; 'Result&#xA;override this.VisitConditionalAccess : Microsoft.CodeAnalysis.Operations.IConditionalAccessOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitConditionalAccess (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitConditionalAccess(Microsoft::CodeAnalysis::Operations::IConditionalAccessOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitConditionalAccess(Microsoft::CodeAnalysis::Operations::IConditionalAccessOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitConditionalAccess(Microsoft::CodeAnalysis::Operations::IConditionalAccessOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IConditionalAccessOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitConditionalAccessInstance">
      <MemberSignature Language="C#" Value="public virtual TResult VisitConditionalAccessInstance (Microsoft.CodeAnalysis.Operations.IConditionalAccessInstanceOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitConditionalAccessInstance(class Microsoft.CodeAnalysis.Operations.IConditionalAccessInstanceOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitConditionalAccessInstance(Microsoft.CodeAnalysis.Operations.IConditionalAccessInstanceOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitConditionalAccessInstance (operation As IConditionalAccessInstanceOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitConditionalAccessInstance : Microsoft.CodeAnalysis.Operations.IConditionalAccessInstanceOperation * 'Argument -&gt; 'Result&#xA;override this.VisitConditionalAccessInstance : Microsoft.CodeAnalysis.Operations.IConditionalAccessInstanceOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitConditionalAccessInstance (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitConditionalAccessInstance(Microsoft::CodeAnalysis::Operations::IConditionalAccessInstanceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitConditionalAccessInstance(Microsoft::CodeAnalysis::Operations::IConditionalAccessInstanceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitConditionalAccessInstance(Microsoft::CodeAnalysis::Operations::IConditionalAccessInstanceOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IConditionalAccessInstanceOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitConstantPattern">
      <MemberSignature Language="C#" Value="public virtual TResult VisitConstantPattern (Microsoft.CodeAnalysis.Operations.IConstantPatternOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitConstantPattern(class Microsoft.CodeAnalysis.Operations.IConstantPatternOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitConstantPattern(Microsoft.CodeAnalysis.Operations.IConstantPatternOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitConstantPattern (operation As IConstantPatternOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitConstantPattern : Microsoft.CodeAnalysis.Operations.IConstantPatternOperation * 'Argument -&gt; 'Result&#xA;override this.VisitConstantPattern : Microsoft.CodeAnalysis.Operations.IConstantPatternOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitConstantPattern (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitConstantPattern(Microsoft::CodeAnalysis::Operations::IConstantPatternOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitConstantPattern(Microsoft::CodeAnalysis::Operations::IConstantPatternOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitConstantPattern(Microsoft::CodeAnalysis::Operations::IConstantPatternOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IConstantPatternOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitConversion">
      <MemberSignature Language="C#" Value="public virtual TResult VisitConversion (Microsoft.CodeAnalysis.Operations.IConversionOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitConversion(class Microsoft.CodeAnalysis.Operations.IConversionOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitConversion(Microsoft.CodeAnalysis.Operations.IConversionOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitConversion (operation As IConversionOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitConversion : Microsoft.CodeAnalysis.Operations.IConversionOperation * 'Argument -&gt; 'Result&#xA;override this.VisitConversion : Microsoft.CodeAnalysis.Operations.IConversionOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitConversion (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitConversion(Microsoft::CodeAnalysis::Operations::IConversionOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitConversion(Microsoft::CodeAnalysis::Operations::IConversionOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitConversion(Microsoft::CodeAnalysis::Operations::IConversionOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IConversionOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitDeclarationExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitDeclarationExpression (Microsoft.CodeAnalysis.Operations.IDeclarationExpressionOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitDeclarationExpression(class Microsoft.CodeAnalysis.Operations.IDeclarationExpressionOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitDeclarationExpression(Microsoft.CodeAnalysis.Operations.IDeclarationExpressionOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitDeclarationExpression (operation As IDeclarationExpressionOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitDeclarationExpression : Microsoft.CodeAnalysis.Operations.IDeclarationExpressionOperation * 'Argument -&gt; 'Result&#xA;override this.VisitDeclarationExpression : Microsoft.CodeAnalysis.Operations.IDeclarationExpressionOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitDeclarationExpression (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitDeclarationExpression(Microsoft::CodeAnalysis::Operations::IDeclarationExpressionOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitDeclarationExpression(Microsoft::CodeAnalysis::Operations::IDeclarationExpressionOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitDeclarationExpression(Microsoft::CodeAnalysis::Operations::IDeclarationExpressionOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IDeclarationExpressionOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitDeclarationPattern">
      <MemberSignature Language="C#" Value="public virtual TResult VisitDeclarationPattern (Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitDeclarationPattern(class Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitDeclarationPattern(Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitDeclarationPattern (operation As IDeclarationPatternOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitDeclarationPattern : Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation * 'Argument -&gt; 'Result&#xA;override this.VisitDeclarationPattern : Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitDeclarationPattern (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitDeclarationPattern(Microsoft::CodeAnalysis::Operations::IDeclarationPatternOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitDeclarationPattern(Microsoft::CodeAnalysis::Operations::IDeclarationPatternOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitDeclarationPattern(Microsoft::CodeAnalysis::Operations::IDeclarationPatternOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitDeconstructionAssignment">
      <MemberSignature Language="C#" Value="public virtual TResult VisitDeconstructionAssignment (Microsoft.CodeAnalysis.Operations.IDeconstructionAssignmentOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitDeconstructionAssignment(class Microsoft.CodeAnalysis.Operations.IDeconstructionAssignmentOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitDeconstructionAssignment(Microsoft.CodeAnalysis.Operations.IDeconstructionAssignmentOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitDeconstructionAssignment (operation As IDeconstructionAssignmentOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitDeconstructionAssignment : Microsoft.CodeAnalysis.Operations.IDeconstructionAssignmentOperation * 'Argument -&gt; 'Result&#xA;override this.VisitDeconstructionAssignment : Microsoft.CodeAnalysis.Operations.IDeconstructionAssignmentOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitDeconstructionAssignment (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitDeconstructionAssignment(Microsoft::CodeAnalysis::Operations::IDeconstructionAssignmentOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitDeconstructionAssignment(Microsoft::CodeAnalysis::Operations::IDeconstructionAssignmentOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitDeconstructionAssignment(Microsoft::CodeAnalysis::Operations::IDeconstructionAssignmentOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IDeconstructionAssignmentOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitDefaultCaseClause">
      <MemberSignature Language="C#" Value="public virtual TResult VisitDefaultCaseClause (Microsoft.CodeAnalysis.Operations.IDefaultCaseClauseOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitDefaultCaseClause(class Microsoft.CodeAnalysis.Operations.IDefaultCaseClauseOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitDefaultCaseClause(Microsoft.CodeAnalysis.Operations.IDefaultCaseClauseOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitDefaultCaseClause (operation As IDefaultCaseClauseOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitDefaultCaseClause : Microsoft.CodeAnalysis.Operations.IDefaultCaseClauseOperation * 'Argument -&gt; 'Result&#xA;override this.VisitDefaultCaseClause : Microsoft.CodeAnalysis.Operations.IDefaultCaseClauseOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitDefaultCaseClause (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitDefaultCaseClause(Microsoft::CodeAnalysis::Operations::IDefaultCaseClauseOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitDefaultCaseClause(Microsoft::CodeAnalysis::Operations::IDefaultCaseClauseOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitDefaultCaseClause(Microsoft::CodeAnalysis::Operations::IDefaultCaseClauseOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IDefaultCaseClauseOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitDefaultValue">
      <MemberSignature Language="C#" Value="public virtual TResult VisitDefaultValue (Microsoft.CodeAnalysis.Operations.IDefaultValueOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitDefaultValue(class Microsoft.CodeAnalysis.Operations.IDefaultValueOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitDefaultValue(Microsoft.CodeAnalysis.Operations.IDefaultValueOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitDefaultValue (operation As IDefaultValueOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitDefaultValue : Microsoft.CodeAnalysis.Operations.IDefaultValueOperation * 'Argument -&gt; 'Result&#xA;override this.VisitDefaultValue : Microsoft.CodeAnalysis.Operations.IDefaultValueOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitDefaultValue (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitDefaultValue(Microsoft::CodeAnalysis::Operations::IDefaultValueOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitDefaultValue(Microsoft::CodeAnalysis::Operations::IDefaultValueOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitDefaultValue(Microsoft::CodeAnalysis::Operations::IDefaultValueOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IDefaultValueOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitDelegateCreation">
      <MemberSignature Language="C#" Value="public virtual TResult VisitDelegateCreation (Microsoft.CodeAnalysis.Operations.IDelegateCreationOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitDelegateCreation(class Microsoft.CodeAnalysis.Operations.IDelegateCreationOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitDelegateCreation(Microsoft.CodeAnalysis.Operations.IDelegateCreationOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitDelegateCreation (operation As IDelegateCreationOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitDelegateCreation : Microsoft.CodeAnalysis.Operations.IDelegateCreationOperation * 'Argument -&gt; 'Result&#xA;override this.VisitDelegateCreation : Microsoft.CodeAnalysis.Operations.IDelegateCreationOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitDelegateCreation (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitDelegateCreation(Microsoft::CodeAnalysis::Operations::IDelegateCreationOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitDelegateCreation(Microsoft::CodeAnalysis::Operations::IDelegateCreationOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitDelegateCreation(Microsoft::CodeAnalysis::Operations::IDelegateCreationOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IDelegateCreationOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitDynamicIndexerAccess">
      <MemberSignature Language="C#" Value="public virtual TResult VisitDynamicIndexerAccess (Microsoft.CodeAnalysis.Operations.IDynamicIndexerAccessOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitDynamicIndexerAccess(class Microsoft.CodeAnalysis.Operations.IDynamicIndexerAccessOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitDynamicIndexerAccess(Microsoft.CodeAnalysis.Operations.IDynamicIndexerAccessOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitDynamicIndexerAccess (operation As IDynamicIndexerAccessOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitDynamicIndexerAccess : Microsoft.CodeAnalysis.Operations.IDynamicIndexerAccessOperation * 'Argument -&gt; 'Result&#xA;override this.VisitDynamicIndexerAccess : Microsoft.CodeAnalysis.Operations.IDynamicIndexerAccessOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitDynamicIndexerAccess (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitDynamicIndexerAccess(Microsoft::CodeAnalysis::Operations::IDynamicIndexerAccessOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitDynamicIndexerAccess(Microsoft::CodeAnalysis::Operations::IDynamicIndexerAccessOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitDynamicIndexerAccess(Microsoft::CodeAnalysis::Operations::IDynamicIndexerAccessOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IDynamicIndexerAccessOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitDynamicInvocation">
      <MemberSignature Language="C#" Value="public virtual TResult VisitDynamicInvocation (Microsoft.CodeAnalysis.Operations.IDynamicInvocationOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitDynamicInvocation(class Microsoft.CodeAnalysis.Operations.IDynamicInvocationOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitDynamicInvocation(Microsoft.CodeAnalysis.Operations.IDynamicInvocationOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitDynamicInvocation (operation As IDynamicInvocationOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitDynamicInvocation : Microsoft.CodeAnalysis.Operations.IDynamicInvocationOperation * 'Argument -&gt; 'Result&#xA;override this.VisitDynamicInvocation : Microsoft.CodeAnalysis.Operations.IDynamicInvocationOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitDynamicInvocation (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitDynamicInvocation(Microsoft::CodeAnalysis::Operations::IDynamicInvocationOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitDynamicInvocation(Microsoft::CodeAnalysis::Operations::IDynamicInvocationOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitDynamicInvocation(Microsoft::CodeAnalysis::Operations::IDynamicInvocationOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IDynamicInvocationOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitDynamicMemberReference">
      <MemberSignature Language="C#" Value="public virtual TResult VisitDynamicMemberReference (Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitDynamicMemberReference(class Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitDynamicMemberReference(Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitDynamicMemberReference (operation As IDynamicMemberReferenceOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitDynamicMemberReference : Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation * 'Argument -&gt; 'Result&#xA;override this.VisitDynamicMemberReference : Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitDynamicMemberReference (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitDynamicMemberReference(Microsoft::CodeAnalysis::Operations::IDynamicMemberReferenceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitDynamicMemberReference(Microsoft::CodeAnalysis::Operations::IDynamicMemberReferenceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitDynamicMemberReference(Microsoft::CodeAnalysis::Operations::IDynamicMemberReferenceOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitDynamicObjectCreation">
      <MemberSignature Language="C#" Value="public virtual TResult VisitDynamicObjectCreation (Microsoft.CodeAnalysis.Operations.IDynamicObjectCreationOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitDynamicObjectCreation(class Microsoft.CodeAnalysis.Operations.IDynamicObjectCreationOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitDynamicObjectCreation(Microsoft.CodeAnalysis.Operations.IDynamicObjectCreationOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitDynamicObjectCreation (operation As IDynamicObjectCreationOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitDynamicObjectCreation : Microsoft.CodeAnalysis.Operations.IDynamicObjectCreationOperation * 'Argument -&gt; 'Result&#xA;override this.VisitDynamicObjectCreation : Microsoft.CodeAnalysis.Operations.IDynamicObjectCreationOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitDynamicObjectCreation (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitDynamicObjectCreation(Microsoft::CodeAnalysis::Operations::IDynamicObjectCreationOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitDynamicObjectCreation(Microsoft::CodeAnalysis::Operations::IDynamicObjectCreationOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitDynamicObjectCreation(Microsoft::CodeAnalysis::Operations::IDynamicObjectCreationOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IDynamicObjectCreationOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitEmpty">
      <MemberSignature Language="C#" Value="public virtual TResult VisitEmpty (Microsoft.CodeAnalysis.Operations.IEmptyOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitEmpty(class Microsoft.CodeAnalysis.Operations.IEmptyOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitEmpty(Microsoft.CodeAnalysis.Operations.IEmptyOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitEmpty (operation As IEmptyOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitEmpty : Microsoft.CodeAnalysis.Operations.IEmptyOperation * 'Argument -&gt; 'Result&#xA;override this.VisitEmpty : Microsoft.CodeAnalysis.Operations.IEmptyOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitEmpty (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitEmpty(Microsoft::CodeAnalysis::Operations::IEmptyOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitEmpty(Microsoft::CodeAnalysis::Operations::IEmptyOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitEmpty(Microsoft::CodeAnalysis::Operations::IEmptyOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IEmptyOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitEnd">
      <MemberSignature Language="C#" Value="public virtual TResult VisitEnd (Microsoft.CodeAnalysis.Operations.IEndOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitEnd(class Microsoft.CodeAnalysis.Operations.IEndOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitEnd(Microsoft.CodeAnalysis.Operations.IEndOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitEnd (operation As IEndOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitEnd : Microsoft.CodeAnalysis.Operations.IEndOperation * 'Argument -&gt; 'Result&#xA;override this.VisitEnd : Microsoft.CodeAnalysis.Operations.IEndOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitEnd (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitEnd(Microsoft::CodeAnalysis::Operations::IEndOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitEnd(Microsoft::CodeAnalysis::Operations::IEndOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitEnd(Microsoft::CodeAnalysis::Operations::IEndOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IEndOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitEventAssignment">
      <MemberSignature Language="C#" Value="public virtual TResult VisitEventAssignment (Microsoft.CodeAnalysis.Operations.IEventAssignmentOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitEventAssignment(class Microsoft.CodeAnalysis.Operations.IEventAssignmentOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitEventAssignment(Microsoft.CodeAnalysis.Operations.IEventAssignmentOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitEventAssignment (operation As IEventAssignmentOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitEventAssignment : Microsoft.CodeAnalysis.Operations.IEventAssignmentOperation * 'Argument -&gt; 'Result&#xA;override this.VisitEventAssignment : Microsoft.CodeAnalysis.Operations.IEventAssignmentOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitEventAssignment (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitEventAssignment(Microsoft::CodeAnalysis::Operations::IEventAssignmentOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitEventAssignment(Microsoft::CodeAnalysis::Operations::IEventAssignmentOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitEventAssignment(Microsoft::CodeAnalysis::Operations::IEventAssignmentOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IEventAssignmentOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitEventReference">
      <MemberSignature Language="C#" Value="public virtual TResult VisitEventReference (Microsoft.CodeAnalysis.Operations.IEventReferenceOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitEventReference(class Microsoft.CodeAnalysis.Operations.IEventReferenceOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitEventReference(Microsoft.CodeAnalysis.Operations.IEventReferenceOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitEventReference (operation As IEventReferenceOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitEventReference : Microsoft.CodeAnalysis.Operations.IEventReferenceOperation * 'Argument -&gt; 'Result&#xA;override this.VisitEventReference : Microsoft.CodeAnalysis.Operations.IEventReferenceOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitEventReference (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitEventReference(Microsoft::CodeAnalysis::Operations::IEventReferenceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitEventReference(Microsoft::CodeAnalysis::Operations::IEventReferenceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitEventReference(Microsoft::CodeAnalysis::Operations::IEventReferenceOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IEventReferenceOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExpressionStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitExpressionStatement (Microsoft.CodeAnalysis.Operations.IExpressionStatementOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitExpressionStatement(class Microsoft.CodeAnalysis.Operations.IExpressionStatementOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitExpressionStatement(Microsoft.CodeAnalysis.Operations.IExpressionStatementOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitExpressionStatement (operation As IExpressionStatementOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitExpressionStatement : Microsoft.CodeAnalysis.Operations.IExpressionStatementOperation * 'Argument -&gt; 'Result&#xA;override this.VisitExpressionStatement : Microsoft.CodeAnalysis.Operations.IExpressionStatementOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitExpressionStatement (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitExpressionStatement(Microsoft::CodeAnalysis::Operations::IExpressionStatementOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitExpressionStatement(Microsoft::CodeAnalysis::Operations::IExpressionStatementOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitExpressionStatement(Microsoft::CodeAnalysis::Operations::IExpressionStatementOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IExpressionStatementOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFieldInitializer">
      <MemberSignature Language="C#" Value="public virtual TResult VisitFieldInitializer (Microsoft.CodeAnalysis.Operations.IFieldInitializerOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitFieldInitializer(class Microsoft.CodeAnalysis.Operations.IFieldInitializerOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitFieldInitializer(Microsoft.CodeAnalysis.Operations.IFieldInitializerOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitFieldInitializer (operation As IFieldInitializerOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitFieldInitializer : Microsoft.CodeAnalysis.Operations.IFieldInitializerOperation * 'Argument -&gt; 'Result&#xA;override this.VisitFieldInitializer : Microsoft.CodeAnalysis.Operations.IFieldInitializerOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitFieldInitializer (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitFieldInitializer(Microsoft::CodeAnalysis::Operations::IFieldInitializerOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitFieldInitializer(Microsoft::CodeAnalysis::Operations::IFieldInitializerOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitFieldInitializer(Microsoft::CodeAnalysis::Operations::IFieldInitializerOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IFieldInitializerOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFieldReference">
      <MemberSignature Language="C#" Value="public virtual TResult VisitFieldReference (Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitFieldReference(class Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitFieldReference(Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitFieldReference (operation As IFieldReferenceOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitFieldReference : Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation * 'Argument -&gt; 'Result&#xA;override this.VisitFieldReference : Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitFieldReference (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitFieldReference(Microsoft::CodeAnalysis::Operations::IFieldReferenceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitFieldReference(Microsoft::CodeAnalysis::Operations::IFieldReferenceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitFieldReference(Microsoft::CodeAnalysis::Operations::IFieldReferenceOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitForEachLoop">
      <MemberSignature Language="C#" Value="public virtual TResult VisitForEachLoop (Microsoft.CodeAnalysis.Operations.IForEachLoopOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitForEachLoop(class Microsoft.CodeAnalysis.Operations.IForEachLoopOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitForEachLoop(Microsoft.CodeAnalysis.Operations.IForEachLoopOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitForEachLoop (operation As IForEachLoopOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitForEachLoop : Microsoft.CodeAnalysis.Operations.IForEachLoopOperation * 'Argument -&gt; 'Result&#xA;override this.VisitForEachLoop : Microsoft.CodeAnalysis.Operations.IForEachLoopOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitForEachLoop (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitForEachLoop(Microsoft::CodeAnalysis::Operations::IForEachLoopOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitForEachLoop(Microsoft::CodeAnalysis::Operations::IForEachLoopOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitForEachLoop(Microsoft::CodeAnalysis::Operations::IForEachLoopOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IForEachLoopOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitForLoop">
      <MemberSignature Language="C#" Value="public virtual TResult VisitForLoop (Microsoft.CodeAnalysis.Operations.IForLoopOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitForLoop(class Microsoft.CodeAnalysis.Operations.IForLoopOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitForLoop(Microsoft.CodeAnalysis.Operations.IForLoopOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitForLoop (operation As IForLoopOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitForLoop : Microsoft.CodeAnalysis.Operations.IForLoopOperation * 'Argument -&gt; 'Result&#xA;override this.VisitForLoop : Microsoft.CodeAnalysis.Operations.IForLoopOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitForLoop (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitForLoop(Microsoft::CodeAnalysis::Operations::IForLoopOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitForLoop(Microsoft::CodeAnalysis::Operations::IForLoopOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitForLoop(Microsoft::CodeAnalysis::Operations::IForLoopOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IForLoopOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitForToLoop">
      <MemberSignature Language="C#" Value="public virtual TResult VisitForToLoop (Microsoft.CodeAnalysis.Operations.IForToLoopOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitForToLoop(class Microsoft.CodeAnalysis.Operations.IForToLoopOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitForToLoop(Microsoft.CodeAnalysis.Operations.IForToLoopOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitForToLoop (operation As IForToLoopOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitForToLoop : Microsoft.CodeAnalysis.Operations.IForToLoopOperation * 'Argument -&gt; 'Result&#xA;override this.VisitForToLoop : Microsoft.CodeAnalysis.Operations.IForToLoopOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitForToLoop (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitForToLoop(Microsoft::CodeAnalysis::Operations::IForToLoopOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitForToLoop(Microsoft::CodeAnalysis::Operations::IForToLoopOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitForToLoop(Microsoft::CodeAnalysis::Operations::IForToLoopOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IForToLoopOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIncrementOrDecrement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitIncrementOrDecrement (Microsoft.CodeAnalysis.Operations.IIncrementOrDecrementOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitIncrementOrDecrement(class Microsoft.CodeAnalysis.Operations.IIncrementOrDecrementOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitIncrementOrDecrement(Microsoft.CodeAnalysis.Operations.IIncrementOrDecrementOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitIncrementOrDecrement (operation As IIncrementOrDecrementOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitIncrementOrDecrement : Microsoft.CodeAnalysis.Operations.IIncrementOrDecrementOperation * 'Argument -&gt; 'Result&#xA;override this.VisitIncrementOrDecrement : Microsoft.CodeAnalysis.Operations.IIncrementOrDecrementOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitIncrementOrDecrement (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitIncrementOrDecrement(Microsoft::CodeAnalysis::Operations::IIncrementOrDecrementOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitIncrementOrDecrement(Microsoft::CodeAnalysis::Operations::IIncrementOrDecrementOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitIncrementOrDecrement(Microsoft::CodeAnalysis::Operations::IIncrementOrDecrementOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IIncrementOrDecrementOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInstanceReference">
      <MemberSignature Language="C#" Value="public virtual TResult VisitInstanceReference (Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitInstanceReference(class Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitInstanceReference(Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitInstanceReference (operation As IInstanceReferenceOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitInstanceReference : Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation * 'Argument -&gt; 'Result&#xA;override this.VisitInstanceReference : Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitInstanceReference (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitInstanceReference(Microsoft::CodeAnalysis::Operations::IInstanceReferenceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitInstanceReference(Microsoft::CodeAnalysis::Operations::IInstanceReferenceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitInstanceReference(Microsoft::CodeAnalysis::Operations::IInstanceReferenceOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInterpolatedString">
      <MemberSignature Language="C#" Value="public virtual TResult VisitInterpolatedString (Microsoft.CodeAnalysis.Operations.IInterpolatedStringOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitInterpolatedString(class Microsoft.CodeAnalysis.Operations.IInterpolatedStringOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitInterpolatedString(Microsoft.CodeAnalysis.Operations.IInterpolatedStringOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitInterpolatedString (operation As IInterpolatedStringOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitInterpolatedString : Microsoft.CodeAnalysis.Operations.IInterpolatedStringOperation * 'Argument -&gt; 'Result&#xA;override this.VisitInterpolatedString : Microsoft.CodeAnalysis.Operations.IInterpolatedStringOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitInterpolatedString (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitInterpolatedString(Microsoft::CodeAnalysis::Operations::IInterpolatedStringOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitInterpolatedString(Microsoft::CodeAnalysis::Operations::IInterpolatedStringOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitInterpolatedString(Microsoft::CodeAnalysis::Operations::IInterpolatedStringOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IInterpolatedStringOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInterpolatedStringText">
      <MemberSignature Language="C#" Value="public virtual TResult VisitInterpolatedStringText (Microsoft.CodeAnalysis.Operations.IInterpolatedStringTextOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitInterpolatedStringText(class Microsoft.CodeAnalysis.Operations.IInterpolatedStringTextOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitInterpolatedStringText(Microsoft.CodeAnalysis.Operations.IInterpolatedStringTextOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitInterpolatedStringText (operation As IInterpolatedStringTextOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitInterpolatedStringText : Microsoft.CodeAnalysis.Operations.IInterpolatedStringTextOperation * 'Argument -&gt; 'Result&#xA;override this.VisitInterpolatedStringText : Microsoft.CodeAnalysis.Operations.IInterpolatedStringTextOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitInterpolatedStringText (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitInterpolatedStringText(Microsoft::CodeAnalysis::Operations::IInterpolatedStringTextOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitInterpolatedStringText(Microsoft::CodeAnalysis::Operations::IInterpolatedStringTextOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitInterpolatedStringText(Microsoft::CodeAnalysis::Operations::IInterpolatedStringTextOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IInterpolatedStringTextOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInterpolation">
      <MemberSignature Language="C#" Value="public virtual TResult VisitInterpolation (Microsoft.CodeAnalysis.Operations.IInterpolationOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitInterpolation(class Microsoft.CodeAnalysis.Operations.IInterpolationOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitInterpolation(Microsoft.CodeAnalysis.Operations.IInterpolationOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitInterpolation (operation As IInterpolationOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitInterpolation : Microsoft.CodeAnalysis.Operations.IInterpolationOperation * 'Argument -&gt; 'Result&#xA;override this.VisitInterpolation : Microsoft.CodeAnalysis.Operations.IInterpolationOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitInterpolation (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitInterpolation(Microsoft::CodeAnalysis::Operations::IInterpolationOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitInterpolation(Microsoft::CodeAnalysis::Operations::IInterpolationOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitInterpolation(Microsoft::CodeAnalysis::Operations::IInterpolationOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IInterpolationOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInvalid">
      <MemberSignature Language="C#" Value="public virtual TResult VisitInvalid (Microsoft.CodeAnalysis.Operations.IInvalidOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitInvalid(class Microsoft.CodeAnalysis.Operations.IInvalidOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitInvalid(Microsoft.CodeAnalysis.Operations.IInvalidOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitInvalid (operation As IInvalidOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitInvalid : Microsoft.CodeAnalysis.Operations.IInvalidOperation * 'Argument -&gt; 'Result&#xA;override this.VisitInvalid : Microsoft.CodeAnalysis.Operations.IInvalidOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitInvalid (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitInvalid(Microsoft::CodeAnalysis::Operations::IInvalidOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitInvalid(Microsoft::CodeAnalysis::Operations::IInvalidOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitInvalid(Microsoft::CodeAnalysis::Operations::IInvalidOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IInvalidOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInvocation">
      <MemberSignature Language="C#" Value="public virtual TResult VisitInvocation (Microsoft.CodeAnalysis.Operations.IInvocationOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitInvocation(class Microsoft.CodeAnalysis.Operations.IInvocationOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitInvocation(Microsoft.CodeAnalysis.Operations.IInvocationOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitInvocation (operation As IInvocationOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitInvocation : Microsoft.CodeAnalysis.Operations.IInvocationOperation * 'Argument -&gt; 'Result&#xA;override this.VisitInvocation : Microsoft.CodeAnalysis.Operations.IInvocationOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitInvocation (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitInvocation(Microsoft::CodeAnalysis::Operations::IInvocationOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitInvocation(Microsoft::CodeAnalysis::Operations::IInvocationOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitInvocation(Microsoft::CodeAnalysis::Operations::IInvocationOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IInvocationOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIsPattern">
      <MemberSignature Language="C#" Value="public virtual TResult VisitIsPattern (Microsoft.CodeAnalysis.Operations.IIsPatternOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitIsPattern(class Microsoft.CodeAnalysis.Operations.IIsPatternOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitIsPattern(Microsoft.CodeAnalysis.Operations.IIsPatternOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitIsPattern (operation As IIsPatternOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitIsPattern : Microsoft.CodeAnalysis.Operations.IIsPatternOperation * 'Argument -&gt; 'Result&#xA;override this.VisitIsPattern : Microsoft.CodeAnalysis.Operations.IIsPatternOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitIsPattern (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitIsPattern(Microsoft::CodeAnalysis::Operations::IIsPatternOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitIsPattern(Microsoft::CodeAnalysis::Operations::IIsPatternOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitIsPattern(Microsoft::CodeAnalysis::Operations::IIsPatternOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IIsPatternOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIsType">
      <MemberSignature Language="C#" Value="public virtual TResult VisitIsType (Microsoft.CodeAnalysis.Operations.IIsTypeOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitIsType(class Microsoft.CodeAnalysis.Operations.IIsTypeOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitIsType(Microsoft.CodeAnalysis.Operations.IIsTypeOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitIsType (operation As IIsTypeOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitIsType : Microsoft.CodeAnalysis.Operations.IIsTypeOperation * 'Argument -&gt; 'Result&#xA;override this.VisitIsType : Microsoft.CodeAnalysis.Operations.IIsTypeOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitIsType (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitIsType(Microsoft::CodeAnalysis::Operations::IIsTypeOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitIsType(Microsoft::CodeAnalysis::Operations::IIsTypeOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitIsType(Microsoft::CodeAnalysis::Operations::IIsTypeOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IIsTypeOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLabeled">
      <MemberSignature Language="C#" Value="public virtual TResult VisitLabeled (Microsoft.CodeAnalysis.Operations.ILabeledOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitLabeled(class Microsoft.CodeAnalysis.Operations.ILabeledOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitLabeled(Microsoft.CodeAnalysis.Operations.ILabeledOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitLabeled (operation As ILabeledOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitLabeled : Microsoft.CodeAnalysis.Operations.ILabeledOperation * 'Argument -&gt; 'Result&#xA;override this.VisitLabeled : Microsoft.CodeAnalysis.Operations.ILabeledOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitLabeled (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitLabeled(Microsoft::CodeAnalysis::Operations::ILabeledOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitLabeled(Microsoft::CodeAnalysis::Operations::ILabeledOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitLabeled(Microsoft::CodeAnalysis::Operations::ILabeledOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.ILabeledOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLiteral">
      <MemberSignature Language="C#" Value="public virtual TResult VisitLiteral (Microsoft.CodeAnalysis.Operations.ILiteralOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitLiteral(class Microsoft.CodeAnalysis.Operations.ILiteralOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitLiteral(Microsoft.CodeAnalysis.Operations.ILiteralOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitLiteral (operation As ILiteralOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitLiteral : Microsoft.CodeAnalysis.Operations.ILiteralOperation * 'Argument -&gt; 'Result&#xA;override this.VisitLiteral : Microsoft.CodeAnalysis.Operations.ILiteralOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitLiteral (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitLiteral(Microsoft::CodeAnalysis::Operations::ILiteralOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitLiteral(Microsoft::CodeAnalysis::Operations::ILiteralOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitLiteral(Microsoft::CodeAnalysis::Operations::ILiteralOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.ILiteralOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLocalFunction">
      <MemberSignature Language="C#" Value="public virtual TResult VisitLocalFunction (Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitLocalFunction(class Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitLocalFunction(Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitLocalFunction (operation As ILocalFunctionOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitLocalFunction : Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation * 'Argument -&gt; 'Result&#xA;override this.VisitLocalFunction : Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitLocalFunction (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitLocalFunction(Microsoft::CodeAnalysis::Operations::ILocalFunctionOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitLocalFunction(Microsoft::CodeAnalysis::Operations::ILocalFunctionOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitLocalFunction(Microsoft::CodeAnalysis::Operations::ILocalFunctionOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLocalReference">
      <MemberSignature Language="C#" Value="public virtual TResult VisitLocalReference (Microsoft.CodeAnalysis.Operations.ILocalReferenceOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitLocalReference(class Microsoft.CodeAnalysis.Operations.ILocalReferenceOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitLocalReference(Microsoft.CodeAnalysis.Operations.ILocalReferenceOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitLocalReference (operation As ILocalReferenceOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitLocalReference : Microsoft.CodeAnalysis.Operations.ILocalReferenceOperation * 'Argument -&gt; 'Result&#xA;override this.VisitLocalReference : Microsoft.CodeAnalysis.Operations.ILocalReferenceOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitLocalReference (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitLocalReference(Microsoft::CodeAnalysis::Operations::ILocalReferenceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitLocalReference(Microsoft::CodeAnalysis::Operations::ILocalReferenceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitLocalReference(Microsoft::CodeAnalysis::Operations::ILocalReferenceOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.ILocalReferenceOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLock">
      <MemberSignature Language="C#" Value="public virtual TResult VisitLock (Microsoft.CodeAnalysis.Operations.ILockOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitLock(class Microsoft.CodeAnalysis.Operations.ILockOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitLock(Microsoft.CodeAnalysis.Operations.ILockOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitLock (operation As ILockOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitLock : Microsoft.CodeAnalysis.Operations.ILockOperation * 'Argument -&gt; 'Result&#xA;override this.VisitLock : Microsoft.CodeAnalysis.Operations.ILockOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitLock (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitLock(Microsoft::CodeAnalysis::Operations::ILockOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitLock(Microsoft::CodeAnalysis::Operations::ILockOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitLock(Microsoft::CodeAnalysis::Operations::ILockOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.ILockOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitMemberInitializer">
      <MemberSignature Language="C#" Value="public virtual TResult VisitMemberInitializer (Microsoft.CodeAnalysis.Operations.IMemberInitializerOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitMemberInitializer(class Microsoft.CodeAnalysis.Operations.IMemberInitializerOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitMemberInitializer(Microsoft.CodeAnalysis.Operations.IMemberInitializerOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitMemberInitializer (operation As IMemberInitializerOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitMemberInitializer : Microsoft.CodeAnalysis.Operations.IMemberInitializerOperation * 'Argument -&gt; 'Result&#xA;override this.VisitMemberInitializer : Microsoft.CodeAnalysis.Operations.IMemberInitializerOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitMemberInitializer (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitMemberInitializer(Microsoft::CodeAnalysis::Operations::IMemberInitializerOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitMemberInitializer(Microsoft::CodeAnalysis::Operations::IMemberInitializerOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitMemberInitializer(Microsoft::CodeAnalysis::Operations::IMemberInitializerOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IMemberInitializerOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitMethodReference">
      <MemberSignature Language="C#" Value="public virtual TResult VisitMethodReference (Microsoft.CodeAnalysis.Operations.IMethodReferenceOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitMethodReference(class Microsoft.CodeAnalysis.Operations.IMethodReferenceOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitMethodReference(Microsoft.CodeAnalysis.Operations.IMethodReferenceOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitMethodReference (operation As IMethodReferenceOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitMethodReference : Microsoft.CodeAnalysis.Operations.IMethodReferenceOperation * 'Argument -&gt; 'Result&#xA;override this.VisitMethodReference : Microsoft.CodeAnalysis.Operations.IMethodReferenceOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitMethodReference (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitMethodReference(Microsoft::CodeAnalysis::Operations::IMethodReferenceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitMethodReference(Microsoft::CodeAnalysis::Operations::IMethodReferenceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitMethodReference(Microsoft::CodeAnalysis::Operations::IMethodReferenceOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IMethodReferenceOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitNameOf">
      <MemberSignature Language="C#" Value="public virtual TResult VisitNameOf (Microsoft.CodeAnalysis.Operations.INameOfOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitNameOf(class Microsoft.CodeAnalysis.Operations.INameOfOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitNameOf(Microsoft.CodeAnalysis.Operations.INameOfOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitNameOf (operation As INameOfOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitNameOf : Microsoft.CodeAnalysis.Operations.INameOfOperation * 'Argument -&gt; 'Result&#xA;override this.VisitNameOf : Microsoft.CodeAnalysis.Operations.INameOfOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitNameOf (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitNameOf(Microsoft::CodeAnalysis::Operations::INameOfOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitNameOf(Microsoft::CodeAnalysis::Operations::INameOfOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitNameOf(Microsoft::CodeAnalysis::Operations::INameOfOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.INameOfOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitObjectCreation">
      <MemberSignature Language="C#" Value="public virtual TResult VisitObjectCreation (Microsoft.CodeAnalysis.Operations.IObjectCreationOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitObjectCreation(class Microsoft.CodeAnalysis.Operations.IObjectCreationOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitObjectCreation(Microsoft.CodeAnalysis.Operations.IObjectCreationOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitObjectCreation (operation As IObjectCreationOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitObjectCreation : Microsoft.CodeAnalysis.Operations.IObjectCreationOperation * 'Argument -&gt; 'Result&#xA;override this.VisitObjectCreation : Microsoft.CodeAnalysis.Operations.IObjectCreationOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitObjectCreation (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitObjectCreation(Microsoft::CodeAnalysis::Operations::IObjectCreationOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitObjectCreation(Microsoft::CodeAnalysis::Operations::IObjectCreationOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitObjectCreation(Microsoft::CodeAnalysis::Operations::IObjectCreationOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IObjectCreationOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitObjectOrCollectionInitializer">
      <MemberSignature Language="C#" Value="public virtual TResult VisitObjectOrCollectionInitializer (Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitObjectOrCollectionInitializer(class Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitObjectOrCollectionInitializer(Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitObjectOrCollectionInitializer (operation As IObjectOrCollectionInitializerOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitObjectOrCollectionInitializer : Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation * 'Argument -&gt; 'Result&#xA;override this.VisitObjectOrCollectionInitializer : Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitObjectOrCollectionInitializer (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitObjectOrCollectionInitializer(Microsoft::CodeAnalysis::Operations::IObjectOrCollectionInitializerOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitObjectOrCollectionInitializer(Microsoft::CodeAnalysis::Operations::IObjectOrCollectionInitializerOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitObjectOrCollectionInitializer(Microsoft::CodeAnalysis::Operations::IObjectOrCollectionInitializerOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitOmittedArgument">
      <MemberSignature Language="C#" Value="public virtual TResult VisitOmittedArgument (Microsoft.CodeAnalysis.Operations.IOmittedArgumentOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitOmittedArgument(class Microsoft.CodeAnalysis.Operations.IOmittedArgumentOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitOmittedArgument(Microsoft.CodeAnalysis.Operations.IOmittedArgumentOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitOmittedArgument (operation As IOmittedArgumentOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitOmittedArgument : Microsoft.CodeAnalysis.Operations.IOmittedArgumentOperation * 'Argument -&gt; 'Result&#xA;override this.VisitOmittedArgument : Microsoft.CodeAnalysis.Operations.IOmittedArgumentOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitOmittedArgument (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitOmittedArgument(Microsoft::CodeAnalysis::Operations::IOmittedArgumentOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitOmittedArgument(Microsoft::CodeAnalysis::Operations::IOmittedArgumentOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitOmittedArgument(Microsoft::CodeAnalysis::Operations::IOmittedArgumentOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IOmittedArgumentOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitParameterInitializer">
      <MemberSignature Language="C#" Value="public virtual TResult VisitParameterInitializer (Microsoft.CodeAnalysis.Operations.IParameterInitializerOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitParameterInitializer(class Microsoft.CodeAnalysis.Operations.IParameterInitializerOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitParameterInitializer(Microsoft.CodeAnalysis.Operations.IParameterInitializerOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitParameterInitializer (operation As IParameterInitializerOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitParameterInitializer : Microsoft.CodeAnalysis.Operations.IParameterInitializerOperation * 'Argument -&gt; 'Result&#xA;override this.VisitParameterInitializer : Microsoft.CodeAnalysis.Operations.IParameterInitializerOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitParameterInitializer (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitParameterInitializer(Microsoft::CodeAnalysis::Operations::IParameterInitializerOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitParameterInitializer(Microsoft::CodeAnalysis::Operations::IParameterInitializerOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitParameterInitializer(Microsoft::CodeAnalysis::Operations::IParameterInitializerOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IParameterInitializerOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitParameterReference">
      <MemberSignature Language="C#" Value="public virtual TResult VisitParameterReference (Microsoft.CodeAnalysis.Operations.IParameterReferenceOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitParameterReference(class Microsoft.CodeAnalysis.Operations.IParameterReferenceOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitParameterReference(Microsoft.CodeAnalysis.Operations.IParameterReferenceOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitParameterReference (operation As IParameterReferenceOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitParameterReference : Microsoft.CodeAnalysis.Operations.IParameterReferenceOperation * 'Argument -&gt; 'Result&#xA;override this.VisitParameterReference : Microsoft.CodeAnalysis.Operations.IParameterReferenceOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitParameterReference (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitParameterReference(Microsoft::CodeAnalysis::Operations::IParameterReferenceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitParameterReference(Microsoft::CodeAnalysis::Operations::IParameterReferenceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitParameterReference(Microsoft::CodeAnalysis::Operations::IParameterReferenceOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IParameterReferenceOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitParenthesized">
      <MemberSignature Language="C#" Value="public virtual TResult VisitParenthesized (Microsoft.CodeAnalysis.Operations.IParenthesizedOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitParenthesized(class Microsoft.CodeAnalysis.Operations.IParenthesizedOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitParenthesized(Microsoft.CodeAnalysis.Operations.IParenthesizedOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitParenthesized (operation As IParenthesizedOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitParenthesized : Microsoft.CodeAnalysis.Operations.IParenthesizedOperation * 'Argument -&gt; 'Result&#xA;override this.VisitParenthesized : Microsoft.CodeAnalysis.Operations.IParenthesizedOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitParenthesized (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitParenthesized(Microsoft::CodeAnalysis::Operations::IParenthesizedOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitParenthesized(Microsoft::CodeAnalysis::Operations::IParenthesizedOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitParenthesized(Microsoft::CodeAnalysis::Operations::IParenthesizedOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IParenthesizedOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitPatternCaseClause">
      <MemberSignature Language="C#" Value="public virtual TResult VisitPatternCaseClause (Microsoft.CodeAnalysis.Operations.IPatternCaseClauseOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitPatternCaseClause(class Microsoft.CodeAnalysis.Operations.IPatternCaseClauseOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitPatternCaseClause(Microsoft.CodeAnalysis.Operations.IPatternCaseClauseOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitPatternCaseClause (operation As IPatternCaseClauseOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitPatternCaseClause : Microsoft.CodeAnalysis.Operations.IPatternCaseClauseOperation * 'Argument -&gt; 'Result&#xA;override this.VisitPatternCaseClause : Microsoft.CodeAnalysis.Operations.IPatternCaseClauseOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitPatternCaseClause (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitPatternCaseClause(Microsoft::CodeAnalysis::Operations::IPatternCaseClauseOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitPatternCaseClause(Microsoft::CodeAnalysis::Operations::IPatternCaseClauseOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitPatternCaseClause(Microsoft::CodeAnalysis::Operations::IPatternCaseClauseOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IPatternCaseClauseOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitPropertyInitializer">
      <MemberSignature Language="C#" Value="public virtual TResult VisitPropertyInitializer (Microsoft.CodeAnalysis.Operations.IPropertyInitializerOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitPropertyInitializer(class Microsoft.CodeAnalysis.Operations.IPropertyInitializerOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitPropertyInitializer(Microsoft.CodeAnalysis.Operations.IPropertyInitializerOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitPropertyInitializer (operation As IPropertyInitializerOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitPropertyInitializer : Microsoft.CodeAnalysis.Operations.IPropertyInitializerOperation * 'Argument -&gt; 'Result&#xA;override this.VisitPropertyInitializer : Microsoft.CodeAnalysis.Operations.IPropertyInitializerOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitPropertyInitializer (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitPropertyInitializer(Microsoft::CodeAnalysis::Operations::IPropertyInitializerOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitPropertyInitializer(Microsoft::CodeAnalysis::Operations::IPropertyInitializerOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitPropertyInitializer(Microsoft::CodeAnalysis::Operations::IPropertyInitializerOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IPropertyInitializerOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitPropertyReference">
      <MemberSignature Language="C#" Value="public virtual TResult VisitPropertyReference (Microsoft.CodeAnalysis.Operations.IPropertyReferenceOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitPropertyReference(class Microsoft.CodeAnalysis.Operations.IPropertyReferenceOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitPropertyReference(Microsoft.CodeAnalysis.Operations.IPropertyReferenceOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitPropertyReference (operation As IPropertyReferenceOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitPropertyReference : Microsoft.CodeAnalysis.Operations.IPropertyReferenceOperation * 'Argument -&gt; 'Result&#xA;override this.VisitPropertyReference : Microsoft.CodeAnalysis.Operations.IPropertyReferenceOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitPropertyReference (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitPropertyReference(Microsoft::CodeAnalysis::Operations::IPropertyReferenceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitPropertyReference(Microsoft::CodeAnalysis::Operations::IPropertyReferenceOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitPropertyReference(Microsoft::CodeAnalysis::Operations::IPropertyReferenceOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IPropertyReferenceOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitRaiseEvent">
      <MemberSignature Language="C#" Value="public virtual TResult VisitRaiseEvent (Microsoft.CodeAnalysis.Operations.IRaiseEventOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitRaiseEvent(class Microsoft.CodeAnalysis.Operations.IRaiseEventOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitRaiseEvent(Microsoft.CodeAnalysis.Operations.IRaiseEventOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitRaiseEvent (operation As IRaiseEventOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitRaiseEvent : Microsoft.CodeAnalysis.Operations.IRaiseEventOperation * 'Argument -&gt; 'Result&#xA;override this.VisitRaiseEvent : Microsoft.CodeAnalysis.Operations.IRaiseEventOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitRaiseEvent (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitRaiseEvent(Microsoft::CodeAnalysis::Operations::IRaiseEventOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitRaiseEvent(Microsoft::CodeAnalysis::Operations::IRaiseEventOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitRaiseEvent(Microsoft::CodeAnalysis::Operations::IRaiseEventOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IRaiseEventOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitRangeCaseClause">
      <MemberSignature Language="C#" Value="public virtual TResult VisitRangeCaseClause (Microsoft.CodeAnalysis.Operations.IRangeCaseClauseOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitRangeCaseClause(class Microsoft.CodeAnalysis.Operations.IRangeCaseClauseOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitRangeCaseClause(Microsoft.CodeAnalysis.Operations.IRangeCaseClauseOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitRangeCaseClause (operation As IRangeCaseClauseOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitRangeCaseClause : Microsoft.CodeAnalysis.Operations.IRangeCaseClauseOperation * 'Argument -&gt; 'Result&#xA;override this.VisitRangeCaseClause : Microsoft.CodeAnalysis.Operations.IRangeCaseClauseOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitRangeCaseClause (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitRangeCaseClause(Microsoft::CodeAnalysis::Operations::IRangeCaseClauseOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitRangeCaseClause(Microsoft::CodeAnalysis::Operations::IRangeCaseClauseOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitRangeCaseClause(Microsoft::CodeAnalysis::Operations::IRangeCaseClauseOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IRangeCaseClauseOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitRelationalCaseClause">
      <MemberSignature Language="C#" Value="public virtual TResult VisitRelationalCaseClause (Microsoft.CodeAnalysis.Operations.IRelationalCaseClauseOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitRelationalCaseClause(class Microsoft.CodeAnalysis.Operations.IRelationalCaseClauseOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitRelationalCaseClause(Microsoft.CodeAnalysis.Operations.IRelationalCaseClauseOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitRelationalCaseClause (operation As IRelationalCaseClauseOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitRelationalCaseClause : Microsoft.CodeAnalysis.Operations.IRelationalCaseClauseOperation * 'Argument -&gt; 'Result&#xA;override this.VisitRelationalCaseClause : Microsoft.CodeAnalysis.Operations.IRelationalCaseClauseOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitRelationalCaseClause (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitRelationalCaseClause(Microsoft::CodeAnalysis::Operations::IRelationalCaseClauseOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitRelationalCaseClause(Microsoft::CodeAnalysis::Operations::IRelationalCaseClauseOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitRelationalCaseClause(Microsoft::CodeAnalysis::Operations::IRelationalCaseClauseOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IRelationalCaseClauseOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitReturn">
      <MemberSignature Language="C#" Value="public virtual TResult VisitReturn (Microsoft.CodeAnalysis.Operations.IReturnOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitReturn(class Microsoft.CodeAnalysis.Operations.IReturnOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitReturn(Microsoft.CodeAnalysis.Operations.IReturnOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitReturn (operation As IReturnOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitReturn : Microsoft.CodeAnalysis.Operations.IReturnOperation * 'Argument -&gt; 'Result&#xA;override this.VisitReturn : Microsoft.CodeAnalysis.Operations.IReturnOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitReturn (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitReturn(Microsoft::CodeAnalysis::Operations::IReturnOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitReturn(Microsoft::CodeAnalysis::Operations::IReturnOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitReturn(Microsoft::CodeAnalysis::Operations::IReturnOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IReturnOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSimpleAssignment">
      <MemberSignature Language="C#" Value="public virtual TResult VisitSimpleAssignment (Microsoft.CodeAnalysis.Operations.ISimpleAssignmentOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitSimpleAssignment(class Microsoft.CodeAnalysis.Operations.ISimpleAssignmentOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitSimpleAssignment(Microsoft.CodeAnalysis.Operations.ISimpleAssignmentOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitSimpleAssignment (operation As ISimpleAssignmentOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitSimpleAssignment : Microsoft.CodeAnalysis.Operations.ISimpleAssignmentOperation * 'Argument -&gt; 'Result&#xA;override this.VisitSimpleAssignment : Microsoft.CodeAnalysis.Operations.ISimpleAssignmentOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitSimpleAssignment (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitSimpleAssignment(Microsoft::CodeAnalysis::Operations::ISimpleAssignmentOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitSimpleAssignment(Microsoft::CodeAnalysis::Operations::ISimpleAssignmentOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitSimpleAssignment(Microsoft::CodeAnalysis::Operations::ISimpleAssignmentOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.ISimpleAssignmentOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSingleValueCaseClause">
      <MemberSignature Language="C#" Value="public virtual TResult VisitSingleValueCaseClause (Microsoft.CodeAnalysis.Operations.ISingleValueCaseClauseOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitSingleValueCaseClause(class Microsoft.CodeAnalysis.Operations.ISingleValueCaseClauseOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitSingleValueCaseClause(Microsoft.CodeAnalysis.Operations.ISingleValueCaseClauseOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitSingleValueCaseClause (operation As ISingleValueCaseClauseOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitSingleValueCaseClause : Microsoft.CodeAnalysis.Operations.ISingleValueCaseClauseOperation * 'Argument -&gt; 'Result&#xA;override this.VisitSingleValueCaseClause : Microsoft.CodeAnalysis.Operations.ISingleValueCaseClauseOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitSingleValueCaseClause (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitSingleValueCaseClause(Microsoft::CodeAnalysis::Operations::ISingleValueCaseClauseOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitSingleValueCaseClause(Microsoft::CodeAnalysis::Operations::ISingleValueCaseClauseOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitSingleValueCaseClause(Microsoft::CodeAnalysis::Operations::ISingleValueCaseClauseOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.ISingleValueCaseClauseOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSizeOf">
      <MemberSignature Language="C#" Value="public virtual TResult VisitSizeOf (Microsoft.CodeAnalysis.Operations.ISizeOfOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitSizeOf(class Microsoft.CodeAnalysis.Operations.ISizeOfOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitSizeOf(Microsoft.CodeAnalysis.Operations.ISizeOfOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitSizeOf (operation As ISizeOfOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitSizeOf : Microsoft.CodeAnalysis.Operations.ISizeOfOperation * 'Argument -&gt; 'Result&#xA;override this.VisitSizeOf : Microsoft.CodeAnalysis.Operations.ISizeOfOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitSizeOf (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitSizeOf(Microsoft::CodeAnalysis::Operations::ISizeOfOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitSizeOf(Microsoft::CodeAnalysis::Operations::ISizeOfOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitSizeOf(Microsoft::CodeAnalysis::Operations::ISizeOfOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.ISizeOfOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitStop">
      <MemberSignature Language="C#" Value="public virtual TResult VisitStop (Microsoft.CodeAnalysis.Operations.IStopOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitStop(class Microsoft.CodeAnalysis.Operations.IStopOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitStop(Microsoft.CodeAnalysis.Operations.IStopOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitStop (operation As IStopOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitStop : Microsoft.CodeAnalysis.Operations.IStopOperation * 'Argument -&gt; 'Result&#xA;override this.VisitStop : Microsoft.CodeAnalysis.Operations.IStopOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitStop (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitStop(Microsoft::CodeAnalysis::Operations::IStopOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitStop(Microsoft::CodeAnalysis::Operations::IStopOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitStop(Microsoft::CodeAnalysis::Operations::IStopOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IStopOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSwitch">
      <MemberSignature Language="C#" Value="public virtual TResult VisitSwitch (Microsoft.CodeAnalysis.Operations.ISwitchOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitSwitch(class Microsoft.CodeAnalysis.Operations.ISwitchOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitSwitch(Microsoft.CodeAnalysis.Operations.ISwitchOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitSwitch (operation As ISwitchOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitSwitch : Microsoft.CodeAnalysis.Operations.ISwitchOperation * 'Argument -&gt; 'Result&#xA;override this.VisitSwitch : Microsoft.CodeAnalysis.Operations.ISwitchOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitSwitch (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitSwitch(Microsoft::CodeAnalysis::Operations::ISwitchOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitSwitch(Microsoft::CodeAnalysis::Operations::ISwitchOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitSwitch(Microsoft::CodeAnalysis::Operations::ISwitchOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.ISwitchOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSwitchCase">
      <MemberSignature Language="C#" Value="public virtual TResult VisitSwitchCase (Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitSwitchCase(class Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitSwitchCase(Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitSwitchCase (operation As ISwitchCaseOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitSwitchCase : Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation * 'Argument -&gt; 'Result&#xA;override this.VisitSwitchCase : Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitSwitchCase (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitSwitchCase(Microsoft::CodeAnalysis::Operations::ISwitchCaseOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitSwitchCase(Microsoft::CodeAnalysis::Operations::ISwitchCaseOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitSwitchCase(Microsoft::CodeAnalysis::Operations::ISwitchCaseOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitThrow">
      <MemberSignature Language="C#" Value="public virtual TResult VisitThrow (Microsoft.CodeAnalysis.Operations.IThrowOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitThrow(class Microsoft.CodeAnalysis.Operations.IThrowOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitThrow(Microsoft.CodeAnalysis.Operations.IThrowOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitThrow (operation As IThrowOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitThrow : Microsoft.CodeAnalysis.Operations.IThrowOperation * 'Argument -&gt; 'Result&#xA;override this.VisitThrow : Microsoft.CodeAnalysis.Operations.IThrowOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitThrow (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitThrow(Microsoft::CodeAnalysis::Operations::IThrowOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitThrow(Microsoft::CodeAnalysis::Operations::IThrowOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitThrow(Microsoft::CodeAnalysis::Operations::IThrowOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IThrowOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTranslatedQuery">
      <MemberSignature Language="C#" Value="public virtual TResult VisitTranslatedQuery (Microsoft.CodeAnalysis.Operations.ITranslatedQueryOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitTranslatedQuery(class Microsoft.CodeAnalysis.Operations.ITranslatedQueryOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitTranslatedQuery(Microsoft.CodeAnalysis.Operations.ITranslatedQueryOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitTranslatedQuery (operation As ITranslatedQueryOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitTranslatedQuery : Microsoft.CodeAnalysis.Operations.ITranslatedQueryOperation * 'Argument -&gt; 'Result&#xA;override this.VisitTranslatedQuery : Microsoft.CodeAnalysis.Operations.ITranslatedQueryOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitTranslatedQuery (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitTranslatedQuery(Microsoft::CodeAnalysis::Operations::ITranslatedQueryOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitTranslatedQuery(Microsoft::CodeAnalysis::Operations::ITranslatedQueryOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitTranslatedQuery(Microsoft::CodeAnalysis::Operations::ITranslatedQueryOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.ITranslatedQueryOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTry">
      <MemberSignature Language="C#" Value="public virtual TResult VisitTry (Microsoft.CodeAnalysis.Operations.ITryOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitTry(class Microsoft.CodeAnalysis.Operations.ITryOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitTry(Microsoft.CodeAnalysis.Operations.ITryOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitTry (operation As ITryOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitTry : Microsoft.CodeAnalysis.Operations.ITryOperation * 'Argument -&gt; 'Result&#xA;override this.VisitTry : Microsoft.CodeAnalysis.Operations.ITryOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitTry (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitTry(Microsoft::CodeAnalysis::Operations::ITryOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitTry(Microsoft::CodeAnalysis::Operations::ITryOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitTry(Microsoft::CodeAnalysis::Operations::ITryOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.ITryOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTuple">
      <MemberSignature Language="C#" Value="public virtual TResult VisitTuple (Microsoft.CodeAnalysis.Operations.ITupleOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitTuple(class Microsoft.CodeAnalysis.Operations.ITupleOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitTuple(Microsoft.CodeAnalysis.Operations.ITupleOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitTuple (operation As ITupleOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitTuple : Microsoft.CodeAnalysis.Operations.ITupleOperation * 'Argument -&gt; 'Result&#xA;override this.VisitTuple : Microsoft.CodeAnalysis.Operations.ITupleOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitTuple (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitTuple(Microsoft::CodeAnalysis::Operations::ITupleOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitTuple(Microsoft::CodeAnalysis::Operations::ITupleOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitTuple(Microsoft::CodeAnalysis::Operations::ITupleOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.ITupleOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTypeOf">
      <MemberSignature Language="C#" Value="public virtual TResult VisitTypeOf (Microsoft.CodeAnalysis.Operations.ITypeOfOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitTypeOf(class Microsoft.CodeAnalysis.Operations.ITypeOfOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitTypeOf(Microsoft.CodeAnalysis.Operations.ITypeOfOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitTypeOf (operation As ITypeOfOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitTypeOf : Microsoft.CodeAnalysis.Operations.ITypeOfOperation * 'Argument -&gt; 'Result&#xA;override this.VisitTypeOf : Microsoft.CodeAnalysis.Operations.ITypeOfOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitTypeOf (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitTypeOf(Microsoft::CodeAnalysis::Operations::ITypeOfOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitTypeOf(Microsoft::CodeAnalysis::Operations::ITypeOfOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitTypeOf(Microsoft::CodeAnalysis::Operations::ITypeOfOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.ITypeOfOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTypeParameterObjectCreation">
      <MemberSignature Language="C#" Value="public virtual TResult VisitTypeParameterObjectCreation (Microsoft.CodeAnalysis.Operations.ITypeParameterObjectCreationOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitTypeParameterObjectCreation(class Microsoft.CodeAnalysis.Operations.ITypeParameterObjectCreationOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitTypeParameterObjectCreation(Microsoft.CodeAnalysis.Operations.ITypeParameterObjectCreationOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitTypeParameterObjectCreation (operation As ITypeParameterObjectCreationOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitTypeParameterObjectCreation : Microsoft.CodeAnalysis.Operations.ITypeParameterObjectCreationOperation * 'Argument -&gt; 'Result&#xA;override this.VisitTypeParameterObjectCreation : Microsoft.CodeAnalysis.Operations.ITypeParameterObjectCreationOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitTypeParameterObjectCreation (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitTypeParameterObjectCreation(Microsoft::CodeAnalysis::Operations::ITypeParameterObjectCreationOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitTypeParameterObjectCreation(Microsoft::CodeAnalysis::Operations::ITypeParameterObjectCreationOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitTypeParameterObjectCreation(Microsoft::CodeAnalysis::Operations::ITypeParameterObjectCreationOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.ITypeParameterObjectCreationOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitUnaryOperator">
      <MemberSignature Language="C#" Value="public virtual TResult VisitUnaryOperator (Microsoft.CodeAnalysis.Operations.IUnaryOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitUnaryOperator(class Microsoft.CodeAnalysis.Operations.IUnaryOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitUnaryOperator(Microsoft.CodeAnalysis.Operations.IUnaryOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitUnaryOperator (operation As IUnaryOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitUnaryOperator : Microsoft.CodeAnalysis.Operations.IUnaryOperation * 'Argument -&gt; 'Result&#xA;override this.VisitUnaryOperator : Microsoft.CodeAnalysis.Operations.IUnaryOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitUnaryOperator (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitUnaryOperator(Microsoft::CodeAnalysis::Operations::IUnaryOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitUnaryOperator(Microsoft::CodeAnalysis::Operations::IUnaryOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitUnaryOperator(Microsoft::CodeAnalysis::Operations::IUnaryOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IUnaryOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitUsing">
      <MemberSignature Language="C#" Value="public virtual TResult VisitUsing (Microsoft.CodeAnalysis.Operations.IUsingOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitUsing(class Microsoft.CodeAnalysis.Operations.IUsingOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitUsing(Microsoft.CodeAnalysis.Operations.IUsingOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitUsing (operation As IUsingOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitUsing : Microsoft.CodeAnalysis.Operations.IUsingOperation * 'Argument -&gt; 'Result&#xA;override this.VisitUsing : Microsoft.CodeAnalysis.Operations.IUsingOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitUsing (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitUsing(Microsoft::CodeAnalysis::Operations::IUsingOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitUsing(Microsoft::CodeAnalysis::Operations::IUsingOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitUsing(Microsoft::CodeAnalysis::Operations::IUsingOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IUsingOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitVariableDeclaration">
      <MemberSignature Language="C#" Value="public virtual TResult VisitVariableDeclaration (Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitVariableDeclaration(class Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitVariableDeclaration(Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitVariableDeclaration (operation As IVariableDeclarationOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitVariableDeclaration : Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation * 'Argument -&gt; 'Result&#xA;override this.VisitVariableDeclaration : Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitVariableDeclaration (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitVariableDeclaration(Microsoft::CodeAnalysis::Operations::IVariableDeclarationOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitVariableDeclaration(Microsoft::CodeAnalysis::Operations::IVariableDeclarationOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitVariableDeclaration(Microsoft::CodeAnalysis::Operations::IVariableDeclarationOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitVariableDeclarationGroup">
      <MemberSignature Language="C#" Value="public virtual TResult VisitVariableDeclarationGroup (Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitVariableDeclarationGroup(class Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitVariableDeclarationGroup(Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitVariableDeclarationGroup (operation As IVariableDeclarationGroupOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitVariableDeclarationGroup : Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation * 'Argument -&gt; 'Result&#xA;override this.VisitVariableDeclarationGroup : Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitVariableDeclarationGroup (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitVariableDeclarationGroup(Microsoft::CodeAnalysis::Operations::IVariableDeclarationGroupOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitVariableDeclarationGroup(Microsoft::CodeAnalysis::Operations::IVariableDeclarationGroupOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitVariableDeclarationGroup(Microsoft::CodeAnalysis::Operations::IVariableDeclarationGroupOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitVariableDeclarator">
      <MemberSignature Language="C#" Value="public virtual TResult VisitVariableDeclarator (Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitVariableDeclarator(class Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitVariableDeclarator(Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitVariableDeclarator (operation As IVariableDeclaratorOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitVariableDeclarator : Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation * 'Argument -&gt; 'Result&#xA;override this.VisitVariableDeclarator : Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitVariableDeclarator (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitVariableDeclarator(Microsoft::CodeAnalysis::Operations::IVariableDeclaratorOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitVariableDeclarator(Microsoft::CodeAnalysis::Operations::IVariableDeclaratorOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitVariableDeclarator(Microsoft::CodeAnalysis::Operations::IVariableDeclaratorOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitVariableInitializer">
      <MemberSignature Language="C#" Value="public virtual TResult VisitVariableInitializer (Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitVariableInitializer(class Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitVariableInitializer(Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitVariableInitializer (operation As IVariableInitializerOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitVariableInitializer : Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation * 'Argument -&gt; 'Result&#xA;override this.VisitVariableInitializer : Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitVariableInitializer (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitVariableInitializer(Microsoft::CodeAnalysis::Operations::IVariableInitializerOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitVariableInitializer(Microsoft::CodeAnalysis::Operations::IVariableInitializerOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitVariableInitializer(Microsoft::CodeAnalysis::Operations::IVariableInitializerOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitWhileLoop">
      <MemberSignature Language="C#" Value="public virtual TResult VisitWhileLoop (Microsoft.CodeAnalysis.Operations.IWhileLoopOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitWhileLoop(class Microsoft.CodeAnalysis.Operations.IWhileLoopOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitWhileLoop(Microsoft.CodeAnalysis.Operations.IWhileLoopOperation,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function VisitWhileLoop (operation As IWhileLoopOperation, argument As TArgument) As TResult" />
      <MemberSignature Language="F#" Value="abstract member VisitWhileLoop : Microsoft.CodeAnalysis.Operations.IWhileLoopOperation * 'Argument -&gt; 'Result&#xA;override this.VisitWhileLoop : Microsoft.CodeAnalysis.Operations.IWhileLoopOperation * 'Argument -&gt; 'Result" Usage="operationVisitor.VisitWhileLoop (operation, argument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TResult VisitWhileLoop(Microsoft::CodeAnalysis::Operations::IWhileLoopOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; virtual TResult VisitWhileLoop(Microsoft::CodeAnalysis::Operations::IWhileLoopOperation ^ operation, TArgument argument);" />
      <MemberSignature Language="C++ WINRT" Value=" virtual TResult VisitWhileLoop(Microsoft::CodeAnalysis::Operations::IWhileLoopOperation const &amp; operation, TArgument argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Operations.IWhileLoopOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>