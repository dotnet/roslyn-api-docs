<Type Name="IArgument" FullName="Microsoft.CodeAnalysis.Semantics.IArgument">
  <TypeSignature Language="C#" Value="public interface IArgument : Microsoft.CodeAnalysis.IOperation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IArgument implements class Microsoft.CodeAnalysis.IOperation" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Semantics.IArgument" />
  <TypeSignature Language="VB.NET" Value="Public Interface IArgument&#xA;Implements IOperation" />
  <TypeSignature Language="F#" Value="type IArgument = interface&#xA;    interface IOperation" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.CodeAnalysis.IOperation</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents an argument in a method invocation.
            </summary>
    <remarks>
            This interface is reserved for implementation by its associated APIs. We reserve the right to
            change it in the future.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="ArgumentKind">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Semantics.ArgumentKind ArgumentKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.Semantics.ArgumentKind ArgumentKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Semantics.IArgument.ArgumentKind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentKind As ArgumentKind" />
      <MemberSignature Language="F#" Value="member this.ArgumentKind : Microsoft.CodeAnalysis.Semantics.ArgumentKind" Usage="Microsoft.CodeAnalysis.Semantics.IArgument.ArgumentKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Semantics.ArgumentKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Kind of argument.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InConversion">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IOperation InConversion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IOperation InConversion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Semantics.IArgument.InConversion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InConversion As IOperation" />
      <MemberSignature Language="F#" Value="member this.InConversion : Microsoft.CodeAnalysis.IOperation" Usage="Microsoft.CodeAnalysis.Semantics.IArgument.InConversion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Conversion applied to the argument value passing it into the target method. Applicable only to VB Reference arguments.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutConversion">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IOperation OutConversion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IOperation OutConversion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Semantics.IArgument.OutConversion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutConversion As IOperation" />
      <MemberSignature Language="F#" Value="member this.OutConversion : Microsoft.CodeAnalysis.IOperation" Usage="Microsoft.CodeAnalysis.Semantics.IArgument.OutConversion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Conversion applied to the argument value after the invocation. Applicable only to VB Reference arguments.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IParameterSymbol Parameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IParameterSymbol Parameter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Semantics.IArgument.Parameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameter As IParameterSymbol" />
      <MemberSignature Language="F#" Value="member this.Parameter : Microsoft.CodeAnalysis.IParameterSymbol" Usage="Microsoft.CodeAnalysis.Semantics.IArgument.Parameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IParameterSymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Parameter the argument matches.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IOperation Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IOperation Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Semantics.IArgument.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As IOperation" />
      <MemberSignature Language="F#" Value="member this.Value : Microsoft.CodeAnalysis.IOperation" Usage="Microsoft.CodeAnalysis.Semantics.IArgument.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Value supplied for the argument.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>