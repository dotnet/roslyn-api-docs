<Type Name="AggregationRangeVariableSyntax" FullName="Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax">
  <TypeSignature Language="C#" Value="public sealed class AggregationRangeVariableSyntax : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AggregationRangeVariableSyntax extends Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AggregationRangeVariableSyntax&#xA;Inherits VisualBasicSyntaxNode" />
  <TypeSignature Language="F#" Value="type AggregationRangeVariableSyntax = class&#xA;    inherit VisualBasicSyntaxNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class AggregationRangeVariableSyntax sealed : Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxNode" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
 Describes a single variable of the form "[x [As Type] =] aggregation-function"
 for use in the Into clause of Aggregate or Group By or Group Join query
 operators.
 </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor -&gt; unit" Usage="aggregationRangeVariableSyntax.Accept visitor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public override TResult Accept&lt;TResult&gt; (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResult Accept&lt;TResult&gt;(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1&lt;!!TResult&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResult) (visitor As VisualBasicSyntaxVisitor(Of TResult)) As TResult" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;'Result&gt; -&gt; 'Result" Usage="aggregationRangeVariableSyntax.Accept visitor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; override TResult Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor&lt;TResult&gt; ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Aggregation">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationSyntax Aggregation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationSyntax Aggregation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax.Aggregation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Aggregation As AggregationSyntax" />
      <MemberSignature Language="F#" Value="member this.Aggregation : Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax.Aggregation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::AggregationSyntax ^ Aggregation { Microsoft::CodeAnalysis::VisualBasic::Syntax::AggregationSyntax ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The name of the aggregation function. The "Group" aggregation function is
 represented by the identifier "Group".
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameEquals">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax NameEquals { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax NameEquals" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax.NameEquals" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameEquals As VariableNameEqualsSyntax" />
      <MemberSignature Language="F#" Value="member this.NameEquals : Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax.NameEquals" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::VariableNameEqualsSyntax ^ NameEquals { Microsoft::CodeAnalysis::VisualBasic::Syntax::VariableNameEqualsSyntax ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The optional name and type of the expression range variable. If omitted, the
 name of the expression range variable is inferred from the aggregation
 expression.
 </summary>
        <value>To be added.</value>
        <remarks>
 This child is optional. If it is not present, then Nothing is returned.
 </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax Update (Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax nameEquals, Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationSyntax aggregation);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax Update(class Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax nameEquals, class Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationSyntax aggregation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (nameEquals As VariableNameEqualsSyntax, aggregation As AggregationSyntax) As AggregationRangeVariableSyntax" />
      <MemberSignature Language="F#" Value="member this.Update : Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax * Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax" Usage="aggregationRangeVariableSyntax.Update (nameEquals, aggregation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::AggregationRangeVariableSyntax ^ Update(Microsoft::CodeAnalysis::VisualBasic::Syntax::VariableNameEqualsSyntax ^ nameEquals, Microsoft::CodeAnalysis::VisualBasic::Syntax::AggregationSyntax ^ aggregation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameEquals" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax" />
        <Parameter Name="aggregation" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationSyntax" />
      </Parameters>
      <Docs>
        <param name="nameEquals">
 The value for the NameEquals property.
 </param>
        <param name="aggregation">
 The value for the Aggregation property.
 </param>
        <summary>
 Returns a copy of this with the specified changes. Returns this instance if
 there are no actual changes.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAggregation">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax WithAggregation (Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationSyntax aggregation);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax WithAggregation(class Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationSyntax aggregation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax.WithAggregation(Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAggregation (aggregation As AggregationSyntax) As AggregationRangeVariableSyntax" />
      <MemberSignature Language="F#" Value="member this.WithAggregation : Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax" Usage="aggregationRangeVariableSyntax.WithAggregation aggregation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::AggregationRangeVariableSyntax ^ WithAggregation(Microsoft::CodeAnalysis::VisualBasic::Syntax::AggregationSyntax ^ aggregation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aggregation" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationSyntax" />
      </Parameters>
      <Docs>
        <param name="aggregation">To be added.</param>
        <summary>
 Returns a copy of this with the Aggregation property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithNameEquals">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax WithNameEquals (Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax nameEquals);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax WithNameEquals(class Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax nameEquals) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax.WithNameEquals(Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithNameEquals (nameEquals As VariableNameEqualsSyntax) As AggregationRangeVariableSyntax" />
      <MemberSignature Language="F#" Value="member this.WithNameEquals : Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax" Usage="aggregationRangeVariableSyntax.WithNameEquals nameEquals" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::AggregationRangeVariableSyntax ^ WithNameEquals(Microsoft::CodeAnalysis::VisualBasic::Syntax::VariableNameEqualsSyntax ^ nameEquals);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nameEquals" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax" />
      </Parameters>
      <Docs>
        <param name="nameEquals">To be added.</param>
        <summary>
 Returns a copy of this with the NameEquals property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>