<Type Name="TryCastExpressionSyntax" FullName="Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax">
  <TypeSignature Language="C#" Value="public sealed class TryCastExpressionSyntax : Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TryCastExpressionSyntax extends Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TryCastExpressionSyntax&#xA;Inherits CastExpressionSyntax" />
  <TypeSignature Language="F#" Value="type TryCastExpressionSyntax = class&#xA;    inherit CastExpressionSyntax" />
  <TypeSignature Language="C++ CLI" Value="public ref class TryCastExpressionSyntax sealed : Microsoft::CodeAnalysis::VisualBasic::Syntax::CastExpressionSyntax" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor -&gt; unit" Usage="tryCastExpressionSyntax.Accept visitor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public override TResult Accept&lt;TResult&gt; (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResult Accept&lt;TResult&gt;(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1&lt;!!TResult&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResult) (visitor As VisualBasicSyntaxVisitor(Of TResult)) As TResult" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;'Result&gt; -&gt; 'Result" Usage="tryCastExpressionSyntax.Accept visitor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; override TResult Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor&lt;TResult&gt; ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseParenToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken CloseParenToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken CloseParenToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.CloseParenToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CloseParenToken As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.CloseParenToken : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.CloseParenToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken CloseParenToken { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The ")" token.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommaToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken CommaToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken CommaToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.CommaToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommaToken As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.CommaToken : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.CommaToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken CommaToken { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The "," token.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax Expression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.Expression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expression As ExpressionSyntax" />
      <MemberSignature Language="F#" Value="member this.Expression : Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ Expression { Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The expression being cast.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken Keyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken Keyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.Keyword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keyword As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.Keyword : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.Keyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken Keyword { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The "CType", "DirectCast" or "TryCast" keyword.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenParenToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken OpenParenToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken OpenParenToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.OpenParenToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OpenParenToken As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.OpenParenToken : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.OpenParenToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken OpenParenToken { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The "(" token.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As TypeSyntax" />
      <MemberSignature Language="F#" Value="member this.Type : Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::TypeSyntax ^ Type { Microsoft::CodeAnalysis::VisualBasic::Syntax::TypeSyntax ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The type the expression is being cast to.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax Update (Microsoft.CodeAnalysis.SyntaxToken keyword, Microsoft.CodeAnalysis.SyntaxToken openParenToken, Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax expression, Microsoft.CodeAnalysis.SyntaxToken commaToken, Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax type, Microsoft.CodeAnalysis.SyntaxToken closeParenToken);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax Update(valuetype Microsoft.CodeAnalysis.SyntaxToken keyword, valuetype Microsoft.CodeAnalysis.SyntaxToken openParenToken, class Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax expression, valuetype Microsoft.CodeAnalysis.SyntaxToken commaToken, class Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax type, valuetype Microsoft.CodeAnalysis.SyntaxToken closeParenToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (keyword As SyntaxToken, openParenToken As SyntaxToken, expression As ExpressionSyntax, commaToken As SyntaxToken, type As TypeSyntax, closeParenToken As SyntaxToken) As TryCastExpressionSyntax" />
      <MemberSignature Language="F#" Value="member this.Update : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax * Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax" Usage="tryCastExpressionSyntax.Update (keyword, openParenToken, expression, commaToken, type, closeParenToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::TryCastExpressionSyntax ^ Update(Microsoft::CodeAnalysis::SyntaxToken keyword, Microsoft::CodeAnalysis::SyntaxToken openParenToken, Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ expression, Microsoft::CodeAnalysis::SyntaxToken commaToken, Microsoft::CodeAnalysis::VisualBasic::Syntax::TypeSyntax ^ type, Microsoft::CodeAnalysis::SyntaxToken closeParenToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="openParenToken" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="expression" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax" />
        <Parameter Name="commaToken" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="type" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax" />
        <Parameter Name="closeParenToken" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="keyword">
 The value for the Keyword property.
 </param>
        <param name="openParenToken">
 The value for the OpenParenToken property.
 </param>
        <param name="expression">
 The value for the Expression property.
 </param>
        <param name="commaToken">
 The value for the CommaToken property.
 </param>
        <param name="type">
 The value for the Type property.
 </param>
        <param name="closeParenToken">
 The value for the CloseParenToken property.
 </param>
        <summary>
 Returns a copy of this with the specified changes. Returns this instance if
 there are no actual changes.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithCloseParenToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax WithCloseParenToken (Microsoft.CodeAnalysis.SyntaxToken closeParenToken);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax WithCloseParenToken(valuetype Microsoft.CodeAnalysis.SyntaxToken closeParenToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithCloseParenToken (closeParenToken As SyntaxToken) As TryCastExpressionSyntax" />
      <MemberSignature Language="F#" Value="override this.WithCloseParenToken : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax" Usage="tryCastExpressionSyntax.WithCloseParenToken closeParenToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::TryCastExpressionSyntax ^ WithCloseParenToken(Microsoft::CodeAnalysis::SyntaxToken closeParenToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="closeParenToken" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="closeParenToken">To be added.</param>
        <summary>
 Returns a copy of this with the CloseParenToken property changed to the
 specified value. Returns this instance if the specified value is the same as
 the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithCommaToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax WithCommaToken (Microsoft.CodeAnalysis.SyntaxToken commaToken);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax WithCommaToken(valuetype Microsoft.CodeAnalysis.SyntaxToken commaToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.WithCommaToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithCommaToken (commaToken As SyntaxToken) As TryCastExpressionSyntax" />
      <MemberSignature Language="F#" Value="override this.WithCommaToken : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax" Usage="tryCastExpressionSyntax.WithCommaToken commaToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::TryCastExpressionSyntax ^ WithCommaToken(Microsoft::CodeAnalysis::SyntaxToken commaToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commaToken" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="commaToken">To be added.</param>
        <summary>
 Returns a copy of this with the CommaToken property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithExpression">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax WithExpression (Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax expression);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax WithExpression(class Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithExpression (expression As ExpressionSyntax) As TryCastExpressionSyntax" />
      <MemberSignature Language="F#" Value="override this.WithExpression : Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax" Usage="tryCastExpressionSyntax.WithExpression expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::TryCastExpressionSyntax ^ WithExpression(Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ expression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
 Returns a copy of this with the Expression property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax WithKeyword (Microsoft.CodeAnalysis.SyntaxToken keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax WithKeyword(valuetype Microsoft.CodeAnalysis.SyntaxToken keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithKeyword (keyword As SyntaxToken) As TryCastExpressionSyntax" />
      <MemberSignature Language="F#" Value="override this.WithKeyword : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax" Usage="tryCastExpressionSyntax.WithKeyword keyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::TryCastExpressionSyntax ^ WithKeyword(Microsoft::CodeAnalysis::SyntaxToken keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="keyword">To be added.</param>
        <summary>
 Returns a copy of this with the Keyword property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithOpenParenToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax WithOpenParenToken (Microsoft.CodeAnalysis.SyntaxToken openParenToken);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax WithOpenParenToken(valuetype Microsoft.CodeAnalysis.SyntaxToken openParenToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithOpenParenToken (openParenToken As SyntaxToken) As TryCastExpressionSyntax" />
      <MemberSignature Language="F#" Value="override this.WithOpenParenToken : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax" Usage="tryCastExpressionSyntax.WithOpenParenToken openParenToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::TryCastExpressionSyntax ^ WithOpenParenToken(Microsoft::CodeAnalysis::SyntaxToken openParenToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="openParenToken" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="openParenToken">To be added.</param>
        <summary>
 Returns a copy of this with the OpenParenToken property changed to the
 specified value. Returns this instance if the specified value is the same as
 the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithType">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax WithType (Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax type);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax WithType(class Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.WithType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithType (type As TypeSyntax) As TryCastExpressionSyntax" />
      <MemberSignature Language="F#" Value="override this.WithType : Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax" Usage="tryCastExpressionSyntax.WithType type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::TryCastExpressionSyntax ^ WithType(Microsoft::CodeAnalysis::VisualBasic::Syntax::TypeSyntax ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
 Returns a copy of this with the Type property changed to the specified value.
 Returns this instance if the specified value is the same as the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>