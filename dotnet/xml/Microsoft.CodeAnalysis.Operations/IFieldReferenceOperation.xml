<Type Name="IFieldReferenceOperation" FullName="Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation">
  <TypeSignature Language="C#" Value="public interface IFieldReferenceOperation : Microsoft.CodeAnalysis.Operations.IMemberReferenceOperation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFieldReferenceOperation implements class Microsoft.CodeAnalysis.IOperation, class Microsoft.CodeAnalysis.Operations.IMemberReferenceOperation" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFieldReferenceOperation&#xA;Implements IMemberReferenceOperation" />
  <TypeSignature Language="F#" Value="type IFieldReferenceOperation = interface&#xA;    interface IMemberReferenceOperation&#xA;    interface IOperation" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFieldReferenceOperation : Microsoft::CodeAnalysis::Operations::IMemberReferenceOperation" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.CodeAnalysis.IOperation</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.CodeAnalysis.Operations.IMemberReferenceOperation</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents a reference to a field.
            <para>
            Current usage:
             (1) C# field reference expression.
             (2) VB field reference expression.
            </para></summary>
    <remarks>
            This interface is reserved for implementation by its associated APIs. We reserve the right to
            change it in the future.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="Field">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IFieldSymbol Field { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IFieldSymbol Field" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation.Field" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Field As IFieldSymbol" />
      <MemberSignature Language="F#" Value="member this.Field : Microsoft.CodeAnalysis.IFieldSymbol" Usage="Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation.Field" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::IFieldSymbol ^ Field { Microsoft::CodeAnalysis::IFieldSymbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IFieldSymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Referenced field.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeclaration">
      <MemberSignature Language="C#" Value="public bool IsDeclaration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeclaration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation.IsDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDeclaration As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsDeclaration : bool" Usage="Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation.IsDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDeclaration { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If the field reference is also where the field was declared.
            </summary>
        <value>To be added.</value>
        <remarks>
            This is only ever true in CSharp scripts, where a top-level statement creates a new variable
            in a reference, such as an out variable declaration or a deconstruction declaration.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>