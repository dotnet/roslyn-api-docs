<Type Name="IParameterSymbol" FullName="Microsoft.CodeAnalysis.IParameterSymbol">
  <TypeSignature Language="C#" Value="public interface IParameterSymbol : IEquatable&lt;Microsoft.CodeAnalysis.ISymbol&gt;, Microsoft.CodeAnalysis.ISymbol" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IParameterSymbol implements class Microsoft.CodeAnalysis.ISymbol, class System.IEquatable`1&lt;class Microsoft.CodeAnalysis.ISymbol&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.IParameterSymbol" />
  <TypeSignature Language="VB.NET" Value="Public Interface IParameterSymbol&#xA;Implements IEquatable(Of ISymbol), ISymbol" />
  <TypeSignature Language="F#" Value="type IParameterSymbol = interface&#xA;    interface ISymbol&#xA;    interface IEquatable&lt;ISymbol&gt;" />
  <TypeSignature Language="C++ CLI" Value="public interface class IParameterSymbol : IEquatable&lt;Microsoft::CodeAnalysis::ISymbol ^&gt;, Microsoft::CodeAnalysis::ISymbol" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.CodeAnalysis.ISymbol</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.CodeAnalysis.ISymbol&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents a parameter of a method or property.
            </summary>
    <remarks>
            This interface is reserved for implementation by its associated APIs. We reserve the right to
            change it in the future.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="CustomModifiers">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CustomModifier&gt; CustomModifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.CustomModifier&gt; CustomModifiers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IParameterSymbol.CustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomModifiers As ImmutableArray(Of CustomModifier)" />
      <MemberSignature Language="F#" Value="member this.CustomModifiers : System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CustomModifier&gt;" Usage="Microsoft.CodeAnalysis.IParameterSymbol.CustomModifiers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::CustomModifier ^&gt; CustomModifiers { System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::CustomModifier ^&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CustomModifier&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Custom modifiers associated with the parameter type, or an empty array if there are none.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExplicitDefaultValue">
      <MemberSignature Language="C#" Value="public object ExplicitDefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ExplicitDefaultValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IParameterSymbol.ExplicitDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExplicitDefaultValue As Object" />
      <MemberSignature Language="F#" Value="member this.ExplicitDefaultValue : obj" Usage="Microsoft.CodeAnalysis.IParameterSymbol.ExplicitDefaultValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ExplicitDefaultValue { System::Object ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::Object ^ ExplicitDefaultValue { Platform::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the default value of the parameter. 
            </summary>
        <value>To be added.</value>
        <remarks>
            Returns null if the parameter type is a struct and the default value of the parameter
            is the default value of the struct type.
            </remarks>
        <exception cref="T:System.InvalidOperationException">The parameter has no default value.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasExplicitDefaultValue">
      <MemberSignature Language="C#" Value="public bool HasExplicitDefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasExplicitDefaultValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IParameterSymbol.HasExplicitDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasExplicitDefaultValue As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasExplicitDefaultValue : bool" Usage="Microsoft.CodeAnalysis.IParameterSymbol.HasExplicitDefaultValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasExplicitDefaultValue { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool HasExplicitDefaultValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if the parameter specifies a default value to be passed
            when no value is provided as an argument to a call. The default value
            can be obtained with the DefaultValue property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOptional">
      <MemberSignature Language="C#" Value="public bool IsOptional { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOptional" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IParameterSymbol.IsOptional" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOptional As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsOptional : bool" Usage="Microsoft.CodeAnalysis.IParameterSymbol.IsOptional" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsOptional { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool IsOptional { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if the parameter is optional.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsParams">
      <MemberSignature Language="C#" Value="public bool IsParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsParams" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IParameterSymbol.IsParams" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsParams As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsParams : bool" Usage="Microsoft.CodeAnalysis.IParameterSymbol.IsParams" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsParams { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool IsParams { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if the parameter was declared as a parameter array. 
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsThis">
      <MemberSignature Language="C#" Value="public bool IsThis { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsThis" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IParameterSymbol.IsThis" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsThis As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsThis : bool" Usage="Microsoft.CodeAnalysis.IParameterSymbol.IsThis" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsThis { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool IsThis { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if the parameter is the hidden 'this' ('Me' in Visual Basic) parameter.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IParameterSymbol.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="F#" Value="member this.Ordinal : int" Usage="Microsoft.CodeAnalysis.IParameterSymbol.Ordinal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Ordinal { int get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int Ordinal { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the ordinal position of the parameter. The first parameter has ordinal zero.
            The 'this' parameter ('Me' in Visual Basic) has ordinal -1.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalDefinition">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IParameterSymbol OriginalDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IParameterSymbol OriginalDefinition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IParameterSymbol.OriginalDefinition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalDefinition As IParameterSymbol" />
      <MemberSignature Language="F#" Value="member this.OriginalDefinition : Microsoft.CodeAnalysis.IParameterSymbol" Usage="Microsoft.CodeAnalysis.IParameterSymbol.OriginalDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::IParameterSymbol ^ OriginalDefinition { Microsoft::CodeAnalysis::IParameterSymbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IParameterSymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the original definition of this symbol. If this symbol is derived from another
            symbol by (say) type substitution, this gets the original symbol, as it was defined in
            source or metadata.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefCustomModifiers">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CustomModifier&gt; RefCustomModifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.CustomModifier&gt; RefCustomModifiers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IParameterSymbol.RefCustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RefCustomModifiers As ImmutableArray(Of CustomModifier)" />
      <MemberSignature Language="F#" Value="member this.RefCustomModifiers : System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CustomModifier&gt;" Usage="Microsoft.CodeAnalysis.IParameterSymbol.RefCustomModifiers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::CustomModifier ^&gt; RefCustomModifiers { System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::CustomModifier ^&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CustomModifier&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Custom modifiers associated with the ref modifier, or an empty array if there are none.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefKind">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.RefKind RefKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.RefKind RefKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IParameterSymbol.RefKind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RefKind As RefKind" />
      <MemberSignature Language="F#" Value="member this.RefKind : Microsoft.CodeAnalysis.RefKind" Usage="Microsoft.CodeAnalysis.IParameterSymbol.RefKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::RefKind RefKind { Microsoft::CodeAnalysis::RefKind get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::CodeAnalysis::RefKind RefKind { Microsoft::CodeAnalysis::RefKind get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.RefKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether the parameter passed by value or by reference.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.ITypeSymbol Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.ITypeSymbol Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IParameterSymbol.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As ITypeSymbol" />
      <MemberSignature Language="F#" Value="member this.Type : Microsoft.CodeAnalysis.ITypeSymbol" Usage="Microsoft.CodeAnalysis.IParameterSymbol.Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::ITypeSymbol ^ Type { Microsoft::CodeAnalysis::ITypeSymbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ITypeSymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type of the parameter.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>