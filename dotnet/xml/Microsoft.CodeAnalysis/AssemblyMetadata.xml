<Type Name="AssemblyMetadata" FullName="Microsoft.CodeAnalysis.AssemblyMetadata">
  <TypeSignature Language="C#" Value="public sealed class AssemblyMetadata : Microsoft.CodeAnalysis.Metadata" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AssemblyMetadata extends Microsoft.CodeAnalysis.Metadata" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.AssemblyMetadata" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.Metadata</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents an immutable snapshot of assembly CLI metadata.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CommonCopy">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.Metadata CommonCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.Metadata CommonCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.AssemblyMetadata.CommonCopy" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Metadata</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.AssemblyMetadata Create (Microsoft.CodeAnalysis.ModuleMetadata module);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CodeAnalysis.AssemblyMetadata Create(class Microsoft.CodeAnalysis.ModuleMetadata module) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.AssemblyMetadata.Create(Microsoft.CodeAnalysis.ModuleMetadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.AssemblyMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="module" Type="Microsoft.CodeAnalysis.ModuleMetadata" />
      </Parameters>
      <Docs>
        <param name="module">
            Manifest module.
            </param>
        <summary>
            Creates a single-module assembly.
            </summary>
        <returns>To be added.</returns>
        <remarks>This object disposes <paramref name="module" /> it when it is itself disposed.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.AssemblyMetadata Create (params Microsoft.CodeAnalysis.ModuleMetadata[] modules);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CodeAnalysis.AssemblyMetadata Create(class Microsoft.CodeAnalysis.ModuleMetadata[] modules) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.AssemblyMetadata.Create(Microsoft.CodeAnalysis.ModuleMetadata[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.AssemblyMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modules" Type="Microsoft.CodeAnalysis.ModuleMetadata[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="modules">Modules comprising the assembly. The first module is the manifest module of the assembly.</param>
        <summary>
            Creates a multi-module assembly.
            </summary>
        <returns>To be added.</returns>
        <remarks>This object disposes the elements of <paramref name="modules" /> it when it is itself <see cref="M:Microsoft.CodeAnalysis.AssemblyMetadata.Dispose" />.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="modules" /> is empty or contains a module that doesn't own its image (was created via <see cref="M:Microsoft.CodeAnalysis.Metadata.Copy" />).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="modules" /> contains null elements.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.AssemblyMetadata Create (System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.ModuleMetadata&gt; modules);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CodeAnalysis.AssemblyMetadata Create(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.ModuleMetadata&gt; modules) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.AssemblyMetadata.Create(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ModuleMetadata})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.AssemblyMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modules" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.ModuleMetadata&gt;" />
      </Parameters>
      <Docs>
        <param name="modules">
            Modules comprising the assembly. The first module is the manifest module of the assembly.</param>
        <summary>
            Creates a multi-module assembly.
            </summary>
        <returns>To be added.</returns>
        <remarks>This object disposes the elements of <paramref name="modules" /> it when it is itself <see cref="M:Microsoft.CodeAnalysis.AssemblyMetadata.Dispose" />.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="modules" /> is empty or contains a module that doesn't own its image (was created via <see cref="M:Microsoft.CodeAnalysis.Metadata.Copy" />).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="modules" /> contains null elements.</exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.AssemblyMetadata Create (System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.ModuleMetadata&gt; modules);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CodeAnalysis.AssemblyMetadata Create(valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.ModuleMetadata&gt; modules) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.AssemblyMetadata.Create(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.ModuleMetadata})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.AssemblyMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="modules" Type="System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.ModuleMetadata&gt;" />
      </Parameters>
      <Docs>
        <param name="modules">
            Modules comprising the assembly. The first module is the manifest module of the assembly.</param>
        <summary>
            Creates a multi-module assembly.
            </summary>
        <returns>To be added.</returns>
        <remarks>This object disposes the elements of <paramref name="modules" /> it when it is itself <see cref="M:Microsoft.CodeAnalysis.AssemblyMetadata.Dispose" />.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="modules" /> is empty or contains a module that doesn't own its image (was created via <see cref="M:Microsoft.CodeAnalysis.Metadata.Copy" />).</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="modules" /> contains null elements.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFile">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.AssemblyMetadata CreateFromFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CodeAnalysis.AssemblyMetadata CreateFromFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.AssemblyMetadata.CreateFromFile(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.AssemblyMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The full path to the assembly on disk.</param>
        <summary>
            Finds all modules of an assembly on a specified path and builds an instance of <see cref="T:Microsoft.CodeAnalysis.AssemblyMetadata" /> that represents them.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> is invalid.</exception>
        <exception cref="T:System.IO.IOException">Error reading file <paramref name="path" />. See <see cref="P:System.Exception.InnerException" /> for details.</exception>
        <exception cref="T:System.NotSupportedException">Reading from a file path is not supported by the platform.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromImage">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.AssemblyMetadata CreateFromImage (System.Collections.Generic.IEnumerable&lt;byte&gt; peImage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CodeAnalysis.AssemblyMetadata CreateFromImage(class System.Collections.Generic.IEnumerable`1&lt;unsigned int8&gt; peImage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.AssemblyMetadata.CreateFromImage(System.Collections.Generic.IEnumerable{System.Byte})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.AssemblyMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peImage" Type="System.Collections.Generic.IEnumerable&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="peImage">
            Manifest module image.
            </param>
        <summary>
            Creates a single-module assembly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peImage" /> is null.</exception>
        <exception cref="T:System.BadImageFormatException">The PE image format is invalid.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromImage">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.AssemblyMetadata CreateFromImage (System.Collections.Immutable.ImmutableArray&lt;byte&gt; peImage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CodeAnalysis.AssemblyMetadata CreateFromImage(valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; peImage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.AssemblyMetadata.CreateFromImage(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.AssemblyMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peImage" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="peImage">
            Manifest module image.
            </param>
        <summary>
            Creates a single-module assembly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="peImage" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromStream">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.AssemblyMetadata CreateFromStream (System.IO.Stream peStream, bool leaveOpen = false);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CodeAnalysis.AssemblyMetadata CreateFromStream(class System.IO.Stream peStream, bool leaveOpen) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.AssemblyMetadata.CreateFromStream(System.IO.Stream,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.AssemblyMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peStream" Type="System.IO.Stream" />
        <Parameter Name="leaveOpen" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="peStream">Manifest module PE image stream.</param>
        <param name="leaveOpen">False to close the stream upon disposal of the metadata.</param>
        <summary>
            Creates a single-module assembly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.BadImageFormatException">The PE image format is invalid.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromStream">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.AssemblyMetadata CreateFromStream (System.IO.Stream peStream, System.Reflection.PortableExecutable.PEStreamOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CodeAnalysis.AssemblyMetadata CreateFromStream(class System.IO.Stream peStream, valuetype System.Reflection.PortableExecutable.PEStreamOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.AssemblyMetadata.CreateFromStream(System.IO.Stream,System.Reflection.PortableExecutable.PEStreamOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.AssemblyMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peStream" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Reflection.PortableExecutable.PEStreamOptions" />
      </Parameters>
      <Docs>
        <param name="peStream">Manifest module PE image stream.</param>
        <param name="options">False to close the stream upon disposal of the metadata.</param>
        <summary>
            Creates a single-module assembly.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.BadImageFormatException">The PE image format is invalid.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.AssemblyMetadata.Dispose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Disposes all modules contained in the assembly.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.ModuleMetadata&gt; GetModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.ModuleMetadata&gt; GetModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.AssemblyMetadata.GetModules" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.ModuleMetadata&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Modules comprising this assembly. The first module is the manifest module.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.BadImageFormatException">The PE image format is invalid.</exception>
        <exception cref="T:System.IO.IOException">IO error reading the metadata. See <see cref="P:System.Exception.InnerException" /> for details.</exception>
        <exception cref="T:System.ObjectDisposedException">The object has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReference">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.PortableExecutableReference GetReference (Microsoft.CodeAnalysis.DocumentationProvider documentation = null, System.Collections.Immutable.ImmutableArray&lt;string&gt; aliases = null, bool embedInteropTypes = false, string filePath = null, string display = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.PortableExecutableReference GetReference(class Microsoft.CodeAnalysis.DocumentationProvider documentation, valuetype System.Collections.Immutable.ImmutableArray`1&lt;string&gt; aliases, bool embedInteropTypes, string filePath, string display) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.AssemblyMetadata.GetReference(Microsoft.CodeAnalysis.DocumentationProvider,System.Collections.Immutable.ImmutableArray{System.String},System.Boolean,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.PortableExecutableReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentation" Type="Microsoft.CodeAnalysis.DocumentationProvider" />
        <Parameter Name="aliases" Type="System.Collections.Immutable.ImmutableArray&lt;System.String&gt;" />
        <Parameter Name="embedInteropTypes" Type="System.Boolean" />
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="display" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="documentation">Provider of XML documentation comments for the metadata symbols contained in the module.</param>
        <param name="aliases">Aliases that can be used to refer to the assembly from source code (see "extern alias" directive in C#).</param>
        <param name="embedInteropTypes">True to embed interop types from the referenced assembly to the referencing compilation. Must be false for a module.</param>
        <param name="filePath">Path describing the location of the metadata, or null if the metadata have no location.</param>
        <param name="display">Display string used in error messages to identity the reference.</param>
        <summary>
            Creates a reference to the assembly metadata.
            </summary>
        <returns>A reference to the assembly metadata.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Kind">
      <MemberSignature Language="C#" Value="public override Microsoft.CodeAnalysis.MetadataImageKind Kind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.MetadataImageKind Kind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.AssemblyMetadata.Kind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.MetadataImageKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the metadata kind. <seealso cref="T:Microsoft.CodeAnalysis.MetadataImageKind" /></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>