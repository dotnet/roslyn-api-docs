<Type Name="ConstructorBlockSyntax" FullName="Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax">
  <TypeSignature Language="C#" Value="public sealed class ConstructorBlockSyntax : Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConstructorBlockSyntax extends Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConstructorBlockSyntax&#xA;Inherits MethodBlockBaseSyntax" />
  <TypeSignature Language="F#" Value="type ConstructorBlockSyntax = class&#xA;    inherit MethodBlockBaseSyntax" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
 Represents a constructor block declaration: A declaration that has a beginning
 declaration, a body of executable statements and an end statement.
 </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor -&gt; unit" Usage="constructorBlockSyntax.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public override TResult Accept&lt;TResult&gt; (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResult Accept&lt;TResult&gt;(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1&lt;!!TResult&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResult) (visitor As VisualBasicSyntaxVisitor(Of TResult)) As TResult" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;'Result&gt; -&gt; 'Result" Usage="constructorBlockSyntax.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStatements">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax AddStatements (params Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax AddStatements(class Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddStatements (ParamArray items As StatementSyntax()) As ConstructorBlockSyntax" />
      <MemberSignature Language="F#" Value="member this.AddStatements : Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[] -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax" Usage="constructorBlockSyntax.AddStatements items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax Begin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax Begin" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.Begin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Begin As SubNewStatementSyntax" />
      <MemberSignature Language="F#" Value="member this.Begin : Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.Begin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This member is obsolete.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockStatement">
      <MemberSignature Language="C#" Value="public override Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax BlockStatement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax BlockStatement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.BlockStatement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BlockStatement As MethodBaseSyntax" />
      <MemberSignature Language="F#" Value="member this.BlockStatement : Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.BlockStatement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax End { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax End" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.End" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property End As EndBlockStatementSyntax" />
      <MemberSignature Language="F#" Value="member this.End : Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.End" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This member is obsolete.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndBlockStatement">
      <MemberSignature Language="C#" Value="public override Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax EndBlockStatement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax EndBlockStatement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.EndBlockStatement" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EndBlockStatement As EndBlockStatementSyntax" />
      <MemberSignature Language="F#" Value="member this.EndBlockStatement : Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.EndBlockStatement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndSubStatement">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax EndSubStatement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax EndSubStatement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.EndSubStatement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndSubStatement As EndBlockStatementSyntax" />
      <MemberSignature Language="F#" Value="member this.EndSubStatement : Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.EndSubStatement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The "End Sub" statement that ends the block declaration.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Statements">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax&gt; Statements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax&gt; Statements" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.Statements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Statements As SyntaxList(Of StatementSyntax)" />
      <MemberSignature Language="F#" Value="member this.Statements : Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax&gt;" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.Statements" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The statements contained in the block statement. This might be an empty list.
 </summary>
        <value>To be added.</value>
        <remarks>
 If nothing is present, an empty list is returned.
 </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubNewStatement">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax SubNewStatement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax SubNewStatement" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.SubNewStatement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubNewStatement As SubNewStatementSyntax" />
      <MemberSignature Language="F#" Value="member this.SubNewStatement : Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.SubNewStatement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The "Sub New" statement that begins the block.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax Update (Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax subNewStatement, Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax&gt; statements, Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax endSubStatement);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax Update(class Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax subNewStatement, valuetype Microsoft.CodeAnalysis.SyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax&gt; statements, class Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax endSubStatement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (subNewStatement As SubNewStatementSyntax, statements As SyntaxList(Of StatementSyntax), endSubStatement As EndBlockStatementSyntax) As ConstructorBlockSyntax" />
      <MemberSignature Language="F#" Value="member this.Update : Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax * Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax&gt; * Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax" Usage="constructorBlockSyntax.Update (subNewStatement, statements, endSubStatement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subNewStatement" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax" />
        <Parameter Name="statements" Type="Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax&gt;" />
        <Parameter Name="endSubStatement" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax" />
      </Parameters>
      <Docs>
        <param name="subNewStatement">
 The value for the SubNewStatement property.
 </param>
        <param name="statements">
 The value for the Statements property.
 </param>
        <param name="endSubStatement">
 The value for the EndSubStatement property.
 </param>
        <summary>
 Returns a copy of this with the specified changes. Returns this instance if
 there are no actual changes.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithBegin">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax WithBegin (Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax begin);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax WithBegin(class Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax begin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.WithBegin(Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithBegin (begin As SubNewStatementSyntax) As ConstructorBlockSyntax" />
      <MemberSignature Language="F#" Value="override this.WithBegin : Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax" Usage="constructorBlockSyntax.WithBegin begin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This member is obsolete.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="begin" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax" />
      </Parameters>
      <Docs>
        <param name="begin">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithBlockStatement">
      <MemberSignature Language="C#" Value="public override Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax WithBlockStatement (Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax blockStatement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax WithBlockStatement(class Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax blockStatement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.WithBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WithBlockStatement (blockStatement As MethodBaseSyntax) As MethodBlockBaseSyntax" />
      <MemberSignature Language="F#" Value="override this.WithBlockStatement : Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax" Usage="constructorBlockSyntax.WithBlockStatement blockStatement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="blockStatement" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax" />
      </Parameters>
      <Docs>
        <param name="blockStatement">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithEnd">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax WithEnd (Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax end);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax WithEnd(class Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.WithEnd(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithEnd (end As EndBlockStatementSyntax) As ConstructorBlockSyntax" />
      <MemberSignature Language="F#" Value="override this.WithEnd : Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax" Usage="constructorBlockSyntax.WithEnd end" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This member is obsolete.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="end" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax" />
      </Parameters>
      <Docs>
        <param name="end">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithEndBlockStatement">
      <MemberSignature Language="C#" Value="public override Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax WithEndBlockStatement (Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax endBlockStatement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax WithEndBlockStatement(class Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax endBlockStatement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.WithEndBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WithEndBlockStatement (endBlockStatement As EndBlockStatementSyntax) As MethodBlockBaseSyntax" />
      <MemberSignature Language="F#" Value="override this.WithEndBlockStatement : Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax" Usage="constructorBlockSyntax.WithEndBlockStatement endBlockStatement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endBlockStatement" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax" />
      </Parameters>
      <Docs>
        <param name="endBlockStatement">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithEndSubStatement">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax WithEndSubStatement (Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax endSubStatement);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax WithEndSubStatement(class Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax endSubStatement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.WithEndSubStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithEndSubStatement (endSubStatement As EndBlockStatementSyntax) As ConstructorBlockSyntax" />
      <MemberSignature Language="F#" Value="member this.WithEndSubStatement : Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax" Usage="constructorBlockSyntax.WithEndSubStatement endSubStatement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endSubStatement" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax" />
      </Parameters>
      <Docs>
        <param name="endSubStatement">To be added.</param>
        <summary>
 Returns a copy of this with the EndSubStatement property changed to the
 specified value. Returns this instance if the specified value is the same as
 the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithStatements">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax WithStatements (Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax&gt; statements);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax WithStatements(valuetype Microsoft.CodeAnalysis.SyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax&gt; statements) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithStatements (statements As SyntaxList(Of StatementSyntax)) As ConstructorBlockSyntax" />
      <MemberSignature Language="F#" Value="member this.WithStatements : Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax&gt; -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax" Usage="constructorBlockSyntax.WithStatements statements" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="statements" Type="Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax&gt;" />
      </Parameters>
      <Docs>
        <param name="statements">To be added.</param>
        <summary>
 Returns a copy of this with the Statements property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSubNewStatement">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax WithSubNewStatement (Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax subNewStatement);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax WithSubNewStatement(class Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax subNewStatement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.WithSubNewStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithSubNewStatement (subNewStatement As SubNewStatementSyntax) As ConstructorBlockSyntax" />
      <MemberSignature Language="F#" Value="member this.WithSubNewStatement : Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax" Usage="constructorBlockSyntax.WithSubNewStatement subNewStatement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subNewStatement" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax" />
      </Parameters>
      <Docs>
        <param name="subNewStatement">To be added.</param>
        <summary>
 Returns a copy of this with the SubNewStatement property changed to the
 specified value. Returns this instance if the specified value is the same as
 the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>