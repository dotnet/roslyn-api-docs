<Type Name="OperationVisitor&lt;TArgument,TResult&gt;" FullName="Microsoft.CodeAnalysis.Semantics.OperationVisitor&lt;TArgument,TResult&gt;">
  <TypeSignature Language="C#" Value="public abstract class OperationVisitor&lt;TArgument,TResult&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit OperationVisitor`2&lt;TArgument, TResult&gt; extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TArgument" />
    <TypeParameter Name="TResult" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TArgument">
            The type of the additional argument passed to this visitor's Visit method.
            </typeparam>
    <typeparam name="TResult">
            The type of the return value of this visitor's Visit method.
            </typeparam>
    <summary>
            Represents a <see cref="T:Microsoft.CodeAnalysis.IOperation" /> visitor that visits only the single IOperation
            passed into its Visit method with an additional argument of the type specified by the
            <typeparamref name="TArgument" /> parameter and produces a value of the type specified by
            the <typeparamref name="TResult" /> parameter.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OperationVisitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultVisit">
      <MemberSignature Language="C#" Value="public virtual TResult DefaultVisit (Microsoft.CodeAnalysis.IOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult DefaultVisit(class Microsoft.CodeAnalysis.IOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.DefaultVisit(Microsoft.CodeAnalysis.IOperation,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.IOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public virtual TResult Visit (Microsoft.CodeAnalysis.IOperation operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult Visit(class Microsoft.CodeAnalysis.IOperation operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.Visit(Microsoft.CodeAnalysis.IOperation,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.IOperation" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAddressOfExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitAddressOfExpression (Microsoft.CodeAnalysis.Semantics.IAddressOfExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitAddressOfExpression(class Microsoft.CodeAnalysis.Semantics.IAddressOfExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitAddressOfExpression(Microsoft.CodeAnalysis.Semantics.IAddressOfExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IAddressOfExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitArgument">
      <MemberSignature Language="C#" Value="public virtual TResult VisitArgument (Microsoft.CodeAnalysis.Semantics.IArgument operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitArgument(class Microsoft.CodeAnalysis.Semantics.IArgument operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitArgument(Microsoft.CodeAnalysis.Semantics.IArgument,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IArgument" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitArrayCreationExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitArrayCreationExpression (Microsoft.CodeAnalysis.Semantics.IArrayCreationExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitArrayCreationExpression(class Microsoft.CodeAnalysis.Semantics.IArrayCreationExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitArrayCreationExpression(Microsoft.CodeAnalysis.Semantics.IArrayCreationExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IArrayCreationExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitArrayElementReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitArrayElementReferenceExpression (Microsoft.CodeAnalysis.Semantics.IArrayElementReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitArrayElementReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IArrayElementReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitArrayElementReferenceExpression(Microsoft.CodeAnalysis.Semantics.IArrayElementReferenceExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IArrayElementReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitArrayInitializer">
      <MemberSignature Language="C#" Value="public virtual TResult VisitArrayInitializer (Microsoft.CodeAnalysis.Semantics.IArrayInitializer operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitArrayInitializer(class Microsoft.CodeAnalysis.Semantics.IArrayInitializer operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitArrayInitializer(Microsoft.CodeAnalysis.Semantics.IArrayInitializer,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IArrayInitializer" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAssignmentExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitAssignmentExpression (Microsoft.CodeAnalysis.Semantics.IAssignmentExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitAssignmentExpression(class Microsoft.CodeAnalysis.Semantics.IAssignmentExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitAssignmentExpression(Microsoft.CodeAnalysis.Semantics.IAssignmentExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IAssignmentExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAwaitExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitAwaitExpression (Microsoft.CodeAnalysis.Semantics.IAwaitExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitAwaitExpression(class Microsoft.CodeAnalysis.Semantics.IAwaitExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitAwaitExpression(Microsoft.CodeAnalysis.Semantics.IAwaitExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IAwaitExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitBinaryOperatorExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitBinaryOperatorExpression (Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitBinaryOperatorExpression(class Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitBinaryOperatorExpression(Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitBlockStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitBlockStatement (Microsoft.CodeAnalysis.Semantics.IBlockStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitBlockStatement(class Microsoft.CodeAnalysis.Semantics.IBlockStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitBlockStatement(Microsoft.CodeAnalysis.Semantics.IBlockStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IBlockStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitBranchStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitBranchStatement (Microsoft.CodeAnalysis.Semantics.IBranchStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitBranchStatement(class Microsoft.CodeAnalysis.Semantics.IBranchStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitBranchStatement(Microsoft.CodeAnalysis.Semantics.IBranchStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IBranchStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCatchClause">
      <MemberSignature Language="C#" Value="public virtual TResult VisitCatchClause (Microsoft.CodeAnalysis.Semantics.ICatchClause operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitCatchClause(class Microsoft.CodeAnalysis.Semantics.ICatchClause operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitCatchClause(Microsoft.CodeAnalysis.Semantics.ICatchClause,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ICatchClause" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCompoundAssignmentExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitCompoundAssignmentExpression (Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitCompoundAssignmentExpression(class Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitCompoundAssignmentExpression(Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitConditionalAccessExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitConditionalAccessExpression (Microsoft.CodeAnalysis.Semantics.IConditionalAccessExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitConditionalAccessExpression(class Microsoft.CodeAnalysis.Semantics.IConditionalAccessExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitConditionalAccessExpression(Microsoft.CodeAnalysis.Semantics.IConditionalAccessExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IConditionalAccessExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitConditionalAccessInstanceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitConditionalAccessInstanceExpression (Microsoft.CodeAnalysis.Semantics.IConditionalAccessInstanceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitConditionalAccessInstanceExpression(class Microsoft.CodeAnalysis.Semantics.IConditionalAccessInstanceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitConditionalAccessInstanceExpression(Microsoft.CodeAnalysis.Semantics.IConditionalAccessInstanceExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IConditionalAccessInstanceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitConditionalChoiceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitConditionalChoiceExpression (Microsoft.CodeAnalysis.Semantics.IConditionalChoiceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitConditionalChoiceExpression(class Microsoft.CodeAnalysis.Semantics.IConditionalChoiceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitConditionalChoiceExpression(Microsoft.CodeAnalysis.Semantics.IConditionalChoiceExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IConditionalChoiceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitConversionExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitConversionExpression (Microsoft.CodeAnalysis.Semantics.IConversionExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitConversionExpression(class Microsoft.CodeAnalysis.Semantics.IConversionExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitConversionExpression(Microsoft.CodeAnalysis.Semantics.IConversionExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IConversionExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitDefaultValueExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitDefaultValueExpression (Microsoft.CodeAnalysis.Semantics.IDefaultValueExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitDefaultValueExpression(class Microsoft.CodeAnalysis.Semantics.IDefaultValueExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitDefaultValueExpression(Microsoft.CodeAnalysis.Semantics.IDefaultValueExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IDefaultValueExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitEmptyStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitEmptyStatement (Microsoft.CodeAnalysis.Semantics.IEmptyStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitEmptyStatement(class Microsoft.CodeAnalysis.Semantics.IEmptyStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitEmptyStatement(Microsoft.CodeAnalysis.Semantics.IEmptyStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IEmptyStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitEndStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitEndStatement (Microsoft.CodeAnalysis.Semantics.IEndStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitEndStatement(class Microsoft.CodeAnalysis.Semantics.IEndStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitEndStatement(Microsoft.CodeAnalysis.Semantics.IEndStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IEndStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitEventAssignmentExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitEventAssignmentExpression (Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitEventAssignmentExpression(class Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitEventAssignmentExpression(Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitEventReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitEventReferenceExpression (Microsoft.CodeAnalysis.Semantics.IEventReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitEventReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IEventReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitEventReferenceExpression(Microsoft.CodeAnalysis.Semantics.IEventReferenceExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IEventReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExpressionStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitExpressionStatement (Microsoft.CodeAnalysis.Semantics.IExpressionStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitExpressionStatement(class Microsoft.CodeAnalysis.Semantics.IExpressionStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitExpressionStatement(Microsoft.CodeAnalysis.Semantics.IExpressionStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IExpressionStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFieldInitializer">
      <MemberSignature Language="C#" Value="public virtual TResult VisitFieldInitializer (Microsoft.CodeAnalysis.Semantics.IFieldInitializer operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitFieldInitializer(class Microsoft.CodeAnalysis.Semantics.IFieldInitializer operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitFieldInitializer(Microsoft.CodeAnalysis.Semantics.IFieldInitializer,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IFieldInitializer" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFieldReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitFieldReferenceExpression (Microsoft.CodeAnalysis.Semantics.IFieldReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitFieldReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IFieldReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitFieldReferenceExpression(Microsoft.CodeAnalysis.Semantics.IFieldReferenceExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IFieldReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFixedStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitFixedStatement (Microsoft.CodeAnalysis.Semantics.IFixedStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitFixedStatement(class Microsoft.CodeAnalysis.Semantics.IFixedStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitFixedStatement(Microsoft.CodeAnalysis.Semantics.IFixedStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IFixedStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitForEachLoopStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitForEachLoopStatement (Microsoft.CodeAnalysis.Semantics.IForEachLoopStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitForEachLoopStatement(class Microsoft.CodeAnalysis.Semantics.IForEachLoopStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitForEachLoopStatement(Microsoft.CodeAnalysis.Semantics.IForEachLoopStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IForEachLoopStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitForLoopStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitForLoopStatement (Microsoft.CodeAnalysis.Semantics.IForLoopStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitForLoopStatement(class Microsoft.CodeAnalysis.Semantics.IForLoopStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitForLoopStatement(Microsoft.CodeAnalysis.Semantics.IForLoopStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IForLoopStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIfStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitIfStatement (Microsoft.CodeAnalysis.Semantics.IIfStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitIfStatement(class Microsoft.CodeAnalysis.Semantics.IIfStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitIfStatement(Microsoft.CodeAnalysis.Semantics.IIfStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IIfStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIncrementExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitIncrementExpression (Microsoft.CodeAnalysis.Semantics.IIncrementExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitIncrementExpression(class Microsoft.CodeAnalysis.Semantics.IIncrementExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitIncrementExpression(Microsoft.CodeAnalysis.Semantics.IIncrementExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IIncrementExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIndexedPropertyReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitIndexedPropertyReferenceExpression (Microsoft.CodeAnalysis.Semantics.IIndexedPropertyReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitIndexedPropertyReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IIndexedPropertyReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitIndexedPropertyReferenceExpression(Microsoft.CodeAnalysis.Semantics.IIndexedPropertyReferenceExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IIndexedPropertyReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInstanceReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitInstanceReferenceExpression (Microsoft.CodeAnalysis.Semantics.IInstanceReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitInstanceReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IInstanceReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitInstanceReferenceExpression(Microsoft.CodeAnalysis.Semantics.IInstanceReferenceExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IInstanceReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInvalidExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitInvalidExpression (Microsoft.CodeAnalysis.Semantics.IInvalidExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitInvalidExpression(class Microsoft.CodeAnalysis.Semantics.IInvalidExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitInvalidExpression(Microsoft.CodeAnalysis.Semantics.IInvalidExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IInvalidExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInvalidStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitInvalidStatement (Microsoft.CodeAnalysis.Semantics.IInvalidStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitInvalidStatement(class Microsoft.CodeAnalysis.Semantics.IInvalidStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitInvalidStatement(Microsoft.CodeAnalysis.Semantics.IInvalidStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IInvalidStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInvocationExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitInvocationExpression (Microsoft.CodeAnalysis.Semantics.IInvocationExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitInvocationExpression(class Microsoft.CodeAnalysis.Semantics.IInvocationExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitInvocationExpression(Microsoft.CodeAnalysis.Semantics.IInvocationExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IInvocationExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIsTypeExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitIsTypeExpression (Microsoft.CodeAnalysis.Semantics.IIsTypeExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitIsTypeExpression(class Microsoft.CodeAnalysis.Semantics.IIsTypeExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitIsTypeExpression(Microsoft.CodeAnalysis.Semantics.IIsTypeExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IIsTypeExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLabelStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitLabelStatement (Microsoft.CodeAnalysis.Semantics.ILabelStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitLabelStatement(class Microsoft.CodeAnalysis.Semantics.ILabelStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitLabelStatement(Microsoft.CodeAnalysis.Semantics.ILabelStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ILabelStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLambdaExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitLambdaExpression (Microsoft.CodeAnalysis.Semantics.ILambdaExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitLambdaExpression(class Microsoft.CodeAnalysis.Semantics.ILambdaExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitLambdaExpression(Microsoft.CodeAnalysis.Semantics.ILambdaExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ILambdaExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLateBoundMemberReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitLateBoundMemberReferenceExpression (Microsoft.CodeAnalysis.Semantics.ILateBoundMemberReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitLateBoundMemberReferenceExpression(class Microsoft.CodeAnalysis.Semantics.ILateBoundMemberReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitLateBoundMemberReferenceExpression(Microsoft.CodeAnalysis.Semantics.ILateBoundMemberReferenceExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ILateBoundMemberReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLiteralExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitLiteralExpression (Microsoft.CodeAnalysis.Semantics.ILiteralExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitLiteralExpression(class Microsoft.CodeAnalysis.Semantics.ILiteralExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitLiteralExpression(Microsoft.CodeAnalysis.Semantics.ILiteralExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ILiteralExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLocalReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitLocalReferenceExpression (Microsoft.CodeAnalysis.Semantics.ILocalReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitLocalReferenceExpression(class Microsoft.CodeAnalysis.Semantics.ILocalReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitLocalReferenceExpression(Microsoft.CodeAnalysis.Semantics.ILocalReferenceExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ILocalReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLockStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitLockStatement (Microsoft.CodeAnalysis.Semantics.ILockStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitLockStatement(class Microsoft.CodeAnalysis.Semantics.ILockStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitLockStatement(Microsoft.CodeAnalysis.Semantics.ILockStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ILockStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitMethodBindingExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitMethodBindingExpression (Microsoft.CodeAnalysis.Semantics.IMethodBindingExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitMethodBindingExpression(class Microsoft.CodeAnalysis.Semantics.IMethodBindingExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitMethodBindingExpression(Microsoft.CodeAnalysis.Semantics.IMethodBindingExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IMethodBindingExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitNullCoalescingExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitNullCoalescingExpression (Microsoft.CodeAnalysis.Semantics.INullCoalescingExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitNullCoalescingExpression(class Microsoft.CodeAnalysis.Semantics.INullCoalescingExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitNullCoalescingExpression(Microsoft.CodeAnalysis.Semantics.INullCoalescingExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.INullCoalescingExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitObjectCreationExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitObjectCreationExpression (Microsoft.CodeAnalysis.Semantics.IObjectCreationExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitObjectCreationExpression(class Microsoft.CodeAnalysis.Semantics.IObjectCreationExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitObjectCreationExpression(Microsoft.CodeAnalysis.Semantics.IObjectCreationExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IObjectCreationExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitOmittedArgumentExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitOmittedArgumentExpression (Microsoft.CodeAnalysis.Semantics.IOmittedArgumentExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitOmittedArgumentExpression(class Microsoft.CodeAnalysis.Semantics.IOmittedArgumentExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitOmittedArgumentExpression(Microsoft.CodeAnalysis.Semantics.IOmittedArgumentExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IOmittedArgumentExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitParameterInitializer">
      <MemberSignature Language="C#" Value="public virtual TResult VisitParameterInitializer (Microsoft.CodeAnalysis.Semantics.IParameterInitializer operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitParameterInitializer(class Microsoft.CodeAnalysis.Semantics.IParameterInitializer operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitParameterInitializer(Microsoft.CodeAnalysis.Semantics.IParameterInitializer,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IParameterInitializer" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitParameterReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitParameterReferenceExpression (Microsoft.CodeAnalysis.Semantics.IParameterReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitParameterReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IParameterReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitParameterReferenceExpression(Microsoft.CodeAnalysis.Semantics.IParameterReferenceExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IParameterReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitParenthesizedExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitParenthesizedExpression (Microsoft.CodeAnalysis.Semantics.IParenthesizedExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitParenthesizedExpression(class Microsoft.CodeAnalysis.Semantics.IParenthesizedExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitParenthesizedExpression(Microsoft.CodeAnalysis.Semantics.IParenthesizedExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IParenthesizedExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitPlaceholderExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitPlaceholderExpression (Microsoft.CodeAnalysis.Semantics.IPlaceholderExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitPlaceholderExpression(class Microsoft.CodeAnalysis.Semantics.IPlaceholderExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitPlaceholderExpression(Microsoft.CodeAnalysis.Semantics.IPlaceholderExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IPlaceholderExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitPointerIndirectionReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitPointerIndirectionReferenceExpression (Microsoft.CodeAnalysis.Semantics.IPointerIndirectionReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitPointerIndirectionReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IPointerIndirectionReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitPointerIndirectionReferenceExpression(Microsoft.CodeAnalysis.Semantics.IPointerIndirectionReferenceExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IPointerIndirectionReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitPropertyInitializer">
      <MemberSignature Language="C#" Value="public virtual TResult VisitPropertyInitializer (Microsoft.CodeAnalysis.Semantics.IPropertyInitializer operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitPropertyInitializer(class Microsoft.CodeAnalysis.Semantics.IPropertyInitializer operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitPropertyInitializer(Microsoft.CodeAnalysis.Semantics.IPropertyInitializer,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IPropertyInitializer" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitPropertyReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitPropertyReferenceExpression (Microsoft.CodeAnalysis.Semantics.IPropertyReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitPropertyReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IPropertyReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitPropertyReferenceExpression(Microsoft.CodeAnalysis.Semantics.IPropertyReferenceExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IPropertyReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitRangeCaseClause">
      <MemberSignature Language="C#" Value="public virtual TResult VisitRangeCaseClause (Microsoft.CodeAnalysis.Semantics.IRangeCaseClause operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitRangeCaseClause(class Microsoft.CodeAnalysis.Semantics.IRangeCaseClause operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitRangeCaseClause(Microsoft.CodeAnalysis.Semantics.IRangeCaseClause,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IRangeCaseClause" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitRelationalCaseClause">
      <MemberSignature Language="C#" Value="public virtual TResult VisitRelationalCaseClause (Microsoft.CodeAnalysis.Semantics.IRelationalCaseClause operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitRelationalCaseClause(class Microsoft.CodeAnalysis.Semantics.IRelationalCaseClause operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitRelationalCaseClause(Microsoft.CodeAnalysis.Semantics.IRelationalCaseClause,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IRelationalCaseClause" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitReturnStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitReturnStatement (Microsoft.CodeAnalysis.Semantics.IReturnStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitReturnStatement(class Microsoft.CodeAnalysis.Semantics.IReturnStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitReturnStatement(Microsoft.CodeAnalysis.Semantics.IReturnStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IReturnStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSingleValueCaseClause">
      <MemberSignature Language="C#" Value="public virtual TResult VisitSingleValueCaseClause (Microsoft.CodeAnalysis.Semantics.ISingleValueCaseClause operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitSingleValueCaseClause(class Microsoft.CodeAnalysis.Semantics.ISingleValueCaseClause operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitSingleValueCaseClause(Microsoft.CodeAnalysis.Semantics.ISingleValueCaseClause,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ISingleValueCaseClause" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSizeOfExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitSizeOfExpression (Microsoft.CodeAnalysis.Semantics.ISizeOfExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitSizeOfExpression(class Microsoft.CodeAnalysis.Semantics.ISizeOfExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitSizeOfExpression(Microsoft.CodeAnalysis.Semantics.ISizeOfExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ISizeOfExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitStopStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitStopStatement (Microsoft.CodeAnalysis.Semantics.IStopStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitStopStatement(class Microsoft.CodeAnalysis.Semantics.IStopStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitStopStatement(Microsoft.CodeAnalysis.Semantics.IStopStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IStopStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSwitchCase">
      <MemberSignature Language="C#" Value="public virtual TResult VisitSwitchCase (Microsoft.CodeAnalysis.Semantics.ISwitchCase operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitSwitchCase(class Microsoft.CodeAnalysis.Semantics.ISwitchCase operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitSwitchCase(Microsoft.CodeAnalysis.Semantics.ISwitchCase,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ISwitchCase" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSwitchStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitSwitchStatement (Microsoft.CodeAnalysis.Semantics.ISwitchStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitSwitchStatement(class Microsoft.CodeAnalysis.Semantics.ISwitchStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitSwitchStatement(Microsoft.CodeAnalysis.Semantics.ISwitchStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ISwitchStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSyntheticLocalReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitSyntheticLocalReferenceExpression (Microsoft.CodeAnalysis.Semantics.ISyntheticLocalReferenceExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitSyntheticLocalReferenceExpression(class Microsoft.CodeAnalysis.Semantics.ISyntheticLocalReferenceExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitSyntheticLocalReferenceExpression(Microsoft.CodeAnalysis.Semantics.ISyntheticLocalReferenceExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ISyntheticLocalReferenceExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitThrowStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitThrowStatement (Microsoft.CodeAnalysis.Semantics.IThrowStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitThrowStatement(class Microsoft.CodeAnalysis.Semantics.IThrowStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitThrowStatement(Microsoft.CodeAnalysis.Semantics.IThrowStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IThrowStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTryStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitTryStatement (Microsoft.CodeAnalysis.Semantics.ITryStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitTryStatement(class Microsoft.CodeAnalysis.Semantics.ITryStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitTryStatement(Microsoft.CodeAnalysis.Semantics.ITryStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ITryStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTypeOfExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitTypeOfExpression (Microsoft.CodeAnalysis.Semantics.ITypeOfExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitTypeOfExpression(class Microsoft.CodeAnalysis.Semantics.ITypeOfExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitTypeOfExpression(Microsoft.CodeAnalysis.Semantics.ITypeOfExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ITypeOfExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTypeParameterObjectCreationExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitTypeParameterObjectCreationExpression (Microsoft.CodeAnalysis.Semantics.ITypeParameterObjectCreationExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitTypeParameterObjectCreationExpression(class Microsoft.CodeAnalysis.Semantics.ITypeParameterObjectCreationExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitTypeParameterObjectCreationExpression(Microsoft.CodeAnalysis.Semantics.ITypeParameterObjectCreationExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ITypeParameterObjectCreationExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitUnaryOperatorExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitUnaryOperatorExpression (Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitUnaryOperatorExpression(class Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitUnaryOperatorExpression(Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitUnboundLambdaExpression">
      <MemberSignature Language="C#" Value="public virtual TResult VisitUnboundLambdaExpression (Microsoft.CodeAnalysis.Semantics.IUnboundLambdaExpression operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitUnboundLambdaExpression(class Microsoft.CodeAnalysis.Semantics.IUnboundLambdaExpression operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitUnboundLambdaExpression(Microsoft.CodeAnalysis.Semantics.IUnboundLambdaExpression,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IUnboundLambdaExpression" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitUsingStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitUsingStatement (Microsoft.CodeAnalysis.Semantics.IUsingStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitUsingStatement(class Microsoft.CodeAnalysis.Semantics.IUsingStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitUsingStatement(Microsoft.CodeAnalysis.Semantics.IUsingStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IUsingStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitVariableDeclaration">
      <MemberSignature Language="C#" Value="public virtual TResult VisitVariableDeclaration (Microsoft.CodeAnalysis.Semantics.IVariableDeclaration operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitVariableDeclaration(class Microsoft.CodeAnalysis.Semantics.IVariableDeclaration operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitVariableDeclaration(Microsoft.CodeAnalysis.Semantics.IVariableDeclaration,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IVariableDeclaration" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitVariableDeclarationStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitVariableDeclarationStatement (Microsoft.CodeAnalysis.Semantics.IVariableDeclarationStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitVariableDeclarationStatement(class Microsoft.CodeAnalysis.Semantics.IVariableDeclarationStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitVariableDeclarationStatement(Microsoft.CodeAnalysis.Semantics.IVariableDeclarationStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IVariableDeclarationStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitWhileUntilLoopStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitWhileUntilLoopStatement (Microsoft.CodeAnalysis.Semantics.IWhileUntilLoopStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitWhileUntilLoopStatement(class Microsoft.CodeAnalysis.Semantics.IWhileUntilLoopStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitWhileUntilLoopStatement(Microsoft.CodeAnalysis.Semantics.IWhileUntilLoopStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IWhileUntilLoopStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitWithStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitWithStatement (Microsoft.CodeAnalysis.Semantics.IWithStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitWithStatement(class Microsoft.CodeAnalysis.Semantics.IWithStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitWithStatement(Microsoft.CodeAnalysis.Semantics.IWithStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IWithStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitYieldBreakStatement">
      <MemberSignature Language="C#" Value="public virtual TResult VisitYieldBreakStatement (Microsoft.CodeAnalysis.Semantics.IReturnStatement operation, TArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !TResult VisitYieldBreakStatement(class Microsoft.CodeAnalysis.Semantics.IReturnStatement operation, !TArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor`2.VisitYieldBreakStatement(Microsoft.CodeAnalysis.Semantics.IReturnStatement,`0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IReturnStatement" />
        <Parameter Name="argument" Type="TArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <param name="argument">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>