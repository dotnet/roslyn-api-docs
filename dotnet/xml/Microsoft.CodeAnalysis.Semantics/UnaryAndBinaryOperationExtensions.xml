<Type Name="UnaryAndBinaryOperationExtensions" FullName="Microsoft.CodeAnalysis.Semantics.UnaryAndBinaryOperationExtensions">
  <TypeSignature Language="C#" Value="public static class UnaryAndBinaryOperationExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit UnaryAndBinaryOperationExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Semantics.UnaryAndBinaryOperationExtensions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetBinaryOperandsKind">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Semantics.BinaryOperandsKind GetBinaryOperandsKind (Microsoft.CodeAnalysis.Semantics.BinaryOperationKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.CodeAnalysis.Semantics.BinaryOperandsKind GetBinaryOperandsKind(valuetype Microsoft.CodeAnalysis.Semantics.BinaryOperationKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.UnaryAndBinaryOperationExtensions.GetBinaryOperandsKind(Microsoft.CodeAnalysis.Semantics.BinaryOperationKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Semantics.BinaryOperandsKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.Semantics.BinaryOperationKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBinaryOperandsKind">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Semantics.BinaryOperandsKind GetBinaryOperandsKind (this Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.CodeAnalysis.Semantics.BinaryOperandsKind GetBinaryOperandsKind(class Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression binary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.UnaryAndBinaryOperationExtensions.GetBinaryOperandsKind(Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Semantics.BinaryOperandsKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binary" Type="Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="binary">To be added.</param>
        <summary>
            Get binary operand kinds.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBinaryOperandsKind">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Semantics.BinaryOperandsKind GetBinaryOperandsKind (this Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression compoundAssignment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.CodeAnalysis.Semantics.BinaryOperandsKind GetBinaryOperandsKind(class Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression compoundAssignment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.UnaryAndBinaryOperationExtensions.GetBinaryOperandsKind(Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Semantics.BinaryOperandsKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compoundAssignment" Type="Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="compoundAssignment">To be added.</param>
        <summary>
            Get binary operand kinds.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSimpleBinaryOperationKind">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Semantics.SimpleBinaryOperationKind GetSimpleBinaryOperationKind (Microsoft.CodeAnalysis.Semantics.BinaryOperationKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.CodeAnalysis.Semantics.SimpleBinaryOperationKind GetSimpleBinaryOperationKind(valuetype Microsoft.CodeAnalysis.Semantics.BinaryOperationKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.UnaryAndBinaryOperationExtensions.GetSimpleBinaryOperationKind(Microsoft.CodeAnalysis.Semantics.BinaryOperationKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Semantics.SimpleBinaryOperationKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.Semantics.BinaryOperationKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSimpleBinaryOperationKind">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Semantics.SimpleBinaryOperationKind GetSimpleBinaryOperationKind (this Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression binary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.CodeAnalysis.Semantics.SimpleBinaryOperationKind GetSimpleBinaryOperationKind(class Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression binary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.UnaryAndBinaryOperationExtensions.GetSimpleBinaryOperationKind(Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Semantics.SimpleBinaryOperationKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binary" Type="Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="binary">To be added.</param>
        <summary>
            Get binary operation kind independent of data type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSimpleBinaryOperationKind">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Semantics.SimpleBinaryOperationKind GetSimpleBinaryOperationKind (this Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression compoundAssignment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.CodeAnalysis.Semantics.SimpleBinaryOperationKind GetSimpleBinaryOperationKind(class Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression compoundAssignment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.UnaryAndBinaryOperationExtensions.GetSimpleBinaryOperationKind(Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Semantics.SimpleBinaryOperationKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compoundAssignment" Type="Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="compoundAssignment">To be added.</param>
        <summary>
            Get binary operation kind independent of data type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSimpleUnaryOperationKind">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Semantics.SimpleUnaryOperationKind GetSimpleUnaryOperationKind (this Microsoft.CodeAnalysis.Semantics.IIncrementExpression increment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.CodeAnalysis.Semantics.SimpleUnaryOperationKind GetSimpleUnaryOperationKind(class Microsoft.CodeAnalysis.Semantics.IIncrementExpression increment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.UnaryAndBinaryOperationExtensions.GetSimpleUnaryOperationKind(Microsoft.CodeAnalysis.Semantics.IIncrementExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Semantics.SimpleUnaryOperationKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="increment" Type="Microsoft.CodeAnalysis.Semantics.IIncrementExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="increment">To be added.</param>
        <summary>
            Get unary operation kind independent of data type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSimpleUnaryOperationKind">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Semantics.SimpleUnaryOperationKind GetSimpleUnaryOperationKind (this Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression unary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.CodeAnalysis.Semantics.SimpleUnaryOperationKind GetSimpleUnaryOperationKind(class Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression unary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.UnaryAndBinaryOperationExtensions.GetSimpleUnaryOperationKind(Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Semantics.SimpleUnaryOperationKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unary" Type="Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="unary">To be added.</param>
        <summary>
            Get unary operation kind independent of data type.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSimpleUnaryOperationKind">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Semantics.SimpleUnaryOperationKind GetSimpleUnaryOperationKind (Microsoft.CodeAnalysis.Semantics.UnaryOperationKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.CodeAnalysis.Semantics.SimpleUnaryOperationKind GetSimpleUnaryOperationKind(valuetype Microsoft.CodeAnalysis.Semantics.UnaryOperationKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.UnaryAndBinaryOperationExtensions.GetSimpleUnaryOperationKind(Microsoft.CodeAnalysis.Semantics.UnaryOperationKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Semantics.SimpleUnaryOperationKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.Semantics.UnaryOperationKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnaryOperandKind">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Semantics.UnaryOperandKind GetUnaryOperandKind (this Microsoft.CodeAnalysis.Semantics.IIncrementExpression increment);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.CodeAnalysis.Semantics.UnaryOperandKind GetUnaryOperandKind(class Microsoft.CodeAnalysis.Semantics.IIncrementExpression increment) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.UnaryAndBinaryOperationExtensions.GetUnaryOperandKind(Microsoft.CodeAnalysis.Semantics.IIncrementExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Semantics.UnaryOperandKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="increment" Type="Microsoft.CodeAnalysis.Semantics.IIncrementExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="increment">To be added.</param>
        <summary>
            Get unary operand kind.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnaryOperandKind">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Semantics.UnaryOperandKind GetUnaryOperandKind (this Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression unary);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.CodeAnalysis.Semantics.UnaryOperandKind GetUnaryOperandKind(class Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression unary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.UnaryAndBinaryOperationExtensions.GetUnaryOperandKind(Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Semantics.UnaryOperandKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unary" Type="Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression" RefType="this" />
      </Parameters>
      <Docs>
        <param name="unary">To be added.</param>
        <summary>
            Get unary operand kind.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnaryOperandKind">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Semantics.UnaryOperandKind GetUnaryOperandKind (Microsoft.CodeAnalysis.Semantics.UnaryOperationKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Microsoft.CodeAnalysis.Semantics.UnaryOperandKind GetUnaryOperandKind(valuetype Microsoft.CodeAnalysis.Semantics.UnaryOperationKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.UnaryAndBinaryOperationExtensions.GetUnaryOperandKind(Microsoft.CodeAnalysis.Semantics.UnaryOperationKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Semantics.UnaryOperandKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.Semantics.UnaryOperationKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>