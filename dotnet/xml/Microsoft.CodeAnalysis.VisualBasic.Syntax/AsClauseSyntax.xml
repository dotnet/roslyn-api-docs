<Type Name="AsClauseSyntax" FullName="Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax">
  <TypeSignature Language="C#" Value="public abstract class AsClauseSyntax : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract AsClauseSyntax extends Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsClauseSyntax&#xA;Inherits VisualBasicSyntaxNode" />
  <TypeSignature Language="F#" Value="type AsClauseSyntax = class&#xA;    inherit VisualBasicSyntaxNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsClauseSyntax abstract : Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxNode" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class AsClauseSyntax abstract : Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxNode" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class AsClauseSyntax abstract : Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxNode" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
 Abstract node class that represents the different kinds of "As {type-name}"
 clauses in a declaration: simple "As" clauses and "As New" clauses. The type
 has optional attributes associated with it, although attributes are not
 permitted in all possible places where this node occurs.
 </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AsKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken AsKeyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken AsKeyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax.AsKeyword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsKeyword As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.AsKeyword : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax.AsKeyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken AsKeyword { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The "As" keyword.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>