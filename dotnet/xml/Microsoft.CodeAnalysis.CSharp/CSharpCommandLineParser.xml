<Type Name="CSharpCommandLineParser" FullName="Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser">
  <TypeSignature Language="C#" Value="public class CSharpCommandLineParser : Microsoft.CodeAnalysis.CommandLineParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CSharpCommandLineParser extends Microsoft.CodeAnalysis.CommandLineParser" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.CommandLineParser</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCommandLineArguments Parse (System.Collections.Generic.IEnumerable&lt;string&gt; args, string baseDirectory, string sdkDirectory, string additionalReferenceDirectories = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCommandLineArguments Parse(class System.Collections.Generic.IEnumerable`1&lt;string&gt; args, string baseDirectory, string sdkDirectory, string additionalReferenceDirectories) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser.Parse(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCommandLineArguments</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="baseDirectory" Type="System.String" />
        <Parameter Name="sdkDirectory" Type="System.String" />
        <Parameter Name="additionalReferenceDirectories" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="args">A collection of strings representing the command line arguments.</param>
        <param name="baseDirectory">The base directory used for qualifying file locations.</param>
        <param name="sdkDirectory">The directory to search for mscorlib, or null if not available.</param>
        <param name="additionalReferenceDirectories">A string representing additional reference paths.</param>
        <summary>
            Parses a command line.
            </summary>
        <returns>a commandlinearguments object representing the parsed command line.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseConditionalCompilationSymbols">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; ParseConditionalCompilationSymbols (string value, out System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Diagnostic&gt; diagnostics);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; ParseConditionalCompilationSymbols(string value, [out] class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.Diagnostic&gt;&amp; diagnostics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser.ParseConditionalCompilationSymbols(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostic}@)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="diagnostics" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Diagnostic&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="diagnostics">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegularFileExtension">
      <MemberSignature Language="C#" Value="protected override string RegularFileExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegularFileExtension" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser.RegularFileExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptFileExtension">
      <MemberSignature Language="C#" Value="protected override string ScriptFileExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScriptFileExtension" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser.ScriptFileExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>