<Type Name="SymbolEqualityComparer" FullName="Microsoft.CodeAnalysis.SymbolEqualityComparer">
  <TypeSignature Language="C#" Value="public sealed class SymbolEqualityComparer : System.Collections.Generic.IEqualityComparer&lt;Microsoft.CodeAnalysis.ISymbol&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SymbolEqualityComparer extends System.Object implements class System.Collections.Generic.IEqualityComparer`1&lt;class Microsoft.CodeAnalysis.ISymbol&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.SymbolEqualityComparer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SymbolEqualityComparer&#xA;Implements IEqualityComparer(Of ISymbol)" />
  <TypeSignature Language="F#" Value="type SymbolEqualityComparer = class&#xA;    interface IEqualityComparer&lt;ISymbol&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>3.3.0.0</AssemblyVersion>
    <AssemblyVersion>3.4.0.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>3.6.0.0</AssemblyVersion>
    <AssemblyVersion>3.7.0.0</AssemblyVersion>
    <AssemblyVersion>3.8.0.0</AssemblyVersion>
    <AssemblyVersion>3.9.0.0</AssemblyVersion>
    <AssemblyVersion>3.10.0.0</AssemblyVersion>
    <AssemblyVersion>3.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>4.8.0.0</AssemblyVersion>
    <AssemblyVersion>4.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEqualityComparer&lt;Microsoft.CodeAnalysis.ISymbol&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Allows for the comparison of two <see cref="T:Microsoft.CodeAnalysis.ISymbol" /> instances
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.CodeAnalysis.SymbolEqualityComparer Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.CodeAnalysis.SymbolEqualityComparer Default" />
      <MemberSignature Language="DocId" Value="F:Microsoft.CodeAnalysis.SymbolEqualityComparer.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As SymbolEqualityComparer " />
      <MemberSignature Language="F#" Value=" staticval mutable Default : Microsoft.CodeAnalysis.SymbolEqualityComparer" Usage="Microsoft.CodeAnalysis.SymbolEqualityComparer.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.3.0.0</AssemblyVersion>
        <AssemblyVersion>3.4.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.10.0.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SymbolEqualityComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Compares two <see cref="T:Microsoft.CodeAnalysis.ISymbol" /> instances based on the default comparison rules, equivalent to calling <see cref="M:System.IEquatable`1.Equals(`0)" />.
            </summary>
        <remarks>
            Comparing <c>string</c> and <c>string?</c> will return equal. Use <see cref="F:Microsoft.CodeAnalysis.SymbolEqualityComparer.IncludeNullability" /> if you don't want them to be considered equal.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.CodeAnalysis.ISymbol? x, Microsoft.CodeAnalysis.ISymbol? y);" FrameworkAlternate="roslyn-dotnet-3.10.0;roslyn-dotnet-3.11.0;roslyn-dotnet-3.4.0;roslyn-dotnet-3.5.0;roslyn-dotnet-3.6.0;roslyn-dotnet-3.7.0;roslyn-dotnet-3.8.0;roslyn-dotnet-3.9.0;roslyn-dotnet-4.0.1;roslyn-dotnet-4.1.0;roslyn-dotnet-4.2.0;roslyn-dotnet-4.3.0;roslyn-dotnet-4.4.0;roslyn-dotnet-4.5.0;roslyn-dotnet-4.6.0;roslyn-dotnet-4.7.0;roslyn-dotnet-4.8.0;roslyn-dotnet-4.9.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Microsoft.CodeAnalysis.ISymbol x, class Microsoft.CodeAnalysis.ISymbol y) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.SymbolEqualityComparer.Equals(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.ISymbol)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (x As ISymbol, y As ISymbol) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.CodeAnalysis.ISymbol * Microsoft.CodeAnalysis.ISymbol -&gt; bool" Usage="symbolEqualityComparer.Equals (x, y)" />
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.CodeAnalysis.ISymbol x, Microsoft.CodeAnalysis.ISymbol y);" FrameworkAlternate="roslyn-dotnet-3.3.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.3.0.0</AssemblyVersion>
        <AssemblyVersion>3.4.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.10.0.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="Microsoft.CodeAnalysis.ISymbol" />
        <Parameter Name="y" Type="Microsoft.CodeAnalysis.ISymbol" />
      </Parameters>
      <Docs>
        <param name="x">The first symbol to compare</param>
        <param name="y">The second symbol to compare</param>
        <summary>
            Determines if two <see cref="T:Microsoft.CodeAnalysis.ISymbol" /> instances are equal according to the rules of this comparer
            </summary>
        <returns>True if the symbols are equivalent</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (Microsoft.CodeAnalysis.ISymbol? obj);" FrameworkAlternate="roslyn-dotnet-3.10.0;roslyn-dotnet-3.11.0;roslyn-dotnet-3.4.0;roslyn-dotnet-3.5.0;roslyn-dotnet-3.6.0;roslyn-dotnet-3.7.0;roslyn-dotnet-3.8.0;roslyn-dotnet-3.9.0;roslyn-dotnet-4.0.1;roslyn-dotnet-4.1.0;roslyn-dotnet-4.2.0;roslyn-dotnet-4.3.0;roslyn-dotnet-4.4.0;roslyn-dotnet-4.5.0;roslyn-dotnet-4.6.0;roslyn-dotnet-4.7.0;roslyn-dotnet-4.8.0;roslyn-dotnet-4.9.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetHashCode(class Microsoft.CodeAnalysis.ISymbol obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.SymbolEqualityComparer.GetHashCode(Microsoft.CodeAnalysis.ISymbol)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (obj As ISymbol) As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : Microsoft.CodeAnalysis.ISymbol -&gt; int" Usage="symbolEqualityComparer.GetHashCode obj" />
      <MemberSignature Language="C#" Value="public int GetHashCode (Microsoft.CodeAnalysis.ISymbol obj);" FrameworkAlternate="roslyn-dotnet-3.3.1" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.3.0.0</AssemblyVersion>
        <AssemblyVersion>3.4.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.10.0.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Microsoft.CodeAnalysis.ISymbol" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeNullability">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.CodeAnalysis.SymbolEqualityComparer IncludeNullability;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.CodeAnalysis.SymbolEqualityComparer IncludeNullability" />
      <MemberSignature Language="DocId" Value="F:Microsoft.CodeAnalysis.SymbolEqualityComparer.IncludeNullability" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IncludeNullability As SymbolEqualityComparer " />
      <MemberSignature Language="F#" Value=" staticval mutable IncludeNullability : Microsoft.CodeAnalysis.SymbolEqualityComparer" Usage="Microsoft.CodeAnalysis.SymbolEqualityComparer.IncludeNullability" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.3.0.0</AssemblyVersion>
        <AssemblyVersion>3.4.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.10.0.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SymbolEqualityComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Compares  two <see cref="T:Microsoft.CodeAnalysis.ISymbol" /> instances, considering that a reference type and the same nullable reference type are not equal.
            </summary>
        <remarks>
            Comparing <c>string</c> and <c>string?</c> will not return equal. Use <see cref="F:Microsoft.CodeAnalysis.SymbolEqualityComparer.Default" /> if you want them to be considered equal.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
