<Type Name="ArrayCreationExpressionSyntax" FullName="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax">
  <TypeSignature Language="C#" Value="public sealed class ArrayCreationExpressionSyntax : Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ArrayCreationExpressionSyntax extends Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ArrayCreationExpressionSyntax&#xA;Inherits NewExpressionSyntax" />
  <TypeSignature Language="F#" Value="type ArrayCreationExpressionSyntax = class&#xA;    inherit NewExpressionSyntax" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArrayCreationExpressionSyntax sealed : Microsoft::CodeAnalysis::VisualBasic::Syntax::NewExpressionSyntax" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
 Represents an expression that creates a new array.
 </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor -&gt; unit" Usage="arrayCreationExpressionSyntax.Accept visitor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public override TResult Accept&lt;TResult&gt; (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResult Accept&lt;TResult&gt;(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1&lt;!!TResult&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResult) (visitor As VisualBasicSyntaxVisitor(Of TResult)) As TResult" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;'Result&gt; -&gt; 'Result" Usage="arrayCreationExpressionSyntax.Accept visitor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; override TResult Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor&lt;TResult&gt; ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArrayBoundsArguments">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax AddArrayBoundsArguments (params Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax AddArrayBoundsArguments(class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.AddArrayBoundsArguments(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddArrayBoundsArguments (ParamArray items As ArgumentSyntax()) As ArrayCreationExpressionSyntax" />
      <MemberSignature Language="F#" Value="member this.AddArrayBoundsArguments : Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax[] -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax" Usage="arrayCreationExpressionSyntax.AddArrayBoundsArguments items" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::ArrayCreationExpressionSyntax ^ AddArrayBoundsArguments(... cli::array &lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::ArgumentSyntax ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributeLists">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax AddAttributeLists (params Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax AddAttributeLists(class Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddAttributeLists (ParamArray items As AttributeListSyntax()) As ArrayCreationExpressionSyntax" />
      <MemberSignature Language="F#" Value="override this.AddAttributeLists : Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[] -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax" Usage="arrayCreationExpressionSyntax.AddAttributeLists items" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::ArrayCreationExpressionSyntax ^ AddAttributeLists(... cli::array &lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::AttributeListSyntax ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddInitializerInitializers">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax AddInitializerInitializers (params Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax AddInitializerInitializers(class Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.AddInitializerInitializers(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddInitializerInitializers (ParamArray items As ExpressionSyntax()) As ArrayCreationExpressionSyntax" />
      <MemberSignature Language="F#" Value="member this.AddInitializerInitializers : Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax[] -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax" Usage="arrayCreationExpressionSyntax.AddInitializerInitializers items" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::ArrayCreationExpressionSyntax ^ AddInitializerInitializers(... cli::array &lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRankSpecifiers">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax AddRankSpecifiers (params Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax AddRankSpecifiers(class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.AddRankSpecifiers(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddRankSpecifiers (ParamArray items As ArrayRankSpecifierSyntax()) As ArrayCreationExpressionSyntax" />
      <MemberSignature Language="F#" Value="member this.AddRankSpecifiers : Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax[] -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax" Usage="arrayCreationExpressionSyntax.AddRankSpecifiers items" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::ArrayCreationExpressionSyntax ^ AddRankSpecifiers(... cli::array &lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::ArrayRankSpecifierSyntax ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrayBounds">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax ArrayBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax ArrayBounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.ArrayBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArrayBounds As ArgumentListSyntax" />
      <MemberSignature Language="F#" Value="member this.ArrayBounds : Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.ArrayBounds" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::ArgumentListSyntax ^ ArrayBounds { Microsoft::CodeAnalysis::VisualBasic::Syntax::ArgumentListSyntax ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The optional array bounds, such as "(4)" or "(0 to 5, 0 To 6)".
 </summary>
        <value>To be added.</value>
        <remarks>
 This child is optional. If it is not present, then Nothing is returned.
 </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeLists">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax&gt; AttributeLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax&gt; AttributeLists" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.AttributeLists" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeLists As SyntaxList(Of AttributeListSyntax)" />
      <MemberSignature Language="F#" Value="member this.AttributeLists : Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax&gt;" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.AttributeLists" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::AttributeListSyntax ^&gt; AttributeLists { Microsoft::CodeAnalysis::SyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::AttributeListSyntax ^&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 A list of all attribute lists on the type. If no attributes were specified, an
 empty list is returned.
 </summary>
        <value>To be added.</value>
        <remarks>
 If nothing is present, an empty list is returned.
 </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initializer">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax Initializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax Initializer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.Initializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Initializer As CollectionInitializerSyntax" />
      <MemberSignature Language="F#" Value="member this.Initializer : Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.Initializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::CollectionInitializerSyntax ^ Initializer { Microsoft::CodeAnalysis::VisualBasic::Syntax::CollectionInitializerSyntax ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The initializer including the braces.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken NewKeyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken NewKeyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.NewKeyword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewKeyword As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.NewKeyword : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.NewKeyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken NewKeyword { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The "New" keyword.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RankSpecifiers">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax&gt; RankSpecifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax&gt; RankSpecifiers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.RankSpecifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RankSpecifiers As SyntaxList(Of ArrayRankSpecifierSyntax)" />
      <MemberSignature Language="F#" Value="member this.RankSpecifiers : Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax&gt;" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.RankSpecifiers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::ArrayRankSpecifierSyntax ^&gt; RankSpecifiers { Microsoft::CodeAnalysis::SyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::ArrayRankSpecifierSyntax ^&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 A list of array modifiers such as "()" or "(,)". If no array modifiers were
 present, an empty list is returned.
 </summary>
        <value>To be added.</value>
        <remarks>
 If nothing is present, an empty list is returned.
 </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As TypeSyntax" />
      <MemberSignature Language="F#" Value="member this.Type : Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::TypeSyntax ^ Type { Microsoft::CodeAnalysis::VisualBasic::Syntax::TypeSyntax ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The element type of the array being created.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax Update (Microsoft.CodeAnalysis.SyntaxToken newKeyword, Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax&gt; attributeLists, Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax type, Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax arrayBounds, Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax&gt; rankSpecifiers, Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax Update(valuetype Microsoft.CodeAnalysis.SyntaxToken newKeyword, valuetype Microsoft.CodeAnalysis.SyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax&gt; attributeLists, class Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax type, class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax arrayBounds, valuetype Microsoft.CodeAnalysis.SyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax&gt; rankSpecifiers, class Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (newKeyword As SyntaxToken, attributeLists As SyntaxList(Of AttributeListSyntax), type As TypeSyntax, arrayBounds As ArgumentListSyntax, rankSpecifiers As SyntaxList(Of ArrayRankSpecifierSyntax), initializer As CollectionInitializerSyntax) As ArrayCreationExpressionSyntax" />
      <MemberSignature Language="F#" Value="member this.Update : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax&gt; * Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax * Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax * Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax&gt; * Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax" Usage="arrayCreationExpressionSyntax.Update (newKeyword, attributeLists, type, arrayBounds, rankSpecifiers, initializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::ArrayCreationExpressionSyntax ^ Update(Microsoft::CodeAnalysis::SyntaxToken newKeyword, Microsoft::CodeAnalysis::SyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::AttributeListSyntax ^&gt; attributeLists, Microsoft::CodeAnalysis::VisualBasic::Syntax::TypeSyntax ^ type, Microsoft::CodeAnalysis::VisualBasic::Syntax::ArgumentListSyntax ^ arrayBounds, Microsoft::CodeAnalysis::SyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::ArrayRankSpecifierSyntax ^&gt; rankSpecifiers, Microsoft::CodeAnalysis::VisualBasic::Syntax::CollectionInitializerSyntax ^ initializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="attributeLists" Type="Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax&gt;" />
        <Parameter Name="type" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax" />
        <Parameter Name="arrayBounds" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax" />
        <Parameter Name="rankSpecifiers" Type="Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax&gt;" />
        <Parameter Name="initializer" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax" />
      </Parameters>
      <Docs>
        <param name="newKeyword">
 The value for the NewKeyword property.
 </param>
        <param name="attributeLists">
 The value for the AttributeLists property.
 </param>
        <param name="type">
 The value for the Type property.
 </param>
        <param name="arrayBounds">
 The value for the ArrayBounds property.
 </param>
        <param name="rankSpecifiers">
 The value for the RankSpecifiers property.
 </param>
        <param name="initializer">
 The value for the Initializer property.
 </param>
        <summary>
 Returns a copy of this with the specified changes. Returns this instance if
 there are no actual changes.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithArrayBounds">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax WithArrayBounds (Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax arrayBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax WithArrayBounds(class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax arrayBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.WithArrayBounds(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithArrayBounds (arrayBounds As ArgumentListSyntax) As ArrayCreationExpressionSyntax" />
      <MemberSignature Language="F#" Value="member this.WithArrayBounds : Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax" Usage="arrayCreationExpressionSyntax.WithArrayBounds arrayBounds" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::ArrayCreationExpressionSyntax ^ WithArrayBounds(Microsoft::CodeAnalysis::VisualBasic::Syntax::ArgumentListSyntax ^ arrayBounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayBounds" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax" />
      </Parameters>
      <Docs>
        <param name="arrayBounds">To be added.</param>
        <summary>
 Returns a copy of this with the ArrayBounds property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAttributeLists">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax WithAttributeLists (Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax&gt; attributeLists);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax WithAttributeLists(valuetype Microsoft.CodeAnalysis.SyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax&gt; attributeLists) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAttributeLists (attributeLists As SyntaxList(Of AttributeListSyntax)) As ArrayCreationExpressionSyntax" />
      <MemberSignature Language="F#" Value="override this.WithAttributeLists : Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax&gt; -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax" Usage="arrayCreationExpressionSyntax.WithAttributeLists attributeLists" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::ArrayCreationExpressionSyntax ^ WithAttributeLists(Microsoft::CodeAnalysis::SyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::AttributeListSyntax ^&gt; attributeLists);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeLists" Type="Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax&gt;" />
      </Parameters>
      <Docs>
        <param name="attributeLists">To be added.</param>
        <summary>
 Returns a copy of this with the AttributeLists property changed to the
 specified value. Returns this instance if the specified value is the same as
 the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithInitializer">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax WithInitializer (Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax WithInitializer(class Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.WithInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithInitializer (initializer As CollectionInitializerSyntax) As ArrayCreationExpressionSyntax" />
      <MemberSignature Language="F#" Value="member this.WithInitializer : Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax" Usage="arrayCreationExpressionSyntax.WithInitializer initializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::ArrayCreationExpressionSyntax ^ WithInitializer(Microsoft::CodeAnalysis::VisualBasic::Syntax::CollectionInitializerSyntax ^ initializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax" />
      </Parameters>
      <Docs>
        <param name="initializer">To be added.</param>
        <summary>
 Returns a copy of this with the Initializer property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithNewKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax WithNewKeyword (Microsoft.CodeAnalysis.SyntaxToken newKeyword);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax WithNewKeyword(valuetype Microsoft.CodeAnalysis.SyntaxToken newKeyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.WithNewKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithNewKeyword (newKeyword As SyntaxToken) As ArrayCreationExpressionSyntax" />
      <MemberSignature Language="F#" Value="override this.WithNewKeyword : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax" Usage="arrayCreationExpressionSyntax.WithNewKeyword newKeyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::ArrayCreationExpressionSyntax ^ WithNewKeyword(Microsoft::CodeAnalysis::SyntaxToken newKeyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="newKeyword">To be added.</param>
        <summary>
 Returns a copy of this with the NewKeyword property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithRankSpecifiers">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax WithRankSpecifiers (Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax&gt; rankSpecifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax WithRankSpecifiers(valuetype Microsoft.CodeAnalysis.SyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax&gt; rankSpecifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.WithRankSpecifiers(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithRankSpecifiers (rankSpecifiers As SyntaxList(Of ArrayRankSpecifierSyntax)) As ArrayCreationExpressionSyntax" />
      <MemberSignature Language="F#" Value="member this.WithRankSpecifiers : Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax&gt; -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax" Usage="arrayCreationExpressionSyntax.WithRankSpecifiers rankSpecifiers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::ArrayCreationExpressionSyntax ^ WithRankSpecifiers(Microsoft::CodeAnalysis::SyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::ArrayRankSpecifierSyntax ^&gt; rankSpecifiers);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rankSpecifiers" Type="Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax&gt;" />
      </Parameters>
      <Docs>
        <param name="rankSpecifiers">To be added.</param>
        <summary>
 Returns a copy of this with the RankSpecifiers property changed to the
 specified value. Returns this instance if the specified value is the same as
 the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithType">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax WithType (Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax type);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax WithType(class Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.WithType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithType (type As TypeSyntax) As ArrayCreationExpressionSyntax" />
      <MemberSignature Language="F#" Value="member this.WithType : Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax" Usage="arrayCreationExpressionSyntax.WithType type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::ArrayCreationExpressionSyntax ^ WithType(Microsoft::CodeAnalysis::VisualBasic::Syntax::TypeSyntax ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <summary>
 Returns a copy of this with the Type property changed to the specified value.
 Returns this instance if the specified value is the same as the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>