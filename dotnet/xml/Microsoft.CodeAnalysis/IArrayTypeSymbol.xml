<Type Name="IArrayTypeSymbol" FullName="Microsoft.CodeAnalysis.IArrayTypeSymbol">
  <TypeSignature Language="C#" Value="public interface IArrayTypeSymbol : IEquatable&lt;Microsoft.CodeAnalysis.ISymbol&gt;, Microsoft.CodeAnalysis.ITypeSymbol" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IArrayTypeSymbol implements class Microsoft.CodeAnalysis.INamespaceOrTypeSymbol, class Microsoft.CodeAnalysis.ISymbol, class Microsoft.CodeAnalysis.ITypeSymbol, class System.IEquatable`1&lt;class Microsoft.CodeAnalysis.ISymbol&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.IArrayTypeSymbol" />
  <TypeSignature Language="VB.NET" Value="Public Interface IArrayTypeSymbol&#xA;Implements IEquatable(Of ISymbol), ITypeSymbol" />
  <TypeSignature Language="F#" Value="type IArrayTypeSymbol = interface&#xA;    interface ITypeSymbol&#xA;    interface INamespaceOrTypeSymbol&#xA;    interface ISymbol&#xA;    interface IEquatable&lt;ISymbol&gt;" />
  <TypeSignature Language="C++ CLI" Value="public interface class IArrayTypeSymbol : IEquatable&lt;Microsoft::CodeAnalysis::ISymbol ^&gt;, Microsoft::CodeAnalysis::ITypeSymbol" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.CodeAnalysis.INamespaceOrTypeSymbol</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.CodeAnalysis.ISymbol</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.CodeAnalysis.ITypeSymbol</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.CodeAnalysis.ISymbol&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents an array.
            </summary>
    <remarks>
            This interface is reserved for implementation by its associated APIs. We reserve the right to
            change it in the future.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="CustomModifiers">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CustomModifier&gt; CustomModifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.CustomModifier&gt; CustomModifiers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IArrayTypeSymbol.CustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomModifiers As ImmutableArray(Of CustomModifier)" />
      <MemberSignature Language="F#" Value="member this.CustomModifiers : System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CustomModifier&gt;" Usage="Microsoft.CodeAnalysis.IArrayTypeSymbol.CustomModifiers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::CustomModifier ^&gt; CustomModifiers { System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::CustomModifier ^&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CustomModifier&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Custom modifiers associated with the array type, or an empty array if there are none.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementType">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.ITypeSymbol ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.ITypeSymbol ElementType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IArrayTypeSymbol.ElementType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementType As ITypeSymbol" />
      <MemberSignature Language="F#" Value="member this.ElementType : Microsoft.CodeAnalysis.ITypeSymbol" Usage="Microsoft.CodeAnalysis.IArrayTypeSymbol.ElementType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::ITypeSymbol ^ ElementType { Microsoft::CodeAnalysis::ITypeSymbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ITypeSymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type of the elements stored in the array.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.CodeAnalysis.IArrayTypeSymbol other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Microsoft.CodeAnalysis.IArrayTypeSymbol other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.IArrayTypeSymbol.Equals(Microsoft.CodeAnalysis.IArrayTypeSymbol)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As IArrayTypeSymbol) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Equals : Microsoft.CodeAnalysis.IArrayTypeSymbol -&gt; bool" Usage="iArrayTypeSymbol.Equals other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(Microsoft::CodeAnalysis::IArrayTypeSymbol ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.CodeAnalysis.IArrayTypeSymbol" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSZArray">
      <MemberSignature Language="C#" Value="public bool IsSZArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSZArray" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IArrayTypeSymbol.IsSZArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSZArray As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsSZArray : bool" Usage="Microsoft.CodeAnalysis.IArrayTypeSymbol.IsSZArray" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSZArray { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Is this a zero-based one-dimensional array, i.e. SZArray in CLR terms.
            SZArray is an array type encoded in metadata with ELEMENT_TYPE_SZARRAY (always single-dim array with 0 lower bound).
            Non-SZArray type is encoded in metadata with ELEMENT_TYPE_ARRAY and with optional sizes and lower bounds. Even though 
            non-SZArray can also be a single-dim array with 0 lower bound, the encoding of these types in metadata is distinct.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LowerBounds">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;int&gt; LowerBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;int32&gt; LowerBounds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IArrayTypeSymbol.LowerBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LowerBounds As ImmutableArray(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.LowerBounds : System.Collections.Immutable.ImmutableArray&lt;int&gt;" Usage="Microsoft.CodeAnalysis.IArrayTypeSymbol.LowerBounds" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Immutable::ImmutableArray&lt;int&gt; LowerBounds { System::Collections::Immutable::ImmutableArray&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specified lower bounds for dimensions, by position. The length can be less than <see cref="P:Microsoft.CodeAnalysis.IArrayTypeSymbol.Rank" />,
            meaning that some trailing dimensions don't have the lower bound specified.
            The most common case is all dimensions are zero bound - a default (Nothing in VB) array is returned in this case.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Rank">
      <MemberSignature Language="C#" Value="public int Rank { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rank" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IArrayTypeSymbol.Rank" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rank As Integer" />
      <MemberSignature Language="F#" Value="member this.Rank : int" Usage="Microsoft.CodeAnalysis.IArrayTypeSymbol.Rank" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rank { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the number of dimensions of this array. A regular single-dimensional array
            has rank 1, a two-dimensional array has rank 2, etc.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Sizes">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;int&gt; Sizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;int32&gt; Sizes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IArrayTypeSymbol.Sizes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Sizes As ImmutableArray(Of Integer)" />
      <MemberSignature Language="F#" Value="member this.Sizes : System.Collections.Immutable.ImmutableArray&lt;int&gt;" Usage="Microsoft.CodeAnalysis.IArrayTypeSymbol.Sizes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Immutable::ImmutableArray&lt;int&gt; Sizes { System::Collections::Immutable::ImmutableArray&lt;int&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specified sizes for dimensions, by position. The length can be less than <see cref="P:Microsoft.CodeAnalysis.IArrayTypeSymbol.Rank" />,
            meaning that some trailing dimensions don't have the size specified.
            The most common case is none of the dimensions have the size specified - an empty array is returned.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>