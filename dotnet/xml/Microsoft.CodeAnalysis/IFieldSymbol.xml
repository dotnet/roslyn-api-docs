<Type Name="IFieldSymbol" FullName="Microsoft.CodeAnalysis.IFieldSymbol">
  <TypeSignature Language="C#" Value="public interface IFieldSymbol : IEquatable&lt;Microsoft.CodeAnalysis.ISymbol&gt;, Microsoft.CodeAnalysis.ISymbol" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IFieldSymbol implements class Microsoft.CodeAnalysis.ISymbol, class System.IEquatable`1&lt;class Microsoft.CodeAnalysis.ISymbol&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.IFieldSymbol" />
  <TypeSignature Language="VB.NET" Value="Public Interface IFieldSymbol&#xA;Implements IEquatable(Of ISymbol), ISymbol" />
  <TypeSignature Language="F#" Value="type IFieldSymbol = interface&#xA;    interface ISymbol&#xA;    interface IEquatable&lt;ISymbol&gt;" />
  <TypeSignature Language="C++ CLI" Value="public interface class IFieldSymbol : IEquatable&lt;Microsoft::CodeAnalysis::ISymbol ^&gt;, Microsoft::CodeAnalysis::ISymbol" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.CodeAnalysis.ISymbol</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.CodeAnalysis.ISymbol&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents a field in a class, struct or enum.
            </summary>
    <remarks>
            This interface is reserved for implementation by its associated APIs. We reserve the right to
            change it in the future.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="AssociatedSymbol">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.ISymbol AssociatedSymbol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.ISymbol AssociatedSymbol" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IFieldSymbol.AssociatedSymbol" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssociatedSymbol As ISymbol" />
      <MemberSignature Language="F#" Value="member this.AssociatedSymbol : Microsoft.CodeAnalysis.ISymbol" Usage="Microsoft.CodeAnalysis.IFieldSymbol.AssociatedSymbol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::ISymbol ^ AssociatedSymbol { Microsoft::CodeAnalysis::ISymbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ISymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If this field serves as a backing variable for an automatically generated
            property or a field-like event, returns that 
            property/event. Otherwise returns null.
            Note, the set of possible associated symbols might be expanded in the future to 
            reflect changes in the languages.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstantValue">
      <MemberSignature Language="C#" Value="public object ConstantValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConstantValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IFieldSymbol.ConstantValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstantValue As Object" />
      <MemberSignature Language="F#" Value="member this.ConstantValue : obj" Usage="Microsoft.CodeAnalysis.IFieldSymbol.ConstantValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConstantValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the constant value of this field
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrespondingTupleField">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IFieldSymbol CorrespondingTupleField { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IFieldSymbol CorrespondingTupleField" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IFieldSymbol.CorrespondingTupleField" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CorrespondingTupleField As IFieldSymbol" />
      <MemberSignature Language="F#" Value="member this.CorrespondingTupleField : Microsoft.CodeAnalysis.IFieldSymbol" Usage="Microsoft.CodeAnalysis.IFieldSymbol.CorrespondingTupleField" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::IFieldSymbol ^ CorrespondingTupleField { Microsoft::CodeAnalysis::IFieldSymbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IFieldSymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If this field represents a tuple element, returns a corresponding default element field.
            Otherwise returns null.
            </summary>
        <value>To be added.</value>
        <remarks>
            A tuple type will always have default elements such as Item1, Item2, Item3...
            This API allows matching a field that represents a named element, such as "Alice" 
            to the corresponding default element field such as "Item1"
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomModifiers">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CustomModifier&gt; CustomModifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.CustomModifier&gt; CustomModifiers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IFieldSymbol.CustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomModifiers As ImmutableArray(Of CustomModifier)" />
      <MemberSignature Language="F#" Value="member this.CustomModifiers : System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CustomModifier&gt;" Usage="Microsoft.CodeAnalysis.IFieldSymbol.CustomModifiers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::CustomModifier ^&gt; CustomModifiers { System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::CustomModifier ^&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CustomModifier&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns custom modifiers associated with the field, or an empty array if there are none.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasConstantValue">
      <MemberSignature Language="C#" Value="public bool HasConstantValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasConstantValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IFieldSymbol.HasConstantValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasConstantValue As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasConstantValue : bool" Usage="Microsoft.CodeAnalysis.IFieldSymbol.HasConstantValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasConstantValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns false if the field wasn't declared as "const", or constant value was omitted or erroneous.
            True otherwise.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConst">
      <MemberSignature Language="C#" Value="public bool IsConst { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConst" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IFieldSymbol.IsConst" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConst As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsConst : bool" Usage="Microsoft.CodeAnalysis.IFieldSymbol.IsConst" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConst { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if this field was declared as "const" (i.e. is a constant declaration).
            Also returns true for an enum member.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSizeBuffer">
      <MemberSignature Language="C#" Value="public bool IsFixedSizeBuffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSizeBuffer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IFieldSymbol.IsFixedSizeBuffer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixedSizeBuffer As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsFixedSizeBuffer : bool" Usage="Microsoft.CodeAnalysis.IFieldSymbol.IsFixedSizeBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if this field was declared as "fixed".
            Note that for a fixed-size buffer declaration, this.Type will be a pointer type, of which
            the pointed-to type will be the declared element type of the fixed-size buffer.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IFieldSymbol.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="Microsoft.CodeAnalysis.IFieldSymbol.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if this field was declared as "readonly". 
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVolatile">
      <MemberSignature Language="C#" Value="public bool IsVolatile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVolatile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IFieldSymbol.IsVolatile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVolatile As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsVolatile : bool" Usage="Microsoft.CodeAnalysis.IFieldSymbol.IsVolatile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVolatile { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if this field was declared as "volatile". 
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullableAnnotation">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.NullableAnnotation NullableAnnotation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.NullableAnnotation NullableAnnotation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IFieldSymbol.NullableAnnotation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NullableAnnotation As NullableAnnotation" />
      <MemberSignature Language="F#" Value="member this.NullableAnnotation : Microsoft.CodeAnalysis.NullableAnnotation" Usage="Microsoft.CodeAnalysis.IFieldSymbol.NullableAnnotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.NullableAnnotation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the top-level nullability of this field.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalDefinition">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IFieldSymbol OriginalDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IFieldSymbol OriginalDefinition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IFieldSymbol.OriginalDefinition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalDefinition As IFieldSymbol" />
      <MemberSignature Language="F#" Value="member this.OriginalDefinition : Microsoft.CodeAnalysis.IFieldSymbol" Usage="Microsoft.CodeAnalysis.IFieldSymbol.OriginalDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::IFieldSymbol ^ OriginalDefinition { Microsoft::CodeAnalysis::IFieldSymbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IFieldSymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get the original definition of this symbol. If this symbol is derived from another
            symbol by (say) type substitution, this gets the original symbol, as it was defined in
            source or metadata.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.ITypeSymbol Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.ITypeSymbol Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IFieldSymbol.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As ITypeSymbol" />
      <MemberSignature Language="F#" Value="member this.Type : Microsoft.CodeAnalysis.ITypeSymbol" Usage="Microsoft.CodeAnalysis.IFieldSymbol.Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::ITypeSymbol ^ Type { Microsoft::CodeAnalysis::ITypeSymbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ITypeSymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type of this field.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>