<Type Name="VarianceKind" FullName="Microsoft.CodeAnalysis.VarianceKind">
  <TypeSignature Language="C#" Value="public enum VarianceKind" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed VarianceKind extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.VarianceKind" />
  <TypeSignature Language="VB.NET" Value="Public Enum VarianceKind" />
  <TypeSignature Language="F#" Value="type VarianceKind = " />
  <TypeSignature Language="C++ CLI" Value="public enum class VarianceKind" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
            An enumeration declaring the kinds of variance supported for generic type parameters.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="In">
      <MemberSignature Language="C#" Value="In" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.CodeAnalysis.VarianceKind In = int16(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.CodeAnalysis.VarianceKind.In" />
      <MemberSignature Language="VB.NET" Value="In" />
      <MemberSignature Language="F#" Value="In = 2" Usage="Microsoft.CodeAnalysis.VarianceKind.In" />
      <MemberSignature Language="C++ CLI" Value="In" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VarianceKind</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
            Contravariant (<c>in</c>).
            </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.CodeAnalysis.VarianceKind None = int16(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.CodeAnalysis.VarianceKind.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="Microsoft.CodeAnalysis.VarianceKind.None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VarianceKind</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
            Invariant.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="Out">
      <MemberSignature Language="C#" Value="Out" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.CodeAnalysis.VarianceKind Out = int16(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.CodeAnalysis.VarianceKind.Out" />
      <MemberSignature Language="VB.NET" Value="Out" />
      <MemberSignature Language="F#" Value="Out = 1" Usage="Microsoft.CodeAnalysis.VarianceKind.Out" />
      <MemberSignature Language="C++ CLI" Value="Out" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VarianceKind</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
            Covariant (<c>out</c>).
            </summary>
      </Docs>
    </Member>
  </Members>
</Type>