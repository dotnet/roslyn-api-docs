<Type Name="GroupByClauseSyntax" FullName="Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax">
  <TypeSignature Language="C#" Value="public sealed class GroupByClauseSyntax : Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryClauseSyntax" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed GroupByClauseSyntax extends Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryClauseSyntax" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GroupByClauseSyntax&#xA;Inherits QueryClauseSyntax" />
  <TypeSignature Language="F#" Value="type GroupByClauseSyntax = class&#xA;    inherit QueryClauseSyntax" />
  <TypeSignature Language="C++ CLI" Value="public ref class GroupByClauseSyntax sealed : Microsoft::CodeAnalysis::VisualBasic::Syntax::QueryClauseSyntax" />
  <TypeSignature Language="C++ CX" Value="public ref class GroupByClauseSyntax sealed : Microsoft::CodeAnalysis::VisualBasic::Syntax::QueryClauseSyntax" />
  <TypeSignature Language="C++ WINRT" Value="class GroupByClauseSyntax sealed : Microsoft::CodeAnalysis::VisualBasic::Syntax::QueryClauseSyntax" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryClauseSyntax</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
 Represents the "Group By" query operator.
 </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor -&gt; unit" Usage="groupByClauseSyntax.Accept visitor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor ^ visitor);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override void Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor ^ visitor);" />
      <MemberSignature Language="C++ WINRT" Value=" override void Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor const &amp; visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public override TResult Accept&lt;TResult&gt; (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResult Accept&lt;TResult&gt;(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1&lt;!!TResult&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResult) (visitor As VisualBasicSyntaxVisitor(Of TResult)) As TResult" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;'Result&gt; -&gt; 'Result" Usage="groupByClauseSyntax.Accept visitor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; override TResult Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor&lt;TResult&gt; ^ visitor);" />
      <MemberSignature Language="C++ WINRT" Value="template &lt;typename TResult&gt;&#xA; override TResult Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor&lt;TResult&gt; const &amp; visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAggregationVariables">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax AddAggregationVariables (params Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax AddAggregationVariables(class Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.AddAggregationVariables(Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddAggregationVariables (ParamArray items As AggregationRangeVariableSyntax()) As GroupByClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.AddAggregationVariables : Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax[] -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax" Usage="groupByClauseSyntax.AddAggregationVariables items" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::GroupByClauseSyntax ^ AddAggregationVariables(... cli::array &lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::AggregationRangeVariableSyntax ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItems">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax AddItems (params Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax AddItems(class Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.AddItems(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItems (ParamArray items As ExpressionRangeVariableSyntax()) As GroupByClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.AddItems : Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax[] -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax" Usage="groupByClauseSyntax.AddItems items" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::GroupByClauseSyntax ^ AddItems(... cli::array &lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionRangeVariableSyntax ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeys">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax AddKeys (params Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax AddKeys(class Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.AddKeys(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddKeys (ParamArray items As ExpressionRangeVariableSyntax()) As GroupByClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.AddKeys : Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax[] -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax" Usage="groupByClauseSyntax.AddKeys items" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::GroupByClauseSyntax ^ AddKeys(... cli::array &lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionRangeVariableSyntax ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AggregationVariables">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt; AggregationVariables { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SeparatedSyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt; AggregationVariables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.AggregationVariables" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AggregationVariables As SeparatedSyntaxList(Of AggregationRangeVariableSyntax)" />
      <MemberSignature Language="F#" Value="member this.AggregationVariables : Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt;" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.AggregationVariables" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SeparatedSyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::AggregationRangeVariableSyntax ^&gt; AggregationVariables { Microsoft::CodeAnalysis::SeparatedSyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::AggregationRangeVariableSyntax ^&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The list of new variables that calculate aggregations.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ByKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken ByKeyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken ByKeyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.ByKeyword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ByKeyword As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.ByKeyword : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.ByKeyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken ByKeyword { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The "By" keyword.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken GroupKeyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken GroupKeyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.GroupKeyword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GroupKeyword As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.GroupKeyword : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.GroupKeyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken GroupKeyword { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The "Group" keyword.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IntoKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken IntoKeyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken IntoKeyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.IntoKeyword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IntoKeyword As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.IntoKeyword : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.IntoKeyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken IntoKeyword { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SeparatedSyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As SeparatedSyntaxList(Of ExpressionRangeVariableSyntax)" />
      <MemberSignature Language="F#" Value="member this.Items : Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt;" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.Items" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SeparatedSyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionRangeVariableSyntax ^&gt; Items { Microsoft::CodeAnalysis::SeparatedSyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionRangeVariableSyntax ^&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The optional list of variables being grouped; the contents of the Group clause.
 If none were specified, an empty list is returned.
 </summary>
        <value>To be added.</value>
        <remarks>
 If nothing is present, an empty list is returned.
 </remarks>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SeparatedSyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As SeparatedSyntaxList(Of ExpressionRangeVariableSyntax)" />
      <MemberSignature Language="F#" Value="member this.Keys : Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt;" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.Keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SeparatedSyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionRangeVariableSyntax ^&gt; Keys { Microsoft::CodeAnalysis::SeparatedSyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionRangeVariableSyntax ^&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The key values being used for grouping.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax Update (Microsoft.CodeAnalysis.SyntaxToken groupKeyword, Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt; items, Microsoft.CodeAnalysis.SyntaxToken byKeyword, Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt; keys, Microsoft.CodeAnalysis.SyntaxToken intoKeyword, Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt; aggregationVariables);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax Update(valuetype Microsoft.CodeAnalysis.SyntaxToken groupKeyword, valuetype Microsoft.CodeAnalysis.SeparatedSyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt; items, valuetype Microsoft.CodeAnalysis.SyntaxToken byKeyword, valuetype Microsoft.CodeAnalysis.SeparatedSyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt; keys, valuetype Microsoft.CodeAnalysis.SyntaxToken intoKeyword, valuetype Microsoft.CodeAnalysis.SeparatedSyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt; aggregationVariables) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax})" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (groupKeyword As SyntaxToken, items As SeparatedSyntaxList(Of ExpressionRangeVariableSyntax), byKeyword As SyntaxToken, keys As SeparatedSyntaxList(Of ExpressionRangeVariableSyntax), intoKeyword As SyntaxToken, aggregationVariables As SeparatedSyntaxList(Of AggregationRangeVariableSyntax)) As GroupByClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.Update : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt; * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt; * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt; -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax" Usage="groupByClauseSyntax.Update (groupKeyword, items, byKeyword, keys, intoKeyword, aggregationVariables)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::GroupByClauseSyntax ^ Update(Microsoft::CodeAnalysis::SyntaxToken groupKeyword, Microsoft::CodeAnalysis::SeparatedSyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionRangeVariableSyntax ^&gt; items, Microsoft::CodeAnalysis::SyntaxToken byKeyword, Microsoft::CodeAnalysis::SeparatedSyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionRangeVariableSyntax ^&gt; keys, Microsoft::CodeAnalysis::SyntaxToken intoKeyword, Microsoft::CodeAnalysis::SeparatedSyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::AggregationRangeVariableSyntax ^&gt; aggregationVariables);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="items" Type="Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt;" />
        <Parameter Name="byKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="keys" Type="Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt;" />
        <Parameter Name="intoKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="aggregationVariables" Type="Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt;" />
      </Parameters>
      <Docs>
        <param name="groupKeyword">
 The value for the GroupKeyword property.
 </param>
        <param name="items">
 The value for the Items property.
 </param>
        <param name="byKeyword">
 The value for the ByKeyword property.
 </param>
        <param name="keys">
 The value for the Keys property.
 </param>
        <param name="intoKeyword">
 The value for the IntoKeyword property.
 </param>
        <param name="aggregationVariables">
 The value for the AggregationVariables property.
 </param>
        <summary>
 Returns a copy of this with the specified changes. Returns this instance if
 there are no actual changes.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAggregationVariables">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax WithAggregationVariables (Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt; aggregationVariables);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax WithAggregationVariables(valuetype Microsoft.CodeAnalysis.SeparatedSyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt; aggregationVariables) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.WithAggregationVariables(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAggregationVariables (aggregationVariables As SeparatedSyntaxList(Of AggregationRangeVariableSyntax)) As GroupByClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithAggregationVariables : Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt; -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax" Usage="groupByClauseSyntax.WithAggregationVariables aggregationVariables" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::GroupByClauseSyntax ^ WithAggregationVariables(Microsoft::CodeAnalysis::SeparatedSyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::AggregationRangeVariableSyntax ^&gt; aggregationVariables);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aggregationVariables" Type="Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax&gt;" />
      </Parameters>
      <Docs>
        <param name="aggregationVariables">To be added.</param>
        <summary>
 Returns a copy of this with the AggregationVariables property changed to the
 specified value. Returns this instance if the specified value is the same as
 the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithByKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax WithByKeyword (Microsoft.CodeAnalysis.SyntaxToken byKeyword);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax WithByKeyword(valuetype Microsoft.CodeAnalysis.SyntaxToken byKeyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.WithByKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithByKeyword (byKeyword As SyntaxToken) As GroupByClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithByKeyword : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax" Usage="groupByClauseSyntax.WithByKeyword byKeyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::GroupByClauseSyntax ^ WithByKeyword(Microsoft::CodeAnalysis::SyntaxToken byKeyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="byKeyword">To be added.</param>
        <summary>
 Returns a copy of this with the ByKeyword property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithGroupKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax WithGroupKeyword (Microsoft.CodeAnalysis.SyntaxToken groupKeyword);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax WithGroupKeyword(valuetype Microsoft.CodeAnalysis.SyntaxToken groupKeyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.WithGroupKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithGroupKeyword (groupKeyword As SyntaxToken) As GroupByClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithGroupKeyword : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax" Usage="groupByClauseSyntax.WithGroupKeyword groupKeyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::GroupByClauseSyntax ^ WithGroupKeyword(Microsoft::CodeAnalysis::SyntaxToken groupKeyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="groupKeyword">To be added.</param>
        <summary>
 Returns a copy of this with the GroupKeyword property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithIntoKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax WithIntoKeyword (Microsoft.CodeAnalysis.SyntaxToken intoKeyword);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax WithIntoKeyword(valuetype Microsoft.CodeAnalysis.SyntaxToken intoKeyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.WithIntoKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithIntoKeyword (intoKeyword As SyntaxToken) As GroupByClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithIntoKeyword : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax" Usage="groupByClauseSyntax.WithIntoKeyword intoKeyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::GroupByClauseSyntax ^ WithIntoKeyword(Microsoft::CodeAnalysis::SyntaxToken intoKeyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intoKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="intoKeyword">To be added.</param>
        <summary>
 Returns a copy of this with the IntoKeyword property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithItems">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax WithItems (Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax WithItems(valuetype Microsoft.CodeAnalysis.SeparatedSyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.WithItems(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithItems (items As SeparatedSyntaxList(Of ExpressionRangeVariableSyntax)) As GroupByClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithItems : Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt; -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax" Usage="groupByClauseSyntax.WithItems items" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::GroupByClauseSyntax ^ WithItems(Microsoft::CodeAnalysis::SeparatedSyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionRangeVariableSyntax ^&gt; items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt;" />
      </Parameters>
      <Docs>
        <param name="items">To be added.</param>
        <summary>
 Returns a copy of this with the Items property changed to the specified value.
 Returns this instance if the specified value is the same as the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithKeys">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax WithKeys (Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt; keys);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax WithKeys(valuetype Microsoft.CodeAnalysis.SeparatedSyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt; keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.WithKeys(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithKeys (keys As SeparatedSyntaxList(Of ExpressionRangeVariableSyntax)) As GroupByClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithKeys : Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt; -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax" Usage="groupByClauseSyntax.WithKeys keys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::GroupByClauseSyntax ^ WithKeys(Microsoft::CodeAnalysis::SeparatedSyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionRangeVariableSyntax ^&gt; keys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax&gt;" />
      </Parameters>
      <Docs>
        <param name="keys">To be added.</param>
        <summary>
 Returns a copy of this with the Keys property changed to the specified value.
 Returns this instance if the specified value is the same as the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>