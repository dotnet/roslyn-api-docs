<Type Name="StructuredTriviaSyntax" FullName="Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax">
  <TypeSignature Language="C#" Value="public abstract class StructuredTriviaSyntax : Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode, Microsoft.CodeAnalysis.IStructuredTriviaSyntax" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StructuredTriviaSyntax extends Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode implements class Microsoft.CodeAnalysis.IStructuredTriviaSyntax" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StructuredTriviaSyntax&#xA;Inherits CSharpSyntaxNode&#xA;Implements IStructuredTriviaSyntax" />
  <TypeSignature Language="F#" Value="type StructuredTriviaSyntax = class&#xA;    inherit CSharpSyntaxNode&#xA;    interface IStructuredTriviaSyntax" />
  <TypeSignature Language="C++ CLI" Value="public ref class StructuredTriviaSyntax abstract : Microsoft::CodeAnalysis::CSharp::CSharpSyntaxNode, Microsoft::CodeAnalysis::IStructuredTriviaSyntax" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class StructuredTriviaSyntax abstract : Microsoft::CodeAnalysis::CSharp::CSharpSyntaxNode, Microsoft::CodeAnalysis::IStructuredTriviaSyntax" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class StructuredTriviaSyntax abstract : Microsoft::CodeAnalysis::CSharp::CSharpSyntaxNode, Microsoft::CodeAnalysis::IStructuredTriviaSyntax" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.CodeAnalysis.IStructuredTriviaSyntax</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            It's a non terminal Trivia CSharpSyntaxNode that has a tree underneath it.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ParentTrivia">
      <MemberSignature Language="C#" Value="public override Microsoft.CodeAnalysis.SyntaxTrivia ParentTrivia { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxTrivia ParentTrivia" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax.ParentTrivia" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ParentTrivia As SyntaxTrivia" />
      <MemberSignature Language="F#" Value="member this.ParentTrivia : Microsoft.CodeAnalysis.SyntaxTrivia" Usage="Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax.ParentTrivia" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Microsoft::CodeAnalysis::SyntaxTrivia ParentTrivia { Microsoft::CodeAnalysis::SyntaxTrivia get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.CodeAnalysis.IStructuredTriviaSyntax.ParentTrivia</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxTrivia</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Get parent trivia.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>