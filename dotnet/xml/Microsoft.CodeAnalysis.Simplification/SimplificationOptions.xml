<Type Name="SimplificationOptions" FullName="Microsoft.CodeAnalysis.Simplification.SimplificationOptions">
  <TypeSignature Language="C#" Value="public static class SimplificationOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit SimplificationOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Simplification.SimplificationOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class SimplificationOptions" />
  <TypeSignature Language="F#" Value="type SimplificationOptions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class SimplificationOptions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Contains the options that needs to be drilled down to the Simplification Engine
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowSimplificationToBaseType">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Options.Option&lt;bool&gt; AllowSimplificationToBaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.CodeAnalysis.Options.Option`1&lt;bool&gt; AllowSimplificationToBaseType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.AllowSimplificationToBaseType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AllowSimplificationToBaseType As Option(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.AllowSimplificationToBaseType : Microsoft.CodeAnalysis.Options.Option&lt;bool&gt;" Usage="Microsoft.CodeAnalysis.Simplification.SimplificationOptions.AllowSimplificationToBaseType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::CodeAnalysis::Options::Option&lt;bool&gt; ^ AllowSimplificationToBaseType { Microsoft::CodeAnalysis::Options::Option&lt;bool&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Options.Option&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This option says if we should simplify from Derived types to Base types in Static Member Accesses
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowSimplificationToGenericType">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Options.Option&lt;bool&gt; AllowSimplificationToGenericType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.CodeAnalysis.Options.Option`1&lt;bool&gt; AllowSimplificationToGenericType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.AllowSimplificationToGenericType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AllowSimplificationToGenericType As Option(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.AllowSimplificationToGenericType : Microsoft.CodeAnalysis.Options.Option&lt;bool&gt;" Usage="Microsoft.CodeAnalysis.Simplification.SimplificationOptions.AllowSimplificationToGenericType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::CodeAnalysis::Options::Option&lt;bool&gt; ^ AllowSimplificationToGenericType { Microsoft::CodeAnalysis::Options::Option&lt;bool&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Options.Option&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This option says if we should simplify to NonGeneric Name rather than GenericName
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferAliasToQualification">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Options.Option&lt;bool&gt; PreferAliasToQualification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.CodeAnalysis.Options.Option`1&lt;bool&gt; PreferAliasToQualification" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferAliasToQualification" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PreferAliasToQualification As Option(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.PreferAliasToQualification : Microsoft.CodeAnalysis.Options.Option&lt;bool&gt;" Usage="Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferAliasToQualification" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::CodeAnalysis::Options::Option&lt;bool&gt; ^ PreferAliasToQualification { Microsoft::CodeAnalysis::Options::Option&lt;bool&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Options.Option&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This option tells the simplification engine if the Qualified Name should be replaced by Alias
            if the user had initially not used the Alias
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferImplicitTypeInference">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Options.Option&lt;bool&gt; PreferImplicitTypeInference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.CodeAnalysis.Options.Option`1&lt;bool&gt; PreferImplicitTypeInference" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferImplicitTypeInference" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PreferImplicitTypeInference As Option(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.PreferImplicitTypeInference : Microsoft.CodeAnalysis.Options.Option&lt;bool&gt;" Usage="Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferImplicitTypeInference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::CodeAnalysis::Options::Option&lt;bool&gt; ^ PreferImplicitTypeInference { Microsoft::CodeAnalysis::Options::Option&lt;bool&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Options.Option&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This option says that if we should simplify the Generic Name which has the type argument inferred
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferImplicitTypeInLocalDeclaration">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Options.Option&lt;bool&gt; PreferImplicitTypeInLocalDeclaration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.CodeAnalysis.Options.Option`1&lt;bool&gt; PreferImplicitTypeInLocalDeclaration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferImplicitTypeInLocalDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PreferImplicitTypeInLocalDeclaration As Option(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.PreferImplicitTypeInLocalDeclaration : Microsoft.CodeAnalysis.Options.Option&lt;bool&gt;" Usage="Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferImplicitTypeInLocalDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::CodeAnalysis::Options::Option&lt;bool&gt; ^ PreferImplicitTypeInLocalDeclaration { Microsoft::CodeAnalysis::Options::Option&lt;bool&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Options.Option&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This option says if we should simplify the Explicit Type in Local Declarations
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferIntrinsicPredefinedTypeKeywordInDeclaration">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Options.PerLanguageOption&lt;bool&gt; PreferIntrinsicPredefinedTypeKeywordInDeclaration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.CodeAnalysis.Options.PerLanguageOption`1&lt;bool&gt; PreferIntrinsicPredefinedTypeKeywordInDeclaration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferIntrinsicPredefinedTypeKeywordInDeclaration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PreferIntrinsicPredefinedTypeKeywordInDeclaration As PerLanguageOption(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.PreferIntrinsicPredefinedTypeKeywordInDeclaration : Microsoft.CodeAnalysis.Options.PerLanguageOption&lt;bool&gt;" Usage="Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferIntrinsicPredefinedTypeKeywordInDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::CodeAnalysis::Options::PerLanguageOption&lt;bool&gt; ^ PreferIntrinsicPredefinedTypeKeywordInDeclaration { Microsoft::CodeAnalysis::Options::PerLanguageOption&lt;bool&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Options.PerLanguageOption&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This option says if we should prefer keyword for Intrinsic Predefined Types in Declarations
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferIntrinsicPredefinedTypeKeywordInMemberAccess">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Options.PerLanguageOption&lt;bool&gt; PreferIntrinsicPredefinedTypeKeywordInMemberAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.CodeAnalysis.Options.PerLanguageOption`1&lt;bool&gt; PreferIntrinsicPredefinedTypeKeywordInMemberAccess" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferIntrinsicPredefinedTypeKeywordInMemberAccess" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PreferIntrinsicPredefinedTypeKeywordInMemberAccess As PerLanguageOption(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.PreferIntrinsicPredefinedTypeKeywordInMemberAccess : Microsoft.CodeAnalysis.Options.PerLanguageOption&lt;bool&gt;" Usage="Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferIntrinsicPredefinedTypeKeywordInMemberAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::CodeAnalysis::Options::PerLanguageOption&lt;bool&gt; ^ PreferIntrinsicPredefinedTypeKeywordInMemberAccess { Microsoft::CodeAnalysis::Options::PerLanguageOption&lt;bool&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Options.PerLanguageOption&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This option says if we should prefer keyword for Intrinsic Predefined Types in Member Access Expression
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferOmittingModuleNamesInQualification">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Options.Option&lt;bool&gt; PreferOmittingModuleNamesInQualification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.CodeAnalysis.Options.Option`1&lt;bool&gt; PreferOmittingModuleNamesInQualification" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferOmittingModuleNamesInQualification" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PreferOmittingModuleNamesInQualification As Option(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.PreferOmittingModuleNamesInQualification : Microsoft.CodeAnalysis.Options.Option&lt;bool&gt;" Usage="Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferOmittingModuleNamesInQualification" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::CodeAnalysis::Options::Option&lt;bool&gt; ^ PreferOmittingModuleNamesInQualification { Microsoft::CodeAnalysis::Options::Option&lt;bool&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Options.Option&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This option influences the name reduction of members of a module in VB. If set to true, the 
            name reducer will e.g. reduce Namespace.Module.Member to Namespace.Member.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QualifyEventAccess">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Options.PerLanguageOption&lt;bool&gt; QualifyEventAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.CodeAnalysis.Options.PerLanguageOption`1&lt;bool&gt; QualifyEventAccess" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.QualifyEventAccess" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property QualifyEventAccess As PerLanguageOption(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.QualifyEventAccess : Microsoft.CodeAnalysis.Options.PerLanguageOption&lt;bool&gt;" Usage="Microsoft.CodeAnalysis.Simplification.SimplificationOptions.QualifyEventAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::CodeAnalysis::Options::PerLanguageOption&lt;bool&gt; ^ QualifyEventAccess { Microsoft::CodeAnalysis::Options::PerLanguageOption&lt;bool&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Options.PerLanguageOption&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This option says if we should simplify away the <see langword="this" />. or <see langword="Me" />. in event access expressions.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QualifyFieldAccess">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Options.PerLanguageOption&lt;bool&gt; QualifyFieldAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.CodeAnalysis.Options.PerLanguageOption`1&lt;bool&gt; QualifyFieldAccess" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.QualifyFieldAccess" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property QualifyFieldAccess As PerLanguageOption(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.QualifyFieldAccess : Microsoft.CodeAnalysis.Options.PerLanguageOption&lt;bool&gt;" Usage="Microsoft.CodeAnalysis.Simplification.SimplificationOptions.QualifyFieldAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::CodeAnalysis::Options::PerLanguageOption&lt;bool&gt; ^ QualifyFieldAccess { Microsoft::CodeAnalysis::Options::PerLanguageOption&lt;bool&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Options.PerLanguageOption&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This option says if we should simplify away the <see langword="this" />. or <see langword="Me" />. in field access expressions.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QualifyMemberAccessWithThisOrMe">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Options.PerLanguageOption&lt;bool&gt; QualifyMemberAccessWithThisOrMe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.CodeAnalysis.Options.PerLanguageOption`1&lt;bool&gt; QualifyMemberAccessWithThisOrMe" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.QualifyMemberAccessWithThisOrMe" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property QualifyMemberAccessWithThisOrMe As PerLanguageOption(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.QualifyMemberAccessWithThisOrMe : Microsoft.CodeAnalysis.Options.PerLanguageOption&lt;bool&gt;" Usage="Microsoft.CodeAnalysis.Simplification.SimplificationOptions.QualifyMemberAccessWithThisOrMe" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::CodeAnalysis::Options::PerLanguageOption&lt;bool&gt; ^ QualifyMemberAccessWithThisOrMe { Microsoft::CodeAnalysis::Options::PerLanguageOption&lt;bool&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Options.PerLanguageOption&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This option says if we should simplify away the <see langword="this" /> or <see langword="Me" /> in member access expressions.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QualifyMethodAccess">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Options.PerLanguageOption&lt;bool&gt; QualifyMethodAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.CodeAnalysis.Options.PerLanguageOption`1&lt;bool&gt; QualifyMethodAccess" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.QualifyMethodAccess" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property QualifyMethodAccess As PerLanguageOption(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.QualifyMethodAccess : Microsoft.CodeAnalysis.Options.PerLanguageOption&lt;bool&gt;" Usage="Microsoft.CodeAnalysis.Simplification.SimplificationOptions.QualifyMethodAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::CodeAnalysis::Options::PerLanguageOption&lt;bool&gt; ^ QualifyMethodAccess { Microsoft::CodeAnalysis::Options::PerLanguageOption&lt;bool&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Options.PerLanguageOption&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This option says if we should simplify away the <see langword="this" />. or <see langword="Me" />. in method access expressions.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QualifyPropertyAccess">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Options.PerLanguageOption&lt;bool&gt; QualifyPropertyAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.CodeAnalysis.Options.PerLanguageOption`1&lt;bool&gt; QualifyPropertyAccess" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.QualifyPropertyAccess" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property QualifyPropertyAccess As PerLanguageOption(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.QualifyPropertyAccess : Microsoft.CodeAnalysis.Options.PerLanguageOption&lt;bool&gt;" Usage="Microsoft.CodeAnalysis.Simplification.SimplificationOptions.QualifyPropertyAccess" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::CodeAnalysis::Options::PerLanguageOption&lt;bool&gt; ^ QualifyPropertyAccess { Microsoft::CodeAnalysis::Options::PerLanguageOption&lt;bool&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Options.PerLanguageOption&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This option says if we should simplify away the <see langword="this" />. or <see langword="Me" />. in property access expressions.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>