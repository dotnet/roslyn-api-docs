<Type Name="IPropertySymbol" FullName="Microsoft.CodeAnalysis.IPropertySymbol">
  <TypeSignature Language="C#" Value="public interface IPropertySymbol : IEquatable&lt;Microsoft.CodeAnalysis.ISymbol&gt;, Microsoft.CodeAnalysis.ISymbol" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPropertySymbol implements class Microsoft.CodeAnalysis.ISymbol, class System.IEquatable`1&lt;class Microsoft.CodeAnalysis.ISymbol&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.IPropertySymbol" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPropertySymbol&#xA;Implements IEquatable(Of ISymbol), ISymbol" />
  <TypeSignature Language="F#" Value="type IPropertySymbol = interface&#xA;    interface ISymbol&#xA;    interface IEquatable&lt;ISymbol&gt;" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPropertySymbol : IEquatable&lt;Microsoft::CodeAnalysis::ISymbol ^&gt;, Microsoft::CodeAnalysis::ISymbol" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.CodeAnalysis.ISymbol</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.CodeAnalysis.ISymbol&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents a property or indexer.
            </summary>
    <remarks>
            This interface is reserved for implementation by its associated APIs. We reserve the right to
            change it in the future.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExplicitInterfaceImplementations">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.IPropertySymbol&gt; ExplicitInterfaceImplementations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.IPropertySymbol&gt; ExplicitInterfaceImplementations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IPropertySymbol.ExplicitInterfaceImplementations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExplicitInterfaceImplementations As ImmutableArray(Of IPropertySymbol)" />
      <MemberSignature Language="F#" Value="member this.ExplicitInterfaceImplementations : System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.IPropertySymbol&gt;" Usage="Microsoft.CodeAnalysis.IPropertySymbol.ExplicitInterfaceImplementations" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::IPropertySymbol ^&gt; ExplicitInterfaceImplementations { System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::IPropertySymbol ^&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.IPropertySymbol&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns interface properties explicitly implemented by this property.
            </summary>
        <value>To be added.</value>
        <remarks>
            Properties imported from metadata can explicitly implement more than one property.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IMethodSymbol GetMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IMethodSymbol GetMethod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IPropertySymbol.GetMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GetMethod As IMethodSymbol" />
      <MemberSignature Language="F#" Value="member this.GetMethod : Microsoft.CodeAnalysis.IMethodSymbol" Usage="Microsoft.CodeAnalysis.IPropertySymbol.GetMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::IMethodSymbol ^ GetMethod { Microsoft::CodeAnalysis::IMethodSymbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IMethodSymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The 'get' accessor of the property, or null if the property is write-only.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIndexer">
      <MemberSignature Language="C#" Value="public bool IsIndexer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIndexer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IPropertySymbol.IsIndexer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIndexer As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsIndexer : bool" Usage="Microsoft.CodeAnalysis.IPropertySymbol.IsIndexer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIndexer { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool IsIndexer { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns whether the property is really an indexer.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IPropertySymbol.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="Microsoft.CodeAnalysis.IPropertySymbol.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            True if this is a read-only property; that is, a property with no set accessor.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWithEvents">
      <MemberSignature Language="C#" Value="public bool IsWithEvents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWithEvents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IPropertySymbol.IsWithEvents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWithEvents As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsWithEvents : bool" Usage="Microsoft.CodeAnalysis.IPropertySymbol.IsWithEvents" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWithEvents { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool IsWithEvents { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if this property is an auto-created WithEvents property that takes place of
            a field member when the field is marked as WithEvents.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWriteOnly">
      <MemberSignature Language="C#" Value="public bool IsWriteOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWriteOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IPropertySymbol.IsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWriteOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsWriteOnly : bool" Usage="Microsoft.CodeAnalysis.IPropertySymbol.IsWriteOnly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWriteOnly { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool IsWriteOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            True if this is a write-only property; that is, a property with no get accessor.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalDefinition">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IPropertySymbol OriginalDefinition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IPropertySymbol OriginalDefinition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IPropertySymbol.OriginalDefinition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalDefinition As IPropertySymbol" />
      <MemberSignature Language="F#" Value="member this.OriginalDefinition : Microsoft.CodeAnalysis.IPropertySymbol" Usage="Microsoft.CodeAnalysis.IPropertySymbol.OriginalDefinition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::IPropertySymbol ^ OriginalDefinition { Microsoft::CodeAnalysis::IPropertySymbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IPropertySymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The original definition of the property. If the property is constructed from another
            symbol by type substitution, OriginalDefinition gets the original symbol, as it was 
            defined in source or metadata.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OverriddenProperty">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IPropertySymbol OverriddenProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IPropertySymbol OverriddenProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IPropertySymbol.OverriddenProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OverriddenProperty As IPropertySymbol" />
      <MemberSignature Language="F#" Value="member this.OverriddenProperty : Microsoft.CodeAnalysis.IPropertySymbol" Usage="Microsoft.CodeAnalysis.IPropertySymbol.OverriddenProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::IPropertySymbol ^ OverriddenProperty { Microsoft::CodeAnalysis::IPropertySymbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IPropertySymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the overridden property, or null.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.IParameterSymbol&gt; Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.IParameterSymbol&gt; Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IPropertySymbol.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As ImmutableArray(Of IParameterSymbol)" />
      <MemberSignature Language="F#" Value="member this.Parameters : System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.IParameterSymbol&gt;" Usage="Microsoft.CodeAnalysis.IPropertySymbol.Parameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::IParameterSymbol ^&gt; Parameters { System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::IParameterSymbol ^&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.IParameterSymbol&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The parameters of this property. If this property has no parameters, returns
            an empty list. Parameters are only present on indexers, or on some properties
            imported from a COM interface.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefCustomModifiers">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CustomModifier&gt; RefCustomModifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.CustomModifier&gt; RefCustomModifiers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IPropertySymbol.RefCustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RefCustomModifiers As ImmutableArray(Of CustomModifier)" />
      <MemberSignature Language="F#" Value="member this.RefCustomModifiers : System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CustomModifier&gt;" Usage="Microsoft.CodeAnalysis.IPropertySymbol.RefCustomModifiers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::CustomModifier ^&gt; RefCustomModifiers { System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::CustomModifier ^&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CustomModifier&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Custom modifiers associated with the ref modifier, or an empty array if there are none.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefKind">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.RefKind RefKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.RefKind RefKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IPropertySymbol.RefKind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RefKind As RefKind" />
      <MemberSignature Language="F#" Value="member this.RefKind : Microsoft.CodeAnalysis.RefKind" Usage="Microsoft.CodeAnalysis.IPropertySymbol.RefKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::RefKind RefKind { Microsoft::CodeAnalysis::RefKind get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::CodeAnalysis::RefKind RefKind { Microsoft::CodeAnalysis::RefKind get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.RefKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the RefKind of the property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnsByRef">
      <MemberSignature Language="C#" Value="public bool ReturnsByRef { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReturnsByRef" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IPropertySymbol.ReturnsByRef" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnsByRef As Boolean" />
      <MemberSignature Language="F#" Value="member this.ReturnsByRef : bool" Usage="Microsoft.CodeAnalysis.IPropertySymbol.ReturnsByRef" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReturnsByRef { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool ReturnsByRef { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if this property returns by reference.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnsByRefReadonly">
      <MemberSignature Language="C#" Value="public bool ReturnsByRefReadonly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReturnsByRefReadonly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IPropertySymbol.ReturnsByRefReadonly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnsByRefReadonly As Boolean" />
      <MemberSignature Language="F#" Value="member this.ReturnsByRefReadonly : bool" Usage="Microsoft.CodeAnalysis.IPropertySymbol.ReturnsByRefReadonly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReturnsByRefReadonly { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool ReturnsByRefReadonly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if this property returns by reference a readonly variable.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMethod">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IMethodSymbol SetMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IMethodSymbol SetMethod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IPropertySymbol.SetMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetMethod As IMethodSymbol" />
      <MemberSignature Language="F#" Value="member this.SetMethod : Microsoft.CodeAnalysis.IMethodSymbol" Usage="Microsoft.CodeAnalysis.IPropertySymbol.SetMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::IMethodSymbol ^ SetMethod { Microsoft::CodeAnalysis::IMethodSymbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IMethodSymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The 'set' accessor of the property, or null if the property is read-only.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.ITypeSymbol Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.ITypeSymbol Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IPropertySymbol.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As ITypeSymbol" />
      <MemberSignature Language="F#" Value="member this.Type : Microsoft.CodeAnalysis.ITypeSymbol" Usage="Microsoft.CodeAnalysis.IPropertySymbol.Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::ITypeSymbol ^ Type { Microsoft::CodeAnalysis::ITypeSymbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ITypeSymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The type of the property. 
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeCustomModifiers">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CustomModifier&gt; TypeCustomModifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.CustomModifier&gt; TypeCustomModifiers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.IPropertySymbol.TypeCustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeCustomModifiers As ImmutableArray(Of CustomModifier)" />
      <MemberSignature Language="F#" Value="member this.TypeCustomModifiers : System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CustomModifier&gt;" Usage="Microsoft.CodeAnalysis.IPropertySymbol.TypeCustomModifiers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::CustomModifier ^&gt; TypeCustomModifiers { System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::CustomModifier ^&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CustomModifier&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The list of custom modifiers, if any, associated with the type of the property. 
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>