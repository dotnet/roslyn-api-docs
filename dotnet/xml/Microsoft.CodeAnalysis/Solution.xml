<Type Name="Solution" FullName="Microsoft.CodeAnalysis.Solution">
  <TypeSignature Language="C#" Value="public class Solution" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Solution extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Solution" />
  <TypeSignature Language="VB.NET" Value="Public Class Solution" />
  <TypeSignature Language="F#" Value="type Solution = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class Solution" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a set of projects and their source code documents. 
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddAdditionalDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution AddAdditionalDocument (Microsoft.CodeAnalysis.DocumentInfo documentInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution AddAdditionalDocument(class Microsoft.CodeAnalysis.DocumentInfo documentInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.AddAdditionalDocument(Microsoft.CodeAnalysis.DocumentInfo)" />
      <MemberSignature Language="F#" Value="member this.AddAdditionalDocument : Microsoft.CodeAnalysis.DocumentInfo -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.AddAdditionalDocument documentInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ AddAdditionalDocument(Microsoft::CodeAnalysis::DocumentInfo ^ documentInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentInfo" Type="Microsoft.CodeAnalysis.DocumentInfo" />
      </Parameters>
      <Docs>
        <param name="documentInfo">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAdditionalDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution AddAdditionalDocument (Microsoft.CodeAnalysis.DocumentId documentId, string name, Microsoft.CodeAnalysis.Text.SourceText text, System.Collections.Generic.IEnumerable&lt;string&gt; folders = null, string filePath = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution AddAdditionalDocument(class Microsoft.CodeAnalysis.DocumentId documentId, string name, class Microsoft.CodeAnalysis.Text.SourceText text, class System.Collections.Generic.IEnumerable`1&lt;string&gt; folders, string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.AddAdditionalDocument(Microsoft.CodeAnalysis.DocumentId,System.String,Microsoft.CodeAnalysis.Text.SourceText,System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="F#" Value="member this.AddAdditionalDocument : Microsoft.CodeAnalysis.DocumentId * string * Microsoft.CodeAnalysis.Text.SourceText * seq&lt;string&gt; * string -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.AddAdditionalDocument (documentId, name, text, folders, filePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="Microsoft.CodeAnalysis.Text.SourceText" />
        <Parameter Name="folders" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="name">To be added.</param>
        <param name="text">To be added.</param>
        <param name="folders">To be added.</param>
        <param name="filePath">To be added.</param>
        <summary>
            Creates a new solution instance with the corresponding project updated to include a new
            additional document instance defined by its name and text.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAdditionalDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution AddAdditionalDocument (Microsoft.CodeAnalysis.DocumentId documentId, string name, string text, System.Collections.Generic.IEnumerable&lt;string&gt; folders = null, string filePath = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution AddAdditionalDocument(class Microsoft.CodeAnalysis.DocumentId documentId, string name, string text, class System.Collections.Generic.IEnumerable`1&lt;string&gt; folders, string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.AddAdditionalDocument(Microsoft.CodeAnalysis.DocumentId,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="F#" Value="member this.AddAdditionalDocument : Microsoft.CodeAnalysis.DocumentId * string * string * seq&lt;string&gt; * string -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.AddAdditionalDocument (documentId, name, text, folders, filePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="folders" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="name">To be added.</param>
        <param name="text">To be added.</param>
        <param name="folders">To be added.</param>
        <param name="filePath">To be added.</param>
        <summary>
            Creates a new solution instance with the corresponding project updated to include a new
            additional document instance defined by its name and text.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAnalyzerReference">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution AddAnalyzerReference (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution AddAnalyzerReference(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.AddAnalyzerReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)" />
      <MemberSignature Language="F#" Value="member this.AddAnalyzerReference : Microsoft.CodeAnalysis.ProjectId * Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.AddAnalyzerReference (projectId, analyzerReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ AddAnalyzerReference(Microsoft::CodeAnalysis::ProjectId ^ projectId, Microsoft::CodeAnalysis::Diagnostics::AnalyzerReference ^ analyzerReference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="analyzerReference" Type="Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="analyzerReference">To be added.</param>
        <summary>
            Create a new solution instance with the project specified updated to include the 
            specified analyzer reference.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAnalyzerReferences">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution AddAnalyzerReferences (Microsoft.CodeAnalysis.ProjectId projectId, System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt; analyzerReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution AddAnalyzerReferences(class Microsoft.CodeAnalysis.ProjectId projectId, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt; analyzerReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.AddAnalyzerReferences(Microsoft.CodeAnalysis.ProjectId,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference})" />
      <MemberSignature Language="F#" Value="member this.AddAnalyzerReferences : Microsoft.CodeAnalysis.ProjectId * seq&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt; -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.AddAnalyzerReferences (projectId, analyzerReferences)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ AddAnalyzerReferences(Microsoft::CodeAnalysis::ProjectId ^ projectId, System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::Diagnostics::AnalyzerReference ^&gt; ^ analyzerReferences);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="analyzerReferences" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt;" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="analyzerReferences">To be added.</param>
        <summary>
            Create a new solution instance with the project specified updated to include the
            specified analyzer references.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution AddDocument (Microsoft.CodeAnalysis.DocumentInfo documentInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution AddDocument(class Microsoft.CodeAnalysis.DocumentInfo documentInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.AddDocument(Microsoft.CodeAnalysis.DocumentInfo)" />
      <MemberSignature Language="F#" Value="member this.AddDocument : Microsoft.CodeAnalysis.DocumentInfo -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.AddDocument documentInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ AddDocument(Microsoft::CodeAnalysis::DocumentInfo ^ documentInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentInfo" Type="Microsoft.CodeAnalysis.DocumentInfo" />
      </Parameters>
      <Docs>
        <param name="documentInfo">To be added.</param>
        <summary>
            Create a new solution instance with the corresponding project updated to include a new 
            document instanced defined by the document info.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution AddDocument (Microsoft.CodeAnalysis.DocumentId documentId, string name, Microsoft.CodeAnalysis.TextLoader loader, System.Collections.Generic.IEnumerable&lt;string&gt; folders = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution AddDocument(class Microsoft.CodeAnalysis.DocumentId documentId, string name, class Microsoft.CodeAnalysis.TextLoader loader, class System.Collections.Generic.IEnumerable`1&lt;string&gt; folders) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.AddDocument(Microsoft.CodeAnalysis.DocumentId,System.String,Microsoft.CodeAnalysis.TextLoader,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="F#" Value="member this.AddDocument : Microsoft.CodeAnalysis.DocumentId * string * Microsoft.CodeAnalysis.TextLoader * seq&lt;string&gt; -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.AddDocument (documentId, name, loader, folders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="loader" Type="Microsoft.CodeAnalysis.TextLoader" />
        <Parameter Name="folders" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="name">To be added.</param>
        <param name="loader">To be added.</param>
        <param name="folders">To be added.</param>
        <summary>
            Creates a new solution instance with the project updated to include a new document with
            the arguments specified.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution AddDocument (Microsoft.CodeAnalysis.DocumentId documentId, string name, string text, System.Collections.Generic.IEnumerable&lt;string&gt; folders = null, string filePath = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution AddDocument(class Microsoft.CodeAnalysis.DocumentId documentId, string name, string text, class System.Collections.Generic.IEnumerable`1&lt;string&gt; folders, string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.AddDocument(Microsoft.CodeAnalysis.DocumentId,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="F#" Value="member this.AddDocument : Microsoft.CodeAnalysis.DocumentId * string * string * seq&lt;string&gt; * string -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.AddDocument (documentId, name, text, folders, filePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="folders" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="name">To be added.</param>
        <param name="text">To be added.</param>
        <param name="folders">To be added.</param>
        <param name="filePath">To be added.</param>
        <summary>
            Creates a new solution instance with the corresponding project updated to include a new
            document instance defined by its name and text.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution AddDocument (Microsoft.CodeAnalysis.DocumentId documentId, string name, Microsoft.CodeAnalysis.Text.SourceText text, System.Collections.Generic.IEnumerable&lt;string&gt; folders = null, string filePath = null, bool isGenerated = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution AddDocument(class Microsoft.CodeAnalysis.DocumentId documentId, string name, class Microsoft.CodeAnalysis.Text.SourceText text, class System.Collections.Generic.IEnumerable`1&lt;string&gt; folders, string filePath, bool isGenerated) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.AddDocument(Microsoft.CodeAnalysis.DocumentId,System.String,Microsoft.CodeAnalysis.Text.SourceText,System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.AddDocument : Microsoft.CodeAnalysis.DocumentId * string * Microsoft.CodeAnalysis.Text.SourceText * seq&lt;string&gt; * string * bool -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.AddDocument (documentId, name, text, folders, filePath, isGenerated)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="Microsoft.CodeAnalysis.Text.SourceText" />
        <Parameter Name="folders" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="isGenerated" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="name">To be added.</param>
        <param name="text">To be added.</param>
        <param name="folders">To be added.</param>
        <param name="filePath">To be added.</param>
        <param name="isGenerated">To be added.</param>
        <summary>
            Creates a new solution instance with the corresponding project updated to include a new
            document instance defined by its name and text.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution AddDocument (Microsoft.CodeAnalysis.DocumentId documentId, string name, Microsoft.CodeAnalysis.SyntaxNode syntaxRoot, System.Collections.Generic.IEnumerable&lt;string&gt; folders = null, string filePath = null, bool isGenerated = false, Microsoft.CodeAnalysis.PreservationMode preservationMode = Microsoft.CodeAnalysis.PreservationMode.PreserveValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution AddDocument(class Microsoft.CodeAnalysis.DocumentId documentId, string name, class Microsoft.CodeAnalysis.SyntaxNode syntaxRoot, class System.Collections.Generic.IEnumerable`1&lt;string&gt; folders, string filePath, bool isGenerated, valuetype Microsoft.CodeAnalysis.PreservationMode preservationMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.AddDocument(Microsoft.CodeAnalysis.DocumentId,System.String,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean,Microsoft.CodeAnalysis.PreservationMode)" />
      <MemberSignature Language="F#" Value="member this.AddDocument : Microsoft.CodeAnalysis.DocumentId * string * Microsoft.CodeAnalysis.SyntaxNode * seq&lt;string&gt; * string * bool * Microsoft.CodeAnalysis.PreservationMode -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.AddDocument (documentId, name, syntaxRoot, folders, filePath, isGenerated, preservationMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="syntaxRoot" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="folders" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="isGenerated" Type="System.Boolean" />
        <Parameter Name="preservationMode" Type="Microsoft.CodeAnalysis.PreservationMode" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="name">To be added.</param>
        <param name="syntaxRoot">To be added.</param>
        <param name="folders">To be added.</param>
        <param name="filePath">To be added.</param>
        <param name="isGenerated">To be added.</param>
        <param name="preservationMode">To be added.</param>
        <summary>
            Creates a new solution instance with the corresponding project updated to include a new
            document instance defined by its name and root <see cref="T:Microsoft.CodeAnalysis.SyntaxNode" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMetadataReference">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution AddMetadataReference (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.MetadataReference metadataReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution AddMetadataReference(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.MetadataReference metadataReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.AddMetadataReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)" />
      <MemberSignature Language="F#" Value="member this.AddMetadataReference : Microsoft.CodeAnalysis.ProjectId * Microsoft.CodeAnalysis.MetadataReference -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.AddMetadataReference (projectId, metadataReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ AddMetadataReference(Microsoft::CodeAnalysis::ProjectId ^ projectId, Microsoft::CodeAnalysis::MetadataReference ^ metadataReference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="metadataReference" Type="Microsoft.CodeAnalysis.MetadataReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="metadataReference">To be added.</param>
        <summary>
            Create a new solution instance with the project specified updated to include the 
            specified metadata reference.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMetadataReferences">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution AddMetadataReferences (Microsoft.CodeAnalysis.ProjectId projectId, System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.MetadataReference&gt; metadataReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution AddMetadataReferences(class Microsoft.CodeAnalysis.ProjectId projectId, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.MetadataReference&gt; metadataReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.AddMetadataReferences(Microsoft.CodeAnalysis.ProjectId,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})" />
      <MemberSignature Language="F#" Value="member this.AddMetadataReferences : Microsoft.CodeAnalysis.ProjectId * seq&lt;Microsoft.CodeAnalysis.MetadataReference&gt; -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.AddMetadataReferences (projectId, metadataReferences)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ AddMetadataReferences(Microsoft::CodeAnalysis::ProjectId ^ projectId, System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::MetadataReference ^&gt; ^ metadataReferences);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="metadataReferences" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.MetadataReference&gt;" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="metadataReferences">To be added.</param>
        <summary>
            Create a new solution instance with the project specified updated to include the
            specified metadata references.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProject">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution AddProject (Microsoft.CodeAnalysis.ProjectInfo projectInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution AddProject(class Microsoft.CodeAnalysis.ProjectInfo projectInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.AddProject(Microsoft.CodeAnalysis.ProjectInfo)" />
      <MemberSignature Language="F#" Value="member this.AddProject : Microsoft.CodeAnalysis.ProjectInfo -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.AddProject projectInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ AddProject(Microsoft::CodeAnalysis::ProjectInfo ^ projectInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectInfo" Type="Microsoft.CodeAnalysis.ProjectInfo" />
      </Parameters>
      <Docs>
        <param name="projectInfo">To be added.</param>
        <summary>
            Create a new solution instance that includes a project with the specified project information.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProject">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project AddProject (string name, string assemblyName, string language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Project AddProject(string name, string assemblyName, string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.AddProject(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddProject (name As String, assemblyName As String, language As String) As Project" />
      <MemberSignature Language="F#" Value="member this.AddProject : string * string * string -&gt; Microsoft.CodeAnalysis.Project" Usage="solution.AddProject (name, assemblyName, language)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Project ^ AddProject(System::String ^ name, System::String ^ assemblyName, System::String ^ language);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="assemblyName">To be added.</param>
        <param name="language">To be added.</param>
        <summary>
            Creates a new solution instance that includes a project with the specified language and names.
            Returns the new project.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProject">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution AddProject (Microsoft.CodeAnalysis.ProjectId projectId, string name, string assemblyName, string language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution AddProject(class Microsoft.CodeAnalysis.ProjectId projectId, string name, string assemblyName, string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.AddProject(Microsoft.CodeAnalysis.ProjectId,System.String,System.String,System.String)" />
      <MemberSignature Language="F#" Value="member this.AddProject : Microsoft.CodeAnalysis.ProjectId * string * string * string -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.AddProject (projectId, name, assemblyName, language)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ AddProject(Microsoft::CodeAnalysis::ProjectId ^ projectId, System::String ^ name, System::String ^ assemblyName, System::String ^ language);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="name">To be added.</param>
        <param name="assemblyName">To be added.</param>
        <param name="language">To be added.</param>
        <summary>
            Creates a new solution instance that includes a project with the specified language and names.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProjectReference">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution AddProjectReference (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.ProjectReference projectReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution AddProjectReference(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.ProjectReference projectReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.AddProjectReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)" />
      <MemberSignature Language="F#" Value="member this.AddProjectReference : Microsoft.CodeAnalysis.ProjectId * Microsoft.CodeAnalysis.ProjectReference -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.AddProjectReference (projectId, projectReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ AddProjectReference(Microsoft::CodeAnalysis::ProjectId ^ projectId, Microsoft::CodeAnalysis::ProjectReference ^ projectReference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="projectReference" Type="Microsoft.CodeAnalysis.ProjectReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="projectReference">To be added.</param>
        <summary>
            Create a new solution instance with the project specified updated to include
            the specified project reference.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProjectReferences">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution AddProjectReferences (Microsoft.CodeAnalysis.ProjectId projectId, System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.ProjectReference&gt; projectReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution AddProjectReferences(class Microsoft.CodeAnalysis.ProjectId projectId, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.ProjectReference&gt; projectReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.AddProjectReferences(Microsoft.CodeAnalysis.ProjectId,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectReference})" />
      <MemberSignature Language="F#" Value="member this.AddProjectReferences : Microsoft.CodeAnalysis.ProjectId * seq&lt;Microsoft.CodeAnalysis.ProjectReference&gt; -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.AddProjectReferences (projectId, projectReferences)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ AddProjectReferences(Microsoft::CodeAnalysis::ProjectId ^ projectId, System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::ProjectReference ^&gt; ^ projectReferences);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="projectReferences" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.ProjectReference&gt;" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="projectReferences">To be added.</param>
        <summary>
            Create a new solution instance with the project specified updated to include
            the specified project references.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsAdditionalDocument">
      <MemberSignature Language="C#" Value="public bool ContainsAdditionalDocument (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsAdditionalDocument(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.ContainsAdditionalDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberSignature Language="F#" Value="member this.ContainsAdditionalDocument : Microsoft.CodeAnalysis.DocumentId -&gt; bool" Usage="solution.ContainsAdditionalDocument documentId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsAdditionalDocument(Microsoft::CodeAnalysis::DocumentId ^ documentId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            True if the solution contains the additional document in one of its projects
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsDocument">
      <MemberSignature Language="C#" Value="public bool ContainsDocument (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsDocument(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.ContainsDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberSignature Language="F#" Value="member this.ContainsDocument : Microsoft.CodeAnalysis.DocumentId -&gt; bool" Usage="solution.ContainsDocument documentId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsDocument(Microsoft::CodeAnalysis::DocumentId ^ documentId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            True if the solution contains the document in one of its projects
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsProject">
      <MemberSignature Language="C#" Value="public bool ContainsProject (Microsoft.CodeAnalysis.ProjectId projectId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsProject(class Microsoft.CodeAnalysis.ProjectId projectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.ContainsProject(Microsoft.CodeAnalysis.ProjectId)" />
      <MemberSignature Language="F#" Value="member this.ContainsProject : Microsoft.CodeAnalysis.ProjectId -&gt; bool" Usage="solution.ContainsProject projectId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsProject(Microsoft::CodeAnalysis::ProjectId ^ projectId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <summary>
            True if the solution contains a project with the specified project ID.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public string FilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Solution.FilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePath As String" />
      <MemberSignature Language="F#" Value="member this.FilePath : string" Usage="Microsoft.CodeAnalysis.Solution.FilePath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilePath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The path to the solution file or null if there is no solution file.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdditionalDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.TextDocument GetAdditionalDocument (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.TextDocument GetAdditionalDocument(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.GetAdditionalDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberSignature Language="F#" Value="member this.GetAdditionalDocument : Microsoft.CodeAnalysis.DocumentId -&gt; Microsoft.CodeAnalysis.TextDocument" Usage="solution.GetAdditionalDocument documentId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::TextDocument ^ GetAdditionalDocument(Microsoft::CodeAnalysis::DocumentId ^ documentId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.TextDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            Gets the additional document in this solution with the specified document ID.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChanges">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SolutionChanges GetChanges (Microsoft.CodeAnalysis.Solution oldSolution);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.CodeAnalysis.SolutionChanges GetChanges(class Microsoft.CodeAnalysis.Solution oldSolution) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.GetChanges(Microsoft.CodeAnalysis.Solution)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChanges (oldSolution As Solution) As SolutionChanges" />
      <MemberSignature Language="F#" Value="member this.GetChanges : Microsoft.CodeAnalysis.Solution -&gt; Microsoft.CodeAnalysis.SolutionChanges" Usage="solution.GetChanges oldSolution" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::SolutionChanges GetChanges(Microsoft::CodeAnalysis::Solution ^ oldSolution);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SolutionChanges</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldSolution" Type="Microsoft.CodeAnalysis.Solution" />
      </Parameters>
      <Docs>
        <param name="oldSolution">To be added.</param>
        <summary>
            Gets an objects that lists the added, changed and removed projects between
            this solution and the specified solution.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Document GetDocument (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Document GetDocument(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.GetDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberSignature Language="F#" Value="member this.GetDocument : Microsoft.CodeAnalysis.DocumentId -&gt; Microsoft.CodeAnalysis.Document" Usage="solution.GetDocument documentId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Document ^ GetDocument(Microsoft::CodeAnalysis::DocumentId ^ documentId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            Gets the document in this solution with the specified document ID.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Document GetDocument (Microsoft.CodeAnalysis.SyntaxTree syntaxTree);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Document GetDocument(class Microsoft.CodeAnalysis.SyntaxTree syntaxTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.GetDocument(Microsoft.CodeAnalysis.SyntaxTree)" />
      <MemberSignature Language="F#" Value="member this.GetDocument : Microsoft.CodeAnalysis.SyntaxTree -&gt; Microsoft.CodeAnalysis.Document" Usage="solution.GetDocument syntaxTree" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Document ^ GetDocument(Microsoft::CodeAnalysis::SyntaxTree ^ syntaxTree);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="syntaxTree" Type="Microsoft.CodeAnalysis.SyntaxTree" />
      </Parameters>
      <Docs>
        <param name="syntaxTree">To be added.</param>
        <summary>
            Gets the document in this solution with the specified syntax tree.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocumentId">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.DocumentId GetDocumentId (Microsoft.CodeAnalysis.SyntaxTree syntaxTree);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.DocumentId GetDocumentId(class Microsoft.CodeAnalysis.SyntaxTree syntaxTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.GetDocumentId(Microsoft.CodeAnalysis.SyntaxTree)" />
      <MemberSignature Language="F#" Value="member this.GetDocumentId : Microsoft.CodeAnalysis.SyntaxTree -&gt; Microsoft.CodeAnalysis.DocumentId" Usage="solution.GetDocumentId syntaxTree" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::DocumentId ^ GetDocumentId(Microsoft::CodeAnalysis::SyntaxTree ^ syntaxTree);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.DocumentId</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="syntaxTree" Type="Microsoft.CodeAnalysis.SyntaxTree" />
      </Parameters>
      <Docs>
        <param name="syntaxTree">To be added.</param>
        <summary>
            Gets the documentId in this solution with the specified syntax tree.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocumentId">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.DocumentId GetDocumentId (Microsoft.CodeAnalysis.SyntaxTree syntaxTree, Microsoft.CodeAnalysis.ProjectId projectId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.DocumentId GetDocumentId(class Microsoft.CodeAnalysis.SyntaxTree syntaxTree, class Microsoft.CodeAnalysis.ProjectId projectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.GetDocumentId(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.ProjectId)" />
      <MemberSignature Language="F#" Value="member this.GetDocumentId : Microsoft.CodeAnalysis.SyntaxTree * Microsoft.CodeAnalysis.ProjectId -&gt; Microsoft.CodeAnalysis.DocumentId" Usage="solution.GetDocumentId (syntaxTree, projectId)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::DocumentId ^ GetDocumentId(Microsoft::CodeAnalysis::SyntaxTree ^ syntaxTree, Microsoft::CodeAnalysis::ProjectId ^ projectId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.DocumentId</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="syntaxTree" Type="Microsoft.CodeAnalysis.SyntaxTree" />
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
      </Parameters>
      <Docs>
        <param name="syntaxTree">To be added.</param>
        <param name="projectId">To be added.</param>
        <summary>
            Gets the documentId in this solution with the specified syntax tree.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocumentIdsWithFilePath">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.DocumentId&gt; GetDocumentIdsWithFilePath (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.DocumentId&gt; GetDocumentIdsWithFilePath(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.GetDocumentIdsWithFilePath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDocumentIdsWithFilePath (filePath As String) As ImmutableArray(Of DocumentId)" />
      <MemberSignature Language="F#" Value="member this.GetDocumentIdsWithFilePath : string -&gt; System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.DocumentId&gt;" Usage="solution.GetDocumentIdsWithFilePath filePath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::DocumentId ^&gt; GetDocumentIdsWithFilePath(System::String ^ filePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.DocumentId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">To be added.</param>
        <summary>
            Gets the set of <see cref="T:Microsoft.CodeAnalysis.DocumentId" />s in this <see cref="T:Microsoft.CodeAnalysis.Solution" /> with a
            <see cref="P:Microsoft.CodeAnalysis.TextDocument.FilePath" /> that matches the given file path.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsolatedSolution">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution GetIsolatedSolution ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution GetIsolatedSolution() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.GetIsolatedSolution" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsolatedSolution () As Solution" />
      <MemberSignature Language="F#" Value="member this.GetIsolatedSolution : unit -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.GetIsolatedSolution " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ GetIsolatedSolution();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets a copy of the solution isolated from the original so that they do not share computed state.
            
            Use isolated solutions when doing operations that are likely to access a lot of text,
            syntax trees or compilations that are unlikely to be needed again after the operation is done. 
            When the isolated solution is reclaimed so will the computed state.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLatestProjectVersion">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VersionStamp GetLatestProjectVersion ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.CodeAnalysis.VersionStamp GetLatestProjectVersion() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.GetLatestProjectVersion" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLatestProjectVersion () As VersionStamp" />
      <MemberSignature Language="F#" Value="member this.GetLatestProjectVersion : unit -&gt; Microsoft.CodeAnalysis.VersionStamp" Usage="solution.GetLatestProjectVersion " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VersionStamp GetLatestProjectVersion();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VersionStamp</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            The version of the most recently modified project.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProject">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project GetProject (Microsoft.CodeAnalysis.ProjectId projectId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Project GetProject(class Microsoft.CodeAnalysis.ProjectId projectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.GetProject(Microsoft.CodeAnalysis.ProjectId)" />
      <MemberSignature Language="F#" Value="member this.GetProject : Microsoft.CodeAnalysis.ProjectId -&gt; Microsoft.CodeAnalysis.Project" Usage="solution.GetProject projectId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Project ^ GetProject(Microsoft::CodeAnalysis::ProjectId ^ projectId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <summary>
            Gets the project in this solution with the specified project ID. 
            
            If the id is not an id of a project that is part of this solution the method returns null.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProject">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project GetProject (Microsoft.CodeAnalysis.IAssemblySymbol assemblySymbol, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Project GetProject(class Microsoft.CodeAnalysis.IAssemblySymbol assemblySymbol, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.GetProject(Microsoft.CodeAnalysis.IAssemblySymbol,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.GetProject : Microsoft.CodeAnalysis.IAssemblySymbol * System.Threading.CancellationToken -&gt; Microsoft.CodeAnalysis.Project" Usage="solution.GetProject (assemblySymbol, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblySymbol" Type="Microsoft.CodeAnalysis.IAssemblySymbol" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="assemblySymbol">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Gets the <see cref="T:Microsoft.CodeAnalysis.Project" /> associated with an assembly symbol.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProjectDependencyGraph">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.ProjectDependencyGraph GetProjectDependencyGraph ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.ProjectDependencyGraph GetProjectDependencyGraph() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.GetProjectDependencyGraph" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProjectDependencyGraph () As ProjectDependencyGraph" />
      <MemberSignature Language="F#" Value="member this.GetProjectDependencyGraph : unit -&gt; Microsoft.CodeAnalysis.ProjectDependencyGraph" Usage="solution.GetProjectDependencyGraph " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::ProjectDependencyGraph ^ GetProjectDependencyGraph();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ProjectDependencyGraph</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets a <see cref="T:Microsoft.CodeAnalysis.ProjectDependencyGraph" /> that details the dependencies between projects for this solution.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SolutionId Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.SolutionId Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Solution.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As SolutionId" />
      <MemberSignature Language="F#" Value="member this.Id : Microsoft.CodeAnalysis.SolutionId" Usage="Microsoft.CodeAnalysis.Solution.Id" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SolutionId ^ Id { Microsoft::CodeAnalysis::SolutionId ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SolutionId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The Id of the solution. Multiple solution instances may share the same Id.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Options.OptionSet Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.Options.OptionSet Options" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Solution.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As OptionSet" />
      <MemberSignature Language="F#" Value="member this.Options : Microsoft.CodeAnalysis.Options.OptionSet" Usage="Microsoft.CodeAnalysis.Solution.Options" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::Options::OptionSet ^ Options { Microsoft::CodeAnalysis::Options::OptionSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Options.OptionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the options that should be applied to this solution. This is equivalent to <see cref="P:Microsoft.CodeAnalysis.Workspace.Options" /> when the <see cref="T:Microsoft.CodeAnalysis.Solution" /> 
            instance was created.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectIds">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.CodeAnalysis.ProjectId&gt; ProjectIds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.CodeAnalysis.ProjectId&gt; ProjectIds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Solution.ProjectIds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectIds As IReadOnlyList(Of ProjectId)" />
      <MemberSignature Language="F#" Value="member this.ProjectIds : System.Collections.Generic.IReadOnlyList&lt;Microsoft.CodeAnalysis.ProjectId&gt;" Usage="Microsoft.CodeAnalysis.Solution.ProjectIds" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyList&lt;Microsoft::CodeAnalysis::ProjectId ^&gt; ^ ProjectIds { System::Collections::Generic::IReadOnlyList&lt;Microsoft::CodeAnalysis::ProjectId ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.CodeAnalysis.ProjectId&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A list of all the ids for all the projects contained by the solution.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Projects">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Project&gt; Projects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.Project&gt; Projects" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Solution.Projects" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Projects As IEnumerable(Of Project)" />
      <MemberSignature Language="F#" Value="member this.Projects : seq&lt;Microsoft.CodeAnalysis.Project&gt;" Usage="Microsoft.CodeAnalysis.Solution.Projects" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::Project ^&gt; ^ Projects { System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::Project ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Project&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A list of all the projects contained by the solution.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAdditionalDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution RemoveAdditionalDocument (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution RemoveAdditionalDocument(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.RemoveAdditionalDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberSignature Language="F#" Value="member this.RemoveAdditionalDocument : Microsoft.CodeAnalysis.DocumentId -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.RemoveAdditionalDocument documentId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ RemoveAdditionalDocument(Microsoft::CodeAnalysis::DocumentId ^ documentId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            Creates a new solution instance that no longer includes the specified additional document.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAnalyzerReference">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution RemoveAnalyzerReference (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution RemoveAnalyzerReference(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.RemoveAnalyzerReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)" />
      <MemberSignature Language="F#" Value="member this.RemoveAnalyzerReference : Microsoft.CodeAnalysis.ProjectId * Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.RemoveAnalyzerReference (projectId, analyzerReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ RemoveAnalyzerReference(Microsoft::CodeAnalysis::ProjectId ^ projectId, Microsoft::CodeAnalysis::Diagnostics::AnalyzerReference ^ analyzerReference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="analyzerReference" Type="Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="analyzerReference">To be added.</param>
        <summary>
            Create a new solution instance with the project specified updated to no longer include
            the specified analyzer reference.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution RemoveDocument (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution RemoveDocument(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.RemoveDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberSignature Language="F#" Value="member this.RemoveDocument : Microsoft.CodeAnalysis.DocumentId -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.RemoveDocument documentId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ RemoveDocument(Microsoft::CodeAnalysis::DocumentId ^ documentId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            Creates a new solution instance that no longer includes the specified document.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMetadataReference">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution RemoveMetadataReference (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.MetadataReference metadataReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution RemoveMetadataReference(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.MetadataReference metadataReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.RemoveMetadataReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)" />
      <MemberSignature Language="F#" Value="member this.RemoveMetadataReference : Microsoft.CodeAnalysis.ProjectId * Microsoft.CodeAnalysis.MetadataReference -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.RemoveMetadataReference (projectId, metadataReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ RemoveMetadataReference(Microsoft::CodeAnalysis::ProjectId ^ projectId, Microsoft::CodeAnalysis::MetadataReference ^ metadataReference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="metadataReference" Type="Microsoft.CodeAnalysis.MetadataReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="metadataReference">To be added.</param>
        <summary>
            Create a new solution instance with the project specified updated to no longer include
            the specified metadata reference.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProject">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution RemoveProject (Microsoft.CodeAnalysis.ProjectId projectId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution RemoveProject(class Microsoft.CodeAnalysis.ProjectId projectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.RemoveProject(Microsoft.CodeAnalysis.ProjectId)" />
      <MemberSignature Language="F#" Value="member this.RemoveProject : Microsoft.CodeAnalysis.ProjectId -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.RemoveProject projectId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ RemoveProject(Microsoft::CodeAnalysis::ProjectId ^ projectId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <summary>
            Create a new solution instance without the project specified.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProjectReference">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution RemoveProjectReference (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.ProjectReference projectReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution RemoveProjectReference(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.ProjectReference projectReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.RemoveProjectReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)" />
      <MemberSignature Language="F#" Value="member this.RemoveProjectReference : Microsoft.CodeAnalysis.ProjectId * Microsoft.CodeAnalysis.ProjectReference -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.RemoveProjectReference (projectId, projectReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ RemoveProjectReference(Microsoft::CodeAnalysis::ProjectId ^ projectId, Microsoft::CodeAnalysis::ProjectReference ^ projectReference);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="projectReference" Type="Microsoft.CodeAnalysis.ProjectReference" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="projectReference">To be added.</param>
        <summary>
            Create a new solution instance with the project specified updated to no longer
            include the specified project reference.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VersionStamp Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.VersionStamp Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Solution.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As VersionStamp" />
      <MemberSignature Language="F#" Value="member this.Version : Microsoft.CodeAnalysis.VersionStamp" Usage="Microsoft.CodeAnalysis.Solution.Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::VersionStamp Version { Microsoft::CodeAnalysis::VersionStamp get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VersionStamp</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The solution version. This equates to the solution file's version.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAdditionalDocumentText">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithAdditionalDocumentText (Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.Text.SourceText text, Microsoft.CodeAnalysis.PreservationMode mode = Microsoft.CodeAnalysis.PreservationMode.PreserveValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithAdditionalDocumentText(class Microsoft.CodeAnalysis.DocumentId documentId, class Microsoft.CodeAnalysis.Text.SourceText text, valuetype Microsoft.CodeAnalysis.PreservationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithAdditionalDocumentText(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.PreservationMode)" />
      <MemberSignature Language="F#" Value="member this.WithAdditionalDocumentText : Microsoft.CodeAnalysis.DocumentId * Microsoft.CodeAnalysis.Text.SourceText * Microsoft.CodeAnalysis.PreservationMode -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithAdditionalDocumentText (documentId, text, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="text" Type="Microsoft.CodeAnalysis.Text.SourceText" />
        <Parameter Name="mode" Type="Microsoft.CodeAnalysis.PreservationMode" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="text">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>
            Creates a new solution instance with the additional document specified updated to have the text
            specified.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAdditionalDocumentText">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithAdditionalDocumentText (Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.TextAndVersion textAndVersion, Microsoft.CodeAnalysis.PreservationMode mode = Microsoft.CodeAnalysis.PreservationMode.PreserveValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithAdditionalDocumentText(class Microsoft.CodeAnalysis.DocumentId documentId, class Microsoft.CodeAnalysis.TextAndVersion textAndVersion, valuetype Microsoft.CodeAnalysis.PreservationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithAdditionalDocumentText(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextAndVersion,Microsoft.CodeAnalysis.PreservationMode)" />
      <MemberSignature Language="F#" Value="member this.WithAdditionalDocumentText : Microsoft.CodeAnalysis.DocumentId * Microsoft.CodeAnalysis.TextAndVersion * Microsoft.CodeAnalysis.PreservationMode -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithAdditionalDocumentText (documentId, textAndVersion, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="textAndVersion" Type="Microsoft.CodeAnalysis.TextAndVersion" />
        <Parameter Name="mode" Type="Microsoft.CodeAnalysis.PreservationMode" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="textAndVersion">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>
            Creates a new solution instance with the additional document specified updated to have the text
            and version specified.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAdditionalDocumentTextLoader">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithAdditionalDocumentTextLoader (Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.TextLoader loader, Microsoft.CodeAnalysis.PreservationMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithAdditionalDocumentTextLoader(class Microsoft.CodeAnalysis.DocumentId documentId, class Microsoft.CodeAnalysis.TextLoader loader, valuetype Microsoft.CodeAnalysis.PreservationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithAdditionalDocumentTextLoader(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader,Microsoft.CodeAnalysis.PreservationMode)" />
      <MemberSignature Language="F#" Value="member this.WithAdditionalDocumentTextLoader : Microsoft.CodeAnalysis.DocumentId * Microsoft.CodeAnalysis.TextLoader * Microsoft.CodeAnalysis.PreservationMode -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithAdditionalDocumentTextLoader (documentId, loader, mode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ WithAdditionalDocumentTextLoader(Microsoft::CodeAnalysis::DocumentId ^ documentId, Microsoft::CodeAnalysis::TextLoader ^ loader, Microsoft::CodeAnalysis::PreservationMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="loader" Type="Microsoft.CodeAnalysis.TextLoader" />
        <Parameter Name="mode" Type="Microsoft.CodeAnalysis.PreservationMode" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="loader">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>
            Creates a new solution instance with the additional document specified updated to have the text
            supplied by the text loader.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDocumentFilePath">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithDocumentFilePath (Microsoft.CodeAnalysis.DocumentId documentId, string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithDocumentFilePath(class Microsoft.CodeAnalysis.DocumentId documentId, string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithDocumentFilePath(Microsoft.CodeAnalysis.DocumentId,System.String)" />
      <MemberSignature Language="F#" Value="member this.WithDocumentFilePath : Microsoft.CodeAnalysis.DocumentId * string -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithDocumentFilePath (documentId, filePath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ WithDocumentFilePath(Microsoft::CodeAnalysis::DocumentId ^ documentId, System::String ^ filePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="filePath">To be added.</param>
        <summary>
            Creates a new solution instance with the document specified updated to have the specified file path.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDocumentFolders">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithDocumentFolders (Microsoft.CodeAnalysis.DocumentId documentId, System.Collections.Generic.IEnumerable&lt;string&gt; folders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithDocumentFolders(class Microsoft.CodeAnalysis.DocumentId documentId, class System.Collections.Generic.IEnumerable`1&lt;string&gt; folders) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithDocumentFolders(Microsoft.CodeAnalysis.DocumentId,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="F#" Value="member this.WithDocumentFolders : Microsoft.CodeAnalysis.DocumentId * seq&lt;string&gt; -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithDocumentFolders (documentId, folders)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ WithDocumentFolders(Microsoft::CodeAnalysis::DocumentId ^ documentId, System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ folders);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="folders" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="folders">To be added.</param>
        <summary>
            Creates a new solution instance with the document specified updated to be contained in
            the sequence of logical folders.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDocumentName">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithDocumentName (Microsoft.CodeAnalysis.DocumentId documentId, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithDocumentName(class Microsoft.CodeAnalysis.DocumentId documentId, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithDocumentName(Microsoft.CodeAnalysis.DocumentId,System.String)" />
      <MemberSignature Language="F#" Value="member this.WithDocumentName : Microsoft.CodeAnalysis.DocumentId * string -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithDocumentName (documentId, name)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ WithDocumentName(Microsoft::CodeAnalysis::DocumentId ^ documentId, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="name">To be added.</param>
        <summary>
            Creates a new solution instance with the document specified updated to have the new name.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDocumentSourceCodeKind">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithDocumentSourceCodeKind (Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.SourceCodeKind sourceCodeKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithDocumentSourceCodeKind(class Microsoft.CodeAnalysis.DocumentId documentId, valuetype Microsoft.CodeAnalysis.SourceCodeKind sourceCodeKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithDocumentSourceCodeKind(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.SourceCodeKind)" />
      <MemberSignature Language="F#" Value="member this.WithDocumentSourceCodeKind : Microsoft.CodeAnalysis.DocumentId * Microsoft.CodeAnalysis.SourceCodeKind -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithDocumentSourceCodeKind (documentId, sourceCodeKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ WithDocumentSourceCodeKind(Microsoft::CodeAnalysis::DocumentId ^ documentId, Microsoft::CodeAnalysis::SourceCodeKind sourceCodeKind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="sourceCodeKind" Type="Microsoft.CodeAnalysis.SourceCodeKind" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="sourceCodeKind">To be added.</param>
        <summary>
            Creates a new solution instance with the document specified updated to have the source
            code kind specified.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDocumentSyntaxRoot">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithDocumentSyntaxRoot (Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.SyntaxNode root, Microsoft.CodeAnalysis.PreservationMode mode = Microsoft.CodeAnalysis.PreservationMode.PreserveValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithDocumentSyntaxRoot(class Microsoft.CodeAnalysis.DocumentId documentId, class Microsoft.CodeAnalysis.SyntaxNode root, valuetype Microsoft.CodeAnalysis.PreservationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithDocumentSyntaxRoot(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.PreservationMode)" />
      <MemberSignature Language="F#" Value="member this.WithDocumentSyntaxRoot : Microsoft.CodeAnalysis.DocumentId * Microsoft.CodeAnalysis.SyntaxNode * Microsoft.CodeAnalysis.PreservationMode -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithDocumentSyntaxRoot (documentId, root, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="root" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="mode" Type="Microsoft.CodeAnalysis.PreservationMode" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="root">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>
            Creates a new solution instance with the document specified updated to have a syntax tree
            rooted by the specified syntax node.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDocumentText">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithDocumentText (Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.Text.SourceText text, Microsoft.CodeAnalysis.PreservationMode mode = Microsoft.CodeAnalysis.PreservationMode.PreserveValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithDocumentText(class Microsoft.CodeAnalysis.DocumentId documentId, class Microsoft.CodeAnalysis.Text.SourceText text, valuetype Microsoft.CodeAnalysis.PreservationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithDocumentText(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.PreservationMode)" />
      <MemberSignature Language="F#" Value="member this.WithDocumentText : Microsoft.CodeAnalysis.DocumentId * Microsoft.CodeAnalysis.Text.SourceText * Microsoft.CodeAnalysis.PreservationMode -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithDocumentText (documentId, text, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="text" Type="Microsoft.CodeAnalysis.Text.SourceText" />
        <Parameter Name="mode" Type="Microsoft.CodeAnalysis.PreservationMode" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="text">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>
            Creates a new solution instance with the document specified updated to have the text
            specified.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDocumentText">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithDocumentText (Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.TextAndVersion textAndVersion, Microsoft.CodeAnalysis.PreservationMode mode = Microsoft.CodeAnalysis.PreservationMode.PreserveValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithDocumentText(class Microsoft.CodeAnalysis.DocumentId documentId, class Microsoft.CodeAnalysis.TextAndVersion textAndVersion, valuetype Microsoft.CodeAnalysis.PreservationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithDocumentText(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextAndVersion,Microsoft.CodeAnalysis.PreservationMode)" />
      <MemberSignature Language="F#" Value="member this.WithDocumentText : Microsoft.CodeAnalysis.DocumentId * Microsoft.CodeAnalysis.TextAndVersion * Microsoft.CodeAnalysis.PreservationMode -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithDocumentText (documentId, textAndVersion, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="textAndVersion" Type="Microsoft.CodeAnalysis.TextAndVersion" />
        <Parameter Name="mode" Type="Microsoft.CodeAnalysis.PreservationMode" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="textAndVersion">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>
            Creates a new solution instance with the document specified updated to have the text
            and version specified.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDocumentText">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithDocumentText (System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.DocumentId&gt; documentIds, Microsoft.CodeAnalysis.Text.SourceText text, Microsoft.CodeAnalysis.PreservationMode mode = Microsoft.CodeAnalysis.PreservationMode.PreserveValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithDocumentText(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.DocumentId&gt; documentIds, class Microsoft.CodeAnalysis.Text.SourceText text, valuetype Microsoft.CodeAnalysis.PreservationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithDocumentText(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentId},Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.PreservationMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithDocumentText (documentIds As IEnumerable(Of DocumentId), text As SourceText, Optional mode As PreservationMode = Microsoft.CodeAnalysis.PreservationMode.PreserveValue) As Solution" />
      <MemberSignature Language="F#" Value="member this.WithDocumentText : seq&lt;Microsoft.CodeAnalysis.DocumentId&gt; * Microsoft.CodeAnalysis.Text.SourceText * Microsoft.CodeAnalysis.PreservationMode -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithDocumentText (documentIds, text, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentIds" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.DocumentId&gt;" />
        <Parameter Name="text" Type="Microsoft.CodeAnalysis.Text.SourceText" />
        <Parameter Name="mode" Type="Microsoft.CodeAnalysis.PreservationMode" />
      </Parameters>
      <Docs>
        <param name="documentIds">To be added.</param>
        <param name="text">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>
            Creates a new solution instance with all the documents specified updated to have the same specified text.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDocumentTextLoader">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithDocumentTextLoader (Microsoft.CodeAnalysis.DocumentId documentId, Microsoft.CodeAnalysis.TextLoader loader, Microsoft.CodeAnalysis.PreservationMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithDocumentTextLoader(class Microsoft.CodeAnalysis.DocumentId documentId, class Microsoft.CodeAnalysis.TextLoader loader, valuetype Microsoft.CodeAnalysis.PreservationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithDocumentTextLoader(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader,Microsoft.CodeAnalysis.PreservationMode)" />
      <MemberSignature Language="F#" Value="member this.WithDocumentTextLoader : Microsoft.CodeAnalysis.DocumentId * Microsoft.CodeAnalysis.TextLoader * Microsoft.CodeAnalysis.PreservationMode -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithDocumentTextLoader (documentId, loader, mode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ WithDocumentTextLoader(Microsoft::CodeAnalysis::DocumentId ^ documentId, Microsoft::CodeAnalysis::TextLoader ^ loader, Microsoft::CodeAnalysis::PreservationMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
        <Parameter Name="loader" Type="Microsoft.CodeAnalysis.TextLoader" />
        <Parameter Name="mode" Type="Microsoft.CodeAnalysis.PreservationMode" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <param name="loader">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>
            Creates a new solution instance with the document specified updated to have the text
            supplied by the text loader.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithProjectAnalyzerReferences">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithProjectAnalyzerReferences (Microsoft.CodeAnalysis.ProjectId projectId, System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt; analyzerReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithProjectAnalyzerReferences(class Microsoft.CodeAnalysis.ProjectId projectId, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt; analyzerReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithProjectAnalyzerReferences(Microsoft.CodeAnalysis.ProjectId,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference})" />
      <MemberSignature Language="F#" Value="member this.WithProjectAnalyzerReferences : Microsoft.CodeAnalysis.ProjectId * seq&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt; -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithProjectAnalyzerReferences (projectId, analyzerReferences)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ WithProjectAnalyzerReferences(Microsoft::CodeAnalysis::ProjectId ^ projectId, System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::Diagnostics::AnalyzerReference ^&gt; ^ analyzerReferences);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="analyzerReferences" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt;" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="analyzerReferences">To be added.</param>
        <summary>
            Create a new solution instance with the project specified updated to include only the
            specified analyzer references.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithProjectAssemblyName">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithProjectAssemblyName (Microsoft.CodeAnalysis.ProjectId projectId, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithProjectAssemblyName(class Microsoft.CodeAnalysis.ProjectId projectId, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithProjectAssemblyName(Microsoft.CodeAnalysis.ProjectId,System.String)" />
      <MemberSignature Language="F#" Value="member this.WithProjectAssemblyName : Microsoft.CodeAnalysis.ProjectId * string -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithProjectAssemblyName (projectId, assemblyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ WithProjectAssemblyName(Microsoft::CodeAnalysis::ProjectId ^ projectId, System::String ^ assemblyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="assemblyName">To be added.</param>
        <summary>
            Creates a new solution instance with the project specified updated to have the new
            assembly name.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithProjectCompilationOptions">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithProjectCompilationOptions (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.CompilationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithProjectCompilationOptions(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.CompilationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithProjectCompilationOptions(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.CompilationOptions)" />
      <MemberSignature Language="F#" Value="member this.WithProjectCompilationOptions : Microsoft.CodeAnalysis.ProjectId * Microsoft.CodeAnalysis.CompilationOptions -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithProjectCompilationOptions (projectId, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ WithProjectCompilationOptions(Microsoft::CodeAnalysis::ProjectId ^ projectId, Microsoft::CodeAnalysis::CompilationOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="options" Type="Microsoft.CodeAnalysis.CompilationOptions" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
            Create a new solution instance with the project specified updated to have
            the specified compilation options.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithProjectFilePath">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithProjectFilePath (Microsoft.CodeAnalysis.ProjectId projectId, string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithProjectFilePath(class Microsoft.CodeAnalysis.ProjectId projectId, string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithProjectFilePath(Microsoft.CodeAnalysis.ProjectId,System.String)" />
      <MemberSignature Language="F#" Value="member this.WithProjectFilePath : Microsoft.CodeAnalysis.ProjectId * string -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithProjectFilePath (projectId, filePath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ WithProjectFilePath(Microsoft::CodeAnalysis::ProjectId ^ projectId, System::String ^ filePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="filePath">To be added.</param>
        <summary>
            Creates a new solution instance with the project specified updated to have the project file path.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithProjectMetadataReferences">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithProjectMetadataReferences (Microsoft.CodeAnalysis.ProjectId projectId, System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.MetadataReference&gt; metadataReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithProjectMetadataReferences(class Microsoft.CodeAnalysis.ProjectId projectId, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.MetadataReference&gt; metadataReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithProjectMetadataReferences(Microsoft.CodeAnalysis.ProjectId,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})" />
      <MemberSignature Language="F#" Value="member this.WithProjectMetadataReferences : Microsoft.CodeAnalysis.ProjectId * seq&lt;Microsoft.CodeAnalysis.MetadataReference&gt; -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithProjectMetadataReferences (projectId, metadataReferences)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ WithProjectMetadataReferences(Microsoft::CodeAnalysis::ProjectId ^ projectId, System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::MetadataReference ^&gt; ^ metadataReferences);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="metadataReferences" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.MetadataReference&gt;" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="metadataReferences">To be added.</param>
        <summary>
            Create a new solution instance with the project specified updated to include only the
            specified metadata references.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithProjectName">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithProjectName (Microsoft.CodeAnalysis.ProjectId projectId, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithProjectName(class Microsoft.CodeAnalysis.ProjectId projectId, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithProjectName(Microsoft.CodeAnalysis.ProjectId,System.String)" />
      <MemberSignature Language="F#" Value="member this.WithProjectName : Microsoft.CodeAnalysis.ProjectId * string -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithProjectName (projectId, name)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ WithProjectName(Microsoft::CodeAnalysis::ProjectId ^ projectId, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="name">To be added.</param>
        <summary>
            Creates a new solution instance with the project specified updated to have the name.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithProjectOutputFilePath">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithProjectOutputFilePath (Microsoft.CodeAnalysis.ProjectId projectId, string outputFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithProjectOutputFilePath(class Microsoft.CodeAnalysis.ProjectId projectId, string outputFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithProjectOutputFilePath(Microsoft.CodeAnalysis.ProjectId,System.String)" />
      <MemberSignature Language="F#" Value="member this.WithProjectOutputFilePath : Microsoft.CodeAnalysis.ProjectId * string -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithProjectOutputFilePath (projectId, outputFilePath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ WithProjectOutputFilePath(Microsoft::CodeAnalysis::ProjectId ^ projectId, System::String ^ outputFilePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="outputFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="outputFilePath">To be added.</param>
        <summary>
            Creates a new solution instance with the project specified updated to have the output file path.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithProjectOutputRefFilePath">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithProjectOutputRefFilePath (Microsoft.CodeAnalysis.ProjectId projectId, string outputRefFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithProjectOutputRefFilePath(class Microsoft.CodeAnalysis.ProjectId projectId, string outputRefFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithProjectOutputRefFilePath(Microsoft.CodeAnalysis.ProjectId,System.String)" />
      <MemberSignature Language="F#" Value="member this.WithProjectOutputRefFilePath : Microsoft.CodeAnalysis.ProjectId * string -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithProjectOutputRefFilePath (projectId, outputRefFilePath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ WithProjectOutputRefFilePath(Microsoft::CodeAnalysis::ProjectId ^ projectId, System::String ^ outputRefFilePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="outputRefFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="outputRefFilePath">To be added.</param>
        <summary>
            Creates a new solution instance with the project specified updated to have the reference assembly output file path.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithProjectParseOptions">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithProjectParseOptions (Microsoft.CodeAnalysis.ProjectId projectId, Microsoft.CodeAnalysis.ParseOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithProjectParseOptions(class Microsoft.CodeAnalysis.ProjectId projectId, class Microsoft.CodeAnalysis.ParseOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithProjectParseOptions(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ParseOptions)" />
      <MemberSignature Language="F#" Value="member this.WithProjectParseOptions : Microsoft.CodeAnalysis.ProjectId * Microsoft.CodeAnalysis.ParseOptions -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithProjectParseOptions (projectId, options)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ WithProjectParseOptions(Microsoft::CodeAnalysis::ProjectId ^ projectId, Microsoft::CodeAnalysis::ParseOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="options" Type="Microsoft.CodeAnalysis.ParseOptions" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="options">To be added.</param>
        <summary>
            Create a new solution instance with the project specified updated to have
            the specified parse options.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithProjectReferences">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution WithProjectReferences (Microsoft.CodeAnalysis.ProjectId projectId, System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.ProjectReference&gt; projectReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Solution WithProjectReferences(class Microsoft.CodeAnalysis.ProjectId projectId, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.ProjectReference&gt; projectReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Solution.WithProjectReferences(Microsoft.CodeAnalysis.ProjectId,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectReference})" />
      <MemberSignature Language="F#" Value="member this.WithProjectReferences : Microsoft.CodeAnalysis.ProjectId * seq&lt;Microsoft.CodeAnalysis.ProjectReference&gt; -&gt; Microsoft.CodeAnalysis.Solution" Usage="solution.WithProjectReferences (projectId, projectReferences)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Solution ^ WithProjectReferences(Microsoft::CodeAnalysis::ProjectId ^ projectId, System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::ProjectReference ^&gt; ^ projectReferences);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectId" Type="Microsoft.CodeAnalysis.ProjectId" />
        <Parameter Name="projectReferences" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.ProjectReference&gt;" />
      </Parameters>
      <Docs>
        <param name="projectId">To be added.</param>
        <param name="projectReferences">To be added.</param>
        <summary>
            Create a new solution instance with the project specified updated to contain
            the specified list of project references.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Workspace">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Workspace Workspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.Workspace Workspace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Solution.Workspace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Workspace As Workspace" />
      <MemberSignature Language="F#" Value="member this.Workspace : Microsoft.CodeAnalysis.Workspace" Usage="Microsoft.CodeAnalysis.Solution.Workspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::Workspace ^ Workspace { Microsoft::CodeAnalysis::Workspace ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Workspace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The Workspace this solution is associated with.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>