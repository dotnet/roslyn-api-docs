<Type Name="XmlDeclarationSyntax" FullName="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax">
  <TypeSignature Language="C#" Value="public sealed class XmlDeclarationSyntax : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlDeclarationSyntax extends Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlDeclarationSyntax&#xA;Inherits VisualBasicSyntaxNode" />
  <TypeSignature Language="F#" Value="type XmlDeclarationSyntax = class&#xA;    inherit VisualBasicSyntaxNode" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
 Represents the XML declaration prologue in an XML literal expression.
 </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor -&gt; unit" Usage="xmlDeclarationSyntax.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public override TResult Accept&lt;TResult&gt; (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResult Accept&lt;TResult&gt;(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1&lt;!!TResult&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResult) (visitor As VisualBasicSyntaxVisitor(Of TResult)) As TResult" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;'Result&gt; -&gt; 'Result" Usage="xmlDeclarationSyntax.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax Encoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Encoding As XmlDeclarationOptionSyntax" />
      <MemberSignature Language="F#" Value="member this.Encoding : Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
 This child is optional. If it is not present, then Nothing is returned.
 </remarks>
      </Docs>
    </Member>
    <Member MemberName="LessThanQuestionToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken LessThanQuestionToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken LessThanQuestionToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.LessThanQuestionToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LessThanQuestionToken As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.LessThanQuestionToken : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.LessThanQuestionToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QuestionGreaterThanToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken QuestionGreaterThanToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken QuestionGreaterThanToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.QuestionGreaterThanToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QuestionGreaterThanToken As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.QuestionGreaterThanToken : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.QuestionGreaterThanToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Standalone">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax Standalone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax Standalone" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.Standalone" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Standalone As XmlDeclarationOptionSyntax" />
      <MemberSignature Language="F#" Value="member this.Standalone : Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.Standalone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
 This child is optional. If it is not present, then Nothing is returned.
 </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax Update (Microsoft.CodeAnalysis.SyntaxToken lessThanQuestionToken, Microsoft.CodeAnalysis.SyntaxToken xmlKeyword, Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax version, Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax encoding, Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax standalone, Microsoft.CodeAnalysis.SyntaxToken questionGreaterThanToken);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax Update(valuetype Microsoft.CodeAnalysis.SyntaxToken lessThanQuestionToken, valuetype Microsoft.CodeAnalysis.SyntaxToken xmlKeyword, class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax version, class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax encoding, class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax standalone, valuetype Microsoft.CodeAnalysis.SyntaxToken questionGreaterThanToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (lessThanQuestionToken As SyntaxToken, xmlKeyword As SyntaxToken, version As XmlDeclarationOptionSyntax, encoding As XmlDeclarationOptionSyntax, standalone As XmlDeclarationOptionSyntax, questionGreaterThanToken As SyntaxToken) As XmlDeclarationSyntax" />
      <MemberSignature Language="F#" Value="member this.Update : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax * Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax * Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax * Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax" Usage="xmlDeclarationSyntax.Update (lessThanQuestionToken, xmlKeyword, version, encoding, standalone, questionGreaterThanToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lessThanQuestionToken" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="xmlKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="version" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax" />
        <Parameter Name="encoding" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax" />
        <Parameter Name="standalone" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax" />
        <Parameter Name="questionGreaterThanToken" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="lessThanQuestionToken">
 The value for the LessThanQuestionToken property.
 </param>
        <param name="xmlKeyword">
 The value for the XmlKeyword property.
 </param>
        <param name="version">
 The value for the Version property.
 </param>
        <param name="encoding">
 The value for the Encoding property.
 </param>
        <param name="standalone">
 The value for the Standalone property.
 </param>
        <param name="questionGreaterThanToken">
 The value for the QuestionGreaterThanToken property.
 </param>
        <summary>
 Returns a copy of this with the specified changes. Returns this instance if
 there are no actual changes.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As XmlDeclarationOptionSyntax" />
      <MemberSignature Language="F#" Value="member this.Version : Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithEncoding">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax WithEncoding (Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax WithEncoding(class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.WithEncoding(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithEncoding (encoding As XmlDeclarationOptionSyntax) As XmlDeclarationSyntax" />
      <MemberSignature Language="F#" Value="member this.WithEncoding : Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax" Usage="xmlDeclarationSyntax.WithEncoding encoding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoding" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax" />
      </Parameters>
      <Docs>
        <param name="encoding">To be added.</param>
        <summary>
 Returns a copy of this with the Encoding property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithLessThanQuestionToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax WithLessThanQuestionToken (Microsoft.CodeAnalysis.SyntaxToken lessThanQuestionToken);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax WithLessThanQuestionToken(valuetype Microsoft.CodeAnalysis.SyntaxToken lessThanQuestionToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.WithLessThanQuestionToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithLessThanQuestionToken (lessThanQuestionToken As SyntaxToken) As XmlDeclarationSyntax" />
      <MemberSignature Language="F#" Value="member this.WithLessThanQuestionToken : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax" Usage="xmlDeclarationSyntax.WithLessThanQuestionToken lessThanQuestionToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lessThanQuestionToken" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="lessThanQuestionToken">To be added.</param>
        <summary>
 Returns a copy of this with the LessThanQuestionToken property changed to the
 specified value. Returns this instance if the specified value is the same as
 the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithQuestionGreaterThanToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax WithQuestionGreaterThanToken (Microsoft.CodeAnalysis.SyntaxToken questionGreaterThanToken);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax WithQuestionGreaterThanToken(valuetype Microsoft.CodeAnalysis.SyntaxToken questionGreaterThanToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.WithQuestionGreaterThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithQuestionGreaterThanToken (questionGreaterThanToken As SyntaxToken) As XmlDeclarationSyntax" />
      <MemberSignature Language="F#" Value="member this.WithQuestionGreaterThanToken : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax" Usage="xmlDeclarationSyntax.WithQuestionGreaterThanToken questionGreaterThanToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="questionGreaterThanToken" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="questionGreaterThanToken">To be added.</param>
        <summary>
 Returns a copy of this with the QuestionGreaterThanToken property changed to
 the specified value. Returns this instance if the specified value is the same
 as the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithStandalone">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax WithStandalone (Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax standalone);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax WithStandalone(class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax standalone) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.WithStandalone(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithStandalone (standalone As XmlDeclarationOptionSyntax) As XmlDeclarationSyntax" />
      <MemberSignature Language="F#" Value="member this.WithStandalone : Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax" Usage="xmlDeclarationSyntax.WithStandalone standalone" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="standalone" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax" />
      </Parameters>
      <Docs>
        <param name="standalone">To be added.</param>
        <summary>
 Returns a copy of this with the Standalone property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithVersion">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax WithVersion (Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax version);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax WithVersion(class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.WithVersion(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithVersion (version As XmlDeclarationOptionSyntax) As XmlDeclarationSyntax" />
      <MemberSignature Language="F#" Value="member this.WithVersion : Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax" Usage="xmlDeclarationSyntax.WithVersion version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax" />
      </Parameters>
      <Docs>
        <param name="version">To be added.</param>
        <summary>
 Returns a copy of this with the Version property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithXmlKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax WithXmlKeyword (Microsoft.CodeAnalysis.SyntaxToken xmlKeyword);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax WithXmlKeyword(valuetype Microsoft.CodeAnalysis.SyntaxToken xmlKeyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.WithXmlKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithXmlKeyword (xmlKeyword As SyntaxToken) As XmlDeclarationSyntax" />
      <MemberSignature Language="F#" Value="member this.WithXmlKeyword : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax" Usage="xmlDeclarationSyntax.WithXmlKeyword xmlKeyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="xmlKeyword">To be added.</param>
        <summary>
 Returns a copy of this with the XmlKeyword property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken XmlKeyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken XmlKeyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.XmlKeyword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlKeyword As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.XmlKeyword : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.XmlKeyword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>