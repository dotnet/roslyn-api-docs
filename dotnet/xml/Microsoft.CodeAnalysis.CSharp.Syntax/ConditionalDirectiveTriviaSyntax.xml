<Type Name="ConditionalDirectiveTriviaSyntax" FullName="Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalDirectiveTriviaSyntax">
  <TypeSignature Language="C#" Value="public abstract class ConditionalDirectiveTriviaSyntax : Microsoft.CodeAnalysis.CSharp.Syntax.BranchingDirectiveTriviaSyntax" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConditionalDirectiveTriviaSyntax extends Microsoft.CodeAnalysis.CSharp.Syntax.BranchingDirectiveTriviaSyntax" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalDirectiveTriviaSyntax" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConditionalDirectiveTriviaSyntax&#xA;Inherits BranchingDirectiveTriviaSyntax" />
  <TypeSignature Language="F#" Value="type ConditionalDirectiveTriviaSyntax = class&#xA;    inherit BranchingDirectiveTriviaSyntax" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConditionalDirectiveTriviaSyntax abstract : Microsoft::CodeAnalysis::CSharp::Syntax::BranchingDirectiveTriviaSyntax" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class ConditionalDirectiveTriviaSyntax abstract : Microsoft::CodeAnalysis::CSharp::Syntax::BranchingDirectiveTriviaSyntax" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class ConditionalDirectiveTriviaSyntax abstract : Microsoft::CodeAnalysis::CSharp::Syntax::BranchingDirectiveTriviaSyntax" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.CSharp.Syntax.BranchingDirectiveTriviaSyntax</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Condition">
      <MemberSignature Language="C#" Value="public abstract Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax Condition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax Condition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalDirectiveTriviaSyntax.Condition" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Condition As ExpressionSyntax" />
      <MemberSignature Language="F#" Value="member this.Condition : Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax" Usage="Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalDirectiveTriviaSyntax.Condition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^ Condition { Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; abstract property Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^ Condition { Microsoft::CodeAnalysis::CSharp::Syntax::ExpressionSyntax ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionValue">
      <MemberSignature Language="C#" Value="public abstract bool ConditionValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConditionValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalDirectiveTriviaSyntax.ConditionValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ConditionValue As Boolean" />
      <MemberSignature Language="F#" Value="member this.ConditionValue : bool" Usage="Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalDirectiveTriviaSyntax.ConditionValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool ConditionValue { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; abstract property bool ConditionValue { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithCondition">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalDirectiveTriviaSyntax WithCondition (Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalDirectiveTriviaSyntax WithCondition(class Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalDirectiveTriviaSyntax.WithCondition(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithCondition (condition As ExpressionSyntax) As ConditionalDirectiveTriviaSyntax" />
      <MemberSignature Language="F#" Value="member this.WithCondition : Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax -&gt; Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalDirectiveTriviaSyntax" Usage="conditionalDirectiveTriviaSyntax.WithCondition condition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalDirectiveTriviaSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="condition" Type="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax" />
      </Parameters>
      <Docs>
        <param name="condition">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>