<Type Name="BaseArgumentListSyntax" FullName="Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax">
  <TypeSignature Language="C#" Value="public abstract class BaseArgumentListSyntax : Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseArgumentListSyntax extends Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseArgumentListSyntax&#xA;Inherits CSharpSyntaxNode" />
  <TypeSignature Language="F#" Value="type BaseArgumentListSyntax = class&#xA;    inherit CSharpSyntaxNode" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides the base class from which the classes that represent argument list syntax nodes are derived. This is an abstract class.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public abstract Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax&gt; Arguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SeparatedSyntaxList`1&lt;class Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax&gt; Arguments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Arguments As SeparatedSyntaxList(Of ArgumentSyntax)" />
      <MemberSignature Language="F#" Value="member this.Arguments : Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax&gt;" Usage="Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>SeparatedSyntaxList of ArgumentSyntax nodes representing the list of arguments.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>