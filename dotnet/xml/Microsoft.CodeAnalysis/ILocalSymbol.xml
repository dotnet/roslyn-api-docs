<Type Name="ILocalSymbol" FullName="Microsoft.CodeAnalysis.ILocalSymbol">
  <TypeSignature Language="C#" Value="public interface ILocalSymbol : IEquatable&lt;Microsoft.CodeAnalysis.ISymbol&gt;, Microsoft.CodeAnalysis.ISymbol" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILocalSymbol implements class Microsoft.CodeAnalysis.ISymbol, class System.IEquatable`1&lt;class Microsoft.CodeAnalysis.ISymbol&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.ILocalSymbol" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILocalSymbol&#xA;Implements IEquatable(Of ISymbol), ISymbol" />
  <TypeSignature Language="F#" Value="type ILocalSymbol = interface&#xA;    interface ISymbol&#xA;    interface IEquatable&lt;ISymbol&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.CodeAnalysis.ISymbol</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.CodeAnalysis.ISymbol&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents a local variable in method body.
            </summary>
    <remarks>
            This interface is reserved for implementation by its associated APIs. We reserve the right to
            change it in the future.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="ConstantValue">
      <MemberSignature Language="C#" Value="public object ConstantValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConstantValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.ILocalSymbol.ConstantValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstantValue As Object" />
      <MemberSignature Language="F#" Value="member this.ConstantValue : obj" Usage="Microsoft.CodeAnalysis.ILocalSymbol.ConstantValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the constant value of this local variable.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasConstantValue">
      <MemberSignature Language="C#" Value="public bool HasConstantValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasConstantValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.ILocalSymbol.HasConstantValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasConstantValue As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasConstantValue : bool" Usage="Microsoft.CodeAnalysis.ILocalSymbol.HasConstantValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns false if the local variable wasn't declared as "const", or constant value was omitted or erroneous.
            True otherwise.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConst">
      <MemberSignature Language="C#" Value="public bool IsConst { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConst" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.ILocalSymbol.IsConst" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConst As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsConst : bool" Usage="Microsoft.CodeAnalysis.ILocalSymbol.IsConst" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if this local variable was declared as "const" (i.e. is a constant declaration).
            Also returns true for an enum member.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFunctionValue">
      <MemberSignature Language="C#" Value="public bool IsFunctionValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFunctionValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.ILocalSymbol.IsFunctionValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFunctionValue As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsFunctionValue : bool" Usage="Microsoft.CodeAnalysis.ILocalSymbol.IsFunctionValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRef">
      <MemberSignature Language="C#" Value="public bool IsRef { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRef" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.ILocalSymbol.IsRef" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRef As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsRef : bool" Usage="Microsoft.CodeAnalysis.ILocalSymbol.IsRef" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if this local is a ref-local.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.ITypeSymbol Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.ITypeSymbol Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.ILocalSymbol.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As ITypeSymbol" />
      <MemberSignature Language="F#" Value="member this.Type : Microsoft.CodeAnalysis.ITypeSymbol" Usage="Microsoft.CodeAnalysis.ILocalSymbol.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ITypeSymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the type of this local variable.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>