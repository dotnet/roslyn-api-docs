<Type Name="SymbolEditor" FullName="Microsoft.CodeAnalysis.Editing.SymbolEditor">
  <TypeSignature Language="C#" Value="public sealed class SymbolEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SymbolEditor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Editing.SymbolEditor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SymbolEditor" />
  <TypeSignature Language="F#" Value="type SymbolEditor = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class SymbolEditor sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            An editor for making changes to symbol source declarations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ChangedSolution">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution ChangedSolution { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.Solution ChangedSolution" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Editing.SymbolEditor.ChangedSolution" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChangedSolution As Solution" />
      <MemberSignature Language="F#" Value="member this.ChangedSolution : Microsoft.CodeAnalysis.Solution" Usage="Microsoft.CodeAnalysis.Editing.SymbolEditor.ChangedSolution" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::Solution ^ ChangedSolution { Microsoft::CodeAnalysis::Solution ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The solution with the edits applied.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Editing.SymbolEditor Create (Microsoft.CodeAnalysis.Document document);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CodeAnalysis.Editing.SymbolEditor Create(class Microsoft.CodeAnalysis.Document document) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.Create(Microsoft.CodeAnalysis.Document)" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.CodeAnalysis.Document -&gt; Microsoft.CodeAnalysis.Editing.SymbolEditor" Usage="Microsoft.CodeAnalysis.Editing.SymbolEditor.Create document" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::CodeAnalysis::Editing::SymbolEditor ^ Create(Microsoft::CodeAnalysis::Document ^ document);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Editing.SymbolEditor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="document" Type="Microsoft.CodeAnalysis.Document" />
      </Parameters>
      <Docs>
        <param name="document">To be added.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.CodeAnalysis.Editing.SymbolEditor" /> instance.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Editing.SymbolEditor Create (Microsoft.CodeAnalysis.Solution solution);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CodeAnalysis.Editing.SymbolEditor Create(class Microsoft.CodeAnalysis.Solution solution) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.Create(Microsoft.CodeAnalysis.Solution)" />
      <MemberSignature Language="F#" Value="static member Create : Microsoft.CodeAnalysis.Solution -&gt; Microsoft.CodeAnalysis.Editing.SymbolEditor" Usage="Microsoft.CodeAnalysis.Editing.SymbolEditor.Create solution" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::CodeAnalysis::Editing::SymbolEditor ^ Create(Microsoft::CodeAnalysis::Solution ^ solution);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Editing.SymbolEditor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="solution" Type="Microsoft.CodeAnalysis.Solution" />
      </Parameters>
      <Docs>
        <param name="solution">To be added.</param>
        <summary>
            Creates a new <see cref="T:Microsoft.CodeAnalysis.Editing.SymbolEditor" /> instance.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditAllDeclarationsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt; EditAllDeclarationsAsync (Microsoft.CodeAnalysis.ISymbol symbol, Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction editAction, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.CodeAnalysis.ISymbol&gt; EditAllDeclarationsAsync(class Microsoft.CodeAnalysis.ISymbol symbol, class Microsoft.CodeAnalysis.Editing.SymbolEditor/AsyncDeclarationEditAction editAction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.EditAllDeclarationsAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.EditAllDeclarationsAsync : Microsoft.CodeAnalysis.ISymbol * Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt;" Usage="symbolEditor.EditAllDeclarationsAsync (symbol, editAction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="symbol" Type="Microsoft.CodeAnalysis.ISymbol" />
        <Parameter Name="editAction" Type="Microsoft.CodeAnalysis.Editing.SymbolEditor+AsyncDeclarationEditAction" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="symbol">The symbol to be edited.</param>
        <param name="editAction">The action that makes edits to the declaration.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" />.</param>
        <summary>
            Enables editing all the symbol's declarations. 
            Partial types and methods may have more than one declaration.
            </summary>
        <returns>The new symbol including the changes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditAllDeclarationsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt; EditAllDeclarationsAsync (Microsoft.CodeAnalysis.ISymbol symbol, Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction editAction, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.CodeAnalysis.ISymbol&gt; EditAllDeclarationsAsync(class Microsoft.CodeAnalysis.ISymbol symbol, class Microsoft.CodeAnalysis.Editing.SymbolEditor/DeclarationEditAction editAction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.EditAllDeclarationsAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.EditAllDeclarationsAsync : Microsoft.CodeAnalysis.ISymbol * Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt;" Usage="symbolEditor.EditAllDeclarationsAsync (symbol, editAction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="symbol" Type="Microsoft.CodeAnalysis.ISymbol" />
        <Parameter Name="editAction" Type="Microsoft.CodeAnalysis.Editing.SymbolEditor+DeclarationEditAction" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="symbol">The symbol to be edited.</param>
        <param name="editAction">The action that makes edits to the declaration.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" />.</param>
        <summary>
            Enables editing all the symbol's declarations. 
            Partial types and methods may have more than one declaration.
            </summary>
        <returns>The new symbol including the changes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditOneDeclarationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt; EditOneDeclarationAsync (Microsoft.CodeAnalysis.ISymbol symbol, Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction editAction, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.CodeAnalysis.ISymbol&gt; EditOneDeclarationAsync(class Microsoft.CodeAnalysis.ISymbol symbol, class Microsoft.CodeAnalysis.Editing.SymbolEditor/AsyncDeclarationEditAction editAction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.EditOneDeclarationAsync : Microsoft.CodeAnalysis.ISymbol * Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt;" Usage="symbolEditor.EditOneDeclarationAsync (symbol, editAction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="symbol" Type="Microsoft.CodeAnalysis.ISymbol" />
        <Parameter Name="editAction" Type="Microsoft.CodeAnalysis.Editing.SymbolEditor+AsyncDeclarationEditAction" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="symbol">The symbol to edit.</param>
        <param name="editAction">The action that makes edits to the declaration.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" />.</param>
        <summary>
            Enables editing the definition of one of the symbol's declarations.
            Partial types and methods may have more than one declaration.
            </summary>
        <returns>The new symbol including the changes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditOneDeclarationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt; EditOneDeclarationAsync (Microsoft.CodeAnalysis.ISymbol symbol, Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction editAction, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.CodeAnalysis.ISymbol&gt; EditOneDeclarationAsync(class Microsoft.CodeAnalysis.ISymbol symbol, class Microsoft.CodeAnalysis.Editing.SymbolEditor/DeclarationEditAction editAction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.EditOneDeclarationAsync : Microsoft.CodeAnalysis.ISymbol * Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt;" Usage="symbolEditor.EditOneDeclarationAsync (symbol, editAction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="symbol" Type="Microsoft.CodeAnalysis.ISymbol" />
        <Parameter Name="editAction" Type="Microsoft.CodeAnalysis.Editing.SymbolEditor+DeclarationEditAction" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="symbol">The symbol to edit.</param>
        <param name="editAction">The action that makes edits to the declaration.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" />.</param>
        <summary>
            Enables editing the definition of one of the symbol's declarations.
            Partial types and methods may have more than one declaration.
            </summary>
        <returns>The new symbol including the changes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditOneDeclarationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt; EditOneDeclarationAsync (Microsoft.CodeAnalysis.ISymbol symbol, Microsoft.CodeAnalysis.ISymbol member, Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction editAction, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.CodeAnalysis.ISymbol&gt; EditOneDeclarationAsync(class Microsoft.CodeAnalysis.ISymbol symbol, class Microsoft.CodeAnalysis.ISymbol member, class Microsoft.CodeAnalysis.Editing.SymbolEditor/AsyncDeclarationEditAction editAction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.EditOneDeclarationAsync : Microsoft.CodeAnalysis.ISymbol * Microsoft.CodeAnalysis.ISymbol * Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt;" Usage="symbolEditor.EditOneDeclarationAsync (symbol, member, editAction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="symbol" Type="Microsoft.CodeAnalysis.ISymbol" />
        <Parameter Name="member" Type="Microsoft.CodeAnalysis.ISymbol" />
        <Parameter Name="editAction" Type="Microsoft.CodeAnalysis.Editing.SymbolEditor+AsyncDeclarationEditAction" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="symbol">The symbol to edit.</param>
        <param name="member">A symbol whose declaration is contained within one of the primary symbol's declarations.</param>
        <param name="editAction">The action that makes edits to the declaration.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" />.</param>
        <summary>
            Enables editing the symbol's declaration where the member is also declared.
            Partial types and methods may have more than one declaration.
            </summary>
        <returns>The new symbol including the changes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditOneDeclarationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt; EditOneDeclarationAsync (Microsoft.CodeAnalysis.ISymbol symbol, Microsoft.CodeAnalysis.ISymbol member, Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction editAction, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.CodeAnalysis.ISymbol&gt; EditOneDeclarationAsync(class Microsoft.CodeAnalysis.ISymbol symbol, class Microsoft.CodeAnalysis.ISymbol member, class Microsoft.CodeAnalysis.Editing.SymbolEditor/DeclarationEditAction editAction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.EditOneDeclarationAsync : Microsoft.CodeAnalysis.ISymbol * Microsoft.CodeAnalysis.ISymbol * Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt;" Usage="symbolEditor.EditOneDeclarationAsync (symbol, member, editAction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="symbol" Type="Microsoft.CodeAnalysis.ISymbol" />
        <Parameter Name="member" Type="Microsoft.CodeAnalysis.ISymbol" />
        <Parameter Name="editAction" Type="Microsoft.CodeAnalysis.Editing.SymbolEditor+DeclarationEditAction" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="symbol">The symbol to edit.</param>
        <param name="member">A symbol whose declaration is contained within one of the primary symbol's declarations.</param>
        <param name="editAction">The action that makes edits to the declaration.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" />.</param>
        <summary>
            Enables editing the symbol's declaration where the member is also declared.
            Partial types and methods may have more than one declaration.
            </summary>
        <returns>The new symbol including the changes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditOneDeclarationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt; EditOneDeclarationAsync (Microsoft.CodeAnalysis.ISymbol symbol, Microsoft.CodeAnalysis.Location location, Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction editAction, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.CodeAnalysis.ISymbol&gt; EditOneDeclarationAsync(class Microsoft.CodeAnalysis.ISymbol symbol, class Microsoft.CodeAnalysis.Location location, class Microsoft.CodeAnalysis.Editing.SymbolEditor/AsyncDeclarationEditAction editAction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Location,Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.EditOneDeclarationAsync : Microsoft.CodeAnalysis.ISymbol * Microsoft.CodeAnalysis.Location * Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt;" Usage="symbolEditor.EditOneDeclarationAsync (symbol, location, editAction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="symbol" Type="Microsoft.CodeAnalysis.ISymbol" />
        <Parameter Name="location" Type="Microsoft.CodeAnalysis.Location" />
        <Parameter Name="editAction" Type="Microsoft.CodeAnalysis.Editing.SymbolEditor+AsyncDeclarationEditAction" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="symbol">The symbol to edit.</param>
        <param name="location">A location within one of the symbol's declarations.</param>
        <param name="editAction">The action that makes edits to the declaration.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" />.</param>
        <summary>
            Enables editing the definition of one of the symbol's declarations.
            Partial types and methods may have more than one declaration.
            </summary>
        <returns>The new symbol including the changes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EditOneDeclarationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt; EditOneDeclarationAsync (Microsoft.CodeAnalysis.ISymbol symbol, Microsoft.CodeAnalysis.Location location, Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction editAction, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.CodeAnalysis.ISymbol&gt; EditOneDeclarationAsync(class Microsoft.CodeAnalysis.ISymbol symbol, class Microsoft.CodeAnalysis.Location location, class Microsoft.CodeAnalysis.Editing.SymbolEditor/DeclarationEditAction editAction, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Location,Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.EditOneDeclarationAsync : Microsoft.CodeAnalysis.ISymbol * Microsoft.CodeAnalysis.Location * Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt;" Usage="symbolEditor.EditOneDeclarationAsync (symbol, location, editAction, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="symbol" Type="Microsoft.CodeAnalysis.ISymbol" />
        <Parameter Name="location" Type="Microsoft.CodeAnalysis.Location" />
        <Parameter Name="editAction" Type="Microsoft.CodeAnalysis.Editing.SymbolEditor+DeclarationEditAction" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="symbol">The symbol to edit.</param>
        <param name="location">A location within one of the symbol's declarations.</param>
        <param name="editAction">The action that makes edits to the declaration.</param>
        <param name="cancellationToken">An optional <see cref="T:System.Threading.CancellationToken" />.</param>
        <summary>
            Enables editing the definition of one of the symbol's declarations.
            Partial types and methods may have more than one declaration.
            </summary>
        <returns>The new symbol including the changes.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangedDocuments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Document&gt; GetChangedDocuments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.Document&gt; GetChangedDocuments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.GetChangedDocuments" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetChangedDocuments () As IEnumerable(Of Document)" />
      <MemberSignature Language="F#" Value="member this.GetChangedDocuments : unit -&gt; seq&lt;Microsoft.CodeAnalysis.Document&gt;" Usage="symbolEditor.GetChangedDocuments " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::Document ^&gt; ^ GetChangedDocuments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.CodeAnalysis.Editing.SymbolEditor/&lt;GetChangedDocuments&gt;d__9))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Document&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            The documents changed since the <see cref="T:Microsoft.CodeAnalysis.Editing.SymbolEditor" /> was constructed.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentDeclarationsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyList&lt;Microsoft.CodeAnalysis.SyntaxNode&gt;&gt; GetCurrentDeclarationsAsync (Microsoft.CodeAnalysis.ISymbol symbol, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.CodeAnalysis.SyntaxNode&gt;&gt; GetCurrentDeclarationsAsync(class Microsoft.CodeAnalysis.ISymbol symbol, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.GetCurrentDeclarationsAsync(Microsoft.CodeAnalysis.ISymbol,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.GetCurrentDeclarationsAsync : Microsoft.CodeAnalysis.ISymbol * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyList&lt;Microsoft.CodeAnalysis.SyntaxNode&gt;&gt;" Usage="symbolEditor.GetCurrentDeclarationsAsync (symbol, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IReadOnlyList&lt;Microsoft.CodeAnalysis.SyntaxNode&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="symbol" Type="Microsoft.CodeAnalysis.ISymbol" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="symbol">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Gets the current declarations for the specified symbol.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentSymbolAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt; GetCurrentSymbolAsync (Microsoft.CodeAnalysis.ISymbol symbol, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.CodeAnalysis.ISymbol&gt; GetCurrentSymbolAsync(class Microsoft.CodeAnalysis.ISymbol symbol, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.GetCurrentSymbolAsync(Microsoft.CodeAnalysis.ISymbol,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.GetCurrentSymbolAsync : Microsoft.CodeAnalysis.ISymbol * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt;" Usage="symbolEditor.GetCurrentSymbolAsync (symbol, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.ISymbol&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="symbol" Type="Microsoft.CodeAnalysis.ISymbol" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="symbol">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Gets the current symbol for a source symbol.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalSolution">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution OriginalSolution { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.Solution OriginalSolution" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Editing.SymbolEditor.OriginalSolution" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalSolution As Solution" />
      <MemberSignature Language="F#" Value="member this.OriginalSolution : Microsoft.CodeAnalysis.Solution" Usage="Microsoft.CodeAnalysis.Editing.SymbolEditor.OriginalSolution" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::Solution ^ OriginalSolution { Microsoft::CodeAnalysis::Solution ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The original solution.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>