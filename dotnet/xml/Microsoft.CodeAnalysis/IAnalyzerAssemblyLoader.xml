<Type Name="IAnalyzerAssemblyLoader" FullName="Microsoft.CodeAnalysis.IAnalyzerAssemblyLoader">
  <TypeSignature Language="C#" Value="public interface IAnalyzerAssemblyLoader" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAnalyzerAssemblyLoader" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.IAnalyzerAssemblyLoader" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Handles loading analyzer assemblies and their dependencies.
            
            Before an analyzer assembly is loaded with <see cref="M:Microsoft.CodeAnalysis.IAnalyzerAssemblyLoader.LoadFromPath(System.String)" />,
            its location and the location of all of its dependencies must first be specified
            by calls to <see cref="M:Microsoft.CodeAnalysis.IAnalyzerAssemblyLoader.AddDependencyLocation(System.String)" />.
            </summary>
    <remarks>
            To the extent possible, implementations should remain consistent in the face
            of exceptions and allow the caller to handle them. This allows the caller to
            decide how to surface issues to the user and whether or not they are fatal. For
            example, if asked to load an a non-existent or inaccessible file a command line
            tool may wish to exit immediately, while an IDE may wish to keep going and give
            the user a chance to correct the issue.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddDependencyLocation">
      <MemberSignature Language="C#" Value="public void AddDependencyLocation (string fullPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddDependencyLocation(string fullPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.IAnalyzerAssemblyLoader.AddDependencyLocation(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fullPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fullPath">To be added.</param>
        <summary>
            Adds a file to consider when loading an analyzer or its dependencies.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fullPath" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fullPath" /> is not a full path.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadFromPath">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly LoadFromPath (string fullPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly LoadFromPath(string fullPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.IAnalyzerAssemblyLoader.LoadFromPath(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fullPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fullPath">To be added.</param>
        <summary>
            Given the full path to an assembly on disk, loads and returns the
            corresponding <see cref="T:System.Reflection.Assembly" /> object.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Multiple calls with the same path should return the same 
            <see cref="T:System.Reflection.Assembly" /> instance.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="fullPath" /> is null.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="fullPath" /> is not a full path.</exception>
      </Docs>
    </Member>
  </Members>
</Type>