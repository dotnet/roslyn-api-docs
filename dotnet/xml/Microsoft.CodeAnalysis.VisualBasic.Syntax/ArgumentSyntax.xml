<Type Name="ArgumentSyntax" FullName="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax">
  <TypeSignature Language="C#" Value="public abstract class ArgumentSyntax : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ArgumentSyntax extends Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ArgumentSyntax&#xA;Inherits VisualBasicSyntaxNode" />
  <TypeSignature Language="F#" Value="type ArgumentSyntax = class&#xA;    inherit VisualBasicSyntaxNode" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
 Base class for the possible kinds of arguments that can appear in an argument
 list.
 </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public abstract Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetExpression () As ExpressionSyntax" />
      <MemberSignature Language="F#" Value="abstract member GetExpression : unit -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax" Usage="argumentSyntax.GetExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
 Gets the expression of this argument, if any.
 </summary>
        <returns>The expression of this argument if it is a simple argument; otherwise null.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNamed">
      <MemberSignature Language="C#" Value="public abstract bool IsNamed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamed" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax.IsNamed" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsNamed As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsNamed : bool" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax.IsNamed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 Gets a value indicating whether this argument is a named argument.
 </summary>
        <value>True if this argument is a named argument; otherwise false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOmitted">
      <MemberSignature Language="C#" Value="public bool IsOmitted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOmitted" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax.IsOmitted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsOmitted As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsOmitted : bool" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax.IsOmitted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 Gets a value indicating whether this argument is an omitted argument.
 </summary>
        <value>True if this argument is an omitted argument; otherwise false.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>