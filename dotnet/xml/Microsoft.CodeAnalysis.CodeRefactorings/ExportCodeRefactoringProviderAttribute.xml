<Type Name="ExportCodeRefactoringProviderAttribute" FullName="Microsoft.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute">
  <TypeSignature Language="C#" Value="public sealed class ExportCodeRefactoringProviderAttribute : System.Composition.ExportAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExportCodeRefactoringProviderAttribute extends System.Composition.ExportAttribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExportCodeRefactoringProviderAttribute&#xA;Inherits ExportAttribute" />
  <TypeSignature Language="F#" Value="type ExportCodeRefactoringProviderAttribute = class&#xA;    inherit ExportAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportCodeRefactoringProviderAttribute sealed : System::Composition::ExportAttribute" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Composition.ExportAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Composition.MetadataAttribute</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Use this attribute to declare a <see cref="T:Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringProvider" /> implementation so that it can be discovered by the host.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExportCodeRefactoringProviderAttribute (string firstLanguage, params string[] additionalLanguages);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string firstLanguage, string[] additionalLanguages) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (firstLanguage As String, ParamArray additionalLanguages As String())" />
      <MemberSignature Language="F#" Value="new Microsoft.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute : string * string[] -&gt; Microsoft.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute" Usage="new Microsoft.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute (firstLanguage, additionalLanguages)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExportCodeRefactoringProviderAttribute(System::String ^ firstLanguage, ... cli::array &lt;System::String ^&gt; ^ additionalLanguages);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="firstLanguage" Type="System.String" />
        <Parameter Name="additionalLanguages" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="firstLanguage">One language to which the code refactoring provider applies.</param>
        <param name="additionalLanguages">Additional languages to which the code refactoring provider applies. See <see cref="T:Microsoft.CodeAnalysis.LanguageNames" />.</param>
        <summary>
            Attribute constructor used to specify availability of a code refactoring provider.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Languages">
      <MemberSignature Language="C#" Value="public string[] Languages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Languages" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute.Languages" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Languages As String()" />
      <MemberSignature Language="F#" Value="member this.Languages : string[]" Usage="Microsoft.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute.Languages" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ Languages { cli::array &lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The source languages for which this provider can provide refactorings. See <see cref="T:Microsoft.CodeAnalysis.LanguageNames" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute.Name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the <see cref="T:Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringProvider" />.  
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>