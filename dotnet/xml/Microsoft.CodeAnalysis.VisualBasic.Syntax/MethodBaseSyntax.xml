<Type Name="MethodBaseSyntax" FullName="Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax">
  <TypeSignature Language="C#" Value="public abstract class MethodBaseSyntax : Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclarationStatementSyntax" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract MethodBaseSyntax extends Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclarationStatementSyntax" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MethodBaseSyntax&#xA;Inherits DeclarationStatementSyntax" />
  <TypeSignature Language="F#" Value="type MethodBaseSyntax = class&#xA;    inherit DeclarationStatementSyntax" />
  <TypeSignature Language="C++ CLI" Value="public ref class MethodBaseSyntax abstract : Microsoft::CodeAnalysis::VisualBasic::Syntax::DeclarationStatementSyntax" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class MethodBaseSyntax abstract : Microsoft::CodeAnalysis::VisualBasic::Syntax::DeclarationStatementSyntax" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class MethodBaseSyntax abstract : Microsoft::CodeAnalysis::VisualBasic::Syntax::DeclarationStatementSyntax" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclarationStatementSyntax</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
 An abstract node class that is the parent for declarations that are
 "method-like"; i.e., that have a parameter list and return type. This includes
 methods, constructors, properties, events, operators, declares, delegates,
 property accessors and custom event accessors.
 </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AttributeLists">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax&gt; AttributeLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxList`1&lt;class Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax&gt; AttributeLists" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.AttributeLists" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeLists As SyntaxList(Of AttributeListSyntax)" />
      <MemberSignature Language="F#" Value="member this.AttributeLists : Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax&gt;" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.AttributeLists" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::AttributeListSyntax ^&gt; AttributeLists { Microsoft::CodeAnalysis::SyntaxList&lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::AttributeListSyntax ^&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 A list of all attribute lists on this declaration. If no attributes were
 specified, Nothing is returned.
 </summary>
        <value>To be added.</value>
        <remarks>
 If nothing is present, an empty list is returned.
 </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclarationKeyword">
      <MemberSignature Language="C#" Value="public abstract Microsoft.CodeAnalysis.SyntaxToken DeclarationKeyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken DeclarationKeyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.DeclarationKeyword" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeclarationKeyword As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.DeclarationKeyword : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.DeclarationKeyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Microsoft::CodeAnalysis::SyntaxToken DeclarationKeyword { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 Returns the keyword indicating the kind of declaration being made: "Sub", "Function", "Event", "Property", etc. Does not return either the "Declare" or "Delegate" keywords.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken Keyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken Keyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.Keyword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keyword As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.Keyword : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.Keyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken Keyword { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This member is obsolete. Use DeclarationKeyword or a more specific property (e.g. SubOrFunctionKeyword) instead.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxTokenList Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxTokenList Modifiers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As SyntaxTokenList" />
      <MemberSignature Language="F#" Value="member this.Modifiers : Microsoft.CodeAnalysis.SyntaxTokenList" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.Modifiers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxTokenList Modifiers { Microsoft::CodeAnalysis::SyntaxTokenList get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxTokenList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 A list of all the modifier tokens that were present on this declaration. If no
 modifiers were specified, an empty list is returned. A bitfield version of all
 the modifiers ORed together, which is in many cases easier to use, can be
 obtained with the Modifiers property.
 </summary>
        <value>To be added.</value>
        <remarks>
 If nothing is present, an empty list is returned.
 </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterList">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax ParameterList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax ParameterList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.ParameterList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParameterList As ParameterListSyntax" />
      <MemberSignature Language="F#" Value="member this.ParameterList : Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.ParameterList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::ParameterListSyntax ^ ParameterList { Microsoft::CodeAnalysis::VisualBasic::Syntax::ParameterListSyntax ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::ParameterListSyntax ^ ParameterList { Microsoft::CodeAnalysis::VisualBasic::Syntax::ParameterListSyntax ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The method's parameter list including the parentheses. If no parameter list was
 present, Nothing is returned.
 </summary>
        <value>To be added.</value>
        <remarks>
 This child is optional. If it is not present, then Nothing is returned.
 </remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDeclarationKeyword">
      <MemberSignature Language="C#" Value="public abstract Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax WithDeclarationKeyword (Microsoft.CodeAnalysis.SyntaxToken keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public newslot virtual instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax WithDeclarationKeyword(valuetype Microsoft.CodeAnalysis.SyntaxToken keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.WithDeclarationKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function WithDeclarationKeyword (keyword As SyntaxToken) As MethodBaseSyntax" />
      <MemberSignature Language="F#" Value="abstract member WithDeclarationKeyword : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax" Usage="methodBaseSyntax.WithDeclarationKeyword keyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Microsoft::CodeAnalysis::VisualBasic::Syntax::MethodBaseSyntax ^ WithDeclarationKeyword(Microsoft::CodeAnalysis::SyntaxToken keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="keyword">To be added.</param>
        <summary>
 Returns a copy of this <see cref="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax" /> with the <see cref="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.DeclarationKeyword" /> property changed to the
 specified value. Returns this instance if the specified value is the same as the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax WithKeyword (Microsoft.CodeAnalysis.SyntaxToken keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax WithKeyword(valuetype Microsoft.CodeAnalysis.SyntaxToken keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithKeyword (keyword As SyntaxToken) As MethodBaseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithKeyword : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax" Usage="methodBaseSyntax.WithKeyword keyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::MethodBaseSyntax ^ WithKeyword(Microsoft::CodeAnalysis::SyntaxToken keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This member is obsolete. Use DeclarationKeyword or a more specific property (e.g. WithSubOrFunctionKeyword) instead.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="keyword">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>