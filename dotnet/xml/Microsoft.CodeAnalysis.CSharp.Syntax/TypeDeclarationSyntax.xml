<Type Name="TypeDeclarationSyntax" FullName="Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax">
  <TypeSignature Language="C#" Value="public abstract class TypeDeclarationSyntax : Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypeDeclarationSyntax extends Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TypeDeclarationSyntax&#xA;Inherits BaseTypeDeclarationSyntax" />
  <TypeSignature Language="F#" Value="type TypeDeclarationSyntax = class&#xA;    inherit BaseTypeDeclarationSyntax" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Base class for type declaration syntax (class, struct, interface).</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Arity">
      <MemberSignature Language="C#" Value="public int Arity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Arity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.Arity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Arity As Integer" />
      <MemberSignature Language="F#" Value="member this.Arity : int" Usage="Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.Arity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstraintClauses">
      <MemberSignature Language="C#" Value="public abstract Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax&gt; ConstraintClauses { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxList`1&lt;class Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax&gt; ConstraintClauses" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.ConstraintClauses" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ConstraintClauses As SyntaxList(Of TypeParameterConstraintClauseSyntax)" />
      <MemberSignature Language="F#" Value="member this.ConstraintClauses : Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax&gt;" Usage="Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.ConstraintClauses" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type constraint list.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keyword">
      <MemberSignature Language="C#" Value="public abstract Microsoft.CodeAnalysis.SyntaxToken Keyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken Keyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.Keyword" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Keyword As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.Keyword : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.Keyword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the type keyword token ("class", "struct", "interface").</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Members">
      <MemberSignature Language="C#" Value="public abstract Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax&gt; Members { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxList`1&lt;class Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax&gt; Members" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.Members" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Members As SyntaxList(Of MemberDeclarationSyntax)" />
      <MemberSignature Language="F#" Value="member this.Members : Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax&gt;" Usage="Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.Members" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxList&lt;Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the member declarations.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeParameterList">
      <MemberSignature Language="C#" Value="public abstract Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax TypeParameterList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax TypeParameterList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.TypeParameterList" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TypeParameterList As TypeParameterListSyntax" />
      <MemberSignature Language="F#" Value="member this.TypeParameterList : Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax" Usage="Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.TypeParameterList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>