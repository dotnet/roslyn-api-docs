<Type Name="DiagnosticDescriptor" FullName="Microsoft.CodeAnalysis.DiagnosticDescriptor">
  <TypeSignature Language="C#" Value="public sealed class DiagnosticDescriptor : IEquatable&lt;Microsoft.CodeAnalysis.DiagnosticDescriptor&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DiagnosticDescriptor extends System.Object implements class System.IEquatable`1&lt;class Microsoft.CodeAnalysis.DiagnosticDescriptor&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.DiagnosticDescriptor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.CodeAnalysis.DiagnosticDescriptor&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Provides a description about a <see cref="T:Microsoft.CodeAnalysis.Diagnostic" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DiagnosticDescriptor (string id, Microsoft.CodeAnalysis.LocalizableString title, Microsoft.CodeAnalysis.LocalizableString messageFormat, string category, Microsoft.CodeAnalysis.DiagnosticSeverity defaultSeverity, bool isEnabledByDefault, Microsoft.CodeAnalysis.LocalizableString description = null, string helpLinkUri = null, params string[] customTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, class Microsoft.CodeAnalysis.LocalizableString title, class Microsoft.CodeAnalysis.LocalizableString messageFormat, string category, valuetype Microsoft.CodeAnalysis.DiagnosticSeverity defaultSeverity, bool isEnabledByDefault, class Microsoft.CodeAnalysis.LocalizableString description, string helpLinkUri, string[] customTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.DiagnosticDescriptor.#ctor(System.String,Microsoft.CodeAnalysis.LocalizableString,Microsoft.CodeAnalysis.LocalizableString,System.String,Microsoft.CodeAnalysis.DiagnosticSeverity,System.Boolean,Microsoft.CodeAnalysis.LocalizableString,System.String,System.String[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="title" Type="Microsoft.CodeAnalysis.LocalizableString" />
        <Parameter Name="messageFormat" Type="Microsoft.CodeAnalysis.LocalizableString" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="defaultSeverity" Type="Microsoft.CodeAnalysis.DiagnosticSeverity" />
        <Parameter Name="isEnabledByDefault" Type="System.Boolean" />
        <Parameter Name="description" Type="Microsoft.CodeAnalysis.LocalizableString" />
        <Parameter Name="helpLinkUri" Type="System.String" />
        <Parameter Name="customTags" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="id">A unique identifier for the diagnostic. For example, code analysis diagnostic ID "CA1001".</param>
        <param name="title">A short localizable title describing the diagnostic. For example, for CA1001: "Types that own disposable fields should be disposable".</param>
        <param name="messageFormat">A localizable format message string, which can be passed as the first argument to <see cref="M:System.String.Format(System.String,System.Object[])" /> when creating the diagnostic message with this descriptor.
            For example, for CA1001: "Implement IDisposable on '{0}' because it creates members of the following IDisposable types: '{1}'."</param>
        <param name="category">The category of the diagnostic (like Design, Naming etc.). For example, for CA1001: "Microsoft.Design".</param>
        <param name="defaultSeverity">Default severity of the diagnostic.</param>
        <param name="isEnabledByDefault">True if the diagnostic is enabled by default.</param>
        <param name="description">An optional longer localizable description of the diagnostic.</param>
        <param name="helpLinkUri">An optional hyperlink that provides a more detailed description regarding the diagnostic.</param>
        <param name="customTags">Optional custom tags for the diagnostic. See <see cref="T:Microsoft.CodeAnalysis.WellKnownDiagnosticTags" /> for some well known tags.</param>
        <summary>
            Create a DiagnosticDescriptor, which provides description about a <see cref="T:Microsoft.CodeAnalysis.Diagnostic" />.
            </summary>
        <remarks>Example descriptor for rule CA1001:
                internal static DiagnosticDescriptor Rule = new DiagnosticDescriptor(RuleId,
                    new LocalizableResourceString(nameof(FxCopRulesResources.TypesThatOwnDisposableFieldsShouldBeDisposable), FxCopRulesResources.ResourceManager, typeof(FxCopRulesResources)),
                    new LocalizableResourceString(nameof(FxCopRulesResources.TypeOwnsDisposableFieldButIsNotDisposable), FxCopRulesResources.ResourceManager, typeof(FxCopRulesResources)),
                    FxCopDiagnosticCategory.Design,
                    DiagnosticSeverity.Warning,
                    isEnabledByDefault: true,
                    helpLinkUri: "http://msdn.microsoft.com/library/ms182172.aspx",
                    customTags: DiagnosticCustomTags.Microsoft);
            </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DiagnosticDescriptor (string id, string title, string messageFormat, string category, Microsoft.CodeAnalysis.DiagnosticSeverity defaultSeverity, bool isEnabledByDefault, string description = null, string helpLinkUri = null, params string[] customTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string id, string title, string messageFormat, string category, valuetype Microsoft.CodeAnalysis.DiagnosticSeverity defaultSeverity, bool isEnabledByDefault, string description, string helpLinkUri, string[] customTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.DiagnosticDescriptor.#ctor(System.String,System.String,System.String,System.String,Microsoft.CodeAnalysis.DiagnosticSeverity,System.Boolean,System.String,System.String,System.String[])" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="title" Type="System.String" />
        <Parameter Name="messageFormat" Type="System.String" />
        <Parameter Name="category" Type="System.String" />
        <Parameter Name="defaultSeverity" Type="Microsoft.CodeAnalysis.DiagnosticSeverity" />
        <Parameter Name="isEnabledByDefault" Type="System.Boolean" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="helpLinkUri" Type="System.String" />
        <Parameter Name="customTags" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="id">A unique identifier for the diagnostic. For example, code analysis diagnostic ID "CA1001".</param>
        <param name="title">A short title describing the diagnostic. For example, for CA1001: "Types that own disposable fields should be disposable".</param>
        <param name="messageFormat">A format message string, which can be passed as the first argument to <see cref="M:System.String.Format(System.String,System.Object[])" /> when creating the diagnostic message with this descriptor.
            For example, for CA1001: "Implement IDisposable on '{0}' because it creates members of the following IDisposable types: '{1}'."</param>
        <param name="category">The category of the diagnostic (like Design, Naming etc.). For example, for CA1001: "Microsoft.Design".</param>
        <param name="defaultSeverity">Default severity of the diagnostic.</param>
        <param name="isEnabledByDefault">True if the diagnostic is enabled by default.</param>
        <param name="description">An optional longer description of the diagnostic.</param>
        <param name="helpLinkUri">An optional hyperlink that provides a more detailed description regarding the diagnostic.</param>
        <param name="customTags">Optional custom tags for the diagnostic. See <see cref="T:Microsoft.CodeAnalysis.WellKnownDiagnosticTags" /> for some well known tags.</param>
        <summary>
            Create a DiagnosticDescriptor, which provides description about a <see cref="T:Microsoft.CodeAnalysis.Diagnostic" />.
            NOTE: For localizable <paramref name="title" />, <paramref name="description" /> and/or <paramref name="messageFormat" />,
            use constructor overload <see cref="M:Microsoft.CodeAnalysis.DiagnosticDescriptor.#ctor(System.String,Microsoft.CodeAnalysis.LocalizableString,Microsoft.CodeAnalysis.LocalizableString,System.String,Microsoft.CodeAnalysis.DiagnosticSeverity,System.Boolean,Microsoft.CodeAnalysis.LocalizableString,System.String,System.String[])" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Category">
      <MemberSignature Language="C#" Value="public string Category { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Category" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.DiagnosticDescriptor.Category" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The category of the diagnostic (like Design, Naming etc.)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomTags">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;string&gt; CustomTags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; CustomTags" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.DiagnosticDescriptor.CustomTags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Custom tags for the diagnostic.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultSeverity">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.DiagnosticSeverity DefaultSeverity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.DiagnosticSeverity DefaultSeverity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.DiagnosticDescriptor.DefaultSeverity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.DiagnosticSeverity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The default severity of the diagnostic.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.LocalizableString Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.LocalizableString Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.DiagnosticDescriptor.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.LocalizableString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An optional longer localizable description for the diagnostic.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.CodeAnalysis.DiagnosticDescriptor other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Microsoft.CodeAnalysis.DiagnosticDescriptor other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.DiagnosticDescriptor.Equals(Microsoft.CodeAnalysis.DiagnosticDescriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.CodeAnalysis.DiagnosticDescriptor" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.DiagnosticDescriptor.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEffectiveSeverity">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.ReportDiagnostic GetEffectiveSeverity (Microsoft.CodeAnalysis.CompilationOptions compilationOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.CodeAnalysis.ReportDiagnostic GetEffectiveSeverity(class Microsoft.CodeAnalysis.CompilationOptions compilationOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.DiagnosticDescriptor.GetEffectiveSeverity(Microsoft.CodeAnalysis.CompilationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ReportDiagnostic</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compilationOptions" Type="Microsoft.CodeAnalysis.CompilationOptions" />
      </Parameters>
      <Docs>
        <param name="compilationOptions">Compilation options</param>
        <summary>
            Gets the effective severity of diagnostics created based on this descriptor and the given <see cref="T:Microsoft.CodeAnalysis.CompilationOptions" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.DiagnosticDescriptor.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpLinkUri">
      <MemberSignature Language="C#" Value="public string HelpLinkUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpLinkUri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.DiagnosticDescriptor.HelpLinkUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An optional hyperlink that provides more detailed information regarding the diagnostic.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.DiagnosticDescriptor.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An unique identifier for the diagnostic.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledByDefault">
      <MemberSignature Language="C#" Value="public bool IsEnabledByDefault { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledByDefault" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.DiagnosticDescriptor.IsEnabledByDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if the diagnostic is enabled by default.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageFormat">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.LocalizableString MessageFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.LocalizableString MessageFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.DiagnosticDescriptor.MessageFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.LocalizableString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A localizable format message string, which can be passed as the first argument to <see cref="M:System.String.Format(System.String,System.Object[])" /> when creating the diagnostic message with this descriptor.
            </summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.LocalizableString Title { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.LocalizableString Title" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.DiagnosticDescriptor.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.LocalizableString</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A short localizable title describing the diagnostic.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>