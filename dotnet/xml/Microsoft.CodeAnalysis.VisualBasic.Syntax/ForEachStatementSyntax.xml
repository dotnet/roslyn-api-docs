<Type Name="ForEachStatementSyntax" FullName="Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax">
  <TypeSignature Language="C++ CLI" Value="public ref class ForEachStatementSyntax sealed : Microsoft::CodeAnalysis::VisualBasic::Syntax::ForOrForEachStatementSyntax" />
  <TypeSignature Language="C#" Value="public sealed class ForEachStatementSyntax : Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachStatementSyntax" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ForEachStatementSyntax extends Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachStatementSyntax" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ForEachStatementSyntax&#xA;Inherits ForOrForEachStatementSyntax" />
  <TypeSignature Language="F#" Value="type ForEachStatementSyntax = class&#xA;    inherit ForOrForEachStatementSyntax" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <AssemblyVersion>3.2.0.0</AssemblyVersion>
    <AssemblyVersion>3.3.0.0</AssemblyVersion>
    <AssemblyVersion>3.4.0.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>3.6.0.0</AssemblyVersion>
    <AssemblyVersion>3.7.0.0</AssemblyVersion>
    <AssemblyVersion>3.8.0.0</AssemblyVersion>
    <AssemblyVersion>3.9.0.0</AssemblyVersion>
    <AssemblyVersion>3.10.0.0</AssemblyVersion>
    <AssemblyVersion>3.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>4.8.0.0</AssemblyVersion>
    <AssemblyVersion>4.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachStatementSyntax</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
 The For Each statement that begins a For Each-Next block. This statement always
 occurs as the Begin of a ForBlock, and the body of the For Each-Next is the
 Body of that ForBlock. Most of the time, the End of that ForBlock is the
 corresponding Next statement. However, multiple nested For statements are ended
 by a single Next statement with multiple variables, then the inner For
 statements will have End set to Nothing, and the Next statement is the End of
 the outermost For statement that is being ended.
 </summary>
    <remarks>
      <para>This node is associated with the following syntax kinds:</para>
      <list type="bullet">
        <item>
          <description>
            <see cref="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ForEachStatement" />
          </description>
        </item>
      </list>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor ^ visitor);" />
      <MemberSignature Language="C#" Value="public override void Accept (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor -&gt; unit" Usage="forEachStatementSyntax.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.3.0.0</AssemblyVersion>
        <AssemblyVersion>3.4.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.10.0.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResult&gt;">
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; override TResult Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor&lt;TResult&gt; ^ visitor);" />
      <MemberSignature Language="C#" Value="public override TResult Accept&lt;TResult&gt; (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResult Accept&lt;TResult&gt;(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1&lt;!!TResult&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResult) (visitor As VisualBasicSyntaxVisitor(Of TResult)) As TResult" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;'Result&gt; -&gt; 'Result" Usage="forEachStatementSyntax.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.3.0.0</AssemblyVersion>
        <AssemblyVersion>3.4.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.10.0.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlVariable">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxNode ^ ControlVariable { Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxNode ^ get(); };" />
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode ControlVariable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode ControlVariable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.ControlVariable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlVariable As VisualBasicSyntaxNode" />
      <MemberSignature Language="F#" Value="member this.ControlVariable : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.ControlVariable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.3.0.0</AssemblyVersion>
        <AssemblyVersion>3.4.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.10.0.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 If the For or For Each statement is of a form that does not declare a new loop
 control variable, this is the expression that denotes the loop control
 variable. If this loop is of a form that does declare a new control variable,
 this is a VariableDeclarator that has the variable being declared.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EachKeyword">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken EachKeyword { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken EachKeyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken EachKeyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.EachKeyword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EachKeyword As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.EachKeyword : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.EachKeyword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.3.0.0</AssemblyVersion>
        <AssemblyVersion>3.4.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.10.0.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The "Each" keyword.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ Expression { Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ get(); };" />
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax Expression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.Expression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expression As ExpressionSyntax" />
      <MemberSignature Language="F#" Value="member this.Expression : Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.3.0.0</AssemblyVersion>
        <AssemblyVersion>3.4.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.10.0.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The expression denoting the collection to iterate over.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForKeyword">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken ForKeyword { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken ForKeyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken ForKeyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.ForKeyword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ForKeyword As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.ForKeyword : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.ForKeyword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.3.0.0</AssemblyVersion>
        <AssemblyVersion>3.4.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.10.0.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The "For" keyword.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InKeyword">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken InKeyword { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken InKeyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken InKeyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.InKeyword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InKeyword As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.InKeyword : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.InKeyword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.3.0.0</AssemblyVersion>
        <AssemblyVersion>3.4.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.10.0.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The "In" keyword.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::ForEachStatementSyntax ^ Update(Microsoft::CodeAnalysis::SyntaxToken forKeyword, Microsoft::CodeAnalysis::SyntaxToken eachKeyword, Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxNode ^ controlVariable, Microsoft::CodeAnalysis::SyntaxToken inKeyword, Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ expression);" />
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax Update (Microsoft.CodeAnalysis.SyntaxToken forKeyword, Microsoft.CodeAnalysis.SyntaxToken eachKeyword, Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode controlVariable, Microsoft.CodeAnalysis.SyntaxToken inKeyword, Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax expression);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax Update(valuetype Microsoft.CodeAnalysis.SyntaxToken forKeyword, valuetype Microsoft.CodeAnalysis.SyntaxToken eachKeyword, class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode controlVariable, valuetype Microsoft.CodeAnalysis.SyntaxToken inKeyword, class Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (forKeyword As SyntaxToken, eachKeyword As SyntaxToken, controlVariable As VisualBasicSyntaxNode, inKeyword As SyntaxToken, expression As ExpressionSyntax) As ForEachStatementSyntax" />
      <MemberSignature Language="F#" Value="member this.Update : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode * Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax" Usage="forEachStatementSyntax.Update (forKeyword, eachKeyword, controlVariable, inKeyword, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.3.0.0</AssemblyVersion>
        <AssemblyVersion>3.4.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.10.0.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="eachKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="controlVariable" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode" />
        <Parameter Name="inKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="expression" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax" />
      </Parameters>
      <Docs>
        <param name="forKeyword">
 The value for the ForKeyword property.
 </param>
        <param name="eachKeyword">
 The value for the EachKeyword property.
 </param>
        <param name="controlVariable">
 The value for the ControlVariable property.
 </param>
        <param name="inKeyword">
 The value for the InKeyword property.
 </param>
        <param name="expression">
 The value for the Expression property.
 </param>
        <summary>
 Returns a copy of this with the specified changes. Returns this instance if
 there are no actual changes.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithControlVariable">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::ForEachStatementSyntax ^ WithControlVariable(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxNode ^ controlVariable);" />
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax WithControlVariable (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode controlVariable);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax WithControlVariable(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode controlVariable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.WithControlVariable(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithControlVariable (controlVariable As VisualBasicSyntaxNode) As ForEachStatementSyntax" />
      <MemberSignature Language="F#" Value="override this.WithControlVariable : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax" Usage="forEachStatementSyntax.WithControlVariable controlVariable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.3.0.0</AssemblyVersion>
        <AssemblyVersion>3.4.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.10.0.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlVariable" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode" />
      </Parameters>
      <Docs>
        <param name="controlVariable">To be added.</param>
        <summary>
 Returns a copy of this with the ControlVariable property changed to the
 specified value. Returns this instance if the specified value is the same as
 the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithEachKeyword">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::ForEachStatementSyntax ^ WithEachKeyword(Microsoft::CodeAnalysis::SyntaxToken eachKeyword);" />
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax WithEachKeyword (Microsoft.CodeAnalysis.SyntaxToken eachKeyword);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax WithEachKeyword(valuetype Microsoft.CodeAnalysis.SyntaxToken eachKeyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.WithEachKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithEachKeyword (eachKeyword As SyntaxToken) As ForEachStatementSyntax" />
      <MemberSignature Language="F#" Value="member this.WithEachKeyword : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax" Usage="forEachStatementSyntax.WithEachKeyword eachKeyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.3.0.0</AssemblyVersion>
        <AssemblyVersion>3.4.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.10.0.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eachKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="eachKeyword">To be added.</param>
        <summary>
 Returns a copy of this with the EachKeyword property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithExpression">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::ForEachStatementSyntax ^ WithExpression(Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ expression);" />
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax WithExpression (Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax expression);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax WithExpression(class Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithExpression (expression As ExpressionSyntax) As ForEachStatementSyntax" />
      <MemberSignature Language="F#" Value="member this.WithExpression : Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax" Usage="forEachStatementSyntax.WithExpression expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.3.0.0</AssemblyVersion>
        <AssemblyVersion>3.4.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.10.0.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax" />
      </Parameters>
      <Docs>
        <param name="expression">To be added.</param>
        <summary>
 Returns a copy of this with the Expression property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithForKeyword">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::ForEachStatementSyntax ^ WithForKeyword(Microsoft::CodeAnalysis::SyntaxToken forKeyword);" />
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax WithForKeyword (Microsoft.CodeAnalysis.SyntaxToken forKeyword);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax WithForKeyword(valuetype Microsoft.CodeAnalysis.SyntaxToken forKeyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.WithForKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithForKeyword (forKeyword As SyntaxToken) As ForEachStatementSyntax" />
      <MemberSignature Language="F#" Value="override this.WithForKeyword : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax" Usage="forEachStatementSyntax.WithForKeyword forKeyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.3.0.0</AssemblyVersion>
        <AssemblyVersion>3.4.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.10.0.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="forKeyword">To be added.</param>
        <summary>
 Returns a copy of this with the ForKeyword property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithInKeyword">
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::ForEachStatementSyntax ^ WithInKeyword(Microsoft::CodeAnalysis::SyntaxToken inKeyword);" />
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax WithInKeyword (Microsoft.CodeAnalysis.SyntaxToken inKeyword);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax WithInKeyword(valuetype Microsoft.CodeAnalysis.SyntaxToken inKeyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.WithInKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithInKeyword (inKeyword As SyntaxToken) As ForEachStatementSyntax" />
      <MemberSignature Language="F#" Value="member this.WithInKeyword : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax" Usage="forEachStatementSyntax.WithInKeyword inKeyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
        <AssemblyVersion>3.2.0.0</AssemblyVersion>
        <AssemblyVersion>3.3.0.0</AssemblyVersion>
        <AssemblyVersion>3.4.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.10.0.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="inKeyword">To be added.</param>
        <summary>
 Returns a copy of this with the InKeyword property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
