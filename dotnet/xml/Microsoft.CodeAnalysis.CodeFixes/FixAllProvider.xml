<Type Name="FixAllProvider" FullName="Microsoft.CodeAnalysis.CodeFixes.FixAllProvider">
  <TypeSignature Language="C#" Value="public abstract class FixAllProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FixAllProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.CodeFixes.FixAllProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FixAllProvider" />
  <TypeSignature Language="F#" Value="type FixAllProvider = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class FixAllProvider abstract" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class FixAllProvider abstract" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class FixAllProvider abstract" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Implement this abstract type to provide fix all/multiple occurrences code fixes for source code problems.
            Alternatively, you can use any of the well known fix all providers from <see cref="T:Microsoft.CodeAnalysis.CodeFixes.WellKnownFixAllProviders" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FixAllProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CodeFixes.FixAllProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FixAllProvider();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; FixAllProvider();" />
      <MemberSignature Language="C++ WINRT" Value=" FixAllProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFixAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.CodeActions.CodeAction&gt; GetFixAsync (Microsoft.CodeAnalysis.CodeFixes.FixAllContext fixAllContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.CodeAnalysis.CodeActions.CodeAction&gt; GetFixAsync(class Microsoft.CodeAnalysis.CodeFixes.FixAllContext fixAllContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CodeFixes.FixAllProvider.GetFixAsync(Microsoft.CodeAnalysis.CodeFixes.FixAllContext)" />
      <MemberSignature Language="F#" Value="abstract member GetFixAsync : Microsoft.CodeAnalysis.CodeFixes.FixAllContext -&gt; System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.CodeActions.CodeAction&gt;" Usage="fixAllProvider.GetFixAsync fixAllContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Threading::Tasks::Task&lt;Microsoft::CodeAnalysis::CodeActions::CodeAction ^&gt; ^ GetFixAsync(Microsoft::CodeAnalysis::CodeFixes::FixAllContext ^ fixAllContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.CodeActions.CodeAction&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fixAllContext" Type="Microsoft.CodeAnalysis.CodeFixes.FixAllContext" />
      </Parameters>
      <Docs>
        <param name="fixAllContext">To be added.</param>
        <summary>
            Gets fix all occurrences fix for the given fixAllContext.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedFixAllDiagnosticIds">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;string&gt; GetSupportedFixAllDiagnosticIds (Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider originalCodeFixProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;string&gt; GetSupportedFixAllDiagnosticIds(class Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider originalCodeFixProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CodeFixes.FixAllProvider.GetSupportedFixAllDiagnosticIds(Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSupportedFixAllDiagnosticIds (originalCodeFixProvider As CodeFixProvider) As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedFixAllDiagnosticIds : Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider -&gt; seq&lt;string&gt;&#xA;override this.GetSupportedFixAllDiagnosticIds : Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider -&gt; seq&lt;string&gt;" Usage="fixAllProvider.GetSupportedFixAllDiagnosticIds originalCodeFixProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ GetSupportedFixAllDiagnosticIds(Microsoft::CodeAnalysis::CodeFixes::CodeFixProvider ^ originalCodeFixProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="originalCodeFixProvider" Type="Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider" />
      </Parameters>
      <Docs>
        <param name="originalCodeFixProvider">Original code fix provider that returned this fix all provider from <see cref="M:Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider.GetFixAllProvider" /> method.</param>
        <summary>
            Gets the diagnostic IDs for which fix all occurrences is supported.
            By default, it returns <see cref="P:Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider.FixableDiagnosticIds" /> for the given <paramref name="originalCodeFixProvider" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedFixAllScopes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.CodeFixes.FixAllScope&gt; GetSupportedFixAllScopes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.CodeAnalysis.CodeFixes.FixAllScope&gt; GetSupportedFixAllScopes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CodeFixes.FixAllProvider.GetSupportedFixAllScopes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSupportedFixAllScopes () As IEnumerable(Of FixAllScope)" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedFixAllScopes : unit -&gt; seq&lt;Microsoft.CodeAnalysis.CodeFixes.FixAllScope&gt;&#xA;override this.GetSupportedFixAllScopes : unit -&gt; seq&lt;Microsoft.CodeAnalysis.CodeFixes.FixAllScope&gt;" Usage="fixAllProvider.GetSupportedFixAllScopes " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::CodeFixes::FixAllScope&gt; ^ GetSupportedFixAllScopes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.CodeFixes.FixAllScope&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the supported scopes for fixing all occurrences of a diagnostic.
            By default, it returns the following scopes:
            (a) <see cref="F:Microsoft.CodeAnalysis.CodeFixes.FixAllScope.Document" />
            (b) <see cref="F:Microsoft.CodeAnalysis.CodeFixes.FixAllScope.Project" /> and
            (c) <see cref="F:Microsoft.CodeAnalysis.CodeFixes.FixAllScope.Solution" /></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>