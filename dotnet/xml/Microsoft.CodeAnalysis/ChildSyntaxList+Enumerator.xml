<Type Name="ChildSyntaxList+Enumerator" FullName="Microsoft.CodeAnalysis.ChildSyntaxList+Enumerator">
  <TypeSignature Language="C#" Value="public struct ChildSyntaxList.Enumerator" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit ChildSyntaxList/Enumerator extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.ChildSyntaxList.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure ChildSyntaxList.Enumerator" />
  <TypeSignature Language="F#" Value="type ChildSyntaxList.Enumerator = struct" />
  <TypeSignature Language="C++ CLI" Value="public: value class ChildSyntaxList::Enumerator" />
  <TypeSignature Language="C++ WINRT" Value="struct ChildSyntaxList::Enumerator" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Enumerates the elements of a <see cref="T:Microsoft.CodeAnalysis.ChildSyntaxList" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxNodeOrToken Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxNodeOrToken Current" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.ChildSyntaxList.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As SyntaxNodeOrToken" />
      <MemberSignature Language="F#" Value="member this.Current : Microsoft.CodeAnalysis.SyntaxNodeOrToken" Usage="Microsoft.CodeAnalysis.ChildSyntaxList.Enumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxNodeOrToken Current { Microsoft::CodeAnalysis::SyntaxNodeOrToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxNodeOrToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the element at the current position of the enumerator.</summary>
        <value>The element in the <see cref="T:Microsoft.CodeAnalysis.ChildSyntaxList" /> at the current position of the enumerator.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.ChildSyntaxList.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="F#" Value="member this.MoveNext : unit -&gt; bool" Usage="enumerator.MoveNext " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; bool MoveNext();" />
      <MemberSignature Language="C++ WINRT" Value="bool MoveNext();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Advances the enumerator to the next element of the <see cref="T:Microsoft.CodeAnalysis.ChildSyntaxList" />.</summary>
        <returns>true if the enumerator was successfully advanced to the next element; false if the enumerator has passed the end of the collection.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.ChildSyntaxList.Enumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="enumerator.Reset " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="C++ WINRT" Value="void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the enumerator to its initial position, which is before the first element in the collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>