<?xml version="1.0" encoding="utf-8"?>
<Framework Name="roslyn-dotnet">
  <Namespace Name="Microsoft.CodeAnalysis">
    <Type Name="Microsoft.CodeAnalysis.Accessibility" Id="T:Microsoft.CodeAnalysis.Accessibility">
      <Member Id="F:Microsoft.CodeAnalysis.Accessibility.Friend" />
      <Member Id="F:Microsoft.CodeAnalysis.Accessibility.Internal" />
      <Member Id="F:Microsoft.CodeAnalysis.Accessibility.NotApplicable" />
      <Member Id="F:Microsoft.CodeAnalysis.Accessibility.Private" />
      <Member Id="F:Microsoft.CodeAnalysis.Accessibility.Protected" />
      <Member Id="F:Microsoft.CodeAnalysis.Accessibility.ProtectedAndFriend" />
      <Member Id="F:Microsoft.CodeAnalysis.Accessibility.ProtectedAndInternal" />
      <Member Id="F:Microsoft.CodeAnalysis.Accessibility.ProtectedOrFriend" />
      <Member Id="F:Microsoft.CodeAnalysis.Accessibility.ProtectedOrInternal" />
      <Member Id="F:Microsoft.CodeAnalysis.Accessibility.Public" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.AdditionalText" Id="T:Microsoft.CodeAnalysis.AdditionalText">
      <Member Id="M:Microsoft.CodeAnalysis.AdditionalText.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.AdditionalText.GetText(System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.AdditionalText.Path" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.AdhocWorkspace" Id="T:Microsoft.CodeAnalysis.AdhocWorkspace">
      <Member Id="M:Microsoft.CodeAnalysis.AdhocWorkspace.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.AdhocWorkspace.#ctor(Microsoft.CodeAnalysis.Host.HostServices,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.AdhocWorkspace.AddDocument(Microsoft.CodeAnalysis.DocumentInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.AdhocWorkspace.AddDocument(Microsoft.CodeAnalysis.ProjectId,System.String,Microsoft.CodeAnalysis.Text.SourceText)" />
      <Member Id="M:Microsoft.CodeAnalysis.AdhocWorkspace.AddProject(Microsoft.CodeAnalysis.ProjectInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.AdhocWorkspace.AddProject(System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.AdhocWorkspace.AddProjects(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectInfo})" />
      <Member Id="M:Microsoft.CodeAnalysis.AdhocWorkspace.AddSolution(Microsoft.CodeAnalysis.SolutionInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.AdhocWorkspace.CanApplyChange(Microsoft.CodeAnalysis.ApplyChangesKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.AdhocWorkspace.ClearSolution" />
      <Member Id="M:Microsoft.CodeAnalysis.AdhocWorkspace.CloseAdditionalDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.AdhocWorkspace.CloseDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.AdhocWorkspace.OpenAdditionalDocument(Microsoft.CodeAnalysis.DocumentId,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.AdhocWorkspace.OpenDocument(Microsoft.CodeAnalysis.DocumentId,System.Boolean)" />
      <Member Id="P:Microsoft.CodeAnalysis.AdhocWorkspace.CanOpenDocuments" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.AnnotationExtensions" Id="T:Microsoft.CodeAnalysis.AnnotationExtensions">
      <Member Id="M:Microsoft.CodeAnalysis.AnnotationExtensions.WithAdditionalAnnotations``1(``0,Microsoft.CodeAnalysis.SyntaxAnnotation[])" />
      <Member Id="M:Microsoft.CodeAnalysis.AnnotationExtensions.WithAdditionalAnnotations``1(``0,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation})" />
      <Member Id="M:Microsoft.CodeAnalysis.AnnotationExtensions.WithoutAnnotations``1(``0,Microsoft.CodeAnalysis.SyntaxAnnotation[])" />
      <Member Id="M:Microsoft.CodeAnalysis.AnnotationExtensions.WithoutAnnotations``1(``0,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation})" />
      <Member Id="M:Microsoft.CodeAnalysis.AnnotationExtensions.WithoutAnnotations``1(``0,System.String)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ApplyChangesKind" Id="T:Microsoft.CodeAnalysis.ApplyChangesKind">
      <Member Id="F:Microsoft.CodeAnalysis.ApplyChangesKind.AddAdditionalDocument" />
      <Member Id="F:Microsoft.CodeAnalysis.ApplyChangesKind.AddAnalyzerReference" />
      <Member Id="F:Microsoft.CodeAnalysis.ApplyChangesKind.AddDocument" />
      <Member Id="F:Microsoft.CodeAnalysis.ApplyChangesKind.AddMetadataReference" />
      <Member Id="F:Microsoft.CodeAnalysis.ApplyChangesKind.AddProject" />
      <Member Id="F:Microsoft.CodeAnalysis.ApplyChangesKind.AddProjectReference" />
      <Member Id="F:Microsoft.CodeAnalysis.ApplyChangesKind.ChangeAdditionalDocument" />
      <Member Id="F:Microsoft.CodeAnalysis.ApplyChangesKind.ChangeCompilationOptions" />
      <Member Id="F:Microsoft.CodeAnalysis.ApplyChangesKind.ChangeDocument" />
      <Member Id="F:Microsoft.CodeAnalysis.ApplyChangesKind.ChangeDocumentInfo" />
      <Member Id="F:Microsoft.CodeAnalysis.ApplyChangesKind.ChangeParseOptions" />
      <Member Id="F:Microsoft.CodeAnalysis.ApplyChangesKind.RemoveAdditionalDocument" />
      <Member Id="F:Microsoft.CodeAnalysis.ApplyChangesKind.RemoveAnalyzerReference" />
      <Member Id="F:Microsoft.CodeAnalysis.ApplyChangesKind.RemoveDocument" />
      <Member Id="F:Microsoft.CodeAnalysis.ApplyChangesKind.RemoveMetadataReference" />
      <Member Id="F:Microsoft.CodeAnalysis.ApplyChangesKind.RemoveProject" />
      <Member Id="F:Microsoft.CodeAnalysis.ApplyChangesKind.RemoveProjectReference" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.AssemblyIdentity" Id="T:Microsoft.CodeAnalysis.AssemblyIdentity">
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyIdentity.#ctor(System.String,System.Version,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Boolean,System.Boolean,System.Reflection.AssemblyContentType)" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyIdentity.Equals(Microsoft.CodeAnalysis.AssemblyIdentity)" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyIdentity.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyIdentity.FromAssemblyDefinition(System.Reflection.Assembly)" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyIdentity.GetDisplayName(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyIdentity.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyIdentity.op_Equality(Microsoft.CodeAnalysis.AssemblyIdentity,Microsoft.CodeAnalysis.AssemblyIdentity)" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyIdentity.op_Inequality(Microsoft.CodeAnalysis.AssemblyIdentity,Microsoft.CodeAnalysis.AssemblyIdentity)" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyIdentity.ToString" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyIdentity.TryParseDisplayName(System.String,Microsoft.CodeAnalysis.AssemblyIdentity@)" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyIdentity.TryParseDisplayName(System.String,Microsoft.CodeAnalysis.AssemblyIdentity@,Microsoft.CodeAnalysis.AssemblyIdentityParts@)" />
      <Member Id="P:Microsoft.CodeAnalysis.AssemblyIdentity.ContentType" />
      <Member Id="P:Microsoft.CodeAnalysis.AssemblyIdentity.CultureName" />
      <Member Id="P:Microsoft.CodeAnalysis.AssemblyIdentity.Flags" />
      <Member Id="P:Microsoft.CodeAnalysis.AssemblyIdentity.HasPublicKey" />
      <Member Id="P:Microsoft.CodeAnalysis.AssemblyIdentity.IsRetargetable" />
      <Member Id="P:Microsoft.CodeAnalysis.AssemblyIdentity.IsStrongName" />
      <Member Id="P:Microsoft.CodeAnalysis.AssemblyIdentity.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.AssemblyIdentity.PublicKey" />
      <Member Id="P:Microsoft.CodeAnalysis.AssemblyIdentity.PublicKeyToken" />
      <Member Id="P:Microsoft.CodeAnalysis.AssemblyIdentity.Version" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.AssemblyIdentityComparer" Id="T:Microsoft.CodeAnalysis.AssemblyIdentityComparer">
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyIdentityComparer.Compare(Microsoft.CodeAnalysis.AssemblyIdentity,Microsoft.CodeAnalysis.AssemblyIdentity)" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyIdentityComparer.ReferenceMatchesDefinition(Microsoft.CodeAnalysis.AssemblyIdentity,Microsoft.CodeAnalysis.AssemblyIdentity)" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyIdentityComparer.ReferenceMatchesDefinition(System.String,Microsoft.CodeAnalysis.AssemblyIdentity)" />
      <Member Id="P:Microsoft.CodeAnalysis.AssemblyIdentityComparer.CultureComparer" />
      <Member Id="P:Microsoft.CodeAnalysis.AssemblyIdentityComparer.Default" />
      <Member Id="P:Microsoft.CodeAnalysis.AssemblyIdentityComparer.SimpleNameComparer" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.AssemblyIdentityComparer/ComparisonResult" Id="T:Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult">
      <Member Id="F:Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.Equivalent" />
      <Member Id="F:Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.EquivalentIgnoringVersion" />
      <Member Id="F:Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.NotEquivalent" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.AssemblyIdentityParts" Id="T:Microsoft.CodeAnalysis.AssemblyIdentityParts">
      <Member Id="F:Microsoft.CodeAnalysis.AssemblyIdentityParts.ContentType" />
      <Member Id="F:Microsoft.CodeAnalysis.AssemblyIdentityParts.Culture" />
      <Member Id="F:Microsoft.CodeAnalysis.AssemblyIdentityParts.Name" />
      <Member Id="F:Microsoft.CodeAnalysis.AssemblyIdentityParts.PublicKey" />
      <Member Id="F:Microsoft.CodeAnalysis.AssemblyIdentityParts.PublicKeyOrToken" />
      <Member Id="F:Microsoft.CodeAnalysis.AssemblyIdentityParts.PublicKeyToken" />
      <Member Id="F:Microsoft.CodeAnalysis.AssemblyIdentityParts.Retargetability" />
      <Member Id="F:Microsoft.CodeAnalysis.AssemblyIdentityParts.Unknown" />
      <Member Id="F:Microsoft.CodeAnalysis.AssemblyIdentityParts.Version" />
      <Member Id="F:Microsoft.CodeAnalysis.AssemblyIdentityParts.VersionBuild" />
      <Member Id="F:Microsoft.CodeAnalysis.AssemblyIdentityParts.VersionMajor" />
      <Member Id="F:Microsoft.CodeAnalysis.AssemblyIdentityParts.VersionMinor" />
      <Member Id="F:Microsoft.CodeAnalysis.AssemblyIdentityParts.VersionRevision" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.AssemblyMetadata" Id="T:Microsoft.CodeAnalysis.AssemblyMetadata">
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyMetadata.CommonCopy" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyMetadata.Create(Microsoft.CodeAnalysis.ModuleMetadata)" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyMetadata.Create(Microsoft.CodeAnalysis.ModuleMetadata[])" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyMetadata.Create(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ModuleMetadata})" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyMetadata.Create(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.ModuleMetadata})" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyMetadata.CreateFromFile(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyMetadata.CreateFromImage(System.Collections.Generic.IEnumerable{System.Byte})" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyMetadata.CreateFromImage(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyMetadata.CreateFromStream(System.IO.Stream,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyMetadata.CreateFromStream(System.IO.Stream,System.Reflection.PortableExecutable.PEStreamOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyMetadata.Dispose" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyMetadata.GetModules" />
      <Member Id="M:Microsoft.CodeAnalysis.AssemblyMetadata.GetReference(Microsoft.CodeAnalysis.DocumentationProvider,System.Collections.Immutable.ImmutableArray{System.String},System.Boolean,System.String,System.String)" />
      <Member Id="P:Microsoft.CodeAnalysis.AssemblyMetadata.Kind" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.AttributeData" Id="T:Microsoft.CodeAnalysis.AttributeData">
      <Member Id="M:Microsoft.CodeAnalysis.AttributeData.#ctor" />
      <Member Id="P:Microsoft.CodeAnalysis.AttributeData.ApplicationSyntaxReference" />
      <Member Id="P:Microsoft.CodeAnalysis.AttributeData.AttributeClass" />
      <Member Id="P:Microsoft.CodeAnalysis.AttributeData.AttributeConstructor" />
      <Member Id="P:Microsoft.CodeAnalysis.AttributeData.CommonApplicationSyntaxReference" />
      <Member Id="P:Microsoft.CodeAnalysis.AttributeData.CommonAttributeClass" />
      <Member Id="P:Microsoft.CodeAnalysis.AttributeData.CommonAttributeConstructor" />
      <Member Id="P:Microsoft.CodeAnalysis.AttributeData.CommonConstructorArguments" />
      <Member Id="P:Microsoft.CodeAnalysis.AttributeData.CommonNamedArguments" />
      <Member Id="P:Microsoft.CodeAnalysis.AttributeData.ConstructorArguments" />
      <Member Id="P:Microsoft.CodeAnalysis.AttributeData.NamedArguments" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CandidateReason" Id="T:Microsoft.CodeAnalysis.CandidateReason">
      <Member Id="F:Microsoft.CodeAnalysis.CandidateReason.Ambiguous" />
      <Member Id="F:Microsoft.CodeAnalysis.CandidateReason.Inaccessible" />
      <Member Id="F:Microsoft.CodeAnalysis.CandidateReason.LateBound" />
      <Member Id="F:Microsoft.CodeAnalysis.CandidateReason.MemberGroup" />
      <Member Id="F:Microsoft.CodeAnalysis.CandidateReason.None" />
      <Member Id="F:Microsoft.CodeAnalysis.CandidateReason.NotAnAttributeType" />
      <Member Id="F:Microsoft.CodeAnalysis.CandidateReason.NotAnEvent" />
      <Member Id="F:Microsoft.CodeAnalysis.CandidateReason.NotATypeOrNamespace" />
      <Member Id="F:Microsoft.CodeAnalysis.CandidateReason.NotAValue" />
      <Member Id="F:Microsoft.CodeAnalysis.CandidateReason.NotAVariable" />
      <Member Id="F:Microsoft.CodeAnalysis.CandidateReason.NotAWithEventsMember" />
      <Member Id="F:Microsoft.CodeAnalysis.CandidateReason.NotCreatable" />
      <Member Id="F:Microsoft.CodeAnalysis.CandidateReason.NotInvocable" />
      <Member Id="F:Microsoft.CodeAnalysis.CandidateReason.NotReferencable" />
      <Member Id="F:Microsoft.CodeAnalysis.CandidateReason.OverloadResolutionFailure" />
      <Member Id="F:Microsoft.CodeAnalysis.CandidateReason.StaticInstanceMismatch" />
      <Member Id="F:Microsoft.CodeAnalysis.CandidateReason.WrongArity" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CaseInsensitiveComparison" Id="T:Microsoft.CodeAnalysis.CaseInsensitiveComparison">
      <Member Id="M:Microsoft.CodeAnalysis.CaseInsensitiveComparison.Compare(System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CaseInsensitiveComparison.EndsWith(System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CaseInsensitiveComparison.Equals(System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CaseInsensitiveComparison.GetHashCode(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CaseInsensitiveComparison.StartsWith(System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CaseInsensitiveComparison.ToLower(System.Char)" />
      <Member Id="M:Microsoft.CodeAnalysis.CaseInsensitiveComparison.ToLower(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CaseInsensitiveComparison.ToLower(System.Text.StringBuilder)" />
      <Member Id="P:Microsoft.CodeAnalysis.CaseInsensitiveComparison.Comparer" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ChildSyntaxList" Id="T:Microsoft.CodeAnalysis.ChildSyntaxList">
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.Any" />
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.Equals(Microsoft.CodeAnalysis.ChildSyntaxList)" />
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.First" />
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.Last" />
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.op_Equality(Microsoft.CodeAnalysis.ChildSyntaxList,Microsoft.CodeAnalysis.ChildSyntaxList)" />
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.op_Inequality(Microsoft.CodeAnalysis.ChildSyntaxList,Microsoft.CodeAnalysis.ChildSyntaxList)" />
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.Reverse" />
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.System#Collections#Generic#IEnumerable&lt;Microsoft#CodeAnalysis#SyntaxNodeOrToken&gt;#GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:Microsoft.CodeAnalysis.ChildSyntaxList.Count" />
      <Member Id="P:Microsoft.CodeAnalysis.ChildSyntaxList.Item(System.Int32)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ChildSyntaxList/Enumerator" Id="T:Microsoft.CodeAnalysis.ChildSyntaxList.Enumerator">
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.Enumerator.MoveNext" />
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.Enumerator.Reset" />
      <Member Id="P:Microsoft.CodeAnalysis.ChildSyntaxList.Enumerator.Current" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ChildSyntaxList/Reversed" Id="T:Microsoft.CodeAnalysis.ChildSyntaxList.Reversed">
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.Equals(Microsoft.CodeAnalysis.ChildSyntaxList.Reversed)" />
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.System#Collections#Generic#IEnumerable&lt;Microsoft#CodeAnalysis#SyntaxNodeOrToken&gt;#GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.System#Collections#IEnumerable#GetEnumerator" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ChildSyntaxList/Reversed/Enumerator" Id="T:Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.Enumerator">
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.Enumerator.MoveNext" />
      <Member Id="M:Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.Enumerator.Reset" />
      <Member Id="P:Microsoft.CodeAnalysis.ChildSyntaxList.Reversed.Enumerator.Current" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CommandLineAnalyzerReference" Id="T:Microsoft.CodeAnalysis.CommandLineAnalyzerReference">
      <Member Id="M:Microsoft.CodeAnalysis.CommandLineAnalyzerReference.#ctor(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CommandLineAnalyzerReference.Equals(Microsoft.CodeAnalysis.CommandLineAnalyzerReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.CommandLineAnalyzerReference.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.CommandLineAnalyzerReference.GetHashCode" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineAnalyzerReference.FilePath" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CommandLineArguments" Id="T:Microsoft.CodeAnalysis.CommandLineArguments">
      <Member Id="M:Microsoft.CodeAnalysis.CommandLineArguments.ResolveAnalyzerReferences(Microsoft.CodeAnalysis.IAnalyzerAssemblyLoader)" />
      <Member Id="M:Microsoft.CodeAnalysis.CommandLineArguments.ResolveMetadataReferences(Microsoft.CodeAnalysis.MetadataReferenceResolver)" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.AdditionalFiles" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.AnalyzerReferences" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.AppConfigPath" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.BaseDirectory" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.ChecksumAlgorithm" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.CompilationName" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.CompilationOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.CompilationOptionsCore" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.DisplayHelp" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.DisplayLangVersions" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.DisplayLogo" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.DisplayVersion" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.DocumentationPath" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.EmbeddedFiles" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.EmitOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.EmitPdb" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.Encoding" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.ErrorLogPath" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.Errors" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.InteractiveMode" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.KeyFileSearchPaths" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.ManifestResources" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.MetadataReferences" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.NoWin32Manifest" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.OutputDirectory" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.OutputFileName" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.OutputRefFilePath" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.ParseOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.ParseOptionsCore" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.PathMap" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.PdbPath" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.PreferredUILang" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.PrintFullPaths" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.ReferencePaths" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.ReportAnalyzer" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.RuleSetPath" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.ScriptArguments" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.SourceFiles" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.SourceLink" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.SourcePaths" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.TouchedFilesPath" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.Utf8Output" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.Win32Icon" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.Win32Manifest" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineArguments.Win32ResourceFile" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CommandLineParser" Id="T:Microsoft.CodeAnalysis.CommandLineParser">
      <Member Id="M:Microsoft.CodeAnalysis.CommandLineParser.Parse(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CommandLineParser.ParsePathMap(System.String,System.Collections.Generic.IList{Microsoft.CodeAnalysis.Diagnostic})" />
      <Member Id="M:Microsoft.CodeAnalysis.CommandLineParser.SplitCommandLineIntoArguments(System.String,System.Boolean)" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineParser.RegularFileExtension" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineParser.ScriptFileExtension" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CommandLineProject" Id="T:Microsoft.CodeAnalysis.CommandLineProject">
      <Member Id="M:Microsoft.CodeAnalysis.CommandLineProject.CreateProjectInfo(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,Microsoft.CodeAnalysis.Workspace)" />
      <Member Id="M:Microsoft.CodeAnalysis.CommandLineProject.CreateProjectInfo(System.String,System.String,System.String,System.String,Microsoft.CodeAnalysis.Workspace)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CommandLineReference" Id="T:Microsoft.CodeAnalysis.CommandLineReference">
      <Member Id="M:Microsoft.CodeAnalysis.CommandLineReference.#ctor(System.String,Microsoft.CodeAnalysis.MetadataReferenceProperties)" />
      <Member Id="M:Microsoft.CodeAnalysis.CommandLineReference.Equals(Microsoft.CodeAnalysis.CommandLineReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.CommandLineReference.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.CommandLineReference.GetHashCode" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineReference.Properties" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineReference.Reference" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CommandLineSourceFile" Id="T:Microsoft.CodeAnalysis.CommandLineSourceFile">
      <Member Id="M:Microsoft.CodeAnalysis.CommandLineSourceFile.#ctor(System.String,System.Boolean)" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineSourceFile.IsScript" />
      <Member Id="P:Microsoft.CodeAnalysis.CommandLineSourceFile.Path" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Compilation" Id="T:Microsoft.CodeAnalysis.Compilation">
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.AddReferences(Microsoft.CodeAnalysis.MetadataReference[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.AddReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.AddSyntaxTrees(Microsoft.CodeAnalysis.SyntaxTree[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.AddSyntaxTrees(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree})" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.AppendDefaultVersionResource(System.IO.Stream)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CheckTupleElementLocations(System.Int32,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Location})" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CheckTupleElementNames(System.Int32,System.Collections.Immutable.ImmutableArray{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.ClassifyCommonConversion(Microsoft.CodeAnalysis.ITypeSymbol,Microsoft.CodeAnalysis.ITypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.Clone" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonAddSyntaxTrees(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree})" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonBindScriptClass" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonClone" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonContainsSyntaxTree(Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonCreateAnonymousTypeSymbol(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.ITypeSymbol},System.Collections.Immutable.ImmutableArray{System.String},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Location},System.Collections.Immutable.ImmutableArray{System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonCreateArrayTypeSymbol(Microsoft.CodeAnalysis.ITypeSymbol,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonCreateErrorNamespaceSymbol(Microsoft.CodeAnalysis.INamespaceSymbol,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonCreateErrorTypeSymbol(Microsoft.CodeAnalysis.INamespaceOrTypeSymbol,System.String,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonCreatePointerTypeSymbol(Microsoft.CodeAnalysis.ITypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonCreateTupleTypeSymbol(Microsoft.CodeAnalysis.INamedTypeSymbol,System.Collections.Immutable.ImmutableArray{System.String},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Location})" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonCreateTupleTypeSymbol(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.ITypeSymbol},System.Collections.Immutable.ImmutableArray{System.String},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Location})" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonGetAssemblyOrModuleSymbol(Microsoft.CodeAnalysis.MetadataReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonGetCompilationNamespace(Microsoft.CodeAnalysis.INamespaceSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonGetEntryPoint(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonGetSemanticModel(Microsoft.CodeAnalysis.SyntaxTree,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonGetSpecialType(Microsoft.CodeAnalysis.SpecialType)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonGetTypeByMetadataName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonRemoveAllSyntaxTrees" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonRemoveSyntaxTrees(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree})" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonReplaceSyntaxTree(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonWithAssemblyName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonWithOptions(Microsoft.CodeAnalysis.CompilationOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonWithReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CommonWithScriptCompilationInfo(Microsoft.CodeAnalysis.ScriptCompilationInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.ContainsSymbolsWithName(System.Func{System.String,System.Boolean},Microsoft.CodeAnalysis.SymbolFilter,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.ContainsSymbolsWithName(System.String,Microsoft.CodeAnalysis.SymbolFilter,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.ContainsSyntaxTree(Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CreateAnonymousTypeSymbol(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.ITypeSymbol},System.Collections.Immutable.ImmutableArray{System.String},System.Collections.Immutable.ImmutableArray{System.Boolean},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Location})" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CreateArrayTypeSymbol(Microsoft.CodeAnalysis.ITypeSymbol,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CreateDefaultWin32Resources(System.Boolean,System.Boolean,System.IO.Stream,System.IO.Stream)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CreateErrorNamespaceSymbol(Microsoft.CodeAnalysis.INamespaceSymbol,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CreateErrorTypeSymbol(Microsoft.CodeAnalysis.INamespaceOrTypeSymbol,System.String,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CreatePointerTypeSymbol(Microsoft.CodeAnalysis.ITypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CreateTupleTypeSymbol(Microsoft.CodeAnalysis.INamedTypeSymbol,System.Collections.Immutable.ImmutableArray{System.String},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Location})" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.CreateTupleTypeSymbol(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.ITypeSymbol},System.Collections.Immutable.ImmutableArray{System.String},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Location})" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream,System.IO.Stream,System.IO.Stream,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ResourceDescription},Microsoft.CodeAnalysis.Emit.EmitOptions,Microsoft.CodeAnalysis.IMethodSymbol,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.EmbeddedText},System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream,System.IO.Stream,System.IO.Stream,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ResourceDescription},Microsoft.CodeAnalysis.Emit.EmitOptions,Microsoft.CodeAnalysis.IMethodSymbol,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.EmbeddedText},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream,System.IO.Stream,System.IO.Stream,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ResourceDescription},Microsoft.CodeAnalysis.Emit.EmitOptions,Microsoft.CodeAnalysis.IMethodSymbol,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.Emit(System.IO.Stream,System.IO.Stream,System.IO.Stream,System.IO.Stream,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ResourceDescription},Microsoft.CodeAnalysis.Emit.EmitOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.EmitDifference(Microsoft.CodeAnalysis.Emit.EmitBaseline,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Emit.SemanticEdit},System.Func{Microsoft.CodeAnalysis.ISymbol,System.Boolean},System.IO.Stream,System.IO.Stream,System.IO.Stream,System.Collections.Generic.ICollection{System.Reflection.Metadata.MethodDefinitionHandle},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.EmitDifference(Microsoft.CodeAnalysis.Emit.EmitBaseline,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Emit.SemanticEdit},System.IO.Stream,System.IO.Stream,System.IO.Stream,System.Collections.Generic.ICollection{System.Reflection.Metadata.MethodDefinitionHandle},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.GetAssemblyOrModuleSymbol(Microsoft.CodeAnalysis.MetadataReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.GetCompilationNamespace(Microsoft.CodeAnalysis.INamespaceSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.GetDeclarationDiagnostics(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.GetDiagnostics(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.GetEntryPoint(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.GetMetadataReference(Microsoft.CodeAnalysis.IAssemblySymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.GetMethodBodyDiagnostics(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.GetParseDiagnostics(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.GetRequiredLanguageVersion(Microsoft.CodeAnalysis.Diagnostic)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.GetSemanticModel(Microsoft.CodeAnalysis.SyntaxTree,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.GetSpecialType(Microsoft.CodeAnalysis.SpecialType)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.GetSymbolsWithName(System.Func{System.String,System.Boolean},Microsoft.CodeAnalysis.SymbolFilter,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.GetSymbolsWithName(System.String,Microsoft.CodeAnalysis.SymbolFilter,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.GetTypeByMetadataName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.GetUnreferencedAssemblyIdentities(Microsoft.CodeAnalysis.Diagnostic)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.HasImplicitConversion(Microsoft.CodeAnalysis.ITypeSymbol,Microsoft.CodeAnalysis.ITypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.RemoveAllReferences" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.RemoveAllSyntaxTrees" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.RemoveReferences(Microsoft.CodeAnalysis.MetadataReference[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.RemoveReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.RemoveSyntaxTrees(Microsoft.CodeAnalysis.SyntaxTree[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.RemoveSyntaxTrees(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree})" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.ReplaceReference(Microsoft.CodeAnalysis.MetadataReference,Microsoft.CodeAnalysis.MetadataReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.ReplaceSyntaxTree(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.SyntaxTreeCommonFeatures(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree})" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.ToMetadataReference(System.Collections.Immutable.ImmutableArray{System.String},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.WithAssemblyName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.WithOptions(Microsoft.CodeAnalysis.CompilationOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.WithReferences(Microsoft.CodeAnalysis.MetadataReference[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.WithReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.Compilation.WithScriptCompilationInfo(Microsoft.CodeAnalysis.ScriptCompilationInfo)" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.Assembly" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.AssemblyName" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.CommonAssembly" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.CommonDynamicType" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.CommonGlobalNamespace" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.CommonObjectType" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.CommonOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.CommonScriptClass" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.CommonSourceModule" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.CommonSyntaxTrees" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.DirectiveReferences" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.DynamicType" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.ExternalReferences" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.GlobalNamespace" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.IsCaseSensitive" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.ObjectType" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.Options" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.ReferencedAssemblyNames" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.References" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.ScriptClass" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.ScriptCompilationInfo" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.SourceModule" />
      <Member Id="P:Microsoft.CodeAnalysis.Compilation.SyntaxTrees" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CompilationOptions" Id="T:Microsoft.CodeAnalysis.CompilationOptions">
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithAssemblyIdentityComparer(Microsoft.CodeAnalysis.AssemblyIdentityComparer)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithCheckOverflow(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithConcurrentBuild(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithCryptoKeyContainer(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithCryptoKeyFile(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithCryptoPublicKey(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithDelaySign(System.Nullable{System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithDeterministic(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithFeatures(System.Collections.Immutable.ImmutableArray{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithGeneralDiagnosticOption(Microsoft.CodeAnalysis.ReportDiagnostic)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithMainTypeName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithMetadataImportOptions(Microsoft.CodeAnalysis.MetadataImportOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithMetadataReferenceResolver(Microsoft.CodeAnalysis.MetadataReferenceResolver)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithModuleName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithOptimizationLevel(Microsoft.CodeAnalysis.OptimizationLevel)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithOutputKind(Microsoft.CodeAnalysis.OutputKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithPlatform(Microsoft.CodeAnalysis.Platform)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithPublicSign(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithReportSuppressedDiagnostics(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithScriptClassName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithSourceReferenceResolver(Microsoft.CodeAnalysis.SourceReferenceResolver)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithSpecificDiagnosticOptions(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}})" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithSpecificDiagnosticOptions(System.Collections.Immutable.ImmutableDictionary{System.String,Microsoft.CodeAnalysis.ReportDiagnostic})" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithStrongNameProvider(Microsoft.CodeAnalysis.StrongNameProvider)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.CommonWithXmlReferenceResolver(Microsoft.CodeAnalysis.XmlReferenceResolver)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.EqualsHelper(Microsoft.CodeAnalysis.CompilationOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.GetHashCodeHelper" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.op_Equality(Microsoft.CodeAnalysis.CompilationOptions,Microsoft.CodeAnalysis.CompilationOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.op_Inequality(Microsoft.CodeAnalysis.CompilationOptions,Microsoft.CodeAnalysis.CompilationOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithAssemblyIdentityComparer(Microsoft.CodeAnalysis.AssemblyIdentityComparer)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithConcurrentBuild(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithCryptoKeyContainer(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithCryptoKeyFile(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithCryptoPublicKey(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithDelaySign(System.Nullable{System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithDeterministic(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithGeneralDiagnosticOption(Microsoft.CodeAnalysis.ReportDiagnostic)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithMainTypeName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithMetadataImportOptions(Microsoft.CodeAnalysis.MetadataImportOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithMetadataReferenceResolver(Microsoft.CodeAnalysis.MetadataReferenceResolver)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithModuleName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithOptimizationLevel(Microsoft.CodeAnalysis.OptimizationLevel)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithOutputKind(Microsoft.CodeAnalysis.OutputKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithOverflowChecks(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithPlatform(Microsoft.CodeAnalysis.Platform)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithPublicSign(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithReportSuppressedDiagnostics(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithScriptClassName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithSourceReferenceResolver(Microsoft.CodeAnalysis.SourceReferenceResolver)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithSpecificDiagnosticOptions(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}})" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithSpecificDiagnosticOptions(System.Collections.Immutable.ImmutableDictionary{System.String,Microsoft.CodeAnalysis.ReportDiagnostic})" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithStrongNameProvider(Microsoft.CodeAnalysis.StrongNameProvider)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationOptions.WithXmlReferenceResolver(Microsoft.CodeAnalysis.XmlReferenceResolver)" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.AssemblyIdentityComparer" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.CheckOverflow" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.ConcurrentBuild" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.CryptoKeyContainer" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.CryptoKeyFile" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.CryptoPublicKey" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.DelaySign" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.Deterministic" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.Errors" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.Features" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.GeneralDiagnosticOption" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.MainTypeName" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.MetadataImportOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.MetadataReferenceResolver" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.ModuleName" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.OptimizationLevel" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.OutputKind" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.Platform" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.PublicSign" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.ReportSuppressedDiagnostics" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.ScriptClassName" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.SourceReferenceResolver" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.SpecificDiagnosticOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.StrongNameProvider" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.WarningLevel" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationOptions.XmlReferenceResolver" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CompilationReference" Id="T:Microsoft.CodeAnalysis.CompilationReference">
      <Member Id="M:Microsoft.CodeAnalysis.CompilationReference.Equals(Microsoft.CodeAnalysis.CompilationReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationReference.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationReference.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationReference.WithAliases(System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationReference.WithAliases(System.Collections.Immutable.ImmutableArray{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationReference.WithEmbedInteropTypes(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CompilationReference.WithProperties(Microsoft.CodeAnalysis.MetadataReferenceProperties)" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationReference.Compilation" />
      <Member Id="P:Microsoft.CodeAnalysis.CompilationReference.Display" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ControlFlowAnalysis" Id="T:Microsoft.CodeAnalysis.ControlFlowAnalysis">
      <Member Id="M:Microsoft.CodeAnalysis.ControlFlowAnalysis.#ctor" />
      <Member Id="P:Microsoft.CodeAnalysis.ControlFlowAnalysis.EndPointIsReachable" />
      <Member Id="P:Microsoft.CodeAnalysis.ControlFlowAnalysis.EntryPoints" />
      <Member Id="P:Microsoft.CodeAnalysis.ControlFlowAnalysis.ExitPoints" />
      <Member Id="P:Microsoft.CodeAnalysis.ControlFlowAnalysis.ReturnStatements" />
      <Member Id="P:Microsoft.CodeAnalysis.ControlFlowAnalysis.StartPointIsReachable" />
      <Member Id="P:Microsoft.CodeAnalysis.ControlFlowAnalysis.Succeeded" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharpExtensions" Id="T:Microsoft.CodeAnalysis.CSharpExtensions">
      <Member Id="M:Microsoft.CodeAnalysis.CSharpExtensions.Any(Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharpExtensions.Any(Microsoft.CodeAnalysis.SyntaxTriviaList,Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharpExtensions.Any``1(Microsoft.CodeAnalysis.SeparatedSyntaxList{``0},Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharpExtensions.Any``1(Microsoft.CodeAnalysis.SyntaxList{``0},Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharpExtensions.IndexOf(Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharpExtensions.IndexOf(Microsoft.CodeAnalysis.SyntaxTriviaList,Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharpExtensions.IndexOf``1(Microsoft.CodeAnalysis.SeparatedSyntaxList{``0},Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharpExtensions.IndexOf``1(Microsoft.CodeAnalysis.SyntaxList{``0},Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharpExtensions.IsKind(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharpExtensions.IsKind(Microsoft.CodeAnalysis.SyntaxNodeOrToken,Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharpExtensions.IsKind(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharpExtensions.IsKind(Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CustomModifier" Id="T:Microsoft.CodeAnalysis.CustomModifier">
      <Member Id="M:Microsoft.CodeAnalysis.CustomModifier.#ctor" />
      <Member Id="P:Microsoft.CodeAnalysis.CustomModifier.IsOptional" />
      <Member Id="P:Microsoft.CodeAnalysis.CustomModifier.Modifier" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.DataFlowAnalysis" Id="T:Microsoft.CodeAnalysis.DataFlowAnalysis">
      <Member Id="M:Microsoft.CodeAnalysis.DataFlowAnalysis.#ctor" />
      <Member Id="P:Microsoft.CodeAnalysis.DataFlowAnalysis.AlwaysAssigned" />
      <Member Id="P:Microsoft.CodeAnalysis.DataFlowAnalysis.Captured" />
      <Member Id="P:Microsoft.CodeAnalysis.DataFlowAnalysis.CapturedInside" />
      <Member Id="P:Microsoft.CodeAnalysis.DataFlowAnalysis.CapturedOutside" />
      <Member Id="P:Microsoft.CodeAnalysis.DataFlowAnalysis.DataFlowsIn" />
      <Member Id="P:Microsoft.CodeAnalysis.DataFlowAnalysis.DataFlowsOut" />
      <Member Id="P:Microsoft.CodeAnalysis.DataFlowAnalysis.ReadInside" />
      <Member Id="P:Microsoft.CodeAnalysis.DataFlowAnalysis.ReadOutside" />
      <Member Id="P:Microsoft.CodeAnalysis.DataFlowAnalysis.Succeeded" />
      <Member Id="P:Microsoft.CodeAnalysis.DataFlowAnalysis.UnsafeAddressTaken" />
      <Member Id="P:Microsoft.CodeAnalysis.DataFlowAnalysis.VariablesDeclared" />
      <Member Id="P:Microsoft.CodeAnalysis.DataFlowAnalysis.WrittenInside" />
      <Member Id="P:Microsoft.CodeAnalysis.DataFlowAnalysis.WrittenOutside" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.DesktopAssemblyIdentityComparer" Id="T:Microsoft.CodeAnalysis.DesktopAssemblyIdentityComparer">
      <Member Id="M:Microsoft.CodeAnalysis.DesktopAssemblyIdentityComparer.LoadFromXml(System.IO.Stream)" />
      <Member Id="P:Microsoft.CodeAnalysis.DesktopAssemblyIdentityComparer.Default" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.DesktopStrongNameProvider" Id="T:Microsoft.CodeAnalysis.DesktopStrongNameProvider">
      <Member Id="M:Microsoft.CodeAnalysis.DesktopStrongNameProvider.#ctor(System.Collections.Immutable.ImmutableArray{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.DesktopStrongNameProvider.#ctor(System.Collections.Immutable.ImmutableArray{System.String},System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.DesktopStrongNameProvider.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.DesktopStrongNameProvider.GetHashCode" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostic" Id="T:Microsoft.CodeAnalysis.Diagnostic">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostic.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostic.Create(Microsoft.CodeAnalysis.DiagnosticDescriptor,Microsoft.CodeAnalysis.Location,Microsoft.CodeAnalysis.DiagnosticSeverity,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Location},System.Collections.Immutable.ImmutableDictionary{System.String,System.String},System.Object[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostic.Create(Microsoft.CodeAnalysis.DiagnosticDescriptor,Microsoft.CodeAnalysis.Location,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Location},System.Collections.Immutable.ImmutableDictionary{System.String,System.String},System.Object[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostic.Create(Microsoft.CodeAnalysis.DiagnosticDescriptor,Microsoft.CodeAnalysis.Location,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Location},System.Object[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostic.Create(Microsoft.CodeAnalysis.DiagnosticDescriptor,Microsoft.CodeAnalysis.Location,System.Collections.Immutable.ImmutableDictionary{System.String,System.String},System.Object[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostic.Create(Microsoft.CodeAnalysis.DiagnosticDescriptor,Microsoft.CodeAnalysis.Location,System.Object[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostic.Create(System.String,System.String,Microsoft.CodeAnalysis.LocalizableString,Microsoft.CodeAnalysis.DiagnosticSeverity,Microsoft.CodeAnalysis.DiagnosticSeverity,System.Boolean,System.Int32,Microsoft.CodeAnalysis.LocalizableString,Microsoft.CodeAnalysis.LocalizableString,System.String,Microsoft.CodeAnalysis.Location,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Location},System.Collections.Generic.IEnumerable{System.String},System.Collections.Immutable.ImmutableDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostic.Create(System.String,System.String,Microsoft.CodeAnalysis.LocalizableString,Microsoft.CodeAnalysis.DiagnosticSeverity,Microsoft.CodeAnalysis.DiagnosticSeverity,System.Boolean,System.Int32,System.Boolean,Microsoft.CodeAnalysis.LocalizableString,Microsoft.CodeAnalysis.LocalizableString,System.String,Microsoft.CodeAnalysis.Location,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Location},System.Collections.Generic.IEnumerable{System.String},System.Collections.Immutable.ImmutableDictionary{System.String,System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostic.Equals(Microsoft.CodeAnalysis.Diagnostic)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostic.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostic.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostic.GetMessage(System.IFormatProvider)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostic.GetSuppressionInfo(Microsoft.CodeAnalysis.Compilation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostic.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostic.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostic.AdditionalLocations" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostic.DefaultSeverity" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostic.Descriptor" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostic.Id" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostic.IsSuppressed" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostic.IsWarningAsError" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostic.Location" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostic.Properties" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostic.Severity" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostic.WarningLevel" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.DiagnosticDescriptor" Id="T:Microsoft.CodeAnalysis.DiagnosticDescriptor">
      <Member Id="M:Microsoft.CodeAnalysis.DiagnosticDescriptor.#ctor(System.String,Microsoft.CodeAnalysis.LocalizableString,Microsoft.CodeAnalysis.LocalizableString,System.String,Microsoft.CodeAnalysis.DiagnosticSeverity,System.Boolean,Microsoft.CodeAnalysis.LocalizableString,System.String,System.String[])" />
      <Member Id="M:Microsoft.CodeAnalysis.DiagnosticDescriptor.#ctor(System.String,System.String,System.String,System.String,Microsoft.CodeAnalysis.DiagnosticSeverity,System.Boolean,System.String,System.String,System.String[])" />
      <Member Id="M:Microsoft.CodeAnalysis.DiagnosticDescriptor.Equals(Microsoft.CodeAnalysis.DiagnosticDescriptor)" />
      <Member Id="M:Microsoft.CodeAnalysis.DiagnosticDescriptor.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.DiagnosticDescriptor.GetEffectiveSeverity(Microsoft.CodeAnalysis.CompilationOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.DiagnosticDescriptor.GetHashCode" />
      <Member Id="P:Microsoft.CodeAnalysis.DiagnosticDescriptor.Category" />
      <Member Id="P:Microsoft.CodeAnalysis.DiagnosticDescriptor.CustomTags" />
      <Member Id="P:Microsoft.CodeAnalysis.DiagnosticDescriptor.DefaultSeverity" />
      <Member Id="P:Microsoft.CodeAnalysis.DiagnosticDescriptor.Description" />
      <Member Id="P:Microsoft.CodeAnalysis.DiagnosticDescriptor.HelpLinkUri" />
      <Member Id="P:Microsoft.CodeAnalysis.DiagnosticDescriptor.Id" />
      <Member Id="P:Microsoft.CodeAnalysis.DiagnosticDescriptor.IsEnabledByDefault" />
      <Member Id="P:Microsoft.CodeAnalysis.DiagnosticDescriptor.MessageFormat" />
      <Member Id="P:Microsoft.CodeAnalysis.DiagnosticDescriptor.Title" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.DiagnosticFormatter" Id="T:Microsoft.CodeAnalysis.DiagnosticFormatter">
      <Member Id="M:Microsoft.CodeAnalysis.DiagnosticFormatter.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.DiagnosticFormatter.Format(Microsoft.CodeAnalysis.Diagnostic,System.IFormatProvider)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.DiagnosticSeverity" Id="T:Microsoft.CodeAnalysis.DiagnosticSeverity">
      <Member Id="F:Microsoft.CodeAnalysis.DiagnosticSeverity.Error" />
      <Member Id="F:Microsoft.CodeAnalysis.DiagnosticSeverity.Hidden" />
      <Member Id="F:Microsoft.CodeAnalysis.DiagnosticSeverity.Info" />
      <Member Id="F:Microsoft.CodeAnalysis.DiagnosticSeverity.Warning" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.DllImportData" Id="T:Microsoft.CodeAnalysis.DllImportData">
      <Member Id="P:Microsoft.CodeAnalysis.DllImportData.BestFitMapping" />
      <Member Id="P:Microsoft.CodeAnalysis.DllImportData.CallingConvention" />
      <Member Id="P:Microsoft.CodeAnalysis.DllImportData.CharacterSet" />
      <Member Id="P:Microsoft.CodeAnalysis.DllImportData.EntryPointName" />
      <Member Id="P:Microsoft.CodeAnalysis.DllImportData.ExactSpelling" />
      <Member Id="P:Microsoft.CodeAnalysis.DllImportData.ModuleName" />
      <Member Id="P:Microsoft.CodeAnalysis.DllImportData.SetLastError" />
      <Member Id="P:Microsoft.CodeAnalysis.DllImportData.ThrowOnUnmappableCharacter" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Document" Id="T:Microsoft.CodeAnalysis.Document">
      <Member Id="M:Microsoft.CodeAnalysis.Document.GetLinkedDocumentIds" />
      <Member Id="M:Microsoft.CodeAnalysis.Document.GetOptionsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Document.GetSemanticModelAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Document.GetSyntaxRootAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Document.GetSyntaxTreeAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Document.GetSyntaxVersionAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Document.GetTextChangesAsync(Microsoft.CodeAnalysis.Document,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Document.TryGetSemanticModel(Microsoft.CodeAnalysis.SemanticModel@)" />
      <Member Id="M:Microsoft.CodeAnalysis.Document.TryGetSyntaxRoot(Microsoft.CodeAnalysis.SyntaxNode@)" />
      <Member Id="M:Microsoft.CodeAnalysis.Document.TryGetSyntaxTree(Microsoft.CodeAnalysis.SyntaxTree@)" />
      <Member Id="M:Microsoft.CodeAnalysis.Document.TryGetSyntaxVersion(Microsoft.CodeAnalysis.VersionStamp@)" />
      <Member Id="M:Microsoft.CodeAnalysis.Document.WithFilePath(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Document.WithFolders(System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.Document.WithName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Document.WithSourceCodeKind(Microsoft.CodeAnalysis.SourceCodeKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.Document.WithSyntaxRoot(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Document.WithText(Microsoft.CodeAnalysis.Text.SourceText)" />
      <Member Id="P:Microsoft.CodeAnalysis.Document.SourceCodeKind" />
      <Member Id="P:Microsoft.CodeAnalysis.Document.SupportsSemanticModel" />
      <Member Id="P:Microsoft.CodeAnalysis.Document.SupportsSyntaxTree" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.DocumentActiveContextChangedEventArgs" Id="T:Microsoft.CodeAnalysis.DocumentActiveContextChangedEventArgs">
      <Member Id="M:Microsoft.CodeAnalysis.DocumentActiveContextChangedEventArgs.#ctor(Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.Text.SourceTextContainer,Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="P:Microsoft.CodeAnalysis.DocumentActiveContextChangedEventArgs.NewActiveContextDocumentId" />
      <Member Id="P:Microsoft.CodeAnalysis.DocumentActiveContextChangedEventArgs.OldActiveContextDocumentId" />
      <Member Id="P:Microsoft.CodeAnalysis.DocumentActiveContextChangedEventArgs.Solution" />
      <Member Id="P:Microsoft.CodeAnalysis.DocumentActiveContextChangedEventArgs.SourceTextContainer" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.DocumentationCommentId" Id="T:Microsoft.CodeAnalysis.DocumentationCommentId">
      <Member Id="M:Microsoft.CodeAnalysis.DocumentationCommentId.CreateDeclarationId(Microsoft.CodeAnalysis.ISymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.DocumentationCommentId.CreateReferenceId(Microsoft.CodeAnalysis.ISymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.DocumentationCommentId.GetFirstSymbolForDeclarationId(System.String,Microsoft.CodeAnalysis.Compilation)" />
      <Member Id="M:Microsoft.CodeAnalysis.DocumentationCommentId.GetFirstSymbolForReferenceId(System.String,Microsoft.CodeAnalysis.Compilation)" />
      <Member Id="M:Microsoft.CodeAnalysis.DocumentationCommentId.GetSymbolsForDeclarationId(System.String,Microsoft.CodeAnalysis.Compilation)" />
      <Member Id="M:Microsoft.CodeAnalysis.DocumentationCommentId.GetSymbolsForReferenceId(System.String,Microsoft.CodeAnalysis.Compilation)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.DocumentationMode" Id="T:Microsoft.CodeAnalysis.DocumentationMode">
      <Member Id="F:Microsoft.CodeAnalysis.DocumentationMode.Diagnose" />
      <Member Id="F:Microsoft.CodeAnalysis.DocumentationMode.None" />
      <Member Id="F:Microsoft.CodeAnalysis.DocumentationMode.Parse" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.DocumentationProvider" Id="T:Microsoft.CodeAnalysis.DocumentationProvider">
      <Member Id="M:Microsoft.CodeAnalysis.DocumentationProvider.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.DocumentationProvider.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.DocumentationProvider.GetDocumentationForSymbol(System.String,System.Globalization.CultureInfo,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.DocumentationProvider.GetHashCode" />
      <Member Id="P:Microsoft.CodeAnalysis.DocumentationProvider.Default" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.DocumentDiagnostic" Id="T:Microsoft.CodeAnalysis.DocumentDiagnostic">
      <Member Id="M:Microsoft.CodeAnalysis.DocumentDiagnostic.#ctor(Microsoft.CodeAnalysis.WorkspaceDiagnosticKind,System.String,Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="P:Microsoft.CodeAnalysis.DocumentDiagnostic.DocumentId" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.DocumentEventArgs" Id="T:Microsoft.CodeAnalysis.DocumentEventArgs">
      <Member Id="M:Microsoft.CodeAnalysis.DocumentEventArgs.#ctor(Microsoft.CodeAnalysis.Document)" />
      <Member Id="P:Microsoft.CodeAnalysis.DocumentEventArgs.Document" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.DocumentId" Id="T:Microsoft.CodeAnalysis.DocumentId">
      <Member Id="M:Microsoft.CodeAnalysis.DocumentId.CreateFromSerialized(Microsoft.CodeAnalysis.ProjectId,System.Guid,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.DocumentId.CreateNewId(Microsoft.CodeAnalysis.ProjectId,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.DocumentId.Equals(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.DocumentId.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.DocumentId.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.DocumentId.op_Equality(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.DocumentId.op_Inequality(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.DocumentId.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.DocumentId.Id" />
      <Member Id="P:Microsoft.CodeAnalysis.DocumentId.ProjectId" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.DocumentInfo" Id="T:Microsoft.CodeAnalysis.DocumentInfo">
      <Member Id="M:Microsoft.CodeAnalysis.DocumentInfo.Create(Microsoft.CodeAnalysis.DocumentId,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.SourceCodeKind,Microsoft.CodeAnalysis.TextLoader,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.DocumentInfo.WithFilePath(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.DocumentInfo.WithFolders(System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.DocumentInfo.WithId(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.DocumentInfo.WithName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.DocumentInfo.WithSourceCodeKind(Microsoft.CodeAnalysis.SourceCodeKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.DocumentInfo.WithTextLoader(Microsoft.CodeAnalysis.TextLoader)" />
      <Member Id="P:Microsoft.CodeAnalysis.DocumentInfo.FilePath" />
      <Member Id="P:Microsoft.CodeAnalysis.DocumentInfo.Folders" />
      <Member Id="P:Microsoft.CodeAnalysis.DocumentInfo.Id" />
      <Member Id="P:Microsoft.CodeAnalysis.DocumentInfo.IsGenerated" />
      <Member Id="P:Microsoft.CodeAnalysis.DocumentInfo.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.DocumentInfo.SourceCodeKind" />
      <Member Id="P:Microsoft.CodeAnalysis.DocumentInfo.TextLoader" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.EmbeddedText" Id="T:Microsoft.CodeAnalysis.EmbeddedText">
      <Member Id="M:Microsoft.CodeAnalysis.EmbeddedText.FromBytes(System.String,System.ArraySegment{System.Byte},Microsoft.CodeAnalysis.Text.SourceHashAlgorithm)" />
      <Member Id="M:Microsoft.CodeAnalysis.EmbeddedText.FromSource(System.String,Microsoft.CodeAnalysis.Text.SourceText)" />
      <Member Id="M:Microsoft.CodeAnalysis.EmbeddedText.FromStream(System.String,System.IO.Stream,Microsoft.CodeAnalysis.Text.SourceHashAlgorithm)" />
      <Member Id="P:Microsoft.CodeAnalysis.EmbeddedText.Checksum" />
      <Member Id="P:Microsoft.CodeAnalysis.EmbeddedText.ChecksumAlgorithm" />
      <Member Id="P:Microsoft.CodeAnalysis.EmbeddedText.FilePath" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ExtensionOrderAttribute" Id="T:Microsoft.CodeAnalysis.ExtensionOrderAttribute">
      <Member Id="M:Microsoft.CodeAnalysis.ExtensionOrderAttribute.#ctor" />
      <Member Id="P:Microsoft.CodeAnalysis.ExtensionOrderAttribute.After" />
      <Member Id="P:Microsoft.CodeAnalysis.ExtensionOrderAttribute.Before" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.FileLinePositionSpan" Id="T:Microsoft.CodeAnalysis.FileLinePositionSpan">
      <Member Id="M:Microsoft.CodeAnalysis.FileLinePositionSpan.#ctor(System.String,Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)" />
      <Member Id="M:Microsoft.CodeAnalysis.FileLinePositionSpan.#ctor(System.String,Microsoft.CodeAnalysis.Text.LinePositionSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.FileLinePositionSpan.Equals(Microsoft.CodeAnalysis.FileLinePositionSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.FileLinePositionSpan.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.FileLinePositionSpan.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.FileLinePositionSpan.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.FileLinePositionSpan.EndLinePosition" />
      <Member Id="P:Microsoft.CodeAnalysis.FileLinePositionSpan.HasMappedPath" />
      <Member Id="P:Microsoft.CodeAnalysis.FileLinePositionSpan.IsValid" />
      <Member Id="P:Microsoft.CodeAnalysis.FileLinePositionSpan.Path" />
      <Member Id="P:Microsoft.CodeAnalysis.FileLinePositionSpan.Span" />
      <Member Id="P:Microsoft.CodeAnalysis.FileLinePositionSpan.StartLinePosition" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.FileSystemExtensions" Id="T:Microsoft.CodeAnalysis.FileSystemExtensions">
      <Member Id="M:Microsoft.CodeAnalysis.FileSystemExtensions.Emit(Microsoft.CodeAnalysis.Compilation,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ResourceDescription},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.FileTextLoader" Id="T:Microsoft.CodeAnalysis.FileTextLoader">
      <Member Id="M:Microsoft.CodeAnalysis.FileTextLoader.#ctor(System.String,System.Text.Encoding)" />
      <Member Id="M:Microsoft.CodeAnalysis.FileTextLoader.CreateText(System.IO.Stream,Microsoft.CodeAnalysis.Workspace)" />
      <Member Id="M:Microsoft.CodeAnalysis.FileTextLoader.LoadTextAndVersionAsync(Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.DocumentId,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.FileTextLoader.DefaultEncoding" />
      <Member Id="P:Microsoft.CodeAnalysis.FileTextLoader.Path" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.IAliasSymbol" Id="T:Microsoft.CodeAnalysis.IAliasSymbol">
      <Member Id="P:Microsoft.CodeAnalysis.IAliasSymbol.Target" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.IAnalyzerAssemblyLoader" Id="T:Microsoft.CodeAnalysis.IAnalyzerAssemblyLoader">
      <Member Id="M:Microsoft.CodeAnalysis.IAnalyzerAssemblyLoader.AddDependencyLocation(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.IAnalyzerAssemblyLoader.LoadFromPath(System.String)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.IArrayTypeSymbol" Id="T:Microsoft.CodeAnalysis.IArrayTypeSymbol">
      <Member Id="M:Microsoft.CodeAnalysis.IArrayTypeSymbol.Equals(Microsoft.CodeAnalysis.IArrayTypeSymbol)" />
      <Member Id="P:Microsoft.CodeAnalysis.IArrayTypeSymbol.CustomModifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.IArrayTypeSymbol.ElementType" />
      <Member Id="P:Microsoft.CodeAnalysis.IArrayTypeSymbol.IsSZArray" />
      <Member Id="P:Microsoft.CodeAnalysis.IArrayTypeSymbol.LowerBounds" />
      <Member Id="P:Microsoft.CodeAnalysis.IArrayTypeSymbol.Rank" />
      <Member Id="P:Microsoft.CodeAnalysis.IArrayTypeSymbol.Sizes" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.IAssemblySymbol" Id="T:Microsoft.CodeAnalysis.IAssemblySymbol">
      <Member Id="M:Microsoft.CodeAnalysis.IAssemblySymbol.GetMetadata" />
      <Member Id="M:Microsoft.CodeAnalysis.IAssemblySymbol.GetTypeByMetadataName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.IAssemblySymbol.GivesAccessTo(Microsoft.CodeAnalysis.IAssemblySymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.IAssemblySymbol.ResolveForwardedType(System.String)" />
      <Member Id="P:Microsoft.CodeAnalysis.IAssemblySymbol.GlobalNamespace" />
      <Member Id="P:Microsoft.CodeAnalysis.IAssemblySymbol.Identity" />
      <Member Id="P:Microsoft.CodeAnalysis.IAssemblySymbol.IsInteractive" />
      <Member Id="P:Microsoft.CodeAnalysis.IAssemblySymbol.MightContainExtensionMethods" />
      <Member Id="P:Microsoft.CodeAnalysis.IAssemblySymbol.Modules" />
      <Member Id="P:Microsoft.CodeAnalysis.IAssemblySymbol.NamespaceNames" />
      <Member Id="P:Microsoft.CodeAnalysis.IAssemblySymbol.TypeNames" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ICompilationUnitSyntax" Id="T:Microsoft.CodeAnalysis.ICompilationUnitSyntax">
      <Member Id="P:Microsoft.CodeAnalysis.ICompilationUnitSyntax.EndOfFileToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.IDiscardSymbol" Id="T:Microsoft.CodeAnalysis.IDiscardSymbol">
      <Member Id="P:Microsoft.CodeAnalysis.IDiscardSymbol.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.IDynamicTypeSymbol" Id="T:Microsoft.CodeAnalysis.IDynamicTypeSymbol" />
    <Type Name="Microsoft.CodeAnalysis.IErrorTypeSymbol" Id="T:Microsoft.CodeAnalysis.IErrorTypeSymbol">
      <Member Id="P:Microsoft.CodeAnalysis.IErrorTypeSymbol.CandidateReason" />
      <Member Id="P:Microsoft.CodeAnalysis.IErrorTypeSymbol.CandidateSymbols" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.IEventSymbol" Id="T:Microsoft.CodeAnalysis.IEventSymbol">
      <Member Id="P:Microsoft.CodeAnalysis.IEventSymbol.AddMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.IEventSymbol.ExplicitInterfaceImplementations" />
      <Member Id="P:Microsoft.CodeAnalysis.IEventSymbol.IsWindowsRuntimeEvent" />
      <Member Id="P:Microsoft.CodeAnalysis.IEventSymbol.OriginalDefinition" />
      <Member Id="P:Microsoft.CodeAnalysis.IEventSymbol.OverriddenEvent" />
      <Member Id="P:Microsoft.CodeAnalysis.IEventSymbol.RaiseMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.IEventSymbol.RemoveMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.IEventSymbol.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.IFieldSymbol" Id="T:Microsoft.CodeAnalysis.IFieldSymbol">
      <Member Id="P:Microsoft.CodeAnalysis.IFieldSymbol.AssociatedSymbol" />
      <Member Id="P:Microsoft.CodeAnalysis.IFieldSymbol.ConstantValue" />
      <Member Id="P:Microsoft.CodeAnalysis.IFieldSymbol.CorrespondingTupleField" />
      <Member Id="P:Microsoft.CodeAnalysis.IFieldSymbol.CustomModifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.IFieldSymbol.HasConstantValue" />
      <Member Id="P:Microsoft.CodeAnalysis.IFieldSymbol.IsConst" />
      <Member Id="P:Microsoft.CodeAnalysis.IFieldSymbol.IsReadOnly" />
      <Member Id="P:Microsoft.CodeAnalysis.IFieldSymbol.IsVolatile" />
      <Member Id="P:Microsoft.CodeAnalysis.IFieldSymbol.OriginalDefinition" />
      <Member Id="P:Microsoft.CodeAnalysis.IFieldSymbol.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ILabelSymbol" Id="T:Microsoft.CodeAnalysis.ILabelSymbol">
      <Member Id="P:Microsoft.CodeAnalysis.ILabelSymbol.ContainingMethod" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ILocalSymbol" Id="T:Microsoft.CodeAnalysis.ILocalSymbol">
      <Member Id="P:Microsoft.CodeAnalysis.ILocalSymbol.ConstantValue" />
      <Member Id="P:Microsoft.CodeAnalysis.ILocalSymbol.HasConstantValue" />
      <Member Id="P:Microsoft.CodeAnalysis.ILocalSymbol.IsConst" />
      <Member Id="P:Microsoft.CodeAnalysis.ILocalSymbol.IsFixed" />
      <Member Id="P:Microsoft.CodeAnalysis.ILocalSymbol.IsFunctionValue" />
      <Member Id="P:Microsoft.CodeAnalysis.ILocalSymbol.IsRef" />
      <Member Id="P:Microsoft.CodeAnalysis.ILocalSymbol.RefKind" />
      <Member Id="P:Microsoft.CodeAnalysis.ILocalSymbol.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.IMethodSymbol" Id="T:Microsoft.CodeAnalysis.IMethodSymbol">
      <Member Id="M:Microsoft.CodeAnalysis.IMethodSymbol.Construct(Microsoft.CodeAnalysis.ITypeSymbol[])" />
      <Member Id="M:Microsoft.CodeAnalysis.IMethodSymbol.GetDllImportData" />
      <Member Id="M:Microsoft.CodeAnalysis.IMethodSymbol.GetReturnTypeAttributes" />
      <Member Id="M:Microsoft.CodeAnalysis.IMethodSymbol.GetTypeInferredDuringReduction(Microsoft.CodeAnalysis.ITypeParameterSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.IMethodSymbol.ReduceExtensionMethod(Microsoft.CodeAnalysis.ITypeSymbol)" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.Arity" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.AssociatedAnonymousDelegate" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.AssociatedSymbol" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.ConstructedFrom" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.ExplicitInterfaceImplementations" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.HidesBaseMethodsByName" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.IsAsync" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.IsCheckedBuiltin" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.IsExtensionMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.IsGenericMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.IsVararg" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.MethodKind" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.OriginalDefinition" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.OverriddenMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.Parameters" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.PartialDefinitionPart" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.PartialImplementationPart" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.ReceiverType" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.ReducedFrom" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.RefCustomModifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.RefKind" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.ReturnsByRef" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.ReturnsByRefReadonly" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.ReturnsVoid" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.ReturnType" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.ReturnTypeCustomModifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.TypeArguments" />
      <Member Id="P:Microsoft.CodeAnalysis.IMethodSymbol.TypeParameters" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.IModuleSymbol" Id="T:Microsoft.CodeAnalysis.IModuleSymbol">
      <Member Id="M:Microsoft.CodeAnalysis.IModuleSymbol.GetMetadata" />
      <Member Id="M:Microsoft.CodeAnalysis.IModuleSymbol.GetModuleNamespace(Microsoft.CodeAnalysis.INamespaceSymbol)" />
      <Member Id="P:Microsoft.CodeAnalysis.IModuleSymbol.GlobalNamespace" />
      <Member Id="P:Microsoft.CodeAnalysis.IModuleSymbol.ReferencedAssemblies" />
      <Member Id="P:Microsoft.CodeAnalysis.IModuleSymbol.ReferencedAssemblySymbols" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.INamedTypeSymbol" Id="T:Microsoft.CodeAnalysis.INamedTypeSymbol">
      <Member Id="M:Microsoft.CodeAnalysis.INamedTypeSymbol.Construct(Microsoft.CodeAnalysis.ITypeSymbol[])" />
      <Member Id="M:Microsoft.CodeAnalysis.INamedTypeSymbol.ConstructUnboundGenericType" />
      <Member Id="M:Microsoft.CodeAnalysis.INamedTypeSymbol.GetTypeArgumentCustomModifiers(System.Int32)" />
      <Member Id="P:Microsoft.CodeAnalysis.INamedTypeSymbol.Arity" />
      <Member Id="P:Microsoft.CodeAnalysis.INamedTypeSymbol.AssociatedSymbol" />
      <Member Id="P:Microsoft.CodeAnalysis.INamedTypeSymbol.ConstructedFrom" />
      <Member Id="P:Microsoft.CodeAnalysis.INamedTypeSymbol.Constructors" />
      <Member Id="P:Microsoft.CodeAnalysis.INamedTypeSymbol.DelegateInvokeMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.INamedTypeSymbol.EnumUnderlyingType" />
      <Member Id="P:Microsoft.CodeAnalysis.INamedTypeSymbol.InstanceConstructors" />
      <Member Id="P:Microsoft.CodeAnalysis.INamedTypeSymbol.IsComImport" />
      <Member Id="P:Microsoft.CodeAnalysis.INamedTypeSymbol.IsGenericType" />
      <Member Id="P:Microsoft.CodeAnalysis.INamedTypeSymbol.IsImplicitClass" />
      <Member Id="P:Microsoft.CodeAnalysis.INamedTypeSymbol.IsScriptClass" />
      <Member Id="P:Microsoft.CodeAnalysis.INamedTypeSymbol.IsSerializable" />
      <Member Id="P:Microsoft.CodeAnalysis.INamedTypeSymbol.IsUnboundGenericType" />
      <Member Id="P:Microsoft.CodeAnalysis.INamedTypeSymbol.MemberNames" />
      <Member Id="P:Microsoft.CodeAnalysis.INamedTypeSymbol.MightContainExtensionMethods" />
      <Member Id="P:Microsoft.CodeAnalysis.INamedTypeSymbol.OriginalDefinition" />
      <Member Id="P:Microsoft.CodeAnalysis.INamedTypeSymbol.StaticConstructors" />
      <Member Id="P:Microsoft.CodeAnalysis.INamedTypeSymbol.TupleElements" />
      <Member Id="P:Microsoft.CodeAnalysis.INamedTypeSymbol.TupleUnderlyingType" />
      <Member Id="P:Microsoft.CodeAnalysis.INamedTypeSymbol.TypeArguments" />
      <Member Id="P:Microsoft.CodeAnalysis.INamedTypeSymbol.TypeParameters" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.INamespaceOrTypeSymbol" Id="T:Microsoft.CodeAnalysis.INamespaceOrTypeSymbol">
      <Member Id="M:Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.GetMembers" />
      <Member Id="M:Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.GetMembers(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.GetTypeMembers" />
      <Member Id="M:Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.GetTypeMembers(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.GetTypeMembers(System.String,System.Int32)" />
      <Member Id="P:Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.IsNamespace" />
      <Member Id="P:Microsoft.CodeAnalysis.INamespaceOrTypeSymbol.IsType" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.INamespaceSymbol" Id="T:Microsoft.CodeAnalysis.INamespaceSymbol">
      <Member Id="M:Microsoft.CodeAnalysis.INamespaceSymbol.GetMembers" />
      <Member Id="M:Microsoft.CodeAnalysis.INamespaceSymbol.GetMembers(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.INamespaceSymbol.GetNamespaceMembers" />
      <Member Id="P:Microsoft.CodeAnalysis.INamespaceSymbol.ConstituentNamespaces" />
      <Member Id="P:Microsoft.CodeAnalysis.INamespaceSymbol.ContainingCompilation" />
      <Member Id="P:Microsoft.CodeAnalysis.INamespaceSymbol.IsGlobalNamespace" />
      <Member Id="P:Microsoft.CodeAnalysis.INamespaceSymbol.NamespaceKind" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.IOperation" Id="T:Microsoft.CodeAnalysis.IOperation">
      <Member Id="M:Microsoft.CodeAnalysis.IOperation.Accept(Microsoft.CodeAnalysis.Operations.OperationVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.IOperation.Accept``2(Microsoft.CodeAnalysis.Operations.OperationVisitor{``0,``1},``0)" />
      <Member Id="P:Microsoft.CodeAnalysis.IOperation.Children" />
      <Member Id="P:Microsoft.CodeAnalysis.IOperation.ConstantValue" />
      <Member Id="P:Microsoft.CodeAnalysis.IOperation.IsImplicit" />
      <Member Id="P:Microsoft.CodeAnalysis.IOperation.Kind" />
      <Member Id="P:Microsoft.CodeAnalysis.IOperation.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.IOperation.Parent" />
      <Member Id="P:Microsoft.CodeAnalysis.IOperation.SemanticModel" />
      <Member Id="P:Microsoft.CodeAnalysis.IOperation.Syntax" />
      <Member Id="P:Microsoft.CodeAnalysis.IOperation.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.IParameterSymbol" Id="T:Microsoft.CodeAnalysis.IParameterSymbol">
      <Member Id="P:Microsoft.CodeAnalysis.IParameterSymbol.CustomModifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.IParameterSymbol.ExplicitDefaultValue" />
      <Member Id="P:Microsoft.CodeAnalysis.IParameterSymbol.HasExplicitDefaultValue" />
      <Member Id="P:Microsoft.CodeAnalysis.IParameterSymbol.IsOptional" />
      <Member Id="P:Microsoft.CodeAnalysis.IParameterSymbol.IsParams" />
      <Member Id="P:Microsoft.CodeAnalysis.IParameterSymbol.IsThis" />
      <Member Id="P:Microsoft.CodeAnalysis.IParameterSymbol.Ordinal" />
      <Member Id="P:Microsoft.CodeAnalysis.IParameterSymbol.OriginalDefinition" />
      <Member Id="P:Microsoft.CodeAnalysis.IParameterSymbol.RefCustomModifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.IParameterSymbol.RefKind" />
      <Member Id="P:Microsoft.CodeAnalysis.IParameterSymbol.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.IPointerTypeSymbol" Id="T:Microsoft.CodeAnalysis.IPointerTypeSymbol">
      <Member Id="P:Microsoft.CodeAnalysis.IPointerTypeSymbol.CustomModifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.IPointerTypeSymbol.PointedAtType" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.IPreprocessingSymbol" Id="T:Microsoft.CodeAnalysis.IPreprocessingSymbol" />
    <Type Name="Microsoft.CodeAnalysis.IPropertySymbol" Id="T:Microsoft.CodeAnalysis.IPropertySymbol">
      <Member Id="P:Microsoft.CodeAnalysis.IPropertySymbol.ExplicitInterfaceImplementations" />
      <Member Id="P:Microsoft.CodeAnalysis.IPropertySymbol.GetMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.IPropertySymbol.IsIndexer" />
      <Member Id="P:Microsoft.CodeAnalysis.IPropertySymbol.IsReadOnly" />
      <Member Id="P:Microsoft.CodeAnalysis.IPropertySymbol.IsWithEvents" />
      <Member Id="P:Microsoft.CodeAnalysis.IPropertySymbol.IsWriteOnly" />
      <Member Id="P:Microsoft.CodeAnalysis.IPropertySymbol.OriginalDefinition" />
      <Member Id="P:Microsoft.CodeAnalysis.IPropertySymbol.OverriddenProperty" />
      <Member Id="P:Microsoft.CodeAnalysis.IPropertySymbol.Parameters" />
      <Member Id="P:Microsoft.CodeAnalysis.IPropertySymbol.RefCustomModifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.IPropertySymbol.RefKind" />
      <Member Id="P:Microsoft.CodeAnalysis.IPropertySymbol.ReturnsByRef" />
      <Member Id="P:Microsoft.CodeAnalysis.IPropertySymbol.ReturnsByRefReadonly" />
      <Member Id="P:Microsoft.CodeAnalysis.IPropertySymbol.SetMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.IPropertySymbol.Type" />
      <Member Id="P:Microsoft.CodeAnalysis.IPropertySymbol.TypeCustomModifiers" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.IRangeVariableSymbol" Id="T:Microsoft.CodeAnalysis.IRangeVariableSymbol" />
    <Type Name="Microsoft.CodeAnalysis.ISkippedTokensTriviaSyntax" Id="T:Microsoft.CodeAnalysis.ISkippedTokensTriviaSyntax">
      <Member Id="P:Microsoft.CodeAnalysis.ISkippedTokensTriviaSyntax.Tokens" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ISourceAssemblySymbol" Id="T:Microsoft.CodeAnalysis.ISourceAssemblySymbol">
      <Member Id="P:Microsoft.CodeAnalysis.ISourceAssemblySymbol.Compilation" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.IStructuredTriviaSyntax" Id="T:Microsoft.CodeAnalysis.IStructuredTriviaSyntax">
      <Member Id="P:Microsoft.CodeAnalysis.IStructuredTriviaSyntax.ParentTrivia" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ISymbol" Id="T:Microsoft.CodeAnalysis.ISymbol">
      <Member Id="M:Microsoft.CodeAnalysis.ISymbol.Accept(Microsoft.CodeAnalysis.SymbolVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.ISymbol.Accept``1(Microsoft.CodeAnalysis.SymbolVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.ISymbol.GetAttributes" />
      <Member Id="M:Microsoft.CodeAnalysis.ISymbol.GetDocumentationCommentId" />
      <Member Id="M:Microsoft.CodeAnalysis.ISymbol.GetDocumentationCommentXml(System.Globalization.CultureInfo,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.ISymbol.ToDisplayParts(Microsoft.CodeAnalysis.SymbolDisplayFormat)" />
      <Member Id="M:Microsoft.CodeAnalysis.ISymbol.ToDisplayString(Microsoft.CodeAnalysis.SymbolDisplayFormat)" />
      <Member Id="M:Microsoft.CodeAnalysis.ISymbol.ToMinimalDisplayParts(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.SymbolDisplayFormat)" />
      <Member Id="M:Microsoft.CodeAnalysis.ISymbol.ToMinimalDisplayString(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.SymbolDisplayFormat)" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.CanBeReferencedByName" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.ContainingAssembly" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.ContainingModule" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.ContainingNamespace" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.ContainingSymbol" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.ContainingType" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.DeclaredAccessibility" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.DeclaringSyntaxReferences" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.HasUnsupportedMetadata" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.IsAbstract" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.IsDefinition" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.IsExtern" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.IsImplicitlyDeclared" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.IsOverride" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.IsSealed" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.IsStatic" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.IsVirtual" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.Kind" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.Locations" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.MetadataName" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.ISymbol.OriginalDefinition" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ISymbolExtensions" Id="T:Microsoft.CodeAnalysis.ISymbolExtensions">
      <Member Id="M:Microsoft.CodeAnalysis.ISymbolExtensions.GetConstructedReducedFrom(Microsoft.CodeAnalysis.IMethodSymbol)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ITypeParameterSymbol" Id="T:Microsoft.CodeAnalysis.ITypeParameterSymbol">
      <Member Id="P:Microsoft.CodeAnalysis.ITypeParameterSymbol.ConstraintTypes" />
      <Member Id="P:Microsoft.CodeAnalysis.ITypeParameterSymbol.DeclaringMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.ITypeParameterSymbol.DeclaringType" />
      <Member Id="P:Microsoft.CodeAnalysis.ITypeParameterSymbol.HasConstructorConstraint" />
      <Member Id="P:Microsoft.CodeAnalysis.ITypeParameterSymbol.HasReferenceTypeConstraint" />
      <Member Id="P:Microsoft.CodeAnalysis.ITypeParameterSymbol.HasUnmanagedTypeConstraint" />
      <Member Id="P:Microsoft.CodeAnalysis.ITypeParameterSymbol.HasValueTypeConstraint" />
      <Member Id="P:Microsoft.CodeAnalysis.ITypeParameterSymbol.Ordinal" />
      <Member Id="P:Microsoft.CodeAnalysis.ITypeParameterSymbol.OriginalDefinition" />
      <Member Id="P:Microsoft.CodeAnalysis.ITypeParameterSymbol.ReducedFrom" />
      <Member Id="P:Microsoft.CodeAnalysis.ITypeParameterSymbol.TypeParameterKind" />
      <Member Id="P:Microsoft.CodeAnalysis.ITypeParameterSymbol.Variance" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ITypeSymbol" Id="T:Microsoft.CodeAnalysis.ITypeSymbol">
      <Member Id="M:Microsoft.CodeAnalysis.ITypeSymbol.FindImplementationForInterfaceMember(Microsoft.CodeAnalysis.ISymbol)" />
      <Member Id="P:Microsoft.CodeAnalysis.ITypeSymbol.AllInterfaces" />
      <Member Id="P:Microsoft.CodeAnalysis.ITypeSymbol.BaseType" />
      <Member Id="P:Microsoft.CodeAnalysis.ITypeSymbol.Interfaces" />
      <Member Id="P:Microsoft.CodeAnalysis.ITypeSymbol.IsAnonymousType" />
      <Member Id="P:Microsoft.CodeAnalysis.ITypeSymbol.IsReferenceType" />
      <Member Id="P:Microsoft.CodeAnalysis.ITypeSymbol.IsTupleType" />
      <Member Id="P:Microsoft.CodeAnalysis.ITypeSymbol.IsValueType" />
      <Member Id="P:Microsoft.CodeAnalysis.ITypeSymbol.OriginalDefinition" />
      <Member Id="P:Microsoft.CodeAnalysis.ITypeSymbol.SpecialType" />
      <Member Id="P:Microsoft.CodeAnalysis.ITypeSymbol.TypeKind" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.LanguageNames" Id="T:Microsoft.CodeAnalysis.LanguageNames">
      <Member Id="F:Microsoft.CodeAnalysis.LanguageNames.CSharp" />
      <Member Id="F:Microsoft.CodeAnalysis.LanguageNames.FSharp" />
      <Member Id="F:Microsoft.CodeAnalysis.LanguageNames.VisualBasic" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.LineVisibility" Id="T:Microsoft.CodeAnalysis.LineVisibility">
      <Member Id="F:Microsoft.CodeAnalysis.LineVisibility.BeforeFirstLineDirective" />
      <Member Id="F:Microsoft.CodeAnalysis.LineVisibility.Hidden" />
      <Member Id="F:Microsoft.CodeAnalysis.LineVisibility.Visible" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.LocalizableResourceString" Id="T:Microsoft.CodeAnalysis.LocalizableResourceString">
      <Member Id="M:Microsoft.CodeAnalysis.LocalizableResourceString.#ctor(System.String,System.Resources.ResourceManager,System.Type)" />
      <Member Id="M:Microsoft.CodeAnalysis.LocalizableResourceString.#ctor(System.String,System.Resources.ResourceManager,System.Type,System.String[])" />
      <Member Id="M:Microsoft.CodeAnalysis.LocalizableResourceString.AreEqual(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.LocalizableResourceString.GetHash" />
      <Member Id="M:Microsoft.CodeAnalysis.LocalizableResourceString.GetText(System.IFormatProvider)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.LocalizableString" Id="T:Microsoft.CodeAnalysis.LocalizableString">
      <Member Id="E:Microsoft.CodeAnalysis.LocalizableString.OnException" />
      <Member Id="M:Microsoft.CodeAnalysis.LocalizableString.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.LocalizableString.AreEqual(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.LocalizableString.Equals(Microsoft.CodeAnalysis.LocalizableString)" />
      <Member Id="M:Microsoft.CodeAnalysis.LocalizableString.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.LocalizableString.GetHash" />
      <Member Id="M:Microsoft.CodeAnalysis.LocalizableString.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.LocalizableString.GetText(System.IFormatProvider)" />
      <Member Id="M:Microsoft.CodeAnalysis.LocalizableString.op_Explicit(Microsoft.CodeAnalysis.LocalizableString)~System.String" />
      <Member Id="M:Microsoft.CodeAnalysis.LocalizableString.op_Implicit(System.String)~Microsoft.CodeAnalysis.LocalizableString" />
      <Member Id="M:Microsoft.CodeAnalysis.LocalizableString.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <Member Id="M:Microsoft.CodeAnalysis.LocalizableString.ToString" />
      <Member Id="M:Microsoft.CodeAnalysis.LocalizableString.ToString(System.IFormatProvider)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Location" Id="T:Microsoft.CodeAnalysis.Location">
      <Member Id="M:Microsoft.CodeAnalysis.Location.Create(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.Text.TextSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.Location.Create(System.String,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Text.LinePositionSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.Location.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.Location.GetDebuggerDisplay" />
      <Member Id="M:Microsoft.CodeAnalysis.Location.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.Location.GetLineSpan" />
      <Member Id="M:Microsoft.CodeAnalysis.Location.GetMappedLineSpan" />
      <Member Id="M:Microsoft.CodeAnalysis.Location.op_Equality(Microsoft.CodeAnalysis.Location,Microsoft.CodeAnalysis.Location)" />
      <Member Id="M:Microsoft.CodeAnalysis.Location.op_Inequality(Microsoft.CodeAnalysis.Location,Microsoft.CodeAnalysis.Location)" />
      <Member Id="M:Microsoft.CodeAnalysis.Location.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.Location.IsInMetadata" />
      <Member Id="P:Microsoft.CodeAnalysis.Location.IsInSource" />
      <Member Id="P:Microsoft.CodeAnalysis.Location.Kind" />
      <Member Id="P:Microsoft.CodeAnalysis.Location.MetadataModule" />
      <Member Id="P:Microsoft.CodeAnalysis.Location.None" />
      <Member Id="P:Microsoft.CodeAnalysis.Location.SourceSpan" />
      <Member Id="P:Microsoft.CodeAnalysis.Location.SourceTree" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.LocationKind" Id="T:Microsoft.CodeAnalysis.LocationKind">
      <Member Id="F:Microsoft.CodeAnalysis.LocationKind.ExternalFile" />
      <Member Id="F:Microsoft.CodeAnalysis.LocationKind.MetadataFile" />
      <Member Id="F:Microsoft.CodeAnalysis.LocationKind.None" />
      <Member Id="F:Microsoft.CodeAnalysis.LocationKind.SourceFile" />
      <Member Id="F:Microsoft.CodeAnalysis.LocationKind.XmlFile" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Metadata" Id="T:Microsoft.CodeAnalysis.Metadata">
      <Member Id="M:Microsoft.CodeAnalysis.Metadata.CommonCopy" />
      <Member Id="M:Microsoft.CodeAnalysis.Metadata.Copy" />
      <Member Id="M:Microsoft.CodeAnalysis.Metadata.Dispose" />
      <Member Id="P:Microsoft.CodeAnalysis.Metadata.Id" />
      <Member Id="P:Microsoft.CodeAnalysis.Metadata.Kind" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.MetadataId" Id="T:Microsoft.CodeAnalysis.MetadataId" />
    <Type Name="Microsoft.CodeAnalysis.MetadataImageKind" Id="T:Microsoft.CodeAnalysis.MetadataImageKind">
      <Member Id="F:Microsoft.CodeAnalysis.MetadataImageKind.Assembly" />
      <Member Id="F:Microsoft.CodeAnalysis.MetadataImageKind.Module" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.MetadataImportOptions" Id="T:Microsoft.CodeAnalysis.MetadataImportOptions">
      <Member Id="F:Microsoft.CodeAnalysis.MetadataImportOptions.All" />
      <Member Id="F:Microsoft.CodeAnalysis.MetadataImportOptions.Internal" />
      <Member Id="F:Microsoft.CodeAnalysis.MetadataImportOptions.Public" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.MetadataReference" Id="T:Microsoft.CodeAnalysis.MetadataReference">
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReference.#ctor(Microsoft.CodeAnalysis.MetadataReferenceProperties)" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReference.CreateFromAssembly(System.Reflection.Assembly)" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReference.CreateFromAssembly(System.Reflection.Assembly,Microsoft.CodeAnalysis.MetadataReferenceProperties,Microsoft.CodeAnalysis.DocumentationProvider)" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReference.CreateFromFile(System.String,Microsoft.CodeAnalysis.MetadataReferenceProperties,Microsoft.CodeAnalysis.DocumentationProvider)" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReference.CreateFromImage(System.Collections.Generic.IEnumerable{System.Byte},Microsoft.CodeAnalysis.MetadataReferenceProperties,Microsoft.CodeAnalysis.DocumentationProvider,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReference.CreateFromImage(System.Collections.Immutable.ImmutableArray{System.Byte},Microsoft.CodeAnalysis.MetadataReferenceProperties,Microsoft.CodeAnalysis.DocumentationProvider,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReference.CreateFromStream(System.IO.Stream,Microsoft.CodeAnalysis.MetadataReferenceProperties,Microsoft.CodeAnalysis.DocumentationProvider,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReference.WithAliases(System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReference.WithAliases(System.Collections.Immutable.ImmutableArray{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReference.WithEmbedInteropTypes(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReference.WithProperties(Microsoft.CodeAnalysis.MetadataReferenceProperties)" />
      <Member Id="P:Microsoft.CodeAnalysis.MetadataReference.Display" />
      <Member Id="P:Microsoft.CodeAnalysis.MetadataReference.Properties" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.MetadataReferenceProperties" Id="T:Microsoft.CodeAnalysis.MetadataReferenceProperties">
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReferenceProperties.#ctor(Microsoft.CodeAnalysis.MetadataImageKind,System.Collections.Immutable.ImmutableArray{System.String},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReferenceProperties.Equals(Microsoft.CodeAnalysis.MetadataReferenceProperties)" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReferenceProperties.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReferenceProperties.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReferenceProperties.op_Equality(Microsoft.CodeAnalysis.MetadataReferenceProperties,Microsoft.CodeAnalysis.MetadataReferenceProperties)" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReferenceProperties.op_Inequality(Microsoft.CodeAnalysis.MetadataReferenceProperties,Microsoft.CodeAnalysis.MetadataReferenceProperties)" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReferenceProperties.WithAliases(System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReferenceProperties.WithAliases(System.Collections.Immutable.ImmutableArray{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReferenceProperties.WithEmbedInteropTypes(System.Boolean)" />
      <Member Id="P:Microsoft.CodeAnalysis.MetadataReferenceProperties.Aliases" />
      <Member Id="P:Microsoft.CodeAnalysis.MetadataReferenceProperties.Assembly" />
      <Member Id="P:Microsoft.CodeAnalysis.MetadataReferenceProperties.EmbedInteropTypes" />
      <Member Id="P:Microsoft.CodeAnalysis.MetadataReferenceProperties.GlobalAlias" />
      <Member Id="P:Microsoft.CodeAnalysis.MetadataReferenceProperties.Kind" />
      <Member Id="P:Microsoft.CodeAnalysis.MetadataReferenceProperties.Module" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.MetadataReferenceResolver" Id="T:Microsoft.CodeAnalysis.MetadataReferenceResolver">
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReferenceResolver.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReferenceResolver.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReferenceResolver.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReferenceResolver.ResolveMissingAssembly(Microsoft.CodeAnalysis.MetadataReference,Microsoft.CodeAnalysis.AssemblyIdentity)" />
      <Member Id="M:Microsoft.CodeAnalysis.MetadataReferenceResolver.ResolveReference(System.String,System.String,Microsoft.CodeAnalysis.MetadataReferenceProperties)" />
      <Member Id="P:Microsoft.CodeAnalysis.MetadataReferenceResolver.ResolveMissingAssemblies" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.MethodKind" Id="T:Microsoft.CodeAnalysis.MethodKind">
      <Member Id="F:Microsoft.CodeAnalysis.MethodKind.AnonymousFunction" />
      <Member Id="F:Microsoft.CodeAnalysis.MethodKind.BuiltinOperator" />
      <Member Id="F:Microsoft.CodeAnalysis.MethodKind.Constructor" />
      <Member Id="F:Microsoft.CodeAnalysis.MethodKind.Conversion" />
      <Member Id="F:Microsoft.CodeAnalysis.MethodKind.DeclareMethod" />
      <Member Id="F:Microsoft.CodeAnalysis.MethodKind.DelegateInvoke" />
      <Member Id="F:Microsoft.CodeAnalysis.MethodKind.Destructor" />
      <Member Id="F:Microsoft.CodeAnalysis.MethodKind.EventAdd" />
      <Member Id="F:Microsoft.CodeAnalysis.MethodKind.EventRaise" />
      <Member Id="F:Microsoft.CodeAnalysis.MethodKind.EventRemove" />
      <Member Id="F:Microsoft.CodeAnalysis.MethodKind.ExplicitInterfaceImplementation" />
      <Member Id="F:Microsoft.CodeAnalysis.MethodKind.LambdaMethod" />
      <Member Id="F:Microsoft.CodeAnalysis.MethodKind.LocalFunction" />
      <Member Id="F:Microsoft.CodeAnalysis.MethodKind.Ordinary" />
      <Member Id="F:Microsoft.CodeAnalysis.MethodKind.PropertyGet" />
      <Member Id="F:Microsoft.CodeAnalysis.MethodKind.PropertySet" />
      <Member Id="F:Microsoft.CodeAnalysis.MethodKind.ReducedExtension" />
      <Member Id="F:Microsoft.CodeAnalysis.MethodKind.SharedConstructor" />
      <Member Id="F:Microsoft.CodeAnalysis.MethodKind.StaticConstructor" />
      <Member Id="F:Microsoft.CodeAnalysis.MethodKind.UserDefinedOperator" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ModelExtensions" Id="T:Microsoft.CodeAnalysis.ModelExtensions">
      <Member Id="M:Microsoft.CodeAnalysis.ModelExtensions.AnalyzeControlFlow(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.ModelExtensions.AnalyzeControlFlow(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.ModelExtensions.AnalyzeDataFlow(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.ModelExtensions.AnalyzeDataFlow(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.ModelExtensions.GetAliasInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.ModelExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.ModelExtensions.GetMemberGroup(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.ModelExtensions.GetSpeculativeAliasInfo(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SpeculativeBindingOption)" />
      <Member Id="M:Microsoft.CodeAnalysis.ModelExtensions.GetSpeculativeSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SpeculativeBindingOption)" />
      <Member Id="M:Microsoft.CodeAnalysis.ModelExtensions.GetSpeculativeTypeInfo(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SpeculativeBindingOption)" />
      <Member Id="M:Microsoft.CodeAnalysis.ModelExtensions.GetSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.ModelExtensions.GetTypeInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ModuleMetadata" Id="T:Microsoft.CodeAnalysis.ModuleMetadata">
      <Member Id="M:Microsoft.CodeAnalysis.ModuleMetadata.CommonCopy" />
      <Member Id="M:Microsoft.CodeAnalysis.ModuleMetadata.CreateFromFile(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.ModuleMetadata.CreateFromImage(System.Collections.Generic.IEnumerable{System.Byte})" />
      <Member Id="M:Microsoft.CodeAnalysis.ModuleMetadata.CreateFromImage(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <Member Id="M:Microsoft.CodeAnalysis.ModuleMetadata.CreateFromImage(System.IntPtr,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.ModuleMetadata.CreateFromMetadata(System.IntPtr,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.ModuleMetadata.CreateFromStream(System.IO.Stream,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.ModuleMetadata.CreateFromStream(System.IO.Stream,System.Reflection.PortableExecutable.PEStreamOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.ModuleMetadata.Dispose" />
      <Member Id="M:Microsoft.CodeAnalysis.ModuleMetadata.GetMetadataReader" />
      <Member Id="M:Microsoft.CodeAnalysis.ModuleMetadata.GetModuleNames" />
      <Member Id="M:Microsoft.CodeAnalysis.ModuleMetadata.GetModuleVersionId" />
      <Member Id="M:Microsoft.CodeAnalysis.ModuleMetadata.GetReference(Microsoft.CodeAnalysis.DocumentationProvider,System.String,System.String)" />
      <Member Id="P:Microsoft.CodeAnalysis.ModuleMetadata.IsDisposed" />
      <Member Id="P:Microsoft.CodeAnalysis.ModuleMetadata.Kind" />
      <Member Id="P:Microsoft.CodeAnalysis.ModuleMetadata.Name" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.NamespaceKind" Id="T:Microsoft.CodeAnalysis.NamespaceKind">
      <Member Id="F:Microsoft.CodeAnalysis.NamespaceKind.Assembly" />
      <Member Id="F:Microsoft.CodeAnalysis.NamespaceKind.Compilation" />
      <Member Id="F:Microsoft.CodeAnalysis.NamespaceKind.Module" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.OperationKind" Id="T:Microsoft.CodeAnalysis.OperationKind">
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.AddressOf" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.AnonymousFunction" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.AnonymousObjectCreation" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Argument" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.ArrayCreation" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.ArrayElementReference" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.ArrayInitializer" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Await" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.BinaryOperator" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Block" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Branch" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.CaseClause" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.CatchClause" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.CaughtException" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Coalesce" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.CollectionElementInitializer" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.CompoundAssignment" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Conditional" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.ConditionalAccess" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.ConditionalAccessInstance" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.ConstantPattern" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.ConstructorBodyOperation" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Conversion" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.DeclarationExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.DeclarationPattern" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.DeconstructionAssignment" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Decrement" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.DefaultValue" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.DelegateCreation" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Discard" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.DynamicIndexerAccess" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.DynamicInvocation" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.DynamicMemberReference" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.DynamicObjectCreation" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Empty" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.End" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.EventAssignment" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.EventReference" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.ExpressionStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.FieldInitializer" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.FieldReference" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.FlowAnonymousFunction" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.FlowCapture" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.FlowCaptureReference" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Increment" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.InstanceReference" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.InterpolatedString" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.InterpolatedStringText" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Interpolation" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Invalid" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Invocation" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.IsNull" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.IsPattern" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.IsType" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Labeled" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Literal" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.LocalFunction" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.LocalReference" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Lock" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Loop" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.MemberInitializer" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.MethodBodyOperation" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.MethodReference" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.NameOf" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.None" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.ObjectCreation" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.ObjectOrCollectionInitializer" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.OmittedArgument" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.ParameterInitializer" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.ParameterReference" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Parenthesized" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.PropertyInitializer" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.PropertyReference" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.RaiseEvent" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Return" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.SimpleAssignment" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.SizeOf" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.StaticLocalInitializationSemaphore" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Stop" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Switch" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.SwitchCase" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Throw" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.TranslatedQuery" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Try" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Tuple" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.TupleBinaryOperator" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.TypeOf" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.TypeParameterObjectCreation" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.UnaryOperator" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.Using" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.VariableDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.VariableDeclarationGroup" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.VariableDeclarator" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.VariableInitializer" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.YieldBreak" />
      <Member Id="F:Microsoft.CodeAnalysis.OperationKind.YieldReturn" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.OptimizationLevel" Id="T:Microsoft.CodeAnalysis.OptimizationLevel">
      <Member Id="F:Microsoft.CodeAnalysis.OptimizationLevel.Debug" />
      <Member Id="F:Microsoft.CodeAnalysis.OptimizationLevel.Release" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Optional`1" Id="T:Microsoft.CodeAnalysis.Optional`1">
      <Member Id="M:Microsoft.CodeAnalysis.Optional`1.#ctor(`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Optional`1.op_Implicit(`0)~Microsoft.CodeAnalysis.Optional{`0}" />
      <Member Id="M:Microsoft.CodeAnalysis.Optional`1.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.Optional`1.HasValue" />
      <Member Id="P:Microsoft.CodeAnalysis.Optional`1.Value" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.OutputKind" Id="T:Microsoft.CodeAnalysis.OutputKind">
      <Member Id="F:Microsoft.CodeAnalysis.OutputKind.ConsoleApplication" />
      <Member Id="F:Microsoft.CodeAnalysis.OutputKind.DynamicallyLinkedLibrary" />
      <Member Id="F:Microsoft.CodeAnalysis.OutputKind.NetModule" />
      <Member Id="F:Microsoft.CodeAnalysis.OutputKind.WindowsApplication" />
      <Member Id="F:Microsoft.CodeAnalysis.OutputKind.WindowsRuntimeApplication" />
      <Member Id="F:Microsoft.CodeAnalysis.OutputKind.WindowsRuntimeMetadata" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ParseOptions" Id="T:Microsoft.CodeAnalysis.ParseOptions">
      <Member Id="M:Microsoft.CodeAnalysis.ParseOptions.CommonWithDocumentationMode(Microsoft.CodeAnalysis.DocumentationMode)" />
      <Member Id="M:Microsoft.CodeAnalysis.ParseOptions.CommonWithFeatures(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <Member Id="M:Microsoft.CodeAnalysis.ParseOptions.CommonWithKind(Microsoft.CodeAnalysis.SourceCodeKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.ParseOptions.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.ParseOptions.EqualsHelper(Microsoft.CodeAnalysis.ParseOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.ParseOptions.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.ParseOptions.GetHashCodeHelper" />
      <Member Id="M:Microsoft.CodeAnalysis.ParseOptions.op_Equality(Microsoft.CodeAnalysis.ParseOptions,Microsoft.CodeAnalysis.ParseOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.ParseOptions.op_Inequality(Microsoft.CodeAnalysis.ParseOptions,Microsoft.CodeAnalysis.ParseOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.ParseOptions.WithDocumentationMode(Microsoft.CodeAnalysis.DocumentationMode)" />
      <Member Id="M:Microsoft.CodeAnalysis.ParseOptions.WithFeatures(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <Member Id="M:Microsoft.CodeAnalysis.ParseOptions.WithKind(Microsoft.CodeAnalysis.SourceCodeKind)" />
      <Member Id="P:Microsoft.CodeAnalysis.ParseOptions.DocumentationMode" />
      <Member Id="P:Microsoft.CodeAnalysis.ParseOptions.Errors" />
      <Member Id="P:Microsoft.CodeAnalysis.ParseOptions.Features" />
      <Member Id="P:Microsoft.CodeAnalysis.ParseOptions.Kind" />
      <Member Id="P:Microsoft.CodeAnalysis.ParseOptions.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.ParseOptions.PreprocessorSymbolNames" />
      <Member Id="P:Microsoft.CodeAnalysis.ParseOptions.SpecifiedKind" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Platform" Id="T:Microsoft.CodeAnalysis.Platform">
      <Member Id="F:Microsoft.CodeAnalysis.Platform.AnyCpu" />
      <Member Id="F:Microsoft.CodeAnalysis.Platform.AnyCpu32BitPreferred" />
      <Member Id="F:Microsoft.CodeAnalysis.Platform.Arm" />
      <Member Id="F:Microsoft.CodeAnalysis.Platform.Arm64" />
      <Member Id="F:Microsoft.CodeAnalysis.Platform.Itanium" />
      <Member Id="F:Microsoft.CodeAnalysis.Platform.X64" />
      <Member Id="F:Microsoft.CodeAnalysis.Platform.X86" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.PortableExecutableReference" Id="T:Microsoft.CodeAnalysis.PortableExecutableReference">
      <Member Id="M:Microsoft.CodeAnalysis.PortableExecutableReference.#ctor(Microsoft.CodeAnalysis.MetadataReferenceProperties,System.String,Microsoft.CodeAnalysis.DocumentationProvider)" />
      <Member Id="M:Microsoft.CodeAnalysis.PortableExecutableReference.CreateDocumentationProvider" />
      <Member Id="M:Microsoft.CodeAnalysis.PortableExecutableReference.GetMetadata" />
      <Member Id="M:Microsoft.CodeAnalysis.PortableExecutableReference.GetMetadataId" />
      <Member Id="M:Microsoft.CodeAnalysis.PortableExecutableReference.GetMetadataImpl" />
      <Member Id="M:Microsoft.CodeAnalysis.PortableExecutableReference.WithAliases(System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.PortableExecutableReference.WithAliases(System.Collections.Immutable.ImmutableArray{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.PortableExecutableReference.WithEmbedInteropTypes(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.PortableExecutableReference.WithProperties(Microsoft.CodeAnalysis.MetadataReferenceProperties)" />
      <Member Id="M:Microsoft.CodeAnalysis.PortableExecutableReference.WithPropertiesImpl(Microsoft.CodeAnalysis.MetadataReferenceProperties)" />
      <Member Id="P:Microsoft.CodeAnalysis.PortableExecutableReference.Display" />
      <Member Id="P:Microsoft.CodeAnalysis.PortableExecutableReference.FilePath" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.PreprocessingSymbolInfo" Id="T:Microsoft.CodeAnalysis.PreprocessingSymbolInfo">
      <Member Id="M:Microsoft.CodeAnalysis.PreprocessingSymbolInfo.Equals(Microsoft.CodeAnalysis.PreprocessingSymbolInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.PreprocessingSymbolInfo.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.PreprocessingSymbolInfo.GetHashCode" />
      <Member Id="P:Microsoft.CodeAnalysis.PreprocessingSymbolInfo.IsDefined" />
      <Member Id="P:Microsoft.CodeAnalysis.PreprocessingSymbolInfo.Symbol" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.PreservationMode" Id="T:Microsoft.CodeAnalysis.PreservationMode">
      <Member Id="F:Microsoft.CodeAnalysis.PreservationMode.PreserveIdentity" />
      <Member Id="F:Microsoft.CodeAnalysis.PreservationMode.PreserveValue" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Project" Id="T:Microsoft.CodeAnalysis.Project">
      <Member Id="M:Microsoft.CodeAnalysis.Project.AddAdditionalDocument(System.String,Microsoft.CodeAnalysis.Text.SourceText,System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.AddAdditionalDocument(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.AddAnalyzerReference(Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.AddAnalyzerReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.AddDocument(System.String,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.AddDocument(System.String,Microsoft.CodeAnalysis.Text.SourceText,System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.AddDocument(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.AddMetadataReference(Microsoft.CodeAnalysis.MetadataReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.AddMetadataReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.AddProjectReference(Microsoft.CodeAnalysis.ProjectReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.AddProjectReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.ContainsAdditionalDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.ContainsDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.GetAdditionalDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.GetChanges(Microsoft.CodeAnalysis.Project)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.GetCompilationAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.GetDependentSemanticVersionAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.GetDependentVersionAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.GetDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.GetDocument(Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.GetDocumentId(Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.GetLatestDocumentVersionAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.GetSemanticVersionAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.RemoveAdditionalDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.RemoveAnalyzerReference(Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.RemoveDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.RemoveMetadataReference(Microsoft.CodeAnalysis.MetadataReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.RemoveProjectReference(Microsoft.CodeAnalysis.ProjectReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.TryGetCompilation(Microsoft.CodeAnalysis.Compilation@)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.WithAnalyzerReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.WithAssemblyName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.WithCompilationOptions(Microsoft.CodeAnalysis.CompilationOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.WithMetadataReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.WithParseOptions(Microsoft.CodeAnalysis.ParseOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.Project.WithProjectReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectReference})" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.AdditionalDocumentIds" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.AdditionalDocuments" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.AllProjectReferences" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.AnalyzerOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.AnalyzerReferences" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.AssemblyName" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.CompilationOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.DocumentIds" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.Documents" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.FilePath" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.HasDocuments" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.Id" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.IsSubmission" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.LanguageServices" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.MetadataReferences" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.OutputFilePath" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.OutputRefFilePath" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.ParseOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.ProjectReferences" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.Solution" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.SupportsCompilation" />
      <Member Id="P:Microsoft.CodeAnalysis.Project.Version" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ProjectChanges" Id="T:Microsoft.CodeAnalysis.ProjectChanges">
      <Member Id="M:Microsoft.CodeAnalysis.ProjectChanges.GetAddedAdditionalDocuments" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectChanges.GetAddedAnalyzerReferences" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectChanges.GetAddedDocuments" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectChanges.GetAddedMetadataReferences" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectChanges.GetAddedProjectReferences" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectChanges.GetChangedAdditionalDocuments" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectChanges.GetChangedDocuments" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectChanges.GetChangedDocuments(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectChanges.GetRemovedAdditionalDocuments" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectChanges.GetRemovedAnalyzerReferences" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectChanges.GetRemovedDocuments" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectChanges.GetRemovedMetadataReferences" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectChanges.GetRemovedProjectReferences" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectChanges.NewProject" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectChanges.OldProject" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectChanges.ProjectId" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ProjectDependencyGraph" Id="T:Microsoft.CodeAnalysis.ProjectDependencyGraph">
      <Member Id="M:Microsoft.CodeAnalysis.ProjectDependencyGraph.GetDependencySets(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatDirectlyDependOnThisProject(Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatThisProjectDirectlyDependsOn(Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatThisProjectTransitivelyDependsOn(Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectDependencyGraph.GetProjectsThatTransitivelyDependOnThisProject(Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectDependencyGraph.GetTopologicallySortedProjects(System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ProjectDiagnostic" Id="T:Microsoft.CodeAnalysis.ProjectDiagnostic">
      <Member Id="M:Microsoft.CodeAnalysis.ProjectDiagnostic.#ctor(Microsoft.CodeAnalysis.WorkspaceDiagnosticKind,System.String,Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectDiagnostic.ProjectId" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ProjectId" Id="T:Microsoft.CodeAnalysis.ProjectId">
      <Member Id="M:Microsoft.CodeAnalysis.ProjectId.CreateFromSerialized(System.Guid,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectId.CreateNewId(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectId.Equals(Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectId.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectId.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectId.op_Equality(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectId.op_Inequality(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectId.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectId.Id" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ProjectInfo" Id="T:Microsoft.CodeAnalysis.ProjectInfo">
      <Member Id="M:Microsoft.CodeAnalysis.ProjectInfo.Create(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.VersionStamp,System.String,System.String,System.String,System.String,System.String,Microsoft.CodeAnalysis.CompilationOptions,Microsoft.CodeAnalysis.ParseOptions,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectReference},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo},System.Boolean,System.Type)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectInfo.Create(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.VersionStamp,System.String,System.String,System.String,System.String,System.String,Microsoft.CodeAnalysis.CompilationOptions,Microsoft.CodeAnalysis.ParseOptions,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectReference},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo},System.Boolean,System.Type,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectInfo.WithAdditionalDocuments(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo})" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectInfo.WithAnalyzerReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectInfo.WithAssemblyName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectInfo.WithCompilationOptions(Microsoft.CodeAnalysis.CompilationOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectInfo.WithDocuments(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentInfo})" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectInfo.WithFilePath(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectInfo.WithMetadataReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectInfo.WithName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectInfo.WithOutputFilePath(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectInfo.WithOutputRefFilePath(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectInfo.WithParseOptions(Microsoft.CodeAnalysis.ParseOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectInfo.WithProjectReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectInfo.WithVersion(Microsoft.CodeAnalysis.VersionStamp)" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectInfo.AdditionalDocuments" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectInfo.AnalyzerReferences" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectInfo.AssemblyName" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectInfo.CompilationOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectInfo.Documents" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectInfo.FilePath" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectInfo.HostObjectType" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectInfo.Id" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectInfo.IsSubmission" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectInfo.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectInfo.MetadataReferences" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectInfo.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectInfo.OutputFilePath" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectInfo.OutputRefFilePath" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectInfo.ParseOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectInfo.ProjectReferences" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectInfo.Version" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ProjectReference" Id="T:Microsoft.CodeAnalysis.ProjectReference">
      <Member Id="M:Microsoft.CodeAnalysis.ProjectReference.#ctor(Microsoft.CodeAnalysis.ProjectId,System.Collections.Immutable.ImmutableArray{System.String},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectReference.Equals(Microsoft.CodeAnalysis.ProjectReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectReference.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectReference.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectReference.op_Equality(Microsoft.CodeAnalysis.ProjectReference,Microsoft.CodeAnalysis.ProjectReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.ProjectReference.op_Inequality(Microsoft.CodeAnalysis.ProjectReference,Microsoft.CodeAnalysis.ProjectReference)" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectReference.Aliases" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectReference.EmbedInteropTypes" />
      <Member Id="P:Microsoft.CodeAnalysis.ProjectReference.ProjectId" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.RefKind" Id="T:Microsoft.CodeAnalysis.RefKind">
      <Member Id="F:Microsoft.CodeAnalysis.RefKind.In" />
      <Member Id="F:Microsoft.CodeAnalysis.RefKind.None" />
      <Member Id="F:Microsoft.CodeAnalysis.RefKind.Out" />
      <Member Id="F:Microsoft.CodeAnalysis.RefKind.Ref" />
      <Member Id="F:Microsoft.CodeAnalysis.RefKind.RefReadOnly" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ReportDiagnostic" Id="T:Microsoft.CodeAnalysis.ReportDiagnostic">
      <Member Id="F:Microsoft.CodeAnalysis.ReportDiagnostic.Default" />
      <Member Id="F:Microsoft.CodeAnalysis.ReportDiagnostic.Error" />
      <Member Id="F:Microsoft.CodeAnalysis.ReportDiagnostic.Hidden" />
      <Member Id="F:Microsoft.CodeAnalysis.ReportDiagnostic.Info" />
      <Member Id="F:Microsoft.CodeAnalysis.ReportDiagnostic.Suppress" />
      <Member Id="F:Microsoft.CodeAnalysis.ReportDiagnostic.Warn" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ResourceDescription" Id="T:Microsoft.CodeAnalysis.ResourceDescription">
      <Member Id="M:Microsoft.CodeAnalysis.ResourceDescription.#ctor(System.String,System.Func{System.IO.Stream},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.ResourceDescription.#ctor(System.String,System.String,System.Func{System.IO.Stream},System.Boolean)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.RuleSet" Id="T:Microsoft.CodeAnalysis.RuleSet">
      <Member Id="M:Microsoft.CodeAnalysis.RuleSet.#ctor(System.String,Microsoft.CodeAnalysis.ReportDiagnostic,System.Collections.Immutable.ImmutableDictionary{System.String,Microsoft.CodeAnalysis.ReportDiagnostic},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.RuleSetInclude})" />
      <Member Id="M:Microsoft.CodeAnalysis.RuleSet.GetDiagnosticOptionsFromRulesetFile(System.String,System.Collections.Generic.Dictionary{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}@)" />
      <Member Id="M:Microsoft.CodeAnalysis.RuleSet.GetEffectiveIncludesFromFile(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.RuleSet.LoadEffectiveRuleSetFromFile(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.RuleSet.WithEffectiveAction(Microsoft.CodeAnalysis.ReportDiagnostic)" />
      <Member Id="P:Microsoft.CodeAnalysis.RuleSet.FilePath" />
      <Member Id="P:Microsoft.CodeAnalysis.RuleSet.GeneralDiagnosticOption" />
      <Member Id="P:Microsoft.CodeAnalysis.RuleSet.Includes" />
      <Member Id="P:Microsoft.CodeAnalysis.RuleSet.SpecificDiagnosticOptions" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.RuleSetInclude" Id="T:Microsoft.CodeAnalysis.RuleSetInclude">
      <Member Id="M:Microsoft.CodeAnalysis.RuleSetInclude.#ctor(System.String,Microsoft.CodeAnalysis.ReportDiagnostic)" />
      <Member Id="M:Microsoft.CodeAnalysis.RuleSetInclude.LoadRuleSet(Microsoft.CodeAnalysis.RuleSet)" />
      <Member Id="P:Microsoft.CodeAnalysis.RuleSetInclude.Action" />
      <Member Id="P:Microsoft.CodeAnalysis.RuleSetInclude.IncludePath" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.ScriptCompilationInfo" Id="T:Microsoft.CodeAnalysis.ScriptCompilationInfo">
      <Member Id="M:Microsoft.CodeAnalysis.ScriptCompilationInfo.WithPreviousScriptCompilation(Microsoft.CodeAnalysis.Compilation)" />
      <Member Id="P:Microsoft.CodeAnalysis.ScriptCompilationInfo.GlobalsType" />
      <Member Id="P:Microsoft.CodeAnalysis.ScriptCompilationInfo.PreviousScriptCompilation" />
      <Member Id="P:Microsoft.CodeAnalysis.ScriptCompilationInfo.ReturnType" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SemanticModel" Id="T:Microsoft.CodeAnalysis.SemanticModel">
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.AnalyzeControlFlowCore(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.AnalyzeControlFlowCore(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.AnalyzeDataFlowCore(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.AnalyzeDataFlowCore(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetAliasInfoCore(Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetConstantValue(Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetConstantValueCore(Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetDeclarationDiagnostics(System.Nullable{Microsoft.CodeAnalysis.Text.TextSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetDeclaredSymbolCore(Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetDeclaredSymbolsCore(Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetDiagnostics(System.Nullable{Microsoft.CodeAnalysis.Text.TextSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetEnclosingSymbol(System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetEnclosingSymbolCore(System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetMemberGroupCore(Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetMethodBodyDiagnostics(System.Nullable{Microsoft.CodeAnalysis.Text.TextSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetOperation(Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetOperationCore(Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetPreprocessingSymbolInfo(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetPreprocessingSymbolInfoCore(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetSpeculativeAliasInfoCore(System.Int32,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SpeculativeBindingOption)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetSpeculativeSymbolInfoCore(System.Int32,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SpeculativeBindingOption)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetSpeculativeTypeInfoCore(System.Int32,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SpeculativeBindingOption)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetSymbolInfoCore(Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetSyntaxDiagnostics(System.Nullable{Microsoft.CodeAnalysis.Text.TextSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetTopmostNodeForDiagnosticAnalysis(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.GetTypeInfoCore(Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.IsAccessible(System.Int32,Microsoft.CodeAnalysis.ISymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.IsAccessibleCore(System.Int32,Microsoft.CodeAnalysis.ISymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.IsEventUsableAsField(System.Int32,Microsoft.CodeAnalysis.IEventSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.IsEventUsableAsFieldCore(System.Int32,Microsoft.CodeAnalysis.IEventSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.LookupBaseMembers(System.Int32,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.LookupBaseMembersCore(System.Int32,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.LookupLabels(System.Int32,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.LookupLabelsCore(System.Int32,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.LookupNamespacesAndTypes(System.Int32,Microsoft.CodeAnalysis.INamespaceOrTypeSymbol,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.LookupNamespacesAndTypesCore(System.Int32,Microsoft.CodeAnalysis.INamespaceOrTypeSymbol,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.LookupStaticMembers(System.Int32,Microsoft.CodeAnalysis.INamespaceOrTypeSymbol,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.LookupStaticMembersCore(System.Int32,Microsoft.CodeAnalysis.INamespaceOrTypeSymbol,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.LookupSymbols(System.Int32,Microsoft.CodeAnalysis.INamespaceOrTypeSymbol,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SemanticModel.LookupSymbolsCore(System.Int32,Microsoft.CodeAnalysis.INamespaceOrTypeSymbol,System.String,System.Boolean)" />
      <Member Id="P:Microsoft.CodeAnalysis.SemanticModel.Compilation" />
      <Member Id="P:Microsoft.CodeAnalysis.SemanticModel.CompilationCore" />
      <Member Id="P:Microsoft.CodeAnalysis.SemanticModel.IgnoresAccessibility" />
      <Member Id="P:Microsoft.CodeAnalysis.SemanticModel.IsSpeculativeSemanticModel" />
      <Member Id="P:Microsoft.CodeAnalysis.SemanticModel.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.SemanticModel.OriginalPositionForSpeculation" />
      <Member Id="P:Microsoft.CodeAnalysis.SemanticModel.ParentModel" />
      <Member Id="P:Microsoft.CodeAnalysis.SemanticModel.ParentModelCore" />
      <Member Id="P:Microsoft.CodeAnalysis.SemanticModel.RootCore" />
      <Member Id="P:Microsoft.CodeAnalysis.SemanticModel.SyntaxTree" />
      <Member Id="P:Microsoft.CodeAnalysis.SemanticModel.SyntaxTreeCore" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SeparatedSyntaxList`1" Id="T:Microsoft.CodeAnalysis.SeparatedSyntaxList`1">
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Add(`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Any" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Contains(`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Equals(Microsoft.CodeAnalysis.SeparatedSyntaxList{`0})" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.First" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.FirstOrDefault" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.GetSeparator(System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.GetSeparators" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.GetWithSeparators" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.IndexOf(`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.IndexOf(System.Func{`0,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Insert(System.Int32,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Last" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.LastIndexOf(`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.LastIndexOf(System.Func{`0,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.LastOrDefault" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.op_Equality(Microsoft.CodeAnalysis.SeparatedSyntaxList{`0},Microsoft.CodeAnalysis.SeparatedSyntaxList{`0})" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.op_Implicit(Microsoft.CodeAnalysis.SeparatedSyntaxList{`0})~Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.SyntaxNode}" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.op_Implicit(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.SyntaxNode})~Microsoft.CodeAnalysis.SeparatedSyntaxList{`0}" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.op_Inequality(Microsoft.CodeAnalysis.SeparatedSyntaxList{`0},Microsoft.CodeAnalysis.SeparatedSyntaxList{`0})" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Remove(`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.RemoveAt(System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Replace(`0,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.ReplaceRange(`0,System.Collections.Generic.IEnumerable{`0})" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.ReplaceSeparator(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.System#Collections#Generic#IEnumerable&lt;TNode&gt;#GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.ToFullString" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Count" />
      <Member Id="P:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.FullSpan" />
      <Member Id="P:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Item(System.Int32)" />
      <Member Id="P:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.SeparatorCount" />
      <Member Id="P:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Span" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SeparatedSyntaxList`1/Enumerator" Id="T:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Enumerator">
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Enumerator.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Enumerator.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Enumerator.MoveNext" />
      <Member Id="M:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Enumerator.Reset" />
      <Member Id="P:Microsoft.CodeAnalysis.SeparatedSyntaxList`1.Enumerator.Current" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Solution" Id="T:Microsoft.CodeAnalysis.Solution">
      <Member Id="M:Microsoft.CodeAnalysis.Solution.AddAdditionalDocument(Microsoft.CodeAnalysis.DocumentId,System.String,Microsoft.CodeAnalysis.Text.SourceText,System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.AddAdditionalDocument(Microsoft.CodeAnalysis.DocumentId,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.AddAdditionalDocument(Microsoft.CodeAnalysis.DocumentInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.AddAnalyzerReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.AddAnalyzerReferences(Microsoft.CodeAnalysis.ProjectId,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.AddDocument(Microsoft.CodeAnalysis.DocumentId,System.String,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean,Microsoft.CodeAnalysis.PreservationMode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.AddDocument(Microsoft.CodeAnalysis.DocumentId,System.String,Microsoft.CodeAnalysis.Text.SourceText,System.Collections.Generic.IEnumerable{System.String},System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.AddDocument(Microsoft.CodeAnalysis.DocumentId,System.String,Microsoft.CodeAnalysis.TextLoader,System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.AddDocument(Microsoft.CodeAnalysis.DocumentId,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.AddDocument(Microsoft.CodeAnalysis.DocumentInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.AddMetadataReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.AddMetadataReferences(Microsoft.CodeAnalysis.ProjectId,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.AddProject(Microsoft.CodeAnalysis.ProjectId,System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.AddProject(Microsoft.CodeAnalysis.ProjectInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.AddProject(System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.AddProjectReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.AddProjectReferences(Microsoft.CodeAnalysis.ProjectId,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.ContainsAdditionalDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.ContainsDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.ContainsProject(Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.GetAdditionalDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.GetChanges(Microsoft.CodeAnalysis.Solution)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.GetDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.GetDocument(Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.GetDocumentId(Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.GetDocumentId(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.GetDocumentIdsWithFilePath(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.GetIsolatedSolution" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.GetLatestProjectVersion" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.GetProject(Microsoft.CodeAnalysis.IAssemblySymbol,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.GetProject(Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.GetProjectDependencyGraph" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.RemoveAdditionalDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.RemoveAnalyzerReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.RemoveDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.RemoveMetadataReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.RemoveProject(Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.RemoveProjectReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithAdditionalDocumentText(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.PreservationMode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithAdditionalDocumentText(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextAndVersion,Microsoft.CodeAnalysis.PreservationMode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithAdditionalDocumentTextLoader(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader,Microsoft.CodeAnalysis.PreservationMode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithDocumentFilePath(Microsoft.CodeAnalysis.DocumentId,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithDocumentFolders(Microsoft.CodeAnalysis.DocumentId,System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithDocumentName(Microsoft.CodeAnalysis.DocumentId,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithDocumentSourceCodeKind(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.SourceCodeKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithDocumentSyntaxRoot(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.PreservationMode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithDocumentText(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.PreservationMode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithDocumentText(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextAndVersion,Microsoft.CodeAnalysis.PreservationMode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithDocumentText(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.DocumentId},Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.PreservationMode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithDocumentTextLoader(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader,Microsoft.CodeAnalysis.PreservationMode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithProjectAnalyzerReferences(Microsoft.CodeAnalysis.ProjectId,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithProjectAssemblyName(Microsoft.CodeAnalysis.ProjectId,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithProjectCompilationOptions(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.CompilationOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithProjectFilePath(Microsoft.CodeAnalysis.ProjectId,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithProjectMetadataReferences(Microsoft.CodeAnalysis.ProjectId,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithProjectName(Microsoft.CodeAnalysis.ProjectId,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithProjectOutputFilePath(Microsoft.CodeAnalysis.ProjectId,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithProjectOutputRefFilePath(Microsoft.CodeAnalysis.ProjectId,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithProjectParseOptions(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ParseOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.Solution.WithProjectReferences(Microsoft.CodeAnalysis.ProjectId,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectReference})" />
      <Member Id="P:Microsoft.CodeAnalysis.Solution.FilePath" />
      <Member Id="P:Microsoft.CodeAnalysis.Solution.Id" />
      <Member Id="P:Microsoft.CodeAnalysis.Solution.Options" />
      <Member Id="P:Microsoft.CodeAnalysis.Solution.ProjectIds" />
      <Member Id="P:Microsoft.CodeAnalysis.Solution.Projects" />
      <Member Id="P:Microsoft.CodeAnalysis.Solution.Version" />
      <Member Id="P:Microsoft.CodeAnalysis.Solution.Workspace" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SolutionChanges" Id="T:Microsoft.CodeAnalysis.SolutionChanges">
      <Member Id="M:Microsoft.CodeAnalysis.SolutionChanges.GetAddedProjects" />
      <Member Id="M:Microsoft.CodeAnalysis.SolutionChanges.GetProjectChanges" />
      <Member Id="M:Microsoft.CodeAnalysis.SolutionChanges.GetRemovedProjects" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SolutionId" Id="T:Microsoft.CodeAnalysis.SolutionId">
      <Member Id="M:Microsoft.CodeAnalysis.SolutionId.CreateFromSerialized(System.Guid,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SolutionId.CreateNewId(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SolutionId.Equals(Microsoft.CodeAnalysis.SolutionId)" />
      <Member Id="M:Microsoft.CodeAnalysis.SolutionId.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.SolutionId.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.SolutionId.op_Equality(Microsoft.CodeAnalysis.SolutionId,Microsoft.CodeAnalysis.SolutionId)" />
      <Member Id="M:Microsoft.CodeAnalysis.SolutionId.op_Inequality(Microsoft.CodeAnalysis.SolutionId,Microsoft.CodeAnalysis.SolutionId)" />
      <Member Id="P:Microsoft.CodeAnalysis.SolutionId.Id" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SolutionInfo" Id="T:Microsoft.CodeAnalysis.SolutionInfo">
      <Member Id="M:Microsoft.CodeAnalysis.SolutionInfo.Create(Microsoft.CodeAnalysis.SolutionId,Microsoft.CodeAnalysis.VersionStamp,System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectInfo})" />
      <Member Id="P:Microsoft.CodeAnalysis.SolutionInfo.FilePath" />
      <Member Id="P:Microsoft.CodeAnalysis.SolutionInfo.Id" />
      <Member Id="P:Microsoft.CodeAnalysis.SolutionInfo.Projects" />
      <Member Id="P:Microsoft.CodeAnalysis.SolutionInfo.Version" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SourceCodeKind" Id="T:Microsoft.CodeAnalysis.SourceCodeKind">
      <Member Id="F:Microsoft.CodeAnalysis.SourceCodeKind.Interactive" />
      <Member Id="F:Microsoft.CodeAnalysis.SourceCodeKind.Regular" />
      <Member Id="F:Microsoft.CodeAnalysis.SourceCodeKind.Script" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SourceFileResolver" Id="T:Microsoft.CodeAnalysis.SourceFileResolver">
      <Member Id="M:Microsoft.CodeAnalysis.SourceFileResolver.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SourceFileResolver.#ctor(System.Collections.Immutable.ImmutableArray{System.String},System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SourceFileResolver.#ctor(System.Collections.Immutable.ImmutableArray{System.String},System.String,System.Collections.Immutable.ImmutableArray{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <Member Id="M:Microsoft.CodeAnalysis.SourceFileResolver.Equals(Microsoft.CodeAnalysis.SourceFileResolver)" />
      <Member Id="M:Microsoft.CodeAnalysis.SourceFileResolver.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.SourceFileResolver.FileExists(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SourceFileResolver.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.SourceFileResolver.NormalizePath(System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SourceFileResolver.OpenRead(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SourceFileResolver.ResolveReference(System.String,System.String)" />
      <Member Id="P:Microsoft.CodeAnalysis.SourceFileResolver.BaseDirectory" />
      <Member Id="P:Microsoft.CodeAnalysis.SourceFileResolver.Default" />
      <Member Id="P:Microsoft.CodeAnalysis.SourceFileResolver.PathMap" />
      <Member Id="P:Microsoft.CodeAnalysis.SourceFileResolver.SearchPaths" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SourceReferenceResolver" Id="T:Microsoft.CodeAnalysis.SourceReferenceResolver">
      <Member Id="M:Microsoft.CodeAnalysis.SourceReferenceResolver.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.SourceReferenceResolver.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.SourceReferenceResolver.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.SourceReferenceResolver.NormalizePath(System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SourceReferenceResolver.OpenRead(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SourceReferenceResolver.ReadText(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SourceReferenceResolver.ResolveReference(System.String,System.String)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SpecialType" Id="T:Microsoft.CodeAnalysis.SpecialType">
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.Count" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.None" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_ArgIterator" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Array" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_AsyncCallback" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Boolean" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Byte" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Char" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Collections_Generic_ICollection_T" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Collections_Generic_IEnumerable_T" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Collections_Generic_IEnumerator_T" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Collections_Generic_IList_T" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Collections_Generic_IReadOnlyCollection_T" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Collections_Generic_IReadOnlyList_T" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Collections_IEnumerable" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Collections_IEnumerator" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_DateTime" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Decimal" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Delegate" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Double" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Enum" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_IAsyncResult" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_IDisposable" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Int16" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Int32" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Int64" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_IntPtr" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_MulticastDelegate" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Nullable_T" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Object" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Runtime_CompilerServices_IsVolatile" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_RuntimeArgumentHandle" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_RuntimeFieldHandle" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_RuntimeMethodHandle" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_RuntimeTypeHandle" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_SByte" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Single" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_String" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_TypedReference" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_UInt16" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_UInt32" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_UInt64" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_UIntPtr" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_ValueType" />
      <Member Id="F:Microsoft.CodeAnalysis.SpecialType.System_Void" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SpeculativeBindingOption" Id="T:Microsoft.CodeAnalysis.SpeculativeBindingOption">
      <Member Id="F:Microsoft.CodeAnalysis.SpeculativeBindingOption.BindAsExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.SpeculativeBindingOption.BindAsTypeOrNamespace" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.StrongNameProvider" Id="T:Microsoft.CodeAnalysis.StrongNameProvider">
      <Member Id="M:Microsoft.CodeAnalysis.StrongNameProvider.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.StrongNameProvider.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.StrongNameProvider.GetHashCode" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SubsystemVersion" Id="T:Microsoft.CodeAnalysis.SubsystemVersion">
      <Member Id="M:Microsoft.CodeAnalysis.SubsystemVersion.Create(System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.SubsystemVersion.Equals(Microsoft.CodeAnalysis.SubsystemVersion)" />
      <Member Id="M:Microsoft.CodeAnalysis.SubsystemVersion.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.SubsystemVersion.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.SubsystemVersion.ToString" />
      <Member Id="M:Microsoft.CodeAnalysis.SubsystemVersion.TryParse(System.String,Microsoft.CodeAnalysis.SubsystemVersion@)" />
      <Member Id="P:Microsoft.CodeAnalysis.SubsystemVersion.IsValid" />
      <Member Id="P:Microsoft.CodeAnalysis.SubsystemVersion.Major" />
      <Member Id="P:Microsoft.CodeAnalysis.SubsystemVersion.Minor" />
      <Member Id="P:Microsoft.CodeAnalysis.SubsystemVersion.None" />
      <Member Id="P:Microsoft.CodeAnalysis.SubsystemVersion.Windows2000" />
      <Member Id="P:Microsoft.CodeAnalysis.SubsystemVersion.Windows7" />
      <Member Id="P:Microsoft.CodeAnalysis.SubsystemVersion.Windows8" />
      <Member Id="P:Microsoft.CodeAnalysis.SubsystemVersion.WindowsVista" />
      <Member Id="P:Microsoft.CodeAnalysis.SubsystemVersion.WindowsXP" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SymbolDisplayDelegateStyle" Id="T:Microsoft.CodeAnalysis.SymbolDisplayDelegateStyle">
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayDelegateStyle.NameAndParameters" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayDelegateStyle.NameAndSignature" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayDelegateStyle.NameOnly" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle" Id="T:Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle">
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle.Default" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle.InstanceMethod" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle.StaticMethod" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SymbolDisplayExtensions" Id="T:Microsoft.CodeAnalysis.SymbolDisplayExtensions">
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayExtensions.ToDisplayString(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.SymbolDisplayPart})" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SymbolDisplayFormat" Id="T:Microsoft.CodeAnalysis.SymbolDisplayFormat">
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayFormat.#ctor(Microsoft.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle,Microsoft.CodeAnalysis.SymbolDisplayTypeQualificationStyle,Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions,Microsoft.CodeAnalysis.SymbolDisplayMemberOptions,Microsoft.CodeAnalysis.SymbolDisplayDelegateStyle,Microsoft.CodeAnalysis.SymbolDisplayExtensionMethodStyle,Microsoft.CodeAnalysis.SymbolDisplayParameterOptions,Microsoft.CodeAnalysis.SymbolDisplayPropertyStyle,Microsoft.CodeAnalysis.SymbolDisplayLocalOptions,Microsoft.CodeAnalysis.SymbolDisplayKindOptions,Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayFormat.AddGenericsOptions(Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayFormat.AddKindOptions(Microsoft.CodeAnalysis.SymbolDisplayKindOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayFormat.AddLocalOptions(Microsoft.CodeAnalysis.SymbolDisplayLocalOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayFormat.AddMemberOptions(Microsoft.CodeAnalysis.SymbolDisplayMemberOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayFormat.AddMiscellaneousOptions(Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayFormat.AddParameterOptions(Microsoft.CodeAnalysis.SymbolDisplayParameterOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayFormat.RemoveGenericsOptions(Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayFormat.RemoveKindOptions(Microsoft.CodeAnalysis.SymbolDisplayKindOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayFormat.RemoveLocalOptions(Microsoft.CodeAnalysis.SymbolDisplayLocalOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayFormat.RemoveMemberOptions(Microsoft.CodeAnalysis.SymbolDisplayMemberOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayFormat.RemoveMiscellaneousOptions(Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayFormat.RemoveParameterOptions(Microsoft.CodeAnalysis.SymbolDisplayParameterOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayFormat.WithGenericsOptions(Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayFormat.WithGlobalNamespaceStyle(Microsoft.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayFormat.WithKindOptions(Microsoft.CodeAnalysis.SymbolDisplayKindOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayFormat.WithLocalOptions(Microsoft.CodeAnalysis.SymbolDisplayLocalOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayFormat.WithMemberOptions(Microsoft.CodeAnalysis.SymbolDisplayMemberOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayFormat.WithMiscellaneousOptions(Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayFormat.WithParameterOptions(Microsoft.CodeAnalysis.SymbolDisplayParameterOptions)" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolDisplayFormat.CSharpErrorMessageFormat" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolDisplayFormat.CSharpShortErrorMessageFormat" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolDisplayFormat.DelegateStyle" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolDisplayFormat.ExtensionMethodStyle" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolDisplayFormat.FullyQualifiedFormat" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolDisplayFormat.GenericsOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolDisplayFormat.GlobalNamespaceStyle" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolDisplayFormat.KindOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolDisplayFormat.LocalOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolDisplayFormat.MemberOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolDisplayFormat.MinimallyQualifiedFormat" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolDisplayFormat.MiscellaneousOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolDisplayFormat.ParameterOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolDisplayFormat.PropertyStyle" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolDisplayFormat.TypeQualificationStyle" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolDisplayFormat.VisualBasicErrorMessageFormat" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolDisplayFormat.VisualBasicShortErrorMessageFormat" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions" Id="T:Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions">
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.IncludeTypeConstraints" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.IncludeTypeParameters" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.IncludeVariance" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayGenericsOptions.None" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle" Id="T:Microsoft.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle">
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle.Included" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle.Omitted" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayGlobalNamespaceStyle.OmittedAsContaining" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SymbolDisplayKindOptions" Id="T:Microsoft.CodeAnalysis.SymbolDisplayKindOptions">
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayKindOptions.IncludeMemberKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayKindOptions.IncludeNamespaceKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayKindOptions.IncludeTypeKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayKindOptions.None" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SymbolDisplayLocalOptions" Id="T:Microsoft.CodeAnalysis.SymbolDisplayLocalOptions">
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayLocalOptions.IncludeConstantValue" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayLocalOptions.IncludeRef" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayLocalOptions.IncludeType" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayLocalOptions.None" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SymbolDisplayMemberOptions" Id="T:Microsoft.CodeAnalysis.SymbolDisplayMemberOptions">
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayMemberOptions.IncludeAccessibility" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayMemberOptions.IncludeConstantValue" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayMemberOptions.IncludeContainingType" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayMemberOptions.IncludeExplicitInterface" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayMemberOptions.IncludeModifiers" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayMemberOptions.IncludeParameters" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayMemberOptions.IncludeRef" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayMemberOptions.IncludeType" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayMemberOptions.None" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions" Id="T:Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions">
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.EscapeKeywordIdentifiers" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.ExpandNullable" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.None" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.RemoveAttributeSuffix" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.UseAsterisksInMultiDimensionalArrays" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.UseErrorTypeSymbolName" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayMiscellaneousOptions.UseSpecialTypes" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SymbolDisplayParameterOptions" Id="T:Microsoft.CodeAnalysis.SymbolDisplayParameterOptions">
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayParameterOptions.IncludeDefaultValue" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayParameterOptions.IncludeExtensionThis" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayParameterOptions.IncludeName" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayParameterOptions.IncludeOptionalBrackets" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayParameterOptions.IncludeParamsRefOut" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayParameterOptions.IncludeType" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayParameterOptions.None" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SymbolDisplayPart" Id="T:Microsoft.CodeAnalysis.SymbolDisplayPart">
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayPart.#ctor(Microsoft.CodeAnalysis.SymbolDisplayPartKind,Microsoft.CodeAnalysis.ISymbol,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolDisplayPart.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolDisplayPart.Kind" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolDisplayPart.Symbol" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SymbolDisplayPartKind" Id="T:Microsoft.CodeAnalysis.SymbolDisplayPartKind">
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.AliasName" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.AnonymousTypeIndicator" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.AssemblyName" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.ClassName" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.DelegateName" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.EnumName" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.ErrorTypeName" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.EventName" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.FieldName" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.InterfaceName" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.Keyword" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.LabelName" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.LineBreak" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.LocalName" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.MethodName" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.ModuleName" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.NamespaceName" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.NumericLiteral" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.Operator" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.ParameterName" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.PropertyName" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.Punctuation" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.RangeVariableName" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.Space" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.StringLiteral" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.StructName" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.Text" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPartKind.TypeParameterName" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SymbolDisplayPropertyStyle" Id="T:Microsoft.CodeAnalysis.SymbolDisplayPropertyStyle">
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPropertyStyle.NameOnly" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayPropertyStyle.ShowReadWriteDescriptor" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SymbolDisplayTypeQualificationStyle" Id="T:Microsoft.CodeAnalysis.SymbolDisplayTypeQualificationStyle">
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayTypeQualificationStyle.NameAndContainingTypes" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayTypeQualificationStyle.NameAndContainingTypesAndNamespaces" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolDisplayTypeQualificationStyle.NameOnly" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SymbolFilter" Id="T:Microsoft.CodeAnalysis.SymbolFilter">
      <Member Id="F:Microsoft.CodeAnalysis.SymbolFilter.All" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolFilter.Member" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolFilter.Namespace" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolFilter.None" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolFilter.Type" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolFilter.TypeAndMember" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SymbolInfo" Id="T:Microsoft.CodeAnalysis.SymbolInfo">
      <Member Id="M:Microsoft.CodeAnalysis.SymbolInfo.Equals(Microsoft.CodeAnalysis.SymbolInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolInfo.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolInfo.GetHashCode" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolInfo.CandidateReason" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolInfo.CandidateSymbols" />
      <Member Id="P:Microsoft.CodeAnalysis.SymbolInfo.Symbol" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SymbolKind" Id="T:Microsoft.CodeAnalysis.SymbolKind">
      <Member Id="F:Microsoft.CodeAnalysis.SymbolKind.Alias" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolKind.ArrayType" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolKind.Assembly" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolKind.Discard" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolKind.DynamicType" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolKind.ErrorType" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolKind.Event" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolKind.Field" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolKind.Label" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolKind.Local" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolKind.Method" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolKind.NamedType" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolKind.Namespace" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolKind.NetModule" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolKind.Parameter" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolKind.PointerType" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolKind.Preprocessing" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolKind.Property" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolKind.RangeVariable" />
      <Member Id="F:Microsoft.CodeAnalysis.SymbolKind.TypeParameter" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SymbolVisitor" Id="T:Microsoft.CodeAnalysis.SymbolVisitor">
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor.DefaultVisit(Microsoft.CodeAnalysis.ISymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor.Visit(Microsoft.CodeAnalysis.ISymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor.VisitAlias(Microsoft.CodeAnalysis.IAliasSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor.VisitArrayType(Microsoft.CodeAnalysis.IArrayTypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor.VisitAssembly(Microsoft.CodeAnalysis.IAssemblySymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor.VisitDiscard(Microsoft.CodeAnalysis.IDiscardSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor.VisitDynamicType(Microsoft.CodeAnalysis.IDynamicTypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor.VisitEvent(Microsoft.CodeAnalysis.IEventSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor.VisitField(Microsoft.CodeAnalysis.IFieldSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor.VisitLabel(Microsoft.CodeAnalysis.ILabelSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor.VisitLocal(Microsoft.CodeAnalysis.ILocalSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor.VisitMethod(Microsoft.CodeAnalysis.IMethodSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor.VisitModule(Microsoft.CodeAnalysis.IModuleSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor.VisitNamedType(Microsoft.CodeAnalysis.INamedTypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor.VisitNamespace(Microsoft.CodeAnalysis.INamespaceSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor.VisitParameter(Microsoft.CodeAnalysis.IParameterSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor.VisitPointerType(Microsoft.CodeAnalysis.IPointerTypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor.VisitProperty(Microsoft.CodeAnalysis.IPropertySymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor.VisitRangeVariable(Microsoft.CodeAnalysis.IRangeVariableSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor.VisitTypeParameter(Microsoft.CodeAnalysis.ITypeParameterSymbol)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SymbolVisitor`1" Id="T:Microsoft.CodeAnalysis.SymbolVisitor`1">
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor`1.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor`1.DefaultVisit(Microsoft.CodeAnalysis.ISymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor`1.Visit(Microsoft.CodeAnalysis.ISymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor`1.VisitAlias(Microsoft.CodeAnalysis.IAliasSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor`1.VisitArrayType(Microsoft.CodeAnalysis.IArrayTypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor`1.VisitAssembly(Microsoft.CodeAnalysis.IAssemblySymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor`1.VisitDiscard(Microsoft.CodeAnalysis.IDiscardSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor`1.VisitDynamicType(Microsoft.CodeAnalysis.IDynamicTypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor`1.VisitEvent(Microsoft.CodeAnalysis.IEventSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor`1.VisitField(Microsoft.CodeAnalysis.IFieldSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor`1.VisitLabel(Microsoft.CodeAnalysis.ILabelSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor`1.VisitLocal(Microsoft.CodeAnalysis.ILocalSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor`1.VisitMethod(Microsoft.CodeAnalysis.IMethodSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor`1.VisitModule(Microsoft.CodeAnalysis.IModuleSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor`1.VisitNamedType(Microsoft.CodeAnalysis.INamedTypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor`1.VisitNamespace(Microsoft.CodeAnalysis.INamespaceSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor`1.VisitParameter(Microsoft.CodeAnalysis.IParameterSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor`1.VisitPointerType(Microsoft.CodeAnalysis.IPointerTypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor`1.VisitProperty(Microsoft.CodeAnalysis.IPropertySymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor`1.VisitRangeVariable(Microsoft.CodeAnalysis.IRangeVariableSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.SymbolVisitor`1.VisitTypeParameter(Microsoft.CodeAnalysis.ITypeParameterSymbol)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxAnnotation" Id="T:Microsoft.CodeAnalysis.SyntaxAnnotation">
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxAnnotation.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxAnnotation.#ctor(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxAnnotation.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxAnnotation.Equals(Microsoft.CodeAnalysis.SyntaxAnnotation)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxAnnotation.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxAnnotation.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxAnnotation.op_Equality(Microsoft.CodeAnalysis.SyntaxAnnotation,Microsoft.CodeAnalysis.SyntaxAnnotation)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxAnnotation.op_Inequality(Microsoft.CodeAnalysis.SyntaxAnnotation,Microsoft.CodeAnalysis.SyntaxAnnotation)" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxAnnotation.Data" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxAnnotation.ElasticAnnotation" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxAnnotation.Kind" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxList`1" Id="T:Microsoft.CodeAnalysis.SyntaxList`1">
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.#ctor(`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.Add(`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.AddRange(System.Collections.Generic.IEnumerable{`0})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.Any" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.Equals(Microsoft.CodeAnalysis.SyntaxList{`0})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.First" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.FirstOrDefault" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.IndexOf(`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.IndexOf(System.Func{`0,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.Insert(System.Int32,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.Last" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.LastIndexOf(`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.LastIndexOf(System.Func{`0,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.LastOrDefault" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.op_Equality(Microsoft.CodeAnalysis.SyntaxList{`0},Microsoft.CodeAnalysis.SyntaxList{`0})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.op_Implicit(Microsoft.CodeAnalysis.SyntaxList{`0})~Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.SyntaxNode}" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.op_Implicit(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.SyntaxNode})~Microsoft.CodeAnalysis.SyntaxList{`0}" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.op_Inequality(Microsoft.CodeAnalysis.SyntaxList{`0},Microsoft.CodeAnalysis.SyntaxList{`0})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.Remove(`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.RemoveAt(System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.Replace(`0,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.ReplaceRange(`0,System.Collections.Generic.IEnumerable{`0})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.System#Collections#Generic#IEnumerable&lt;TNode&gt;#GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.ToFullString" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxList`1.Count" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxList`1.FullSpan" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxList`1.Item(System.Int32)" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxList`1.Span" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxList`1/Enumerator" Id="T:Microsoft.CodeAnalysis.SyntaxList`1.Enumerator">
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.Enumerator.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.Enumerator.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.Enumerator.MoveNext" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxList`1.Enumerator.Reset" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxList`1.Enumerator.Current" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxNode" Id="T:Microsoft.CodeAnalysis.SyntaxNode">
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.Ancestors(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.AncestorsAndSelf(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.ChildNodes" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.ChildNodesAndTokens" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.ChildThatContainsPosition(System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.ChildTokens" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.Contains(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.CopyAnnotationsTo``1(``0)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.DescendantNodes(Microsoft.CodeAnalysis.Text.TextSpan,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.DescendantNodes(System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.DescendantNodesAndSelf(Microsoft.CodeAnalysis.Text.TextSpan,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.DescendantNodesAndSelf(System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.DescendantNodesAndTokens(Microsoft.CodeAnalysis.Text.TextSpan,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.DescendantNodesAndTokens(System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.DescendantNodesAndTokensAndSelf(Microsoft.CodeAnalysis.Text.TextSpan,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.DescendantNodesAndTokensAndSelf(System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.DescendantTokens(Microsoft.CodeAnalysis.Text.TextSpan,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.DescendantTokens(System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.DescendantTrivia(Microsoft.CodeAnalysis.Text.TextSpan,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.DescendantTrivia(System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.EquivalentToCore(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.FindNode(Microsoft.CodeAnalysis.Text.TextSpan,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.FindToken(System.Int32,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.FindTokenCore(System.Int32,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.FindTokenCore(System.Int32,System.Func{Microsoft.CodeAnalysis.SyntaxTrivia,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.FindTrivia(System.Int32,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.FindTrivia(System.Int32,System.Func{Microsoft.CodeAnalysis.SyntaxTrivia,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.FindTriviaCore(System.Int32,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.FirstAncestorOrSelf``1(System.Func{``0,System.Boolean},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetAnnotatedNodes(Microsoft.CodeAnalysis.SyntaxAnnotation)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetAnnotatedNodes(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetAnnotatedNodesAndTokens(Microsoft.CodeAnalysis.SyntaxAnnotation)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetAnnotatedNodesAndTokens(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetAnnotatedNodesAndTokens(System.String[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetAnnotatedTokens(Microsoft.CodeAnalysis.SyntaxAnnotation)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetAnnotatedTokens(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetAnnotatedTrivia(Microsoft.CodeAnalysis.SyntaxAnnotation)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetAnnotatedTrivia(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetAnnotatedTrivia(System.String[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetAnnotations(System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetAnnotations(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetDiagnostics" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetFirstToken(System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetLastToken(System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetLeadingTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetLocation" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetRed``1(``0@,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetRedAtZero``1(``0@)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetReference" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetText(System.Text.Encoding,Microsoft.CodeAnalysis.Text.SourceHashAlgorithm)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.GetTrailingTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.HasAnnotation(Microsoft.CodeAnalysis.SyntaxAnnotation)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.HasAnnotations(System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.HasAnnotations(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.InsertNodesInListCore(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.InsertTokensInListCore(Microsoft.CodeAnalysis.SyntaxToken,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.InsertTriviaInListCore(Microsoft.CodeAnalysis.SyntaxTrivia,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.IsEquivalentTo(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.IsEquivalentTo(Microsoft.CodeAnalysis.SyntaxNode,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.IsEquivalentToCore(Microsoft.CodeAnalysis.SyntaxNode,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.IsPartOfStructuredTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.NormalizeWhitespaceCore(System.String,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.RemoveNodesCore(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},Microsoft.CodeAnalysis.SyntaxRemoveOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.ReplaceCore``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken},System.Func{Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia},System.Func{Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.ReplaceNodeInListCore(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.ReplaceTokenInListCore(Microsoft.CodeAnalysis.SyntaxToken,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.ReplaceTriviaInListCore(Microsoft.CodeAnalysis.SyntaxTrivia,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.SerializeTo(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.ToFullString" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.ToString" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNode.WriteTo(System.IO.TextWriter)" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNode.ContainsAnnotations" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNode.ContainsDiagnostics" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNode.ContainsDirectives" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNode.ContainsSkippedText" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNode.FullSpan" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNode.HasLeadingTrivia" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNode.HasStructuredTrivia" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNode.HasTrailingTrivia" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNode.IsMissing" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNode.IsStructuredTrivia" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNode.KindText" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNode.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNode.Parent" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNode.ParentTrivia" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNode.RawKind" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNode.Span" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNode.SpanStart" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNode.SyntaxTree" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNode.SyntaxTreeCore" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxNodeExtensions" Id="T:Microsoft.CodeAnalysis.SyntaxNodeExtensions">
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.GetCurrentNode``1(Microsoft.CodeAnalysis.SyntaxNode,``0)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.GetCurrentNodes``1(Microsoft.CodeAnalysis.SyntaxNode,``0)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.GetCurrentNodes``1(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.InsertNodesAfter``1(``0,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.InsertNodesBefore``1(``0,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.InsertTokensAfter``1(``0,Microsoft.CodeAnalysis.SyntaxToken,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.InsertTokensBefore``1(``0,Microsoft.CodeAnalysis.SyntaxToken,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.InsertTriviaAfter``1(``0,Microsoft.CodeAnalysis.SyntaxTrivia,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.InsertTriviaBefore``1(``0,Microsoft.CodeAnalysis.SyntaxTrivia,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.NormalizeWhitespace``1(``0,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.NormalizeWhitespace``1(``0,System.String,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.RemoveNode``1(``0,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxRemoveOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.RemoveNodes``1(``0,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},Microsoft.CodeAnalysis.SyntaxRemoveOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.ReplaceNode``1(``0,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.ReplaceNode``1(``0,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.ReplaceNodes``2(``0,System.Collections.Generic.IEnumerable{``1},System.Func{``1,``1,Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.ReplaceSyntax``1(``0,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Func{Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken},System.Func{Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia},System.Func{Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.ReplaceToken``1(``0,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.ReplaceToken``1(``0,Microsoft.CodeAnalysis.SyntaxToken,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.ReplaceTokens``1(``0,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken},System.Func{Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.ReplaceTrivia``1(``0,Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.ReplaceTrivia``1(``0,Microsoft.CodeAnalysis.SyntaxTrivia,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.ReplaceTrivia``1(``0,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia},System.Func{Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.TrackNodes``1(``0,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.TrackNodes``1(``0,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.WithLeadingTrivia``1(``0,Microsoft.CodeAnalysis.SyntaxTrivia[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.WithLeadingTrivia``1(``0,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.WithLeadingTrivia``1(``0,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.WithoutLeadingTrivia``1(``0)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.WithoutTrailingTrivia``1(``0)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.WithoutTrivia(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.WithoutTrivia``1(``0)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.WithTrailingTrivia``1(``0,Microsoft.CodeAnalysis.SyntaxTrivia[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.WithTrailingTrivia``1(``0,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.WithTrailingTrivia``1(``0,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeExtensions.WithTriviaFrom``1(``0,Microsoft.CodeAnalysis.SyntaxNode)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxNodeOrToken" Id="T:Microsoft.CodeAnalysis.SyntaxNodeOrToken">
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.AsNode" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.AsToken" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.ChildNodesAndTokens" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.Equals(Microsoft.CodeAnalysis.SyntaxNodeOrToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.GetAnnotations(System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.GetAnnotations(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.GetDiagnostics" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.GetFirstChildIndexSpanningPosition(Microsoft.CodeAnalysis.SyntaxNode,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.GetLeadingTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.GetLocation" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.GetNextSibling" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.GetPreviousSibling" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.GetTrailingTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.HasAnnotation(Microsoft.CodeAnalysis.SyntaxAnnotation)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.HasAnnotations(System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.HasAnnotations(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.IsEquivalentTo(Microsoft.CodeAnalysis.SyntaxNodeOrToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.op_Equality(Microsoft.CodeAnalysis.SyntaxNodeOrToken,Microsoft.CodeAnalysis.SyntaxNodeOrToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.op_Explicit(Microsoft.CodeAnalysis.SyntaxNodeOrToken)~Microsoft.CodeAnalysis.SyntaxNode" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.op_Explicit(Microsoft.CodeAnalysis.SyntaxNodeOrToken)~Microsoft.CodeAnalysis.SyntaxToken" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.op_Implicit(Microsoft.CodeAnalysis.SyntaxNode)~Microsoft.CodeAnalysis.SyntaxNodeOrToken" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.op_Implicit(Microsoft.CodeAnalysis.SyntaxToken)~Microsoft.CodeAnalysis.SyntaxNodeOrToken" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.op_Inequality(Microsoft.CodeAnalysis.SyntaxNodeOrToken,Microsoft.CodeAnalysis.SyntaxNodeOrToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.ToFullString" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.ToString" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.WithAdditionalAnnotations(Microsoft.CodeAnalysis.SyntaxAnnotation[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.WithAdditionalAnnotations(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.WithLeadingTrivia(Microsoft.CodeAnalysis.SyntaxTrivia[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.WithLeadingTrivia(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.WithoutAnnotations(Microsoft.CodeAnalysis.SyntaxAnnotation[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.WithoutAnnotations(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.WithoutAnnotations(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.WithTrailingTrivia(Microsoft.CodeAnalysis.SyntaxTrivia[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.WithTrailingTrivia(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrToken.WriteTo(System.IO.TextWriter)" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNodeOrToken.ContainsAnnotations" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNodeOrToken.ContainsDiagnostics" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNodeOrToken.ContainsDirectives" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNodeOrToken.FullSpan" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNodeOrToken.HasLeadingTrivia" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNodeOrToken.HasTrailingTrivia" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNodeOrToken.IsMissing" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNodeOrToken.IsNode" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNodeOrToken.IsToken" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNodeOrToken.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNodeOrToken.Parent" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNodeOrToken.RawKind" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNodeOrToken.Span" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNodeOrToken.SpanStart" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNodeOrToken.SyntaxTree" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxNodeOrTokenList" Id="T:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList">
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.#ctor(Microsoft.CodeAnalysis.SyntaxNodeOrToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.#ctor(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNodeOrToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Add(Microsoft.CodeAnalysis.SyntaxNodeOrToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.AddRange(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNodeOrToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Any" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Equals(Microsoft.CodeAnalysis.SyntaxNodeOrTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.First" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.FirstOrDefault" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.IndexOf(Microsoft.CodeAnalysis.SyntaxNodeOrToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Insert(System.Int32,Microsoft.CodeAnalysis.SyntaxNodeOrToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNodeOrToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Last" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.LastOrDefault" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.op_Equality(Microsoft.CodeAnalysis.SyntaxNodeOrTokenList,Microsoft.CodeAnalysis.SyntaxNodeOrTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.op_Inequality(Microsoft.CodeAnalysis.SyntaxNodeOrTokenList,Microsoft.CodeAnalysis.SyntaxNodeOrTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Remove(Microsoft.CodeAnalysis.SyntaxNodeOrToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.RemoveAt(System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Replace(Microsoft.CodeAnalysis.SyntaxNodeOrToken,Microsoft.CodeAnalysis.SyntaxNodeOrToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.ReplaceRange(Microsoft.CodeAnalysis.SyntaxNodeOrToken,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNodeOrToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.System#Collections#Generic#IEnumerable&lt;Microsoft#CodeAnalysis#SyntaxNodeOrToken&gt;#GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.ToFullString" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Count" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.FullSpan" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Item(System.Int32)" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Span" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxNodeOrTokenList/Enumerator" Id="T:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator">
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator.MoveNext" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator.System#Collections#IEnumerator#Reset" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator.System#IDisposable#Dispose" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator.Current" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxNodeOrTokenList.Enumerator.System#Collections#IEnumerator#Current" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxReference" Id="T:Microsoft.CodeAnalysis.SyntaxReference">
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxReference.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxReference.GetSyntax(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxReference.GetSyntaxAsync(System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxReference.Span" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxReference.SyntaxTree" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxRemoveOptions" Id="T:Microsoft.CodeAnalysis.SyntaxRemoveOptions">
      <Member Id="F:Microsoft.CodeAnalysis.SyntaxRemoveOptions.AddElasticMarker" />
      <Member Id="F:Microsoft.CodeAnalysis.SyntaxRemoveOptions.KeepDirectives" />
      <Member Id="F:Microsoft.CodeAnalysis.SyntaxRemoveOptions.KeepEndOfLine" />
      <Member Id="F:Microsoft.CodeAnalysis.SyntaxRemoveOptions.KeepExteriorTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.SyntaxRemoveOptions.KeepLeadingTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.SyntaxRemoveOptions.KeepNoTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.SyntaxRemoveOptions.KeepTrailingTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.SyntaxRemoveOptions.KeepUnbalancedDirectives" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxToken" Id="T:Microsoft.CodeAnalysis.SyntaxToken">
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.CopyAnnotationsTo(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.Equals(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.GetAllTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.GetAnnotations(System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.GetAnnotations(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.GetAnnotations(System.String[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.GetDiagnostics" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.GetLocation" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.GetNextToken(System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.GetPreviousToken(System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.HasAnnotation(Microsoft.CodeAnalysis.SyntaxAnnotation)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.HasAnnotations(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.HasAnnotations(System.String[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.IsEquivalentTo(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.IsPartOfStructuredTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.op_Equality(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.op_Inequality(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.ToFullString" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.ToString" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.WithAdditionalAnnotations(Microsoft.CodeAnalysis.SyntaxAnnotation[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.WithAdditionalAnnotations(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.WithLeadingTrivia(Microsoft.CodeAnalysis.SyntaxTrivia[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.WithLeadingTrivia(Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.WithLeadingTrivia(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.WithoutAnnotations(Microsoft.CodeAnalysis.SyntaxAnnotation[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.WithoutAnnotations(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.WithoutAnnotations(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.WithTrailingTrivia(Microsoft.CodeAnalysis.SyntaxTrivia[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.WithTrailingTrivia(Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.WithTrailingTrivia(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.WithTriviaFrom(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxToken.WriteTo(System.IO.TextWriter)" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxToken.ContainsAnnotations" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxToken.ContainsDiagnostics" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxToken.ContainsDirectives" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxToken.FullSpan" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxToken.HasLeadingTrivia" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxToken.HasStructuredTrivia" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxToken.HasTrailingTrivia" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxToken.IsMissing" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxToken.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxToken.LeadingTrivia" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxToken.Parent" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxToken.RawKind" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxToken.Span" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxToken.SpanStart" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxToken.SyntaxTree" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxToken.Text" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxToken.TrailingTrivia" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxToken.Value" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxToken.ValueText" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxTokenList" Id="T:Microsoft.CodeAnalysis.SyntaxTokenList">
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.#ctor(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.#ctor(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.#ctor(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Add(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.AddRange(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Any" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Create(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Equals(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.First" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.IndexOf(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Insert(System.Int32,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Last" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.op_Equality(Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.op_Inequality(Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Remove(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.RemoveAt(System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Replace(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.ReplaceRange(Microsoft.CodeAnalysis.SyntaxToken,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Reverse" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.System#Collections#Generic#IEnumerable&lt;Microsoft#CodeAnalysis#SyntaxToken&gt;#GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.ToFullString" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTokenList.Count" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTokenList.FullSpan" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTokenList.Item(System.Int32)" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTokenList.Span" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxTokenList/Enumerator" Id="T:Microsoft.CodeAnalysis.SyntaxTokenList.Enumerator">
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Enumerator.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Enumerator.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Enumerator.MoveNext" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTokenList.Enumerator.Current" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxTokenList/Reversed" Id="T:Microsoft.CodeAnalysis.SyntaxTokenList.Reversed">
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.#ctor(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.Equals(Microsoft.CodeAnalysis.SyntaxTokenList.Reversed)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.System#Collections#Generic#IEnumerable&lt;Microsoft#CodeAnalysis#SyntaxToken&gt;#GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.System#Collections#IEnumerable#GetEnumerator" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxTokenList/Reversed/Enumerator" Id="T:Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.Enumerator">
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.Enumerator.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.Enumerator.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.Enumerator.MoveNext" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTokenList.Reversed.Enumerator.Current" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxTree" Id="T:Microsoft.CodeAnalysis.SyntaxTree">
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.GetChangedSpans(Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.GetChanges(Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.GetDiagnostics(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.GetDiagnostics(Microsoft.CodeAnalysis.SyntaxNodeOrToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.GetDiagnostics(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.GetDiagnostics(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.GetDiagnostics(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.GetLineSpan(Microsoft.CodeAnalysis.Text.TextSpan,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.GetLineVisibility(System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.GetLocation(Microsoft.CodeAnalysis.Text.TextSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.GetMappedLineSpan(Microsoft.CodeAnalysis.Text.TextSpan,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.GetReference(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.GetRoot(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.GetRootAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.GetRootAsyncCore(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.GetRootCore(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.GetText(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.GetTextAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.HasHiddenRegions" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.IsEquivalentTo(Microsoft.CodeAnalysis.SyntaxTree,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.ToString" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.TryGetRoot(Microsoft.CodeAnalysis.SyntaxNode@)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.TryGetRootCore(Microsoft.CodeAnalysis.SyntaxNode@)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.TryGetText(Microsoft.CodeAnalysis.Text.SourceText@)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.WithChangedText(Microsoft.CodeAnalysis.Text.SourceText)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.WithFilePath(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTree.WithRootAndOptions(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.ParseOptions)" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTree.Encoding" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTree.FilePath" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTree.HasCompilationUnitRoot" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTree.Length" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTree.Options" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTree.OptionsCore" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxTrivia" Id="T:Microsoft.CodeAnalysis.SyntaxTrivia">
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.CopyAnnotationsTo(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.Equals(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.GetAnnotations(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.GetAnnotations(System.String[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.GetDiagnostics" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.GetLocation" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.GetStructure" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.HasAnnotation(Microsoft.CodeAnalysis.SyntaxAnnotation)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.HasAnnotations(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.HasAnnotations(System.String[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.IsEquivalentTo(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.IsPartOfStructuredTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.op_Equality(Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.op_Inequality(Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.ToFullString" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.ToString" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.WithAdditionalAnnotations(Microsoft.CodeAnalysis.SyntaxAnnotation[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.WithAdditionalAnnotations(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.WithoutAnnotations(Microsoft.CodeAnalysis.SyntaxAnnotation[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.WithoutAnnotations(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxAnnotation})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.WithoutAnnotations(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTrivia.WriteTo(System.IO.TextWriter)" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTrivia.ContainsDiagnostics" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTrivia.FullSpan" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTrivia.HasStructure" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTrivia.IsDirective" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTrivia.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTrivia.RawKind" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTrivia.Span" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTrivia.SpanStart" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTrivia.SyntaxTree" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTrivia.Token" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxTriviaList" Id="T:Microsoft.CodeAnalysis.SyntaxTriviaList">
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.#ctor(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.#ctor(Microsoft.CodeAnalysis.SyntaxTrivia[])" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.#ctor(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.Add(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.AddRange(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.Any" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.Create(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.ElementAt(System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.Equals(Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.First" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.IndexOf(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.Insert(System.Int32,Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.Last" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.op_Equality(Microsoft.CodeAnalysis.SyntaxTriviaList,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.op_Inequality(Microsoft.CodeAnalysis.SyntaxTriviaList,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.Remove(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.RemoveAt(System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.Replace(Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.ReplaceRange(Microsoft.CodeAnalysis.SyntaxTrivia,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.Reverse" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.System#Collections#Generic#IEnumerable&lt;Microsoft#CodeAnalysis#SyntaxTrivia&gt;#GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.ToFullString" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTriviaList.Count" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTriviaList.Empty" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTriviaList.FullSpan" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTriviaList.Item(System.Int32)" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTriviaList.Span" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxTriviaList/Enumerator" Id="T:Microsoft.CodeAnalysis.SyntaxTriviaList.Enumerator">
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.Enumerator.MoveNext" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTriviaList.Enumerator.Current" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxTriviaList/Reversed" Id="T:Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed">
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.#ctor(Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.Equals(Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.System#Collections#Generic#IEnumerable&lt;Microsoft#CodeAnalysis#SyntaxTrivia&gt;#GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.System#Collections#IEnumerable#GetEnumerator" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxTriviaList/Reversed/Enumerator" Id="T:Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.Enumerator">
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.Enumerator.MoveNext" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxTriviaList.Reversed.Enumerator.Current" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxWalker" Id="T:Microsoft.CodeAnalysis.SyntaxWalker">
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxWalker.#ctor(Microsoft.CodeAnalysis.SyntaxWalkerDepth)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxWalker.Visit(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxWalker.VisitToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.SyntaxWalker.VisitTrivia(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="P:Microsoft.CodeAnalysis.SyntaxWalker.Depth" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.SyntaxWalkerDepth" Id="T:Microsoft.CodeAnalysis.SyntaxWalkerDepth">
      <Member Id="F:Microsoft.CodeAnalysis.SyntaxWalkerDepth.Node" />
      <Member Id="F:Microsoft.CodeAnalysis.SyntaxWalkerDepth.StructuredTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.SyntaxWalkerDepth.Token" />
      <Member Id="F:Microsoft.CodeAnalysis.SyntaxWalkerDepth.Trivia" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.TextAndVersion" Id="T:Microsoft.CodeAnalysis.TextAndVersion">
      <Member Id="M:Microsoft.CodeAnalysis.TextAndVersion.Create(Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.VersionStamp,System.String)" />
      <Member Id="P:Microsoft.CodeAnalysis.TextAndVersion.FilePath" />
      <Member Id="P:Microsoft.CodeAnalysis.TextAndVersion.Text" />
      <Member Id="P:Microsoft.CodeAnalysis.TextAndVersion.Version" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.TextDocument" Id="T:Microsoft.CodeAnalysis.TextDocument">
      <Member Id="M:Microsoft.CodeAnalysis.TextDocument.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.TextDocument.GetTextAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.TextDocument.GetTextVersionAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.TextDocument.TryGetText(Microsoft.CodeAnalysis.Text.SourceText@)" />
      <Member Id="M:Microsoft.CodeAnalysis.TextDocument.TryGetTextVersion(Microsoft.CodeAnalysis.VersionStamp@)" />
      <Member Id="P:Microsoft.CodeAnalysis.TextDocument.FilePath" />
      <Member Id="P:Microsoft.CodeAnalysis.TextDocument.Folders" />
      <Member Id="P:Microsoft.CodeAnalysis.TextDocument.Id" />
      <Member Id="P:Microsoft.CodeAnalysis.TextDocument.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.TextDocument.Project" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.TextLoader" Id="T:Microsoft.CodeAnalysis.TextLoader">
      <Member Id="M:Microsoft.CodeAnalysis.TextLoader.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.TextLoader.From(Microsoft.CodeAnalysis.Text.SourceTextContainer,Microsoft.CodeAnalysis.VersionStamp,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.TextLoader.From(Microsoft.CodeAnalysis.TextAndVersion)" />
      <Member Id="M:Microsoft.CodeAnalysis.TextLoader.LoadTextAndVersionAsync(Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.DocumentId,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.TypedConstant" Id="T:Microsoft.CodeAnalysis.TypedConstant">
      <Member Id="M:Microsoft.CodeAnalysis.TypedConstant.Equals(Microsoft.CodeAnalysis.TypedConstant)" />
      <Member Id="M:Microsoft.CodeAnalysis.TypedConstant.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.TypedConstant.GetHashCode" />
      <Member Id="P:Microsoft.CodeAnalysis.TypedConstant.IsNull" />
      <Member Id="P:Microsoft.CodeAnalysis.TypedConstant.Kind" />
      <Member Id="P:Microsoft.CodeAnalysis.TypedConstant.Type" />
      <Member Id="P:Microsoft.CodeAnalysis.TypedConstant.Value" />
      <Member Id="P:Microsoft.CodeAnalysis.TypedConstant.Values" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.TypedConstantKind" Id="T:Microsoft.CodeAnalysis.TypedConstantKind">
      <Member Id="F:Microsoft.CodeAnalysis.TypedConstantKind.Array" />
      <Member Id="F:Microsoft.CodeAnalysis.TypedConstantKind.Enum" />
      <Member Id="F:Microsoft.CodeAnalysis.TypedConstantKind.Error" />
      <Member Id="F:Microsoft.CodeAnalysis.TypedConstantKind.Primitive" />
      <Member Id="F:Microsoft.CodeAnalysis.TypedConstantKind.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.TypeInfo" Id="T:Microsoft.CodeAnalysis.TypeInfo">
      <Member Id="M:Microsoft.CodeAnalysis.TypeInfo.Equals(Microsoft.CodeAnalysis.TypeInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.TypeInfo.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.TypeInfo.GetHashCode" />
      <Member Id="P:Microsoft.CodeAnalysis.TypeInfo.ConvertedType" />
      <Member Id="P:Microsoft.CodeAnalysis.TypeInfo.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.TypeKind" Id="T:Microsoft.CodeAnalysis.TypeKind">
      <Member Id="F:Microsoft.CodeAnalysis.TypeKind.Array" />
      <Member Id="F:Microsoft.CodeAnalysis.TypeKind.Class" />
      <Member Id="F:Microsoft.CodeAnalysis.TypeKind.Delegate" />
      <Member Id="F:Microsoft.CodeAnalysis.TypeKind.Dynamic" />
      <Member Id="F:Microsoft.CodeAnalysis.TypeKind.Enum" />
      <Member Id="F:Microsoft.CodeAnalysis.TypeKind.Error" />
      <Member Id="F:Microsoft.CodeAnalysis.TypeKind.Interface" />
      <Member Id="F:Microsoft.CodeAnalysis.TypeKind.Module" />
      <Member Id="F:Microsoft.CodeAnalysis.TypeKind.Pointer" />
      <Member Id="F:Microsoft.CodeAnalysis.TypeKind.Struct" />
      <Member Id="F:Microsoft.CodeAnalysis.TypeKind.Structure" />
      <Member Id="F:Microsoft.CodeAnalysis.TypeKind.Submission" />
      <Member Id="F:Microsoft.CodeAnalysis.TypeKind.TypeParameter" />
      <Member Id="F:Microsoft.CodeAnalysis.TypeKind.Unknown" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.TypeParameterKind" Id="T:Microsoft.CodeAnalysis.TypeParameterKind">
      <Member Id="F:Microsoft.CodeAnalysis.TypeParameterKind.Cref" />
      <Member Id="F:Microsoft.CodeAnalysis.TypeParameterKind.Method" />
      <Member Id="F:Microsoft.CodeAnalysis.TypeParameterKind.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.UnresolvedMetadataReference" Id="T:Microsoft.CodeAnalysis.UnresolvedMetadataReference">
      <Member Id="P:Microsoft.CodeAnalysis.UnresolvedMetadataReference.Display" />
      <Member Id="P:Microsoft.CodeAnalysis.UnresolvedMetadataReference.Reference" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VarianceKind" Id="T:Microsoft.CodeAnalysis.VarianceKind">
      <Member Id="F:Microsoft.CodeAnalysis.VarianceKind.In" />
      <Member Id="F:Microsoft.CodeAnalysis.VarianceKind.None" />
      <Member Id="F:Microsoft.CodeAnalysis.VarianceKind.Out" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VersionStamp" Id="T:Microsoft.CodeAnalysis.VersionStamp">
      <Member Id="M:Microsoft.CodeAnalysis.VersionStamp.Create" />
      <Member Id="M:Microsoft.CodeAnalysis.VersionStamp.Create(System.DateTime)" />
      <Member Id="M:Microsoft.CodeAnalysis.VersionStamp.Equals(Microsoft.CodeAnalysis.VersionStamp)" />
      <Member Id="M:Microsoft.CodeAnalysis.VersionStamp.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.VersionStamp.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.VersionStamp.GetNewerVersion" />
      <Member Id="M:Microsoft.CodeAnalysis.VersionStamp.GetNewerVersion(Microsoft.CodeAnalysis.VersionStamp)" />
      <Member Id="M:Microsoft.CodeAnalysis.VersionStamp.op_Equality(Microsoft.CodeAnalysis.VersionStamp,Microsoft.CodeAnalysis.VersionStamp)" />
      <Member Id="M:Microsoft.CodeAnalysis.VersionStamp.op_Inequality(Microsoft.CodeAnalysis.VersionStamp,Microsoft.CodeAnalysis.VersionStamp)" />
      <Member Id="M:Microsoft.CodeAnalysis.VersionStamp.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.VersionStamp.Default" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasicExtensions" Id="T:Microsoft.CodeAnalysis.VisualBasicExtensions">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasicExtensions.Any(Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasicExtensions.Any(Microsoft.CodeAnalysis.SyntaxTriviaList,Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasicExtensions.Any``1(Microsoft.CodeAnalysis.SeparatedSyntaxList{``0},Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasicExtensions.Any``1(Microsoft.CodeAnalysis.SyntaxList{``0},Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf(Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf(Microsoft.CodeAnalysis.SyntaxTriviaList,Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf``1(Microsoft.CodeAnalysis.SeparatedSyntaxList{``0},Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasicExtensions.IndexOf``1(Microsoft.CodeAnalysis.SyntaxList{``0},Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasicExtensions.IsKind(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasicExtensions.IsKind(Microsoft.CodeAnalysis.SyntaxNodeOrToken,Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasicExtensions.IsKind(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasicExtensions.IsKind(Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.WellKnownDiagnosticTags" Id="T:Microsoft.CodeAnalysis.WellKnownDiagnosticTags">
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownDiagnosticTags.AnalyzerException" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownDiagnosticTags.Build" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownDiagnosticTags.Compiler" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownDiagnosticTags.EditAndContinue" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownDiagnosticTags.NotConfigurable" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownDiagnosticTags.Telemetry" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownDiagnosticTags.Unnecessary" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.WellKnownMemberNames" Id="T:Microsoft.CodeAnalysis.WellKnownMemberNames">
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.AdditionOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.BitwiseAndOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.BitwiseOrOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.CollectionInitializerAddMethodName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.ConcatenateOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.CurrentPropertyName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.DeconstructMethodName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.DecrementOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.DefaultScriptClassName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.DelegateBeginInvokeName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.DelegateEndInvokeName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.DelegateInvokeName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.DestructorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.DivisionOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.EntryPointMethodName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.EnumBackingFieldName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.EqualityOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.ExclusiveOrOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.ExplicitConversionName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.ExponentOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.FalseOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.GetAwaiter" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.GetEnumeratorMethodName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.GetResult" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.GreaterThanOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.GreaterThanOrEqualOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.ImplicitConversionName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.IncrementOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.Indexer" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.InequalityOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.InstanceConstructorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.IntegerDivisionOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.IsCompleted" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.LeftShiftOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.LessThanOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.LessThanOrEqualOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.LikeOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.LogicalAndOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.LogicalNotOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.LogicalOrOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.ModulusOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.MoveNextMethodName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.MultiplyOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.ObjectEquals" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.ObjectGetHashCode" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.ObjectToString" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.OnCompleted" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.OnesComplementOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.RightShiftOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.StaticConstructorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.SubtractionOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.TrueOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.UnaryNegationOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.UnaryPlusOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.UnsignedLeftShiftOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.UnsignedRightShiftOperatorName" />
      <Member Id="F:Microsoft.CodeAnalysis.WellKnownMemberNames.ValuePropertyName" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Workspace" Id="T:Microsoft.CodeAnalysis.Workspace">
      <Member Id="E:Microsoft.CodeAnalysis.Workspace.DocumentActiveContextChanged" />
      <Member Id="E:Microsoft.CodeAnalysis.Workspace.DocumentClosed" />
      <Member Id="E:Microsoft.CodeAnalysis.Workspace.DocumentOpened" />
      <Member Id="E:Microsoft.CodeAnalysis.Workspace.WorkspaceChanged" />
      <Member Id="E:Microsoft.CodeAnalysis.Workspace.WorkspaceFailed" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.#ctor(Microsoft.CodeAnalysis.Host.HostServices,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.AdjustReloadedProject(Microsoft.CodeAnalysis.Project,Microsoft.CodeAnalysis.Project)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.AdjustReloadedSolution(Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.Solution)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ApplyAdditionalDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo,Microsoft.CodeAnalysis.Text.SourceText)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ApplyAdditionalDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ApplyAdditionalDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ApplyAnalyzerReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ApplyAnalyzerReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ApplyCompilationOptionsChanged(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.CompilationOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ApplyDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo,Microsoft.CodeAnalysis.Text.SourceText)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ApplyDocumentInfoChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.DocumentInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ApplyDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ApplyDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ApplyMetadataReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ApplyMetadataReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ApplyParseOptionsChanged(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ParseOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ApplyProjectAdded(Microsoft.CodeAnalysis.ProjectInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ApplyProjectChanges(Microsoft.CodeAnalysis.ProjectChanges)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ApplyProjectReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ApplyProjectReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ApplyProjectRemoved(Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CanApplyChange(Microsoft.CodeAnalysis.ApplyChangesKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CanApplyParseOptionChange(Microsoft.CodeAnalysis.ParseOptions,Microsoft.CodeAnalysis.ParseOptions,Microsoft.CodeAnalysis.Project)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CheckAdditionalDocumentIsInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CheckAdditionalDocumentIsNotInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CheckCanOpenDocuments" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CheckDocumentCanBeRemoved(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CheckDocumentIsClosed(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CheckDocumentIsInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CheckDocumentIsNotInCurrentSolution(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CheckDocumentIsOpen(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CheckProjectCanBeRemoved(Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotContainOpenDocuments(Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveAnalyzerReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveMetadataReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveProjectReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CheckProjectDoesNotHaveTransitiveProjectReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CheckProjectHasAnalyzerReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CheckProjectHasMetadataReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CheckProjectHasProjectReference(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CheckProjectIsInCurrentSolution(Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CheckProjectIsNotInCurrentSolution(Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CheckSolutionIsEmpty" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ClearDocumentData(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ClearOpenDocument(Microsoft.CodeAnalysis.DocumentId,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ClearProjectData(Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ClearSolution" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ClearSolutionData" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CloseAdditionalDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CloseDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CreateSolution(Microsoft.CodeAnalysis.SolutionId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.CreateSolution(Microsoft.CodeAnalysis.SolutionInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.Dispose" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.Dispose(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.GetAdditionalDocumentName(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.GetDocumentIdInCurrentContext(Microsoft.CodeAnalysis.Text.SourceTextContainer)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.GetDocumentName(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.GetOpenDocumentIds(Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.GetProjectName(Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.GetRelatedDocumentIds(Microsoft.CodeAnalysis.Text.SourceTextContainer)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.GetWorkspaceRegistration(Microsoft.CodeAnalysis.Text.SourceTextContainer)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.IsDocumentOpen(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentClosed(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentOpened(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceTextContainer,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.PreservationMode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnAdditionalDocumentTextLoaderChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnAnalyzerReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnAnalyzerReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnAssemblyNameChanged(Microsoft.CodeAnalysis.ProjectId,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnCompilationOptionsChanged(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.CompilationOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnDocumentAdded(Microsoft.CodeAnalysis.DocumentInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnDocumentClosed(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnDocumentClosing(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnDocumentContextUpdated(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnDocumentInfoChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.DocumentInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnDocumentOpened(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceTextContainer,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnDocumentReloaded(Microsoft.CodeAnalysis.DocumentInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnDocumentRemoved(Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnDocumentSourceCodeKindChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.SourceCodeKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnDocumentTextChanged(Microsoft.CodeAnalysis.Document)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnDocumentTextChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.PreservationMode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnDocumentTextLoaderChanged(Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.TextLoader)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnMetadataReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnMetadataReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.MetadataReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnOutputFilePathChanged(Microsoft.CodeAnalysis.ProjectId,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnOutputRefFilePathChanged(Microsoft.CodeAnalysis.ProjectId,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnParseOptionsChanged(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ParseOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnProjectAdded(Microsoft.CodeAnalysis.ProjectInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnProjectNameChanged(Microsoft.CodeAnalysis.ProjectId,System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnProjectReferenceAdded(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnProjectReferenceRemoved(Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.ProjectReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnProjectReloaded(Microsoft.CodeAnalysis.ProjectInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnProjectRemoved(Microsoft.CodeAnalysis.ProjectId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnSolutionAdded(Microsoft.CodeAnalysis.SolutionInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnSolutionReloaded(Microsoft.CodeAnalysis.SolutionInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnSolutionRemoved" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OnWorkspaceFailed(Microsoft.CodeAnalysis.WorkspaceDiagnostic)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OpenAdditionalDocument(Microsoft.CodeAnalysis.DocumentId,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.OpenDocument(Microsoft.CodeAnalysis.DocumentId,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.RaiseDocumentActiveContextChangedEventAsync(Microsoft.CodeAnalysis.Document)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.RaiseDocumentActiveContextChangedEventAsync(Microsoft.CodeAnalysis.Text.SourceTextContainer,Microsoft.CodeAnalysis.DocumentId,Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.RaiseDocumentClosedEventAsync(Microsoft.CodeAnalysis.Document)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.RaiseDocumentOpenedEventAsync(Microsoft.CodeAnalysis.Document)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.RaiseWorkspaceChangedEventAsync(Microsoft.CodeAnalysis.WorkspaceChangeKind,Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.RegisterText(Microsoft.CodeAnalysis.Text.SourceTextContainer)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ScheduleTask(System.Action,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.ScheduleTask``1(System.Func{``0},System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.SetCurrentSolution(Microsoft.CodeAnalysis.Solution)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.TryApplyChanges(Microsoft.CodeAnalysis.Solution)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.TryGetWorkspace(Microsoft.CodeAnalysis.Text.SourceTextContainer,Microsoft.CodeAnalysis.Workspace@)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.UnregisterText(Microsoft.CodeAnalysis.Text.SourceTextContainer)" />
      <Member Id="M:Microsoft.CodeAnalysis.Workspace.UpdateReferencesAfterAdd" />
      <Member Id="P:Microsoft.CodeAnalysis.Workspace.CanOpenDocuments" />
      <Member Id="P:Microsoft.CodeAnalysis.Workspace.CurrentSolution" />
      <Member Id="P:Microsoft.CodeAnalysis.Workspace.Kind" />
      <Member Id="P:Microsoft.CodeAnalysis.Workspace.Options" />
      <Member Id="P:Microsoft.CodeAnalysis.Workspace.PartialSemanticsEnabled" />
      <Member Id="P:Microsoft.CodeAnalysis.Workspace.Services" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.WorkspaceChangeEventArgs" Id="T:Microsoft.CodeAnalysis.WorkspaceChangeEventArgs">
      <Member Id="M:Microsoft.CodeAnalysis.WorkspaceChangeEventArgs.#ctor(Microsoft.CodeAnalysis.WorkspaceChangeKind,Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.ProjectId,Microsoft.CodeAnalysis.DocumentId)" />
      <Member Id="P:Microsoft.CodeAnalysis.WorkspaceChangeEventArgs.DocumentId" />
      <Member Id="P:Microsoft.CodeAnalysis.WorkspaceChangeEventArgs.Kind" />
      <Member Id="P:Microsoft.CodeAnalysis.WorkspaceChangeEventArgs.NewSolution" />
      <Member Id="P:Microsoft.CodeAnalysis.WorkspaceChangeEventArgs.OldSolution" />
      <Member Id="P:Microsoft.CodeAnalysis.WorkspaceChangeEventArgs.ProjectId" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.WorkspaceChangeKind" Id="T:Microsoft.CodeAnalysis.WorkspaceChangeKind">
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceChangeKind.AdditionalDocumentAdded" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceChangeKind.AdditionalDocumentChanged" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceChangeKind.AdditionalDocumentReloaded" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceChangeKind.AdditionalDocumentRemoved" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceChangeKind.DocumentAdded" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceChangeKind.DocumentChanged" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceChangeKind.DocumentInfoChanged" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceChangeKind.DocumentReloaded" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceChangeKind.DocumentRemoved" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceChangeKind.ProjectAdded" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceChangeKind.ProjectChanged" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceChangeKind.ProjectReloaded" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceChangeKind.ProjectRemoved" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceChangeKind.SolutionAdded" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceChangeKind.SolutionChanged" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceChangeKind.SolutionCleared" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceChangeKind.SolutionReloaded" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceChangeKind.SolutionRemoved" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.WorkspaceDiagnostic" Id="T:Microsoft.CodeAnalysis.WorkspaceDiagnostic">
      <Member Id="M:Microsoft.CodeAnalysis.WorkspaceDiagnostic.#ctor(Microsoft.CodeAnalysis.WorkspaceDiagnosticKind,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.WorkspaceDiagnostic.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.WorkspaceDiagnostic.Kind" />
      <Member Id="P:Microsoft.CodeAnalysis.WorkspaceDiagnostic.Message" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.WorkspaceDiagnosticEventArgs" Id="T:Microsoft.CodeAnalysis.WorkspaceDiagnosticEventArgs">
      <Member Id="M:Microsoft.CodeAnalysis.WorkspaceDiagnosticEventArgs.#ctor(Microsoft.CodeAnalysis.WorkspaceDiagnostic)" />
      <Member Id="P:Microsoft.CodeAnalysis.WorkspaceDiagnosticEventArgs.Diagnostic" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.WorkspaceDiagnosticKind" Id="T:Microsoft.CodeAnalysis.WorkspaceDiagnosticKind">
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceDiagnosticKind.Failure" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceDiagnosticKind.Warning" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.WorkspaceKind" Id="T:Microsoft.CodeAnalysis.WorkspaceKind">
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceKind.Debugger" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceKind.Host" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceKind.Interactive" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceKind.MetadataAsSource" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceKind.MiscellaneousFiles" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceKind.MSBuild" />
      <Member Id="F:Microsoft.CodeAnalysis.WorkspaceKind.Preview" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.WorkspaceRegistration" Id="T:Microsoft.CodeAnalysis.WorkspaceRegistration">
      <Member Id="E:Microsoft.CodeAnalysis.WorkspaceRegistration.WorkspaceChanged" />
      <Member Id="P:Microsoft.CodeAnalysis.WorkspaceRegistration.Workspace" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.XmlDocumentationProvider" Id="T:Microsoft.CodeAnalysis.XmlDocumentationProvider">
      <Member Id="M:Microsoft.CodeAnalysis.XmlDocumentationProvider.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.XmlDocumentationProvider.CreateFromBytes(System.Byte[])" />
      <Member Id="M:Microsoft.CodeAnalysis.XmlDocumentationProvider.CreateFromFile(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.XmlDocumentationProvider.GetDocumentationForSymbol(System.String,System.Globalization.CultureInfo,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.XmlDocumentationProvider.GetSourceStream(System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.XmlFileResolver" Id="T:Microsoft.CodeAnalysis.XmlFileResolver">
      <Member Id="M:Microsoft.CodeAnalysis.XmlFileResolver.#ctor(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.XmlFileResolver.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.XmlFileResolver.FileExists(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.XmlFileResolver.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.XmlFileResolver.OpenRead(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.XmlFileResolver.ResolveReference(System.String,System.String)" />
      <Member Id="P:Microsoft.CodeAnalysis.XmlFileResolver.BaseDirectory" />
      <Member Id="P:Microsoft.CodeAnalysis.XmlFileResolver.Default" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.XmlReferenceResolver" Id="T:Microsoft.CodeAnalysis.XmlReferenceResolver">
      <Member Id="M:Microsoft.CodeAnalysis.XmlReferenceResolver.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.XmlReferenceResolver.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.XmlReferenceResolver.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.XmlReferenceResolver.OpenRead(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.XmlReferenceResolver.ResolveReference(System.String,System.String)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Classification">
    <Type Name="Microsoft.CodeAnalysis.Classification.ClassificationTypeNames" Id="T:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames">
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.ClassName" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.Comment" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.ConstantName" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.DelegateName" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.EnumMemberName" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.EnumName" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.EventName" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.ExcludedCode" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.ExtensionMethodName" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.FieldName" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.Identifier" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.InterfaceName" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.Keyword" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.LocalName" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.MethodName" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.ModuleName" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.NumericLiteral" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.Operator" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.ParameterName" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.PreprocessorKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.PreprocessorText" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.PropertyName" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.Punctuation" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.StringLiteral" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.StructName" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.Text" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.TypeParameterName" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.VerbatimStringLiteral" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.WhiteSpace" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.XmlDocCommentAttributeName" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.XmlDocCommentAttributeQuotes" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.XmlDocCommentAttributeValue" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.XmlDocCommentCDataSection" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.XmlDocCommentComment" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.XmlDocCommentDelimiter" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.XmlDocCommentEntityReference" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.XmlDocCommentName" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.XmlDocCommentProcessingInstruction" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.XmlDocCommentText" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralAttributeName" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralAttributeQuotes" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralAttributeValue" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralCDataSection" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralComment" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralDelimiter" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralEmbeddedExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralEntityReference" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralName" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralProcessingInstruction" />
      <Member Id="F:Microsoft.CodeAnalysis.Classification.ClassificationTypeNames.XmlLiteralText" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Classification.ClassifiedSpan" Id="T:Microsoft.CodeAnalysis.Classification.ClassifiedSpan">
      <Member Id="M:Microsoft.CodeAnalysis.Classification.ClassifiedSpan.#ctor(Microsoft.CodeAnalysis.Text.TextSpan,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Classification.ClassifiedSpan.#ctor(System.String,Microsoft.CodeAnalysis.Text.TextSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.Classification.ClassifiedSpan.Equals(Microsoft.CodeAnalysis.Classification.ClassifiedSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.Classification.ClassifiedSpan.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.Classification.ClassifiedSpan.GetHashCode" />
      <Member Id="P:Microsoft.CodeAnalysis.Classification.ClassifiedSpan.ClassificationType" />
      <Member Id="P:Microsoft.CodeAnalysis.Classification.ClassifiedSpan.TextSpan" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Classification.Classifier" Id="T:Microsoft.CodeAnalysis.Classification.Classifier">
      <Member Id="M:Microsoft.CodeAnalysis.Classification.Classifier.GetClassifiedSpans(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Workspace,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Classification.Classifier.GetClassifiedSpansAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Text.TextSpan,System.Threading.CancellationToken)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.CodeActions">
    <Type Name="Microsoft.CodeAnalysis.CodeActions.ApplyChangesOperation" Id="T:Microsoft.CodeAnalysis.CodeActions.ApplyChangesOperation">
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.ApplyChangesOperation.#ctor(Microsoft.CodeAnalysis.Solution)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.ApplyChangesOperation.Apply(Microsoft.CodeAnalysis.Workspace,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeActions.ApplyChangesOperation.ChangedSolution" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CodeActions.CodeAction" Id="T:Microsoft.CodeAnalysis.CodeActions.CodeAction">
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.CodeAction.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.CodeAction.ComputeOperationsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.CodeAction.ComputePreviewOperationsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.CodeAction.Create(System.String,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{Microsoft.CodeAnalysis.Document}},System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.CodeAction.Create(System.String,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{Microsoft.CodeAnalysis.Solution}},System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.CodeAction.GetChangedDocumentAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.CodeAction.GetChangedSolutionAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.CodeAction.GetOperationsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.CodeAction.GetPreviewOperationsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.CodeAction.PostProcessAsync(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.CodeActions.CodeActionOperation},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.CodeAction.PostProcessChangesAsync(Microsoft.CodeAnalysis.Document,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.CodeAction.PostProcessChangesAsync(Microsoft.CodeAnalysis.Solution,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeActions.CodeAction.EquivalenceKey" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeActions.CodeAction.Tags" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeActions.CodeAction.Title" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CodeActions.CodeActionOperation" Id="T:Microsoft.CodeAnalysis.CodeActions.CodeActionOperation">
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.CodeActionOperation.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.CodeActionOperation.Apply(Microsoft.CodeAnalysis.Workspace,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeActions.CodeActionOperation.Title" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CodeActions.CodeActionWithOptions" Id="T:Microsoft.CodeAnalysis.CodeActions.CodeActionWithOptions">
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.CodeActionWithOptions.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.CodeActionWithOptions.ComputeOperationsAsync(System.Object,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.CodeActionWithOptions.ComputeOperationsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.CodeActionWithOptions.GetOperationsAsync(System.Object,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.CodeActionWithOptions.GetOptions(System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CodeActions.ConflictAnnotation" Id="T:Microsoft.CodeAnalysis.CodeActions.ConflictAnnotation">
      <Member Id="F:Microsoft.CodeAnalysis.CodeActions.ConflictAnnotation.Kind" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.ConflictAnnotation.Create(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.ConflictAnnotation.GetDescription(Microsoft.CodeAnalysis.SyntaxAnnotation)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CodeActions.OpenDocumentOperation" Id="T:Microsoft.CodeAnalysis.CodeActions.OpenDocumentOperation">
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.OpenDocumentOperation.#ctor(Microsoft.CodeAnalysis.DocumentId,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.OpenDocumentOperation.Apply(Microsoft.CodeAnalysis.Workspace,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeActions.OpenDocumentOperation.DocumentId" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CodeActions.PreviewOperation" Id="T:Microsoft.CodeAnalysis.CodeActions.PreviewOperation">
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.PreviewOperation.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.PreviewOperation.GetPreviewAsync(System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CodeActions.RenameAnnotation" Id="T:Microsoft.CodeAnalysis.CodeActions.RenameAnnotation">
      <Member Id="F:Microsoft.CodeAnalysis.CodeActions.RenameAnnotation.Kind" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.RenameAnnotation.Create" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CodeActions.WarningAnnotation" Id="T:Microsoft.CodeAnalysis.CodeActions.WarningAnnotation">
      <Member Id="F:Microsoft.CodeAnalysis.CodeActions.WarningAnnotation.Kind" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.WarningAnnotation.Create(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeActions.WarningAnnotation.GetDescription(Microsoft.CodeAnalysis.SyntaxAnnotation)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.CodeFixes">
    <Type Name="Microsoft.CodeAnalysis.CodeFixes.CodeFixContext" Id="T:Microsoft.CodeAnalysis.CodeFixes.CodeFixContext">
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.CodeFixContext.#ctor(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Diagnostic,System.Action{Microsoft.CodeAnalysis.CodeActions.CodeAction,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostic}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.CodeFixContext.#ctor(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Text.TextSpan,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostic},System.Action{Microsoft.CodeAnalysis.CodeActions.CodeAction,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostic}},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.CodeFixContext.RegisterCodeFix(Microsoft.CodeAnalysis.CodeActions.CodeAction,Microsoft.CodeAnalysis.Diagnostic)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.CodeFixContext.RegisterCodeFix(Microsoft.CodeAnalysis.CodeActions.CodeAction,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostic})" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.CodeFixContext.RegisterCodeFix(Microsoft.CodeAnalysis.CodeActions.CodeAction,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostic})" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeFixes.CodeFixContext.CancellationToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeFixes.CodeFixContext.Diagnostics" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeFixes.CodeFixContext.Document" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeFixes.CodeFixContext.Span" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider" Id="T:Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider">
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider.GetFixAllProvider" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider.RegisterCodeFixesAsync(Microsoft.CodeAnalysis.CodeFixes.CodeFixContext)" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider.FixableDiagnosticIds" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CodeFixes.ExportCodeFixProviderAttribute" Id="T:Microsoft.CodeAnalysis.CodeFixes.ExportCodeFixProviderAttribute">
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.ExportCodeFixProviderAttribute.#ctor(System.String,System.String[])" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeFixes.ExportCodeFixProviderAttribute.Languages" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeFixes.ExportCodeFixProviderAttribute.Name" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CodeFixes.FixAllContext" Id="T:Microsoft.CodeAnalysis.CodeFixes.FixAllContext">
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.FixAllContext.#ctor(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider,Microsoft.CodeAnalysis.CodeFixes.FixAllScope,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticProvider,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.FixAllContext.#ctor(Microsoft.CodeAnalysis.Project,Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider,Microsoft.CodeAnalysis.CodeFixes.FixAllScope,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticProvider,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetAllDiagnosticsAsync(Microsoft.CodeAnalysis.Project)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetDocumentDiagnosticsAsync(Microsoft.CodeAnalysis.Document)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.FixAllContext.GetProjectDiagnosticsAsync(Microsoft.CodeAnalysis.Project)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.FixAllContext.WithCancellationToken(System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeFixes.FixAllContext.CancellationToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeFixes.FixAllContext.CodeActionEquivalenceKey" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeFixes.FixAllContext.CodeFixProvider" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticIds" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Document" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Project" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Scope" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeFixes.FixAllContext.Solution" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CodeFixes.FixAllContext/DiagnosticProvider" Id="T:Microsoft.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticProvider">
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticProvider.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticProvider.GetAllDiagnosticsAsync(Microsoft.CodeAnalysis.Project,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticProvider.GetDocumentDiagnosticsAsync(Microsoft.CodeAnalysis.Document,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.FixAllContext.DiagnosticProvider.GetProjectDiagnosticsAsync(Microsoft.CodeAnalysis.Project,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CodeFixes.FixAllProvider" Id="T:Microsoft.CodeAnalysis.CodeFixes.FixAllProvider">
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.FixAllProvider.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.FixAllProvider.GetFixAsync(Microsoft.CodeAnalysis.CodeFixes.FixAllContext)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.FixAllProvider.GetSupportedFixAllDiagnosticIds(Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeFixes.FixAllProvider.GetSupportedFixAllScopes" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CodeFixes.FixAllScope" Id="T:Microsoft.CodeAnalysis.CodeFixes.FixAllScope">
      <Member Id="F:Microsoft.CodeAnalysis.CodeFixes.FixAllScope.Custom" />
      <Member Id="F:Microsoft.CodeAnalysis.CodeFixes.FixAllScope.Document" />
      <Member Id="F:Microsoft.CodeAnalysis.CodeFixes.FixAllScope.Project" />
      <Member Id="F:Microsoft.CodeAnalysis.CodeFixes.FixAllScope.Solution" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CodeFixes.WellKnownFixAllProviders" Id="T:Microsoft.CodeAnalysis.CodeFixes.WellKnownFixAllProviders">
      <Member Id="P:Microsoft.CodeAnalysis.CodeFixes.WellKnownFixAllProviders.BatchFixer" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.CodeRefactorings">
    <Type Name="Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringContext" Id="T:Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringContext">
      <Member Id="M:Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringContext.#ctor(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Text.TextSpan,System.Action{Microsoft.CodeAnalysis.CodeActions.CodeAction},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringContext.RegisterRefactoring(Microsoft.CodeAnalysis.CodeActions.CodeAction)" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringContext.CancellationToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringContext.Document" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringContext.Span" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringProvider" Id="T:Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringProvider">
      <Member Id="M:Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringProvider.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringProvider.ComputeRefactoringsAsync(Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringContext)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute" Id="T:Microsoft.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute">
      <Member Id="M:Microsoft.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute.#ctor(System.String,System.String[])" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute.Languages" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeRefactorings.ExportCodeRefactoringProviderAttribute.Name" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.CodeStyle">
    <Type Name="Microsoft.CodeAnalysis.CodeStyle.CodeStyleOption`1" Id="T:Microsoft.CodeAnalysis.CodeStyle.CodeStyleOption`1">
      <Member Id="M:Microsoft.CodeAnalysis.CodeStyle.CodeStyleOption`1.#ctor(`0,Microsoft.CodeAnalysis.CodeStyle.NotificationOption)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeStyle.CodeStyleOption`1.Equals(Microsoft.CodeAnalysis.CodeStyle.CodeStyleOption{`0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeStyle.CodeStyleOption`1.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeStyle.CodeStyleOption`1.FromXElement(System.Xml.Linq.XElement)" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeStyle.CodeStyleOption`1.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeStyle.CodeStyleOption`1.ToXElement" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeStyle.CodeStyleOption`1.Default" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeStyle.CodeStyleOption`1.Notification" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeStyle.CodeStyleOption`1.Value" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CodeStyle.CodeStyleOptions" Id="T:Microsoft.CodeAnalysis.CodeStyle.CodeStyleOptions">
      <Member Id="F:Microsoft.CodeAnalysis.CodeStyle.CodeStyleOptions.PreferIntrinsicPredefinedTypeKeywordInDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CodeStyle.CodeStyleOptions.PreferIntrinsicPredefinedTypeKeywordInMemberAccess" />
      <Member Id="F:Microsoft.CodeAnalysis.CodeStyle.CodeStyleOptions.QualifyEventAccess" />
      <Member Id="F:Microsoft.CodeAnalysis.CodeStyle.CodeStyleOptions.QualifyFieldAccess" />
      <Member Id="F:Microsoft.CodeAnalysis.CodeStyle.CodeStyleOptions.QualifyMethodAccess" />
      <Member Id="F:Microsoft.CodeAnalysis.CodeStyle.CodeStyleOptions.QualifyPropertyAccess" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeStyle.CodeStyleOptions.#ctor" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CodeStyle.NotificationOption" Id="T:Microsoft.CodeAnalysis.CodeStyle.NotificationOption">
      <Member Id="F:Microsoft.CodeAnalysis.CodeStyle.NotificationOption.Error" />
      <Member Id="F:Microsoft.CodeAnalysis.CodeStyle.NotificationOption.None" />
      <Member Id="F:Microsoft.CodeAnalysis.CodeStyle.NotificationOption.Silent" />
      <Member Id="F:Microsoft.CodeAnalysis.CodeStyle.NotificationOption.Suggestion" />
      <Member Id="F:Microsoft.CodeAnalysis.CodeStyle.NotificationOption.Warning" />
      <Member Id="M:Microsoft.CodeAnalysis.CodeStyle.NotificationOption.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeStyle.NotificationOption.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeStyle.NotificationOption.Severity" />
      <Member Id="P:Microsoft.CodeAnalysis.CodeStyle.NotificationOption.Value" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.CSharp">
    <Type Name="Microsoft.CodeAnalysis.CSharp.AwaitExpressionInfo" Id="T:Microsoft.CodeAnalysis.CSharp.AwaitExpressionInfo">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.AwaitExpressionInfo.Equals(Microsoft.CodeAnalysis.CSharp.AwaitExpressionInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.AwaitExpressionInfo.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.AwaitExpressionInfo.GetHashCode" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.AwaitExpressionInfo.GetAwaiterMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.AwaitExpressionInfo.GetResultMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.AwaitExpressionInfo.IsCompletedProperty" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.AwaitExpressionInfo.IsDynamic" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Conversion" Id="T:Microsoft.CodeAnalysis.CSharp.Conversion">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Conversion.Equals(Microsoft.CodeAnalysis.CSharp.Conversion)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Conversion.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Conversion.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Conversion.op_Equality(Microsoft.CodeAnalysis.CSharp.Conversion,Microsoft.CodeAnalysis.CSharp.Conversion)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Conversion.op_Inequality(Microsoft.CodeAnalysis.CSharp.Conversion,Microsoft.CodeAnalysis.CSharp.Conversion)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Conversion.ToCommonConversion" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Conversion.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.Exists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsAnonymousFunction" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsBoxing" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsConstantExpression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsDynamic" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsEnumeration" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsExplicit" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsIdentity" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsImplicit" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsInterpolatedString" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsIntPtr" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsMethodGroup" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsNullable" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsNullLiteral" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsNumeric" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsPointer" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsReference" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsStackAlloc" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsThrow" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsTupleConversion" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsTupleLiteralConversion" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsUnboxing" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.IsUserDefined" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Conversion.MethodSymbol" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.CSharpCommandLineArguments" Id="T:Microsoft.CodeAnalysis.CSharp.CSharpCommandLineArguments">
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCommandLineArguments.CompilationOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCommandLineArguments.CompilationOptionsCore" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCommandLineArguments.ParseOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCommandLineArguments.ParseOptionsCore" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser" Id="T:Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser.Parse(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser.ParseConditionalCompilationSymbols(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostic}@)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser.Default" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser.RegularFileExtension" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser.Script" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCommandLineParser.ScriptFileExtension" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.CSharpCompilation" Id="T:Microsoft.CodeAnalysis.CSharp.CSharpCompilation">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AddReferences(Microsoft.CodeAnalysis.MetadataReference[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AddReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AddSyntaxTrees(Microsoft.CodeAnalysis.SyntaxTree[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AddSyntaxTrees(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.AppendDefaultVersionResource(System.IO.Stream)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ClassifyCommonConversion(Microsoft.CodeAnalysis.ITypeSymbol,Microsoft.CodeAnalysis.ITypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ClassifyConversion(Microsoft.CodeAnalysis.ITypeSymbol,Microsoft.CodeAnalysis.ITypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.Clone" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonAddSyntaxTrees(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonClone" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonContainsSyntaxTree(Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonCreateAnonymousTypeSymbol(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.ITypeSymbol},System.Collections.Immutable.ImmutableArray{System.String},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Location},System.Collections.Immutable.ImmutableArray{System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonCreateArrayTypeSymbol(Microsoft.CodeAnalysis.ITypeSymbol,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonCreateErrorNamespaceSymbol(Microsoft.CodeAnalysis.INamespaceSymbol,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonCreateErrorTypeSymbol(Microsoft.CodeAnalysis.INamespaceOrTypeSymbol,System.String,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonCreatePointerTypeSymbol(Microsoft.CodeAnalysis.ITypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonCreateTupleTypeSymbol(Microsoft.CodeAnalysis.INamedTypeSymbol,System.Collections.Immutable.ImmutableArray{System.String},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Location})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonCreateTupleTypeSymbol(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.ITypeSymbol},System.Collections.Immutable.ImmutableArray{System.String},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Location})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonGetAssemblyOrModuleSymbol(Microsoft.CodeAnalysis.MetadataReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonGetCompilationNamespace(Microsoft.CodeAnalysis.INamespaceSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonGetEntryPoint(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonGetSemanticModel(Microsoft.CodeAnalysis.SyntaxTree,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonGetSpecialType(Microsoft.CodeAnalysis.SpecialType)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonGetTypeByMetadataName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonRemoveAllSyntaxTrees" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonRemoveSyntaxTrees(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonReplaceSyntaxTree(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonWithAssemblyName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonWithOptions(Microsoft.CodeAnalysis.CompilationOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonWithReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonWithScriptCompilationInfo(Microsoft.CodeAnalysis.ScriptCompilationInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ContainsSymbolsWithName(System.Func{System.String,System.Boolean},Microsoft.CodeAnalysis.SymbolFilter,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ContainsSymbolsWithName(System.String,Microsoft.CodeAnalysis.SymbolFilter,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ContainsSyntaxTree(Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.Create(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference},Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CreateScriptCompilation(System.String,Microsoft.CodeAnalysis.SyntaxTree,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference},Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions,Microsoft.CodeAnalysis.CSharp.CSharpCompilation,System.Type,System.Type)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.GetDeclarationDiagnostics(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.GetDiagnostics(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.GetDirectiveReference(Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.GetMetadataReference(Microsoft.CodeAnalysis.IAssemblySymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.GetMethodBodyDiagnostics(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.GetParseDiagnostics(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.GetSemanticModel(Microsoft.CodeAnalysis.SyntaxTree,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.GetSymbolsWithName(System.Func{System.String,System.Boolean},Microsoft.CodeAnalysis.SymbolFilter,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.GetSymbolsWithName(System.String,Microsoft.CodeAnalysis.SymbolFilter,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.RemoveAllReferences" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.RemoveAllSyntaxTrees" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.RemoveReferences(Microsoft.CodeAnalysis.MetadataReference[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.RemoveReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.RemoveSyntaxTrees(Microsoft.CodeAnalysis.SyntaxTree[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.RemoveSyntaxTrees(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReplaceReference(Microsoft.CodeAnalysis.MetadataReference,Microsoft.CodeAnalysis.MetadataReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReplaceSyntaxTree(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ToMetadataReference(System.Collections.Immutable.ImmutableArray{System.String},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.WithAssemblyName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.WithOptions(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.WithReferences(Microsoft.CodeAnalysis.MetadataReference[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.WithReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.WithScriptCompilationInfo(Microsoft.CodeAnalysis.CSharp.CSharpScriptCompilationInfo)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonAssembly" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonDynamicType" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonGlobalNamespace" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonObjectType" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonScriptClass" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonSourceModule" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.CommonSyntaxTrees" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.DirectiveReferences" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.IsCaseSensitive" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.LanguageVersion" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.Options" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ReferencedAssemblyNames" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.ScriptCompilationInfo" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilation.SyntaxTrees" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions" Id="T:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.#ctor(Microsoft.CodeAnalysis.OutputKind,System.Boolean,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.OptimizationLevel,System.Boolean,System.Boolean,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Nullable{System.Boolean},Microsoft.CodeAnalysis.Platform,Microsoft.CodeAnalysis.ReportDiagnostic,System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}},System.Boolean,System.Boolean,Microsoft.CodeAnalysis.XmlReferenceResolver,Microsoft.CodeAnalysis.SourceReferenceResolver,Microsoft.CodeAnalysis.MetadataReferenceResolver,Microsoft.CodeAnalysis.AssemblyIdentityComparer,Microsoft.CodeAnalysis.StrongNameProvider)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.#ctor(Microsoft.CodeAnalysis.OutputKind,System.Boolean,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.OptimizationLevel,System.Boolean,System.Boolean,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Nullable{System.Boolean},Microsoft.CodeAnalysis.Platform,Microsoft.CodeAnalysis.ReportDiagnostic,System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}},System.Boolean,System.Boolean,Microsoft.CodeAnalysis.XmlReferenceResolver,Microsoft.CodeAnalysis.SourceReferenceResolver,Microsoft.CodeAnalysis.MetadataReferenceResolver,Microsoft.CodeAnalysis.AssemblyIdentityComparer,Microsoft.CodeAnalysis.StrongNameProvider,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.#ctor(Microsoft.CodeAnalysis.OutputKind,System.Boolean,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.OptimizationLevel,System.Boolean,System.Boolean,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Nullable{System.Boolean},Microsoft.CodeAnalysis.Platform,Microsoft.CodeAnalysis.ReportDiagnostic,System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}},System.Boolean,System.Boolean,Microsoft.CodeAnalysis.XmlReferenceResolver,Microsoft.CodeAnalysis.SourceReferenceResolver,Microsoft.CodeAnalysis.MetadataReferenceResolver,Microsoft.CodeAnalysis.AssemblyIdentityComparer,Microsoft.CodeAnalysis.StrongNameProvider,System.Boolean,Microsoft.CodeAnalysis.MetadataImportOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.#ctor(Microsoft.CodeAnalysis.OutputKind,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.OptimizationLevel,System.Boolean,System.Boolean,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Nullable{System.Boolean},Microsoft.CodeAnalysis.Platform,Microsoft.CodeAnalysis.ReportDiagnostic,System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}},System.Boolean,Microsoft.CodeAnalysis.XmlReferenceResolver,Microsoft.CodeAnalysis.SourceReferenceResolver,Microsoft.CodeAnalysis.MetadataReferenceResolver,Microsoft.CodeAnalysis.AssemblyIdentityComparer,Microsoft.CodeAnalysis.StrongNameProvider)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.#ctor(Microsoft.CodeAnalysis.OutputKind,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.OptimizationLevel,System.Boolean,System.Boolean,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Nullable{System.Boolean},Microsoft.CodeAnalysis.Platform,Microsoft.CodeAnalysis.ReportDiagnostic,System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}},System.Boolean,System.Boolean,Microsoft.CodeAnalysis.XmlReferenceResolver,Microsoft.CodeAnalysis.SourceReferenceResolver,Microsoft.CodeAnalysis.MetadataReferenceResolver,Microsoft.CodeAnalysis.AssemblyIdentityComparer,Microsoft.CodeAnalysis.StrongNameProvider)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithAssemblyIdentityComparer(Microsoft.CodeAnalysis.AssemblyIdentityComparer)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithCheckOverflow(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithConcurrentBuild(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithCryptoKeyContainer(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithCryptoKeyFile(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithCryptoPublicKey(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithDelaySign(System.Nullable{System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithDeterministic(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithFeatures(System.Collections.Immutable.ImmutableArray{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithGeneralDiagnosticOption(Microsoft.CodeAnalysis.ReportDiagnostic)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithMainTypeName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithMetadataImportOptions(Microsoft.CodeAnalysis.MetadataImportOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithMetadataReferenceResolver(Microsoft.CodeAnalysis.MetadataReferenceResolver)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithModuleName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithOptimizationLevel(Microsoft.CodeAnalysis.OptimizationLevel)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithOutputKind(Microsoft.CodeAnalysis.OutputKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithPlatform(Microsoft.CodeAnalysis.Platform)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithPublicSign(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithReportSuppressedDiagnostics(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithScriptClassName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithSourceReferenceResolver(Microsoft.CodeAnalysis.SourceReferenceResolver)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithSpecificDiagnosticOptions(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithSpecificDiagnosticOptions(System.Collections.Immutable.ImmutableDictionary{System.String,Microsoft.CodeAnalysis.ReportDiagnostic})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithStrongNameProvider(Microsoft.CodeAnalysis.StrongNameProvider)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithXmlReferenceResolver(Microsoft.CodeAnalysis.XmlReferenceResolver)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.Equals(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithAllowUnsafe(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithAssemblyIdentityComparer(Microsoft.CodeAnalysis.AssemblyIdentityComparer)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithConcurrentBuild(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithCryptoKeyContainer(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithCryptoKeyFile(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithCryptoPublicKey(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithDelaySign(System.Nullable{System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithDeterministic(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithGeneralDiagnosticOption(Microsoft.CodeAnalysis.ReportDiagnostic)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithMainTypeName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithMetadataImportOptions(Microsoft.CodeAnalysis.MetadataImportOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithMetadataReferenceResolver(Microsoft.CodeAnalysis.MetadataReferenceResolver)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithModuleName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithOptimizationLevel(Microsoft.CodeAnalysis.OptimizationLevel)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithOutputKind(Microsoft.CodeAnalysis.OutputKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithOverflowChecks(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithPlatform(Microsoft.CodeAnalysis.Platform)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithPublicSign(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithReportSuppressedDiagnostics(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithScriptClassName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithSourceReferenceResolver(Microsoft.CodeAnalysis.SourceReferenceResolver)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithSpecificDiagnosticOptions(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithSpecificDiagnosticOptions(System.Collections.Immutable.ImmutableDictionary{System.String,Microsoft.CodeAnalysis.ReportDiagnostic})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithStrongNameProvider(Microsoft.CodeAnalysis.StrongNameProvider)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithUsings(System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithUsings(System.Collections.Immutable.ImmutableArray{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithUsings(System.String[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithWarningLevel(System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithXmlReferenceResolver(Microsoft.CodeAnalysis.XmlReferenceResolver)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.AllowUnsafe" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.Usings" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.CSharpDiagnosticFormatter" Id="T:Microsoft.CodeAnalysis.CSharp.CSharpDiagnosticFormatter">
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpDiagnosticFormatter.Instance" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.CSharpExtensions" Id="T:Microsoft.CodeAnalysis.CSharp.CSharpExtensions">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.AnalyzeControlFlow(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.AnalyzeControlFlow(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.AnalyzeDataFlow(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.AnalyzeDataFlow(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.AnalyzeDataFlow(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.ClassifyConversion(Microsoft.CodeAnalysis.Compilation,Microsoft.CodeAnalysis.ITypeSymbol,Microsoft.CodeAnalysis.ITypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.ClassifyConversion(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.ITypeSymbol,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.ClassifyConversion(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.ITypeSymbol,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetAliasInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetAwaitExpressionInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetCollectionInitializerSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetCompilationUnitRoot(Microsoft.CodeAnalysis.SyntaxTree,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetConstantValue(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetConversion(Microsoft.CodeAnalysis.Operations.IConversionOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetConversion(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeconstructionInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetDeconstructionInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetFirstDirective(Microsoft.CodeAnalysis.SyntaxNode,System.Func{Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetForEachStatementInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.CommonForEachStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetForEachStatementInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetInConversion(Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetIndexerGroup(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetLastDirective(Microsoft.CodeAnalysis.SyntaxNode,System.Func{Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetMemberGroup(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetMemberGroup(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetMemberGroup(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetOutConversion(Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetQueryClauseInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetSpeculativeAliasInfo(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SpeculativeBindingOption)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetSpeculativeConversion(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SpeculativeBindingOption)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetSpeculativeSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetSpeculativeSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetSpeculativeSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax,Microsoft.CodeAnalysis.SpeculativeBindingOption)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetSpeculativeSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SpeculativeBindingOption)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetSpeculativeTypeInfo(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SpeculativeBindingOption)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetTypeInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetTypeInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetTypeInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.GetTypeInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.Insert(Microsoft.CodeAnalysis.SyntaxTokenList,System.Int32,Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.IsContextualKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.IsKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.IsReservedKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.IsVerbatimIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.IsVerbatimStringLiteral(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.Kind(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.Kind(Microsoft.CodeAnalysis.SyntaxNodeOrToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.Kind(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.Kind(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.ReplaceTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.ReplaceTrivia(Microsoft.CodeAnalysis.SyntaxToken,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia},System.Func{Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SemanticModel@)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax,Microsoft.CodeAnalysis.SemanticModel@)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax,Microsoft.CodeAnalysis.SemanticModel@)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax,Microsoft.CodeAnalysis.SemanticModel@)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax,Microsoft.CodeAnalysis.SemanticModel@)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax,Microsoft.CodeAnalysis.SemanticModel@)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SemanticModel@,Microsoft.CodeAnalysis.SpeculativeBindingOption)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.TryGetSpeculativeSemanticModelForMethodBody(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel@)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.TryGetSpeculativeSemanticModelForMethodBody(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax,Microsoft.CodeAnalysis.SemanticModel@)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpExtensions.VarianceKindFromToken(Microsoft.CodeAnalysis.SyntaxToken)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.CSharpFileSystemExtensions" Id="T:Microsoft.CodeAnalysis.CSharp.CSharpFileSystemExtensions">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpFileSystemExtensions.Emit(Microsoft.CodeAnalysis.CSharp.CSharpCompilation,System.String,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ResourceDescription},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.CSharpParseOptions" Id="T:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.#ctor(Microsoft.CodeAnalysis.CSharp.LanguageVersion,Microsoft.CodeAnalysis.DocumentationMode,Microsoft.CodeAnalysis.SourceCodeKind,System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.CommonWithDocumentationMode(Microsoft.CodeAnalysis.DocumentationMode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.CommonWithFeatures(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.CommonWithKind(Microsoft.CodeAnalysis.SourceCodeKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.Equals(Microsoft.CodeAnalysis.CSharp.CSharpParseOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.WithDocumentationMode(Microsoft.CodeAnalysis.DocumentationMode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.WithFeatures(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.WithKind(Microsoft.CodeAnalysis.SourceCodeKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.WithLanguageVersion(Microsoft.CodeAnalysis.CSharp.LanguageVersion)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.WithPreprocessorSymbols(System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.WithPreprocessorSymbols(System.Collections.Immutable.ImmutableArray{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.WithPreprocessorSymbols(System.String[])" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.Default" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.Features" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.LanguageVersion" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.PreprocessorSymbolNames" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpParseOptions.SpecifiedLanguageVersion" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.CSharpScriptCompilationInfo" Id="T:Microsoft.CodeAnalysis.CSharp.CSharpScriptCompilationInfo">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpScriptCompilationInfo.WithPreviousScriptCompilation(Microsoft.CodeAnalysis.CSharp.CSharpCompilation)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpScriptCompilationInfo.PreviousScriptCompilation" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" Id="T:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.DeserializeFrom(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.EquivalentToCore(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.FindToken(System.Int32,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.FindTrivia(System.Int32,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.FindTrivia(System.Int32,System.Func{Microsoft.CodeAnalysis.SyntaxTrivia,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.GetDiagnostics" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.GetFirstDirective(System.Func{Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.GetFirstToken(System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.GetLastDirective(System.Func{Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.GetLastToken(System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.GetLeadingTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.GetLocation" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.GetTrailingTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.InsertNodesInListCore(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.InsertTokensInListCore(Microsoft.CodeAnalysis.SyntaxToken,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.InsertTriviaInListCore(Microsoft.CodeAnalysis.SyntaxTrivia,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.IsEquivalentToCore(Microsoft.CodeAnalysis.SyntaxNode,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.Kind" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.NormalizeWhitespaceCore(System.String,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.RemoveNodesCore(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},Microsoft.CodeAnalysis.SyntaxRemoveOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.ReplaceCore``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken},System.Func{Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia},System.Func{Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.ReplaceNodeInListCore(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.ReplaceTokenInListCore(Microsoft.CodeAnalysis.SyntaxToken,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.ReplaceTriviaInListCore(Microsoft.CodeAnalysis.SyntaxTrivia,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode.SyntaxTreeCore" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter" Id="T:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.#ctor(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.Visit(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitAccessorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitAccessorList(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitAliasQualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitAnonymousMethodExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitAnonymousObjectCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitAnonymousObjectMemberDeclarator(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitArgument(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitArrayRankSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitArrayType(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitArrowExpressionClause(Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitAssignmentExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitAttributeArgument(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitAttributeArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitAttributeList(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitAttributeTargetSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitAwaitExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitBadDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitBaseExpression(Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitBaseList(Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitBinaryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitBlock(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitBracketedArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitBracketedParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitBreakStatement(Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitCasePatternSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitCaseSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitCastExpression(Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitCatchClause(Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitCatchDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitCatchFilterClause(Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitCheckedExpression(Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitCheckedStatement(Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitClassDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitClassOrStructConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitCompilationUnit(Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitConditionalAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitConditionalExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitConstantPattern(Microsoft.CodeAnalysis.CSharp.Syntax.ConstantPatternSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitConstructorConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitConstructorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitConstructorInitializer(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitContinueStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitConversionOperatorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitConversionOperatorMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitCrefBracketedParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitCrefParameter(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitCrefParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitDeclarationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitDeclarationPattern(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationPatternSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitDefaultExpression(Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitDefaultSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitDefineDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitDelegateDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitDestructorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitDiscardDesignation(Microsoft.CodeAnalysis.CSharp.Syntax.DiscardDesignationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitDocumentationCommentTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitDoStatement(Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitElementAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitElementBindingExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitElifDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitElseClause(Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitElseDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitEmptyStatement(Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitEndIfDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitEndRegionDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitEnumDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitEnumMemberDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitEqualsValueClause(Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitErrorDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitEventDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitEventFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitExplicitInterfaceSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitExpressionStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitExternAliasDirective(Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitFinallyClause(Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitFixedStatement(Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitForEachStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitForEachVariableStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitForStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitFromClause(Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitGenericName(Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitGlobalStatement(Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitGotoStatement(Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitGroupClause(Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitIdentifierName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitIfDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitIfStatement(Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitImplicitArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitImplicitElementAccess(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitImplicitStackAllocArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitIncompleteMember(Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitIndexerDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitIndexerMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitInitializerExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitInterfaceDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitInterpolatedStringExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitInterpolatedStringText(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringTextSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitInterpolation(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitInterpolationAlignmentClause(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitInterpolationFormatClause(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitInvocationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitIsPatternExpression(Microsoft.CodeAnalysis.CSharp.Syntax.IsPatternExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitJoinClause(Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitJoinIntoClause(Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitLabeledStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitLetClause(Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitLineDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitList(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitList(Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitList``1(Microsoft.CodeAnalysis.SeparatedSyntaxList{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitList``1(Microsoft.CodeAnalysis.SyntaxList{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitListElement(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitListElement``1(``0)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitListSeparator(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitLiteralExpression(Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitLoadDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.LoadDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitLocalDeclarationStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitLocalFunctionStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitLockStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitMakeRefExpression(Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitMemberAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitMemberBindingExpression(Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitMethodDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitNameColon(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitNameEquals(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitNameMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitNamespaceDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitNullableType(Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitObjectCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitOmittedArraySizeExpression(Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitOmittedTypeArgument(Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitOperatorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitOperatorMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitOrderByClause(Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitOrdering(Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitParameter(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitParenthesizedExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitParenthesizedLambdaExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitParenthesizedVariableDesignation(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedVariableDesignationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitPointerType(Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitPostfixUnaryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitPragmaChecksumDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitPragmaWarningDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitPredefinedType(Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitPrefixUnaryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitPropertyDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitQualifiedCref(Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitQualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitQueryBody(Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitQueryContinuation(Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitQueryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitReferenceDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitRefExpression(Microsoft.CodeAnalysis.CSharp.Syntax.RefExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitRefType(Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitRefTypeExpression(Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitRefValueExpression(Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitRegionDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitReturnStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitSelectClause(Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitShebangDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ShebangDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitSimpleBaseType(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleBaseTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitSimpleLambdaExpression(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitSingleVariableDesignation(Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitSizeOfExpression(Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitSkippedTokensTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitStackAllocArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitStructDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitSwitchSection(Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitSwitchStatement(Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitThisExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitThrowExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ThrowExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitThrowStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitTrivia(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitTryStatement(Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitTupleElement(Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitTupleExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitTupleType(Microsoft.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitTypeArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitTypeConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitTypeCref(Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitTypeOfExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitTypeParameter(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitTypeParameterConstraintClause(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitTypeParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitUndefDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitUnsafeStatement(Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitUsingDirective(Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitUsingStatement(Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitVariableDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitVariableDeclarator(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitWarningDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitWhenClause(Microsoft.CodeAnalysis.CSharp.Syntax.WhenClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitWhereClause(Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitWhileStatement(Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitXmlCDataSection(Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitXmlComment(Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitXmlCrefAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitXmlElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitXmlElementEndTag(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitXmlElementStartTag(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitXmlEmptyElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitXmlName(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitXmlNameAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitXmlPrefix(Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitXmlProcessingInstruction(Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitXmlText(Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitXmlTextAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitYieldStatement(Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxRewriter.VisitIntoStructuredTrivia" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree" Id="T:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.CloneNodeAsRoot``1(``0)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.Create(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode,Microsoft.CodeAnalysis.CSharp.CSharpParseOptions,System.String,System.Text.Encoding)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.GetChangedSpans(Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.GetChanges(Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.GetCompilationUnitRoot(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.GetDiagnostics(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.GetDiagnostics(Microsoft.CodeAnalysis.SyntaxNodeOrToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.GetDiagnostics(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.GetDiagnostics(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.GetDiagnostics(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.GetLineSpan(Microsoft.CodeAnalysis.Text.TextSpan,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.GetLineVisibility(System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.GetLocation(Microsoft.CodeAnalysis.Text.TextSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.GetMappedLineSpan(Microsoft.CodeAnalysis.Text.TextSpan,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.GetRoot(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.GetRootAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.GetRootAsyncCore(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.GetRootCore(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.HasHiddenRegions" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.IsEquivalentTo(Microsoft.CodeAnalysis.SyntaxTree,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.ParseText(Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.CSharp.CSharpParseOptions,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.ParseText(System.String,Microsoft.CodeAnalysis.CSharp.CSharpParseOptions,System.String,System.Text.Encoding,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.TryGetRoot(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode@)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.TryGetRootCore(Microsoft.CodeAnalysis.SyntaxNode@)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.WithChangedText(Microsoft.CodeAnalysis.Text.SourceText)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.Options" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxTree.OptionsCore" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor" Id="T:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.DefaultVisit(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.Visit(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitAccessorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitAccessorList(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitAliasQualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitAnonymousMethodExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitAnonymousObjectCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitAnonymousObjectMemberDeclarator(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitArgument(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitArrayRankSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitArrayType(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitArrowExpressionClause(Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitAssignmentExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitAttributeArgument(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitAttributeArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitAttributeList(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitAttributeTargetSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitAwaitExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitBadDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitBaseExpression(Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitBaseList(Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitBinaryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitBlock(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitBracketedArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitBracketedParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitBreakStatement(Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitCasePatternSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitCaseSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitCastExpression(Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitCatchClause(Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitCatchDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitCatchFilterClause(Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitCheckedExpression(Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitCheckedStatement(Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitClassDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitClassOrStructConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitCompilationUnit(Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitConditionalAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitConditionalExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitConstantPattern(Microsoft.CodeAnalysis.CSharp.Syntax.ConstantPatternSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitConstructorConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitConstructorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitConstructorInitializer(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitContinueStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitConversionOperatorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitConversionOperatorMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitCrefBracketedParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitCrefParameter(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitCrefParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitDeclarationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitDeclarationPattern(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationPatternSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitDefaultExpression(Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitDefaultSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitDefineDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitDelegateDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitDestructorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitDiscardDesignation(Microsoft.CodeAnalysis.CSharp.Syntax.DiscardDesignationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitDocumentationCommentTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitDoStatement(Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitElementAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitElementBindingExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitElifDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitElseClause(Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitElseDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitEmptyStatement(Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitEndIfDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitEndRegionDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitEnumDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitEnumMemberDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitEqualsValueClause(Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitErrorDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitEventDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitEventFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitExplicitInterfaceSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitExpressionStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitExternAliasDirective(Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitFinallyClause(Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitFixedStatement(Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitForEachStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitForEachVariableStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitForStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitFromClause(Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitGenericName(Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitGlobalStatement(Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitGotoStatement(Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitGroupClause(Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitIdentifierName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitIfDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitIfStatement(Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitImplicitArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitImplicitElementAccess(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitImplicitStackAllocArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitIncompleteMember(Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitIndexerDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitIndexerMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitInitializerExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitInterfaceDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitInterpolatedStringExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitInterpolatedStringText(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringTextSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitInterpolation(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitInterpolationAlignmentClause(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitInterpolationFormatClause(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitInvocationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitIsPatternExpression(Microsoft.CodeAnalysis.CSharp.Syntax.IsPatternExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitJoinClause(Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitJoinIntoClause(Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitLabeledStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitLetClause(Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitLineDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitLiteralExpression(Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitLoadDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.LoadDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitLocalDeclarationStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitLocalFunctionStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitLockStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitMakeRefExpression(Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitMemberAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitMemberBindingExpression(Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitMethodDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitNameColon(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitNameEquals(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitNameMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitNamespaceDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitNullableType(Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitObjectCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitOmittedArraySizeExpression(Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitOmittedTypeArgument(Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitOperatorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitOperatorMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitOrderByClause(Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitOrdering(Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitParameter(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitParenthesizedExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitParenthesizedLambdaExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitParenthesizedVariableDesignation(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedVariableDesignationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitPointerType(Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitPostfixUnaryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitPragmaChecksumDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitPragmaWarningDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitPredefinedType(Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitPrefixUnaryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitPropertyDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitQualifiedCref(Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitQualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitQueryBody(Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitQueryContinuation(Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitQueryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitReferenceDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitRefExpression(Microsoft.CodeAnalysis.CSharp.Syntax.RefExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitRefType(Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitRefTypeExpression(Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitRefValueExpression(Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitRegionDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitReturnStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitSelectClause(Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitShebangDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ShebangDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitSimpleBaseType(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleBaseTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitSimpleLambdaExpression(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitSingleVariableDesignation(Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitSizeOfExpression(Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitSkippedTokensTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitStackAllocArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitStructDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitSwitchSection(Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitSwitchStatement(Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitThisExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitThrowExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ThrowExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitThrowStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitTryStatement(Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitTupleElement(Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitTupleExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitTupleType(Microsoft.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitTypeArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitTypeConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitTypeCref(Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitTypeOfExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitTypeParameter(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitTypeParameterConstraintClause(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitTypeParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitUndefDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitUnsafeStatement(Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitUsingDirective(Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitUsingStatement(Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitVariableDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitVariableDeclarator(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitWarningDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitWhenClause(Microsoft.CodeAnalysis.CSharp.Syntax.WhenClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitWhereClause(Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitWhileStatement(Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitXmlCDataSection(Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitXmlComment(Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitXmlCrefAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitXmlElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitXmlElementEndTag(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitXmlElementStartTag(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitXmlEmptyElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitXmlName(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitXmlNameAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitXmlPrefix(Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitXmlProcessingInstruction(Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitXmlText(Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitXmlTextAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor.VisitYieldStatement(Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1" Id="T:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.DefaultVisit(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.Visit(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAccessorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAccessorList(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAliasQualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAnonymousMethodExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAnonymousObjectCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAnonymousObjectMemberDeclarator(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArgument(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArrayRankSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArrayType(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitArrowExpressionClause(Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAssignmentExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAttributeArgument(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAttributeArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAttributeList(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAttributeTargetSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitAwaitExpression(Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBadDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBaseExpression(Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBaseList(Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBinaryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBlock(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBracketedArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBracketedParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitBreakStatement(Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCasePatternSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCaseSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCastExpression(Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCatchClause(Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCatchDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCatchFilterClause(Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCheckedExpression(Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCheckedStatement(Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitClassDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitClassOrStructConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCompilationUnit(Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConditionalAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConditionalExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConstantPattern(Microsoft.CodeAnalysis.CSharp.Syntax.ConstantPatternSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConstructorConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConstructorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConstructorInitializer(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitContinueStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConversionOperatorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitConversionOperatorMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCrefBracketedParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCrefParameter(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitCrefParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDeclarationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDeclarationPattern(Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationPatternSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDefaultExpression(Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDefaultSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDefineDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDelegateDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDestructorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDiscardDesignation(Microsoft.CodeAnalysis.CSharp.Syntax.DiscardDesignationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDocumentationCommentTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitDoStatement(Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitElementAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitElementBindingExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitElifDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitElseClause(Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitElseDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEmptyStatement(Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEndIfDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEndRegionDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEnumDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEnumMemberDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEqualsValueClause(Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitErrorDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEventDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitEventFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitExplicitInterfaceSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitExpressionStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitExternAliasDirective(Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitFinallyClause(Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitFixedStatement(Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitForEachStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitForEachVariableStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitForStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitFromClause(Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitGenericName(Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitGlobalStatement(Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitGotoStatement(Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitGroupClause(Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIdentifierName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIfDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIfStatement(Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitImplicitArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitImplicitElementAccess(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitImplicitStackAllocArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIncompleteMember(Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIndexerDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIndexerMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInitializerExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterfaceDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterpolatedStringExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterpolatedStringText(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringTextSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterpolation(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterpolationAlignmentClause(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInterpolationFormatClause(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitInvocationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitIsPatternExpression(Microsoft.CodeAnalysis.CSharp.Syntax.IsPatternExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitJoinClause(Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitJoinIntoClause(Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLabeledStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLetClause(Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLineDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLiteralExpression(Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLoadDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.LoadDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLocalDeclarationStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLocalFunctionStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitLockStatement(Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitMakeRefExpression(Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitMemberAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitMemberBindingExpression(Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitMethodDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitNameColon(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitNameEquals(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitNameMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitNamespaceDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitNullableType(Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitObjectCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOmittedArraySizeExpression(Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOmittedTypeArgument(Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOperatorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOperatorMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOrderByClause(Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitOrdering(Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitParameter(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitParenthesizedExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitParenthesizedLambdaExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitParenthesizedVariableDesignation(Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedVariableDesignationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPointerType(Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPostfixUnaryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPragmaChecksumDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPragmaWarningDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPredefinedType(Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPrefixUnaryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitPropertyDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitQualifiedCref(Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitQualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitQueryBody(Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitQueryContinuation(Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitQueryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitReferenceDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitRefExpression(Microsoft.CodeAnalysis.CSharp.Syntax.RefExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitRefType(Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitRefTypeExpression(Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitRefValueExpression(Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitRegionDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitReturnStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSelectClause(Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitShebangDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ShebangDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSimpleBaseType(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleBaseTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSimpleLambdaExpression(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSingleVariableDesignation(Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSizeOfExpression(Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSkippedTokensTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitStackAllocArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitStructDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSwitchSection(Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitSwitchStatement(Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitThisExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitThrowExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ThrowExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitThrowStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTryStatement(Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTupleElement(Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTupleExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTupleType(Microsoft.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeCref(Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeOfExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeParameter(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeParameterConstraintClause(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitTypeParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitUndefDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitUnsafeStatement(Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitUsingDirective(Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitUsingStatement(Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitVariableDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitVariableDeclarator(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitWarningDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitWhenClause(Microsoft.CodeAnalysis.CSharp.Syntax.WhenClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitWhereClause(Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitWhileStatement(Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlCDataSection(Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlComment(Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlCrefAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlElementEndTag(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlElementStartTag(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlEmptyElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlName(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlNameAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlPrefix(Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlProcessingInstruction(Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlText(Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitXmlTextAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1.VisitYieldStatement(Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.CSharpSyntaxWalker" Id="T:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxWalker">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxWalker.#ctor(Microsoft.CodeAnalysis.SyntaxWalkerDepth)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxWalker.DefaultVisit(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxWalker.Visit(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxWalker.VisitLeadingTrivia(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxWalker.VisitToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxWalker.VisitTrailingTrivia(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxWalker.VisitTrivia(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.CSharpSyntaxWalker.Depth" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.DeconstructionInfo" Id="T:Microsoft.CodeAnalysis.CSharp.DeconstructionInfo">
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.DeconstructionInfo.Conversion" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.DeconstructionInfo.Method" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.DeconstructionInfo.Nested" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo" Id="T:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.Equals(Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.GetHashCode" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.CurrentConversion" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.CurrentProperty" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.DisposeMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.ElementConversion" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.ElementType" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.GetEnumeratorMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.MoveNextMethod" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.LanguageVersion" Id="T:Microsoft.CodeAnalysis.CSharp.LanguageVersion">
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.LanguageVersion.CSharp1" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.LanguageVersion.CSharp2" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.LanguageVersion.CSharp3" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.LanguageVersion.CSharp4" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.LanguageVersion.CSharp5" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.LanguageVersion.CSharp6" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.LanguageVersion.CSharp7" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.LanguageVersion.CSharp7_1" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.LanguageVersion.CSharp7_2" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.LanguageVersion.CSharp7_3" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.LanguageVersion.Default" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.LanguageVersion.Latest" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.LanguageVersionFacts" Id="T:Microsoft.CodeAnalysis.CSharp.LanguageVersionFacts">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.LanguageVersionFacts.MapSpecifiedToEffectiveVersion(Microsoft.CodeAnalysis.CSharp.LanguageVersion)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.LanguageVersionFacts.ToDisplayString(Microsoft.CodeAnalysis.CSharp.LanguageVersion)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.LanguageVersionFacts.TryParse(System.String,Microsoft.CodeAnalysis.CSharp.LanguageVersion@)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.QueryClauseInfo" Id="T:Microsoft.CodeAnalysis.CSharp.QueryClauseInfo">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.QueryClauseInfo.Equals(Microsoft.CodeAnalysis.CSharp.QueryClauseInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.QueryClauseInfo.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.QueryClauseInfo.GetHashCode" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.QueryClauseInfo.CastInfo" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.QueryClauseInfo.OperationInfo" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.SymbolDisplay" Id="T:Microsoft.CodeAnalysis.CSharp.SymbolDisplay">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SymbolDisplay.FormatLiteral(System.Char,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SymbolDisplay.FormatLiteral(System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SymbolDisplay.FormatPrimitive(System.Object,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SymbolDisplay.ToDisplayParts(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.SymbolDisplayFormat)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SymbolDisplay.ToDisplayString(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.SymbolDisplayFormat)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SymbolDisplay.ToMinimalDisplayParts(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.SymbolDisplayFormat)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SymbolDisplay.ToMinimalDisplayString(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.SymbolDisplayFormat)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.SyntaxExtensions" Id="T:Microsoft.CodeAnalysis.CSharp.SyntaxExtensions">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.NormalizeWhitespace(Microsoft.CodeAnalysis.SyntaxToken,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.NormalizeWhitespace(Microsoft.CodeAnalysis.SyntaxToken,System.String,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.NormalizeWhitespace(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.NormalizeWhitespace(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.ToSyntaxTriviaList(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.Update(Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxExtensions.WithIdentifier(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.SyntaxFactory" Id="T:Microsoft.CodeAnalysis.CSharp.SyntaxFactory">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AccessorDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AccessorDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AccessorDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AccessorDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AccessorDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AccessorDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AccessorDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AccessorDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AccessorList(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AccessorList(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AliasQualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AliasQualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AliasQualifiedName(System.String,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AnonymousMethodExpression" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AnonymousMethodExpression(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AnonymousMethodExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AnonymousMethodExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AnonymousObjectCreationExpression(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AnonymousObjectCreationExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AnonymousObjectMemberDeclarator(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AnonymousObjectMemberDeclarator(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AreEquivalent(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AreEquivalent(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode,System.Func{Microsoft.CodeAnalysis.CSharp.SyntaxKind,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AreEquivalent(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AreEquivalent(Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AreEquivalent(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SyntaxTree,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AreEquivalent``1(Microsoft.CodeAnalysis.SeparatedSyntaxList{``0},Microsoft.CodeAnalysis.SeparatedSyntaxList{``0},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AreEquivalent``1(Microsoft.CodeAnalysis.SeparatedSyntaxList{``0},Microsoft.CodeAnalysis.SeparatedSyntaxList{``0},System.Func{Microsoft.CodeAnalysis.CSharp.SyntaxKind,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AreEquivalent``1(Microsoft.CodeAnalysis.SyntaxList{``0},Microsoft.CodeAnalysis.SyntaxList{``0},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AreEquivalent``1(Microsoft.CodeAnalysis.SyntaxList{``0},Microsoft.CodeAnalysis.SyntaxList{``0},System.Func{Microsoft.CodeAnalysis.CSharp.SyntaxKind,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Argument(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Argument(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ArgumentList(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ArgumentList(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ArrayCreationExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ArrayRankSpecifier(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ArrayRankSpecifier(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ArrayType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ArrayType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ArrowExpressionClause(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ArrowExpressionClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AssignmentExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AssignmentExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Attribute(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Attribute(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AttributeArgument(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AttributeArgument(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AttributeArgumentList(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AttributeArgumentList(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AttributeList(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AttributeList(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AttributeList(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AttributeTargetSpecifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AttributeTargetSpecifier(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AwaitExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.AwaitExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.BadDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.BadDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.BadToken(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.BaseExpression" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.BaseExpression(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.BaseList(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.BaseList(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.BinaryExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.BinaryExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Block(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Block(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Block(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Block(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.BracketedArgumentList(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.BracketedArgumentList(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.BracketedParameterList(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.BracketedParameterList(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.BreakStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.BreakStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CasePatternSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.PatternSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.WhenClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CasePatternSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.PatternSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CasePatternSwitchLabel(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.PatternSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.WhenClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CaseSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CaseSwitchLabel(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CaseSwitchLabel(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CastExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CastExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CatchClause" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CatchClause(Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CatchClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CatchDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CatchDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CatchDeclaration(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CatchFilterClause(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CatchFilterClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CheckedExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CheckedExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CheckedStatement(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CheckedStatement(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ClassDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ClassDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ClassDeclaration(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ClassDeclaration(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ClassOrStructConstraint(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ClassOrStructConstraint(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Comment(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CompilationUnit" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CompilationUnit(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CompilationUnit(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConditionalAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConditionalAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConditionalExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConditionalExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConstantPattern(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConstructorConstraint" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConstructorConstraint(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConstructorDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConstructorDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConstructorDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConstructorDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConstructorDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConstructorDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConstructorDeclaration(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConstructorDeclaration(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConstructorInitializer(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConstructorInitializer(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ContinueStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ContinueStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConversionOperatorDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConversionOperatorDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConversionOperatorDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConversionOperatorDeclaration(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConversionOperatorMemberCref(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConversionOperatorMemberCref(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ConversionOperatorMemberCref(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CrefBracketedParameterList(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CrefBracketedParameterList(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CrefParameter(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CrefParameter(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CrefParameterList(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CrefParameterList(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DeclarationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DeclarationPattern(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DefaultExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DefaultExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DefaultSwitchLabel" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DefaultSwitchLabel(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DefaultSwitchLabel(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DefineDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DefineDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DefineDirectiveTrivia(System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DelegateDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DelegateDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DelegateDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DelegateDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DestructorDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DestructorDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DestructorDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DestructorDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DestructorDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DestructorDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DestructorDeclaration(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DestructorDeclaration(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DisabledText(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DiscardDesignation" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DiscardDesignation(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DocumentationComment(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DocumentationCommentExterior(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DocumentationCommentTrivia(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DocumentationCommentTrivia(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DoStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.DoStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElasticEndOfLine(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElasticWhitespace(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElementAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElementAccessExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElementBindingExpression" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElementBindingExpression(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElifDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,System.Boolean,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElifDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElseClause(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElseClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElseDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElseDirectiveTrivia(System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EmptyStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EmptyStatement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EndIfDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EndIfDirectiveTrivia(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EndOfLine(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EndOfLine(System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EndRegionDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EndRegionDirectiveTrivia(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EnumDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EnumDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EnumDeclaration(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EnumDeclaration(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EnumMemberDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EnumMemberDeclaration(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EnumMemberDeclaration(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EqualsValueClause(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EqualsValueClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ErrorDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ErrorDirectiveTrivia(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EventDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EventDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EventDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EventDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EventFieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EventFieldDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.EventFieldDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ExplicitInterfaceSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ExplicitInterfaceSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ExpressionStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ExpressionStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ExternAliasDirective(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ExternAliasDirective(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ExternAliasDirective(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FieldDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FieldDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FieldDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FinallyClause(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FinallyClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FixedStatement(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FixedStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForEachStatement(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForEachStatement(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,System.String,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForEachStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForEachVariableStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForEachVariableStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FromClause(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FromClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FromClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.FromClause(System.String,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GenericName(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GenericName(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GenericName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GetNonGenericExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GetStandaloneExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GlobalStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GotoStatement(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GotoStatement(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GotoStatement(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GroupClause(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.GroupClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Identifier(Microsoft.CodeAnalysis.SyntaxTriviaList,Microsoft.CodeAnalysis.CSharp.SyntaxKind,System.String,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Identifier(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Identifier(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IdentifierName(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IdentifierName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IfDirectiveTrivia(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,System.Boolean,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IfDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IfStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IfStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IfStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ImplicitArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ImplicitArrayCreationExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ImplicitArrayCreationExpression(Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ImplicitElementAccess" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ImplicitElementAccess(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ImplicitStackAllocArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ImplicitStackAllocArrayCreationExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IncompleteMember(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IncompleteMember(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IndexerDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IndexerDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IndexerDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IndexerDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IndexerMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IndexerMemberCref(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InitializerExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InitializerExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InterfaceDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InterfaceDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InterfaceDeclaration(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InterfaceDeclaration(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InterpolatedStringExpression(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InterpolatedStringExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringContentSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InterpolatedStringExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringContentSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InterpolatedStringText" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InterpolatedStringText(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Interpolation(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Interpolation(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Interpolation(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InterpolationAlignmentClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InterpolationFormatClause(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InterpolationFormatClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InvocationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.InvocationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IsCompleteSubmission(Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IsPatternExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.PatternSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.IsPatternExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.PatternSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinClause(System.String,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinIntoClause(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinIntoClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.JoinIntoClause(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LabeledStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LabeledStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LabeledStatement(System.String,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LetClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LetClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LetClause(System.String,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LineDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LineDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LineDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.List``1" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.List``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.Char,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.Decimal,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.Double,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.Int32,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.Int64,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.Single,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.UInt32,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.UInt64,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(System.Char)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(System.Decimal)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(System.Double)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(System.Int64)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(System.Single)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(System.String,System.Char)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(System.String,System.Decimal)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(System.String,System.Double)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(System.String,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(System.String,System.Int64)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(System.String,System.Single)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(System.String,System.UInt32)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(System.String,System.UInt64)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(System.UInt32)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Literal(System.UInt64)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LiteralExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LiteralExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LoadDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LoadDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LocalDeclarationStatement(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LocalDeclarationStatement(Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LocalDeclarationStatement(Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LocalFunctionStatement(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LocalFunctionStatement(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LocalFunctionStatement(Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LocalFunctionStatement(Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LockStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LockStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.MakeRefExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.MakeRefExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.MemberAccessExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.MemberAccessExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.MemberBindingExpression(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.MemberBindingExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.MethodDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.MethodDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.MethodDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.MethodDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.MethodDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.MissingToken(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.MissingToken(Microsoft.CodeAnalysis.SyntaxTriviaList,Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NameColon(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NameColon(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NameColon(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NameEquals(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NameEquals(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NameEquals(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NameMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NameMemberCref(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NamespaceDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NamespaceDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NamespaceDeclaration(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NodeOrTokenList" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NodeOrTokenList(Microsoft.CodeAnalysis.SyntaxNodeOrToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NodeOrTokenList(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNodeOrToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NullableType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.NullableType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ObjectCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ObjectCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ObjectCreationExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.OmittedArraySizeExpression" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.OmittedArraySizeExpression(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.OmittedTypeArgument" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.OmittedTypeArgument(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.OperatorDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.OperatorDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.OperatorDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.OperatorDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.OperatorMemberCref(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.OperatorMemberCref(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.OperatorMemberCref(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.OrderByClause(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.OrderByClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Ordering(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Ordering(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Parameter(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Parameter(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParameterList(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParameterList(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParenthesizedExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParenthesizedExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParenthesizedLambdaExpression(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParenthesizedLambdaExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParenthesizedLambdaExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParenthesizedVariableDesignation(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParenthesizedVariableDesignation(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseArgumentList(System.String,System.Int32,Microsoft.CodeAnalysis.ParseOptions,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseAttributeArgumentList(System.String,System.Int32,Microsoft.CodeAnalysis.ParseOptions,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseBracketedArgumentList(System.String,System.Int32,Microsoft.CodeAnalysis.ParseOptions,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseBracketedParameterList(System.String,System.Int32,Microsoft.CodeAnalysis.ParseOptions,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseCompilationUnit(System.String,System.Int32,Microsoft.CodeAnalysis.CSharp.CSharpParseOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseExpression(System.String,System.Int32,Microsoft.CodeAnalysis.ParseOptions,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseLeadingTrivia(System.String,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseName(System.String,System.Int32,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseParameterList(System.String,System.Int32,Microsoft.CodeAnalysis.ParseOptions,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseStatement(System.String,System.Int32,Microsoft.CodeAnalysis.ParseOptions,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseSyntaxTree(Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.ParseOptions,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseSyntaxTree(System.String,Microsoft.CodeAnalysis.ParseOptions,System.String,System.Text.Encoding,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseToken(System.String,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseTokens(System.String,System.Int32,System.Int32,Microsoft.CodeAnalysis.CSharp.CSharpParseOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseTrailingTrivia(System.String,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ParseTypeName(System.String,System.Int32,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PointerType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PointerType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PostfixUnaryExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PostfixUnaryExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaChecksumDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaChecksumDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PragmaWarningDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PredefinedType(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PrefixUnaryExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PrefixUnaryExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PreprocessingMessage(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PropertyDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PropertyDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PropertyDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PropertyDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.PropertyDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.QualifiedCref(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.MemberCrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.QualifiedCref(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.MemberCrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.QualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.QualifiedName(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.QueryBody(Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.QueryBody(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.QueryContinuation(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.QueryContinuation(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.QueryContinuation(System.String,Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.QueryExpression(Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ReferenceDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ReferenceDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RefExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RefExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RefType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RefType(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RefType(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RefTypeExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RefTypeExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RefValueExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RefValueExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RegionDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.RegionDirectiveTrivia(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ReturnStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ReturnStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SelectClause(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SelectClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SeparatedList``1" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SeparatedList``1(Microsoft.CodeAnalysis.SyntaxNodeOrTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SeparatedList``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SeparatedList``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SeparatedList``1(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNodeOrToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ShebangDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ShebangDirectiveTrivia(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SimpleBaseType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SimpleLambdaExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax,Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SimpleLambdaExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SingletonList``1(``0)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SingletonSeparatedList``1(``0)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SingleVariableDesignation(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SizeOfExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SizeOfExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SkippedTokensTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SkippedTokensTrivia(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.StackAllocArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.StackAllocArrayCreationExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.StackAllocArrayCreationExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.StackAllocArrayCreationExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.StructDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.StructDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.StructDeclaration(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.StructDeclaration(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SwitchSection" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SwitchSection(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SwitchStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SwitchStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SwitchStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SyntaxTree(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.ParseOptions,System.String,System.Text.Encoding)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.SyntaxTrivia(Microsoft.CodeAnalysis.CSharp.SyntaxKind,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ThisExpression" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ThisExpression(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ThrowExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ThrowExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ThrowStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ThrowStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Token(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Token(Microsoft.CodeAnalysis.SyntaxTriviaList,Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Token(Microsoft.CodeAnalysis.SyntaxTriviaList,Microsoft.CodeAnalysis.CSharp.SyntaxKind,System.String,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TokenList" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TokenList(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TokenList(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TokenList(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Trivia(Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TriviaList" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TriviaList(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TriviaList(Microsoft.CodeAnalysis.SyntaxTrivia[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TriviaList(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TryStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TupleElement(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TupleElement(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TupleExpression(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TupleExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TupleType(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TupleType(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeArgumentList(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeArgumentList(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeConstraint(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeCref(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeOfExpression(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeOfExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeParameter(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeParameter(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeParameter(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeParameterConstraintClause(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeParameterConstraintClause(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeParameterConstraintClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeParameterConstraintClause(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeParameterList(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.TypeParameterList(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UndefDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UndefDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UndefDirectiveTrivia(System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UnsafeStatement(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UnsafeStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingDirective(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.UsingStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.VariableDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.VariableDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.VariableDeclarator(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.VariableDeclarator(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.VariableDeclarator(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.VerbatimIdentifier(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WarningDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WarningDirectiveTrivia(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WhenClause(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WhenClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WhereClause(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WhereClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WhileStatement(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.WhileStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Whitespace(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Whitespace(System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlCDataSection(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlCDataSection(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlComment(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlComment(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlCrefAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlCrefAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax,Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlCrefAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlCrefAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlElement(System.String,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlElementEndTag(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlElementEndTag(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlElementStartTag(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlElementStartTag(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlElementStartTag(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlEmptyElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlEmptyElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlEmptyElement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlEmptyElement(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlEntity(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlExampleElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlExampleElement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlExceptionElement(Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlExceptionElement(Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlMultiLineElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlMultiLineElement(System.String,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlName(Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlName(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlNameAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlNameAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlNameAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,System.String,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlNameAttribute(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlNewLine(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlNullKeywordElement" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlParaElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlParaElement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlParamElement(System.String,Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlParamElement(System.String,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlParamRefElement(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlPermissionElement(Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlPermissionElement(Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlPlaceholderElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlPlaceholderElement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlPrefix(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlPrefix(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlPrefix(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlPreliminaryElement" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlProcessingInstruction(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlProcessingInstruction(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlProcessingInstruction(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlRemarksElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlRemarksElement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlReturnsElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlReturnsElement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlSeeAlsoElement(Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlSeeAlsoElement(System.Uri,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlSeeElement(Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlSummaryElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlSummaryElement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlText" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlText(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlText(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlText(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlTextAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlTextAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlTextAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlTextAttribute(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlTextAttribute(System.String,Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlTextAttribute(System.String,Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlTextAttribute(System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlTextLiteral(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlTextLiteral(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlTextLiteral(System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlTextNewLine(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlTextNewLine(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlTextNewLine(System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlThreadSafetyElement" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlThreadSafetyElement(System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlValueElement(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.XmlValueElement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.YieldStatement(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.YieldStatement(Microsoft.CodeAnalysis.CSharp.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CarriageReturn" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.CarriageReturnLineFeed" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElasticCarriageReturn" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElasticCarriageReturnLineFeed" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElasticLineFeed" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElasticMarker" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElasticSpace" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.ElasticTab" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.LineFeed" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Space" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.SyntaxFactory.Tab" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.SyntaxFacts" Id="T:Microsoft.CodeAnalysis.CSharp.SyntaxFacts">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetAccessorDeclarationKind(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetAssignmentExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetBaseTypeDeclarationKind(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetBinaryExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetCheckStatement(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetContextualKeywordKind(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetContextualKeywordKinds" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetInstanceExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetKeywordKind(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetKeywordKinds" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetLiteralExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetOperatorKind(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetPostfixUnaryExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetPrefixUnaryExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetPreprocessorKeywordKind(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetPreprocessorKeywordKinds" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetPrimaryFunction(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetPunctuationKinds" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetReservedKeywordKinds" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetSwitchLabelKind(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetText(Microsoft.CodeAnalysis.Accessibility)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetText(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.GetTypeDeclarationKind(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsAccessibilityModifier(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsAccessorDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsAccessorDeclarationKeyword(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsAliasQualifier(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsAnyOverloadableOperator(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsAnyToken(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsAnyUnaryExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsAssignmentExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsAssignmentExpressionOperatorToken(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsAttributeName(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsAttributeTargetSpecifier(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsBinaryExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsBinaryExpressionOperatorToken(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsContextualKeyword(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsDocumentationCommentTrivia(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsFixedStatementExpression(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsGlobalMemberDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsIdentifierPartCharacter(System.Char)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsIdentifierStartCharacter(System.Char)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsIndexed(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsInNamespaceOrTypeContext(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsInstanceExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsInTypeOnlyContext(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsInvoked(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsKeywordKind(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsLambdaBody(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsLanguagePunctuation(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsLiteralExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsName(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsNamedArgumentName(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsNamespaceAliasQualifier(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsNamespaceMemberDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsNewLine(System.Char)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsOverloadableBinaryOperator(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsOverloadableUnaryOperator(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsPostfixUnaryExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsPostfixUnaryExpressionToken(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsPredefinedType(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsPrefixUnaryExpression(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsPrefixUnaryExpressionOperatorToken(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsPreprocessorDirective(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsPreprocessorKeyword(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsPreprocessorPunctuation(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsPrimaryFunction(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsPunctuation(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsPunctuationOrKeyword(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsQueryContextualKeyword(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsReservedKeyword(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsReservedTupleElementName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsTrivia(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsTypeDeclaration(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsTypeParameterVarianceKeyword(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsTypeSyntax(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsUnaryOperatorDeclarationToken(Microsoft.CodeAnalysis.CSharp.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsValidIdentifier(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.IsWhitespace(System.Char)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.TryGetInferredMemberName(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.SyntaxFacts.EqualityComparer" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.SyntaxKind" Id="T:Microsoft.CodeAnalysis.CSharp.SyntaxKind">
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AbstractKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AccessorList" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AddAccessorDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AddAssignmentExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AddExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AddKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AddressOfExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AliasKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AliasQualifiedName" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AmpersandAmpersandToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AmpersandEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AmpersandToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AndAssignmentExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AnonymousMethodExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AnonymousObjectCreationExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AnonymousObjectMemberDeclarator" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ArgListExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ArgListKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.Argument" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ArgumentList" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ArrayCreationExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ArrayInitializerExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ArrayRankSpecifier" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ArrayType" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ArrowExpressionClause" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AscendingKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AscendingOrdering" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AsExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AsKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AssemblyKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AsteriskEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AsteriskToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AsyncKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.Attribute" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AttributeArgument" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AttributeArgumentList" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AttributeList" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AttributeTargetSpecifier" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AwaitExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.AwaitKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.BackslashToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.BadDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.BadToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.BarBarToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.BarEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.BarToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.BaseConstructorInitializer" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.BaseExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.BaseKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.BaseList" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.BitwiseAndExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.BitwiseNotExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.BitwiseOrExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.Block" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.BoolKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.BracketedArgumentList" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.BracketedParameterList" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.BreakKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.BreakStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ByKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ByteKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CaretEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CaretToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CaseKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CasePatternSwitchLabel" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CaseSwitchLabel" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CastExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CatchClause" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CatchDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CatchFilterClause" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CatchKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CharacterLiteralExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CharacterLiteralToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CharKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CheckedExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CheckedKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CheckedStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ChecksumKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ClassConstraint" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ClassDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ClassKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CloseBraceToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CloseBracketToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CloseParenToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CoalesceExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CollectionInitializerExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ColonColonToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ColonToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CommaToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CompilationUnit" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ComplexElementInitializerExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ConditionalAccessExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ConditionalExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ConflictMarkerTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ConstantPattern" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ConstKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ConstructorConstraint" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ConstructorDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ContinueKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ContinueStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ConversionOperatorDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ConversionOperatorMemberCref" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CrefBracketedParameterList" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CrefParameter" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.CrefParameterList" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DecimalKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DeclarationExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DeclarationPattern" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DefaultExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DefaultKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DefaultLiteralExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DefaultSwitchLabel" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DefineDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DefineKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DelegateDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DelegateKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DescendingKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DescendingOrdering" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DestructorDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DisabledTextTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DisableKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DiscardDesignation" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DivideAssignmentExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DivideExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DocumentationCommentExteriorTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DoKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DollarToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DoStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DotToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DoubleKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.DoubleQuoteToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ElementAccessExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ElementBindingExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ElifDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ElifKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ElseClause" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ElseDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ElseKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.EmptyStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.EndIfDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.EndIfKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.EndOfDirectiveToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.EndOfDocumentationCommentToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.EndOfFileToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.EndOfLineTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.EndRegionDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.EndRegionKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.EnumDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.EnumKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.EnumMemberDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.EqualsEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.EqualsExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.EqualsGreaterThanToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.EqualsKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.EqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.EqualsValueClause" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ErrorDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ErrorKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.EventDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.EventFieldDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.EventKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ExclamationEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ExclamationToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ExclusiveOrAssignmentExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ExclusiveOrExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ExplicitInterfaceSpecifier" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ExplicitKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ExpressionStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ExternAliasDirective" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ExternKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.FalseKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.FalseLiteralExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.FieldDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.FieldKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.FinallyClause" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.FinallyKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.FixedKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.FixedStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.FloatKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ForEachKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ForEachStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ForEachVariableStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ForKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ForStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.FromClause" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.FromKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.GenericName" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.GetAccessorDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.GetKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.GlobalKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.GlobalStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.GotoCaseStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.GotoDefaultStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.GotoKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.GotoStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.GreaterThanEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.GreaterThanExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.GreaterThanGreaterThanEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.GreaterThanGreaterThanToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.GreaterThanOrEqualExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.GreaterThanToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.GroupClause" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.GroupKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.HashToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.HiddenKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.IdentifierName" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.IdentifierToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.IfDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.IfKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.IfStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ImplicitArrayCreationExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ImplicitElementAccess" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ImplicitKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ImplicitStackAllocArrayCreationExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.IncompleteMember" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.IndexerDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.IndexerMemberCref" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.InKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.InterfaceDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.InterfaceKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.InternalKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.InterpolatedStringEndToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.InterpolatedStringExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.InterpolatedStringStartToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.InterpolatedStringText" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.InterpolatedStringTextToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.InterpolatedStringToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.InterpolatedVerbatimStringStartToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.Interpolation" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.InterpolationAlignmentClause" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.InterpolationFormatClause" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.IntKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.IntoKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.InvocationExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.IsExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.IsKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.IsPatternExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.JoinClause" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.JoinIntoClause" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.JoinKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LabeledStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LeftShiftAssignmentExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LeftShiftExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LessThanEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LessThanExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LessThanLessThanEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LessThanLessThanToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LessThanOrEqualExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LessThanSlashToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LessThanToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LetClause" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LetKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LineDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LineKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.List" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LoadDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LoadKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LocalDeclarationStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LocalFunctionStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LockKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LockStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LogicalAndExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LogicalNotExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LogicalOrExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.LongKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.MakeRefExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.MakeRefKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.MemberBindingExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.MethodDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.MethodKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.MinusEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.MinusGreaterThanToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.MinusMinusToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.MinusToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ModuleKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ModuloAssignmentExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ModuloExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.MultiLineCommentTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.MultiLineDocumentationCommentTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.MultiplyAssignmentExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.MultiplyExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.NameColon" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.NameEquals" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.NameMemberCref" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.NameOfKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.NamespaceDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.NamespaceKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.NewKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.None" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.NotEqualsExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.NullableType" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.NullKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.NullLiteralExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.NumericLiteralExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.NumericLiteralToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ObjectCreationExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ObjectInitializerExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ObjectKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.OmittedArraySizeExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.OmittedArraySizeExpressionToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.OmittedTypeArgument" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.OmittedTypeArgumentToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.OnKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.OpenBraceToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.OpenBracketToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.OpenParenToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.OperatorDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.OperatorKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.OperatorMemberCref" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.OrAssignmentExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.OrderByClause" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.OrderByKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.OutKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.OverrideKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.Parameter" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ParameterList" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ParamKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ParamsKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ParenthesizedExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ParenthesizedLambdaExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ParenthesizedVariableDesignation" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PartialKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PercentEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PercentToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PlusEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PlusPlusToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PlusToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PointerIndirectionExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PointerMemberAccessExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PointerType" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PostDecrementExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PostIncrementExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PragmaChecksumDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PragmaKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PragmaWarningDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PreDecrementExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PredefinedType" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PreIncrementExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PreprocessingMessageTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PrivateKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PropertyDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PropertyKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ProtectedKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.PublicKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.QualifiedCref" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.QualifiedName" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.QueryBody" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.QueryContinuation" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.QueryExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.QuestionQuestionToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.QuestionToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ReadOnlyKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ReferenceDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ReferenceKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.RefExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.RefKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.RefType" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.RefTypeExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.RefTypeKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.RefValueExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.RefValueKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.RegionDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.RegionKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.RemoveAccessorDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.RemoveKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.RestoreKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ReturnKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ReturnStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.RightShiftAssignmentExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.RightShiftExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SByteKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SealedKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SelectClause" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SelectKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SemicolonToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SetAccessorDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SetKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ShebangDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ShortKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SimpleAssignmentExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SimpleBaseType" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SimpleLambdaExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SimpleMemberAccessExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SingleLineCommentTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SingleLineDocumentationCommentTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SingleQuoteToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SingleVariableDesignation" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SizeOfExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SizeOfKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SkippedTokensTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SlashEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SlashGreaterThanToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SlashToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.StackAllocArrayCreationExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.StackAllocKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.StaticKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.StringKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.StringLiteralExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.StringLiteralToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.StructConstraint" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.StructDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.StructKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SubtractAssignmentExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SubtractExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SwitchKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SwitchSection" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.SwitchStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ThisConstructorInitializer" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ThisExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ThisKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ThrowExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ThrowKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ThrowStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.TildeToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.TrueKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.TrueLiteralExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.TryKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.TryStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.TupleElement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.TupleExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.TupleType" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.TypeArgumentList" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.TypeConstraint" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.TypeCref" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.TypeKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.TypeOfExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.TypeOfKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.TypeParameter" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.TypeParameterConstraintClause" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.TypeParameterList" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.TypeVarKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.UIntKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.ULongKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.UnaryMinusExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.UnaryPlusExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.UncheckedExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.UncheckedKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.UncheckedStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.UndefDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.UndefKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.UnderscoreToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.UnknownAccessorDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.UnsafeKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.UnsafeStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.UShortKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.UsingDirective" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.UsingKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.UsingStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.VariableDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.VariableDeclarator" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.VirtualKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.VoidKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.VolatileKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.WarningDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.WarningKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.WhenClause" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.WhenKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.WhereClause" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.WhereKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.WhileKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.WhileStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.WhitespaceTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlCDataEndToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlCDataSection" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlCDataStartToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlComment" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlCommentEndToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlCommentStartToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlCrefAttribute" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlElement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlElementEndTag" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlElementStartTag" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlEmptyElement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlEntityLiteralToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlName" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlNameAttribute" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlPrefix" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlProcessingInstruction" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlProcessingInstructionEndToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlProcessingInstructionStartToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlText" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlTextAttribute" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlTextLiteralNewLineToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.XmlTextLiteralToken" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.YieldBreakStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.YieldKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.SyntaxKind.YieldReturnStatement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.TypedConstantExtensions" Id="T:Microsoft.CodeAnalysis.CSharp.TypedConstantExtensions">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.TypedConstantExtensions.ToCSharpString(Microsoft.CodeAnalysis.TypedConstant)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.CSharp.Formatting">
    <Type Name="Microsoft.CodeAnalysis.CSharp.Formatting.BinaryOperatorSpacingOptions" Id="T:Microsoft.CodeAnalysis.CSharp.Formatting.BinaryOperatorSpacingOptions">
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.Formatting.BinaryOperatorSpacingOptions.Ignore" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.Formatting.BinaryOperatorSpacingOptions.Remove" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.Formatting.BinaryOperatorSpacingOptions.Single" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions" Id="T:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions">
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.IndentBlock" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.IndentBraces" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.IndentSwitchCaseSection" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.IndentSwitchCaseSectionWhenBlock" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.IndentSwitchSection" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.LabelPositioning" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.NewLineForCatch" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.NewLineForClausesInQuery" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.NewLineForElse" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.NewLineForFinally" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.NewLineForMembersInAnonymousTypes" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.NewLineForMembersInObjectInit" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.NewLinesForBracesInAccessors" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.NewLinesForBracesInAnonymousMethods" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.NewLinesForBracesInAnonymousTypes" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.NewLinesForBracesInControlBlocks" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.NewLinesForBracesInLambdaExpressionBody" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.NewLinesForBracesInMethods" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.NewLinesForBracesInObjectCollectionArrayInitializers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.NewLinesForBracesInProperties" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.NewLinesForBracesInTypes" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpaceAfterCast" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpaceAfterColonInBaseTypeDeclaration" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpaceAfterComma" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpaceAfterControlFlowStatementKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpaceAfterDot" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpaceAfterMethodCallName" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpaceAfterSemicolonsInForStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpaceBeforeColonInBaseTypeDeclaration" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpaceBeforeComma" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpaceBeforeDot" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpaceBeforeOpenSquareBracket" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpaceBeforeSemicolonsInForStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpaceBetweenEmptyMethodCallParentheses" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpaceBetweenEmptyMethodDeclarationParentheses" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpaceBetweenEmptySquareBrackets" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpacesIgnoreAroundVariableDeclaration" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpaceWithinCastParentheses" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpaceWithinExpressionParentheses" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpaceWithinMethodCallParentheses" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpaceWithinMethodDeclarationParenthesis" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpaceWithinOtherParentheses" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpaceWithinSquareBrackets" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpacingAfterMethodDeclarationName" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.SpacingAroundBinaryOperator" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.WrappingKeepStatementsOnSingleLine" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Formatting.CSharpFormattingOptions.WrappingPreserveSingleLine" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Formatting.LabelPositionOptions" Id="T:Microsoft.CodeAnalysis.CSharp.Formatting.LabelPositionOptions">
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.Formatting.LabelPositionOptions.LeftMost" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.Formatting.LabelPositionOptions.NoIndent" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.Formatting.LabelPositionOptions.OneLess" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.CSharp.Syntax">
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.AddBodyStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.WithExpressionBody(Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.Body" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.ExpressionBody" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax.SemicolonToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax.AddAccessors(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax.WithAccessors(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax.Accessors" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax.CloseBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax.OpenBraceToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax.WithAlias(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax.WithColonColonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax.Alias" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax.ColonColonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AliasQualifiedNameSyntax.Name" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax.WithAsyncKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax.AsyncKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousFunctionExpressionSyntax.Body" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.AddBlockStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithAsyncKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithBlock(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithDelegateKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.WithParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.AsyncKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Block" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.Body" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.DelegateKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousMethodExpressionSyntax.ParameterList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax.AddInitializers(Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax.WithInitializers(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax.WithNewKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax.CloseBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax.Initializers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax.NewKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectCreationExpressionSyntax.OpenBraceToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax.WithNameEquals(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AnonymousObjectMemberDeclaratorSyntax.NameEquals" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax.AddArguments(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax.WithArguments(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax.Arguments" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax.OpenParenToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.WithNameColon(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.WithRefKindKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.WithRefOrOutKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.NameColon" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.RefKindKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax.RefOrOutKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax.AddTypeRankSpecifiers(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax.WithInitializer(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax.WithNewKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax.Initializer" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax.NewKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayCreationExpressionSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax.AddSizes(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax.WithCloseBracketToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax.WithOpenBracketToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax.WithSizes(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax.CloseBracketToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax.OpenBracketToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax.Rank" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax.Sizes" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax.AddRankSpecifiers(Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax.WithElementType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax.WithRankSpecifiers(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ArrayRankSpecifierSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax.ElementType" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArrayTypeSyntax.RankSpecifiers" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax.WithArrowToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax.ArrowToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax.Expression" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax.WithLeft(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax.WithOperatorToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax.WithRight(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax.Left" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax.OperatorToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AssignmentExpressionSyntax.Right" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax.AddArguments(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax.WithArguments(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax.Arguments" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax.OpenParenToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax.WithNameColon(Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax.WithNameEquals(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax.NameColon" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax.NameEquals" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax.AddAttributes(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax.WithAttributes(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax.WithCloseBracketToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax.WithOpenBracketToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax.WithTarget(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax.Attributes" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax.CloseBracketToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax.OpenBracketToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax.Target" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax.AddArgumentListArguments(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax.WithArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax.ArgumentList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeSyntax.Name" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax.WithColonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax.ColonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AttributeTargetSpecifierSyntax.Identifier" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax.WithAwaitKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax.AwaitKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.AwaitExpressionSyntax.Expression" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax.WithIsActive(System.Boolean)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax.EndOfDirectiveToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BadDirectiveTriviaSyntax.IsActive" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax.AddArguments(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax.WithArguments(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseArgumentListSyntax.Arguments" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax.AddParameters(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax.WithParameters(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax.Parameters" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax.WithToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseExpressionSyntax.Token" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax.AddDeclarationVariables(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax.WithDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax.Declaration" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseFieldDeclarationSyntax.SemicolonToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax.AddTypes(Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax.WithColonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax.WithTypes(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax.ColonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax.Types" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax.AddBodyStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax.WithExpressionBody(Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax.WithParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax.Body" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax.ExpressionBody" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax.ParameterList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseMethodDeclarationSyntax.SemicolonToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax.AddParameters(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax.WithParameters(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseParameterListSyntax.Parameters" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax.AddAccessorListAccessors(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax.WithAccessorList(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax.WithExplicitInterfaceSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax.AccessorList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax.ExplicitInterfaceSpecifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BasePropertyDeclarationSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.AddBaseListTypes(Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.WithBaseList(Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.BaseList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.CloseBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.OpenBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeDeclarationSyntax.SemicolonToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax.WithLeft(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax.WithOperatorToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax.WithRight(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax.Left" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax.OperatorToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BinaryExpressionSyntax.Right" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.AddStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.CloseBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.OpenBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax.Statements" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax.AddArguments(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax.WithArguments(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax.WithCloseBracketToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax.WithOpenBracketToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax.Arguments" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax.CloseBracketToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax.OpenBracketToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax.AddParameters(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax.WithCloseBracketToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax.WithOpenBracketToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax.WithParameters(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax.CloseBracketToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax.OpenBracketToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax.Parameters" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.BranchingDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.BranchingDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BranchingDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BranchingDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BranchingDirectiveTriviaSyntax.BranchTaken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax.WithBreakKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax.BreakKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.BreakStatementSyntax.SemicolonToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.PatternSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.WhenClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax.WithColonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax.WithPattern(Microsoft.CodeAnalysis.CSharp.Syntax.PatternSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax.WithWhenClause(Microsoft.CodeAnalysis.CSharp.Syntax.WhenClauseSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax.ColonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax.Pattern" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CasePatternSwitchLabelSyntax.WhenClause" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax.WithColonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax.WithValue(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax.ColonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CaseSwitchLabelSyntax.Value" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CastExpressionSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.AddBlockStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.WithBlock(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.WithCatchKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.WithDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.WithFilter(Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.Block" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.CatchKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.Declaration" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax.Filter" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CatchDeclarationSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax.WithFilterExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax.WithWhenKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax.FilterExpression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CatchFilterClauseSyntax.WhenKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedExpressionSyntax.OpenParenToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax.AddBlockStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax.WithBlock(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax.Block" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CheckedStatementSyntax.Keyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.AddBaseListTypes(Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.AddConstraintClauses(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.AddMembers(Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.AddTypeParameterListParameters(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.WithBaseList(Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.WithConstraintClauses(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.WithMembers(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.WithTypeParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.BaseList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.CloseBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.ConstraintClauses" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.Members" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.OpenBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.SemicolonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ClassDeclarationSyntax.TypeParameterList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax.WithClassOrStructKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ClassOrStructConstraintSyntax.ClassOrStructKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.CommonForEachStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.CommonForEachStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CommonForEachStatementSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CommonForEachStatementSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CommonForEachStatementSyntax.WithForEachKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CommonForEachStatementSyntax.WithInKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CommonForEachStatementSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CommonForEachStatementSyntax.WithStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CommonForEachStatementSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CommonForEachStatementSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CommonForEachStatementSyntax.ForEachKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CommonForEachStatementSyntax.InKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CommonForEachStatementSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CommonForEachStatementSyntax.Statement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.AddExterns(Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.AddMembers(Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.AddUsings(Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.GetLoadDirectives" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.GetReferenceDirectives" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.WithEndOfFileToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.WithExterns(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.WithMembers(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.WithUsings(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.EndOfFileToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.Externs" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.Members" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CompilationUnitSyntax.Usings" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax.WithOperatorToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax.WithWhenNotNull(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax.OperatorToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalAccessExpressionSyntax.WhenNotNull" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalDirectiveTriviaSyntax.WithCondition(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalDirectiveTriviaSyntax.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalDirectiveTriviaSyntax.ConditionValue" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax.WithColonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax.WithCondition(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax.WithQuestionToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax.WithWhenFalse(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax.WithWhenTrue(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax.ColonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax.QuestionToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax.WhenFalse" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConditionalExpressionSyntax.WhenTrue" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ConstantPatternSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ConstantPatternSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstantPatternSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstantPatternSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstantPatternSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstantPatternSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstantPatternSyntax.Expression" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax.WithNewKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax.NewKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorConstraintSyntax.OpenParenToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.AddBodyStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.WithExpressionBody(Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.WithInitializer(Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.WithParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.Body" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.ExpressionBody" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.Initializer" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.ParameterList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorDeclarationSyntax.SemicolonToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax.AddArgumentListArguments(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax.WithArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax.WithColonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax.WithThisOrBaseKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax.ArgumentList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax.ColonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConstructorInitializerSyntax.ThisOrBaseKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax.WithContinueKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax.ContinueKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ContinueStatementSyntax.SemicolonToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.AddBodyStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.WithExpressionBody(Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.WithImplicitOrExplicitKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.WithOperatorKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.WithParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.Body" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.ExpressionBody" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.ImplicitOrExplicitKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.OperatorKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.ParameterList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.SemicolonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorDeclarationSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax.AddParametersParameters(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax.WithImplicitOrExplicitKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax.WithOperatorKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax.WithParameters(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax.ImplicitOrExplicitKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax.OperatorKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax.Parameters" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ConversionOperatorMemberCrefSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax.AddParameters(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax.WithCloseBracketToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax.WithOpenBracketToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax.WithParameters(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax.CloseBracketToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax.OpenBracketToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax.Parameters" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax.AddParameters(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax.WithParameters(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax.Parameters" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax.WithRefKindKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax.WithRefOrOutKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax.RefKindKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax.RefOrOutKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax" />
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax.WithDesignation(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax.Designation" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationExpressionSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationPatternSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationPatternSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationPatternSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationPatternSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationPatternSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationPatternSyntax.WithDesignation(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationPatternSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationPatternSyntax.Designation" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DeclarationPatternSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultExpressionSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax.WithColonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax.ColonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DefaultSwitchLabelSyntax.Keyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax.WithDefineKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax.WithIsActive(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax.WithName(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax.DefineKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax.EndOfDirectiveToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax.IsActive" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DefineDirectiveTriviaSyntax.Name" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.AddConstraintClauses(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.AddTypeParameterListParameters(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.WithConstraintClauses(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.WithDelegateKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.WithParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.WithReturnType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.WithTypeParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.Arity" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.ConstraintClauses" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.DelegateKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.ParameterList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.ReturnType" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.SemicolonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DelegateDeclarationSyntax.TypeParameterList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.AddBodyStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.WithExpressionBody(Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.WithParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.WithTildeToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.Body" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.ExpressionBody" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.ParameterList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.SemicolonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DestructorDeclarationSyntax.TildeToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax.GetNextDirective(System.Func{Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax.GetPreviousDirective(System.Func{Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax.GetRelatedDirectives" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax.DirectiveNameToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax.EndOfDirectiveToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DirectiveTriviaSyntax.IsActive" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.DiscardDesignationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.DiscardDesignationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DiscardDesignationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DiscardDesignationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DiscardDesignationSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DiscardDesignationSyntax.WithUnderscoreToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DiscardDesignationSyntax.UnderscoreToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax.AddContent(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax.WithContent(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax.WithEndOfComment(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax.Content" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DocumentationCommentTriviaSyntax.EndOfComment" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax.WithCondition(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax.WithDoKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax.WithStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax.WithWhileKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax.DoKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax.SemicolonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax.Statement" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.DoStatementSyntax.WhileKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax.AddArgumentListArguments(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax.WithArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax.ArgumentList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ElementAccessExpressionSyntax.Expression" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax.AddArgumentListArguments(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax.WithArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ElementBindingExpressionSyntax.ArgumentList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax.WithBranchTaken(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax.WithCondition(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax.WithConditionValue(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax.WithElifKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax.WithIsActive(System.Boolean)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax.BranchTaken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax.ConditionValue" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax.ElifKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax.EndOfDirectiveToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ElifDirectiveTriviaSyntax.IsActive" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax.WithElseKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax.WithStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax.ElseKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax.Statement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithBranchTaken(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithElseKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.WithIsActive(System.Boolean)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.BranchTaken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.ElseKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.EndOfDirectiveToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ElseDirectiveTriviaSyntax.IsActive" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EmptyStatementSyntax.SemicolonToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax.WithEndIfKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax.WithIsActive(System.Boolean)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax.EndIfKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax.EndOfDirectiveToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EndIfDirectiveTriviaSyntax.IsActive" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax.WithEndRegionKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax.WithIsActive(System.Boolean)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax.EndOfDirectiveToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax.EndRegionKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EndRegionDirectiveTriviaSyntax.IsActive" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.AddBaseListTypes(Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.AddMembers(Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.WithBaseList(Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.WithEnumKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.WithMembers(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.BaseList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.CloseBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.EnumKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.Members" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.OpenBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EnumDeclarationSyntax.SemicolonToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax.WithEqualsValue(Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax.EqualsValue" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EnumMemberDeclarationSyntax.Identifier" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax.WithEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax.WithValue(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax.EqualsToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax.Value" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax.WithErrorKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax.WithIsActive(System.Boolean)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax.EndOfDirectiveToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax.ErrorKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ErrorDirectiveTriviaSyntax.IsActive" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.AddAccessorListAccessors(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.WithAccessorList(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.WithEventKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.WithExplicitInterfaceSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.AccessorList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.EventKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.ExplicitInterfaceSpecifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EventDeclarationSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax.AddDeclarationVariables(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax.WithDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax.WithEventKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax.Declaration" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax.EventKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.EventFieldDeclarationSyntax.SemicolonToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax.WithDotToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax.DotToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax.Name" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax.AllowsAnyExpression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionStatementSyntax.SemicolonToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax" />
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax.WithAliasKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax.WithExternKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax.AliasKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax.ExternKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax.SemicolonToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax.AddDeclarationVariables(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax.WithDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax.Declaration" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.FieldDeclarationSyntax.SemicolonToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax.AddBlockStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax.WithBlock(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax.WithFinallyKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax.Block" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax.FinallyKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax.AddDeclarationVariables(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax.WithDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax.WithFixedKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax.WithStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax.Declaration" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax.FixedKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.FixedStatementSyntax.Statement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax.WithForEachKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax.WithInKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax.WithStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax.ForEachKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax.InKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax.Statement" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachStatementSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax.WithForEachKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax.WithInKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax.WithStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax.WithVariable(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax.ForEachKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax.InKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax.Statement" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForEachVariableStatementSyntax.Variable" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.AddIncrementors(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.AddInitializers(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithCondition(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithFirstSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithForKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithIncrementors(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithInitializers(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithSecondSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.WithStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Declaration" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.FirstSemicolonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.ForKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Incrementors" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Initializers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.SecondSemicolonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ForStatementSyntax.Statement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax.WithFromKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax.WithInKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax.FromKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax.InKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.AddTypeArgumentListArguments(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.WithTypeArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.IsUnboundGenericName" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.GenericNameSyntax.TypeArgumentList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax.WithStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.GlobalStatementSyntax.Statement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax.WithCaseOrDefaultKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax.WithGotoKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax.CaseOrDefaultKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax.GotoKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.GotoStatementSyntax.SemicolonToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.WithByExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.WithByKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.WithGroupExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.WithGroupKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.ByExpression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.ByKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.GroupExpression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.GroupClauseSyntax.GroupKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax.Identifier" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax.WithBranchTaken(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax.WithCondition(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax.WithConditionValue(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax.WithIfKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax.WithIsActive(System.Boolean)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax.BranchTaken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax.ConditionValue" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax.EndOfDirectiveToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax.IfKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IfDirectiveTriviaSyntax.IsActive" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithCondition(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithElse(Microsoft.CodeAnalysis.CSharp.Syntax.ElseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithIfKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.WithStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Else" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.IfKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IfStatementSyntax.Statement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax.AddCommas(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax.AddInitializerExpressions(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax.WithCloseBracketToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax.WithCommas(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax.WithInitializer(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax.WithNewKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax.WithOpenBracketToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax.CloseBracketToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax.Commas" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax.Initializer" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax.NewKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitArrayCreationExpressionSyntax.OpenBracketToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax.AddArgumentListArguments(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax.WithArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitElementAccessSyntax.ArgumentList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax.AddInitializerExpressions(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax.WithCloseBracketToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax.WithInitializer(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax.WithOpenBracketToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax.WithStackAllocKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax.CloseBracketToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax.Initializer" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax.OpenBracketToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ImplicitStackAllocArrayCreationExpressionSyntax.StackAllocKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IncompleteMemberSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.AddAccessorListAccessors(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.WithAccessorList(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.WithExplicitInterfaceSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.WithExpressionBody(Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.WithParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.WithSemicolon(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.WithThisKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.AccessorList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.ExplicitInterfaceSpecifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.ExpressionBody" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.ParameterList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.Semicolon" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.SemicolonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.ThisKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerDeclarationSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax.AddParametersParameters(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax.WithParameters(Microsoft.CodeAnalysis.CSharp.Syntax.CrefBracketedParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax.WithThisKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax.Parameters" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IndexerMemberCrefSyntax.ThisKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.AddExpressions(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.WithExpressions(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.CloseBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.Expressions" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax.OpenBraceToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.InstanceExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.InstanceExpressionSyntax" />
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.AddBaseListTypes(Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.AddConstraintClauses(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.AddMembers(Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.AddTypeParameterListParameters(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.WithBaseList(Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.WithConstraintClauses(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.WithMembers(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.WithTypeParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.BaseList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.CloseBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.ConstraintClauses" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.Members" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.OpenBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.SemicolonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterfaceDeclarationSyntax.TypeParameterList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringContentSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringContentSyntax" />
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax.AddContents(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringContentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringContentSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax.WithContents(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringContentSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax.WithStringEndToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax.WithStringStartToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax.Contents" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax.StringEndToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringExpressionSyntax.StringStartToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringTextSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringTextSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringTextSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringTextSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringTextSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringTextSyntax.WithTextToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolatedStringTextSyntax.TextToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.WithCommaToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.WithValue(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.CommaToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax.Value" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax.WithColonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax.WithFormatStringToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax.ColonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax.FormatStringToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax.WithAlignmentClause(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationAlignmentClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax.WithFormatClause(Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationFormatClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax.AlignmentClause" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax.CloseBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax.FormatClause" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InterpolationSyntax.OpenBraceToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax.AddArgumentListArguments(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax.WithArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax.ArgumentList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.InvocationExpressionSyntax.Expression" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.IsPatternExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.IsPatternExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IsPatternExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IsPatternExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IsPatternExpressionSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.PatternSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IsPatternExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IsPatternExpressionSyntax.WithIsKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.IsPatternExpressionSyntax.WithPattern(Microsoft.CodeAnalysis.CSharp.Syntax.PatternSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IsPatternExpressionSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IsPatternExpressionSyntax.IsKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.IsPatternExpressionSyntax.Pattern" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithEqualsKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithInExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithInKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithInto(Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithJoinKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithLeftExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithOnKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithRightExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.EqualsKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.InExpression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.InKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Into" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.JoinKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.LeftExpression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.OnKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.RightExpression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.JoinClauseSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax.WithIntoKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.JoinIntoClauseSyntax.IntoKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax.WithColonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax.WithStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax.ColonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LabeledStatementSyntax.Statement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.LambdaExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.LambdaExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LambdaExpressionSyntax.WithArrowToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LambdaExpressionSyntax.WithAsyncKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LambdaExpressionSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LambdaExpressionSyntax.ArrowToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.WithEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.WithLetKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.EqualsToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LetClauseSyntax.LetKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax.WithFile(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax.WithIsActive(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax.WithLine(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax.WithLineKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax.EndOfDirectiveToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax.File" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax.IsActive" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax.Line" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LineDirectiveTriviaSyntax.LineKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax.WithToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LiteralExpressionSyntax.Token" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.LoadDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.LoadDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LoadDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LoadDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LoadDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LoadDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LoadDirectiveTriviaSyntax.WithFile(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LoadDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LoadDirectiveTriviaSyntax.WithIsActive(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LoadDirectiveTriviaSyntax.WithLoadKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LoadDirectiveTriviaSyntax.EndOfDirectiveToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LoadDirectiveTriviaSyntax.File" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LoadDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LoadDirectiveTriviaSyntax.IsActive" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LoadDirectiveTriviaSyntax.LoadKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax.AddDeclarationVariables(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax.WithDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax.Declaration" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax.IsConst" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LocalDeclarationStatementSyntax.SemicolonToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.AddBodyStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.AddConstraintClauses(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.AddTypeParameterListParameters(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.WithConstraintClauses(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.WithExpressionBody(Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.WithParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.WithReturnType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.WithTypeParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.Body" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.ConstraintClauses" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.ExpressionBody" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.ParameterList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.ReturnType" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.SemicolonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LocalFunctionStatementSyntax.TypeParameterList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax.WithLockKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax.WithStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax.LockKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.LockStatementSyntax.Statement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.MakeRefExpressionSyntax.OpenParenToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax.WithOperatorToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.MemberAccessExpressionSyntax.OperatorToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax.WithOperatorToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.MemberBindingExpressionSyntax.OperatorToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.MemberCrefSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.MemberCrefSyntax" />
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax" />
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.AddBodyStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.AddConstraintClauses(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.AddTypeParameterListParameters(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.WithConstraintClauses(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.WithExplicitInterfaceSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.WithExpressionBody(Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.WithParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.WithReturnType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.WithTypeParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.Arity" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.Body" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.ConstraintClauses" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.ExplicitInterfaceSpecifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.ExpressionBody" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.ParameterList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.ReturnType" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.SemicolonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.MethodDeclarationSyntax.TypeParameterList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax.WithColonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax.ColonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.NameColonSyntax.Name" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax.WithEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax.EqualsToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax.Name" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax.AddParametersParameters(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax.WithParameters(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.NameMemberCrefSyntax.Parameters" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.AddExterns(Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.AddMembers(Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.AddUsings(Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.WithExterns(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExternAliasDirectiveSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.WithMembers(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.WithNamespaceKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.WithUsings(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.CloseBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.Externs" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.Members" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.NamespaceKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.OpenBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.SemicolonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.NamespaceDeclarationSyntax.Usings" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax">
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax.Arity" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax.WithElementType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax.WithQuestionToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax.ElementType" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.NullableTypeSyntax.QuestionToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax.AddArgumentListArguments(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax.WithArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax.WithInitializer(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax.WithNewKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax.ArgumentList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax.Initializer" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax.NewKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ObjectCreationExpressionSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax.WithOmittedArraySizeExpressionToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.OmittedArraySizeExpressionSyntax.OmittedArraySizeExpressionToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax.WithOmittedTypeArgumentToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.OmittedTypeArgumentSyntax.OmittedTypeArgumentToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.AddBodyStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.WithExpressionBody(Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.WithOperatorKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.WithOperatorToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.WithParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.WithReturnType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.Body" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.ExpressionBody" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.OperatorKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.OperatorToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.ParameterList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.ReturnType" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorDeclarationSyntax.SemicolonToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax.AddParametersParameters(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax.WithOperatorKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax.WithOperatorToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax.WithParameters(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax.OperatorKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax.OperatorToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.OperatorMemberCrefSyntax.Parameters" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax.AddOrderings(Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax.WithOrderByKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax.WithOrderings(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax.OrderByKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.OrderByClauseSyntax.Orderings" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax.WithAscendingOrDescendingKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax.AscendingOrDescendingKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.OrderingSyntax.Expression" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax.AddParameters(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax.WithParameters(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax.Parameters" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.WithDefault(Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.Default" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedExpressionSyntax.OpenParenToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax.WithArrowToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax.WithAsyncKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax.WithParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax.ArrowToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax.AsyncKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax.Body" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedLambdaExpressionSyntax.ParameterList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedVariableDesignationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedVariableDesignationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedVariableDesignationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedVariableDesignationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedVariableDesignationSyntax.AddVariables(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedVariableDesignationSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedVariableDesignationSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedVariableDesignationSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedVariableDesignationSyntax.WithVariables(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedVariableDesignationSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedVariableDesignationSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ParenthesizedVariableDesignationSyntax.Variables" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.PatternSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.PatternSyntax" />
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax.WithAsteriskToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax.WithElementType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax.AsteriskToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PointerTypeSyntax.ElementType" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax.WithOperand(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax.WithOperatorToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax.Operand" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PostfixUnaryExpressionSyntax.OperatorToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax.WithBytes(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax.WithChecksumKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax.WithFile(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax.WithGuid(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax.WithIsActive(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax.WithPragmaKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax.Bytes" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax.ChecksumKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax.EndOfDirectiveToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax.File" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax.Guid" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax.IsActive" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaChecksumDirectiveTriviaSyntax.PragmaKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax.AddErrorCodes(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax.WithDisableOrRestoreKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax.WithErrorCodes(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax.WithIsActive(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax.WithPragmaKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax.WithWarningKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax.DisableOrRestoreKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax.EndOfDirectiveToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax.ErrorCodes" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax.IsActive" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax.PragmaKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PragmaWarningDirectiveTriviaSyntax.WarningKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PredefinedTypeSyntax.Keyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.WithOperand(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.WithOperatorToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.Operand" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PrefixUnaryExpressionSyntax.OperatorToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.AddAccessorListAccessors(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorDeclarationSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.WithAccessorList(Microsoft.CodeAnalysis.CSharp.Syntax.AccessorListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.WithExplicitInterfaceSpecifier(Microsoft.CodeAnalysis.CSharp.Syntax.ExplicitInterfaceSpecifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.WithExpressionBody(Microsoft.CodeAnalysis.CSharp.Syntax.ArrowExpressionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.WithInitializer(Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.WithSemicolon(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.AccessorList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.ExplicitInterfaceSpecifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.ExpressionBody" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.Initializer" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.Semicolon" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.SemicolonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.PropertyDeclarationSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.MemberCrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax.WithContainer(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax.WithDotToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax.WithMember(Microsoft.CodeAnalysis.CSharp.Syntax.MemberCrefSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax.Container" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax.DotToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedCrefSyntax.Member" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.WithDotToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.WithLeft(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.WithRight(Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.DotToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Left" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.QualifiedNameSyntax.Right" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax.AddClauses(Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax.WithClauses(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax.WithContinuation(Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax.WithSelectOrGroup(Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax.Clauses" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax.Continuation" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax.SelectOrGroup" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax" />
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax.AddBodyClauses(Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax.WithIntoKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax.Body" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.QueryContinuationSyntax.IntoKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.AddBodyClauses(Microsoft.CodeAnalysis.CSharp.Syntax.QueryClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.Syntax.QueryBodySyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.WithFromClause(Microsoft.CodeAnalysis.CSharp.Syntax.FromClauseSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.Body" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.QueryExpressionSyntax.FromClause" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax.WithFile(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax.WithIsActive(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax.WithReferenceKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax.EndOfDirectiveToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax.File" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax.IsActive" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ReferenceDirectiveTriviaSyntax.ReferenceKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.RefExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.RefExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefExpressionSyntax.WithRefKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefExpressionSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefExpressionSyntax.RefKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeExpressionSyntax.OpenParenToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeSyntax.WithReadOnlyKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeSyntax.WithRefKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeSyntax.ReadOnlyKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeSyntax.RefKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefTypeSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.WithComma(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.Comma" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.RefValueExpressionSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.WithIsActive(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.WithRegionKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.EndOfDirectiveToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.IsActive" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.RegionDirectiveTriviaSyntax.RegionKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax.WithReturnKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax.ReturnKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ReturnStatementSyntax.SemicolonToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax.WithSelectKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SelectClauseSyntax.SelectKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.SelectOrGroupClauseSyntax" />
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ShebangDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ShebangDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ShebangDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ShebangDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ShebangDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ShebangDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ShebangDirectiveTriviaSyntax.WithExclamationToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ShebangDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ShebangDirectiveTriviaSyntax.WithIsActive(System.Boolean)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ShebangDirectiveTriviaSyntax.EndOfDirectiveToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ShebangDirectiveTriviaSyntax.ExclamationToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ShebangDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ShebangDirectiveTriviaSyntax.IsActive" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.SimpleBaseTypeSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleBaseTypeSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleBaseTypeSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleBaseTypeSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleBaseTypeSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleBaseTypeSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleBaseTypeSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.AddParameterAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.AddParameterModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.WithArrowToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.WithAsyncKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.WithBody(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.WithParameter(Microsoft.CodeAnalysis.CSharp.Syntax.ParameterSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.ArrowToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.AsyncKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Body" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleLambdaExpressionSyntax.Parameter" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SimpleNameSyntax.Identifier" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SingleVariableDesignationSyntax.Identifier" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SizeOfExpressionSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax.AddTokens(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax.WithTokens(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SkippedTokensTriviaSyntax.Tokens" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax.WithInitializer(Microsoft.CodeAnalysis.CSharp.Syntax.InitializerExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax.WithStackAllocKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax.Initializer" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax.StackAllocKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.StackAllocArrayCreationExpressionSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax" />
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.AddBaseListTypes(Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.AddConstraintClauses(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.AddMembers(Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.AddTypeParameterListParameters(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.WithBaseList(Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.WithConstraintClauses(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.WithMembers(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.WithTypeParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.BaseList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.CloseBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.ConstraintClauses" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.Members" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.OpenBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.SemicolonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.StructDeclarationSyntax.TypeParameterList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax">
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.StructuredTriviaSyntax.ParentTrivia" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax.WithColonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax.ColonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax.Keyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax.AddLabels(Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax.AddStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax.WithLabels(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.SwitchLabelSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax.Labels" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax.Statements" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.AddSections(Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.WithSections(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.SwitchSectionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.WithSwitchKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.CloseBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.OpenBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.Sections" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.SwitchStatementSyntax.SwitchKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax.WithToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ThisExpressionSyntax.Token" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ThrowExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ThrowExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ThrowExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ThrowExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ThrowExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ThrowExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ThrowExpressionSyntax.WithThrowKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ThrowExpressionSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ThrowExpressionSyntax.ThrowKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax.WithThrowKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax.SemicolonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.ThrowStatementSyntax.ThrowKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax.AddBlockStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax.AddCatches(Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax.WithBlock(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax.WithCatches(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CatchClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax.WithFinally(Microsoft.CodeAnalysis.CSharp.Syntax.FinallyClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax.WithTryKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax.Block" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax.Catches" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax.Finally" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TryStatementSyntax.TryKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax.AddArguments(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax.WithArguments(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax.Arguments" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TupleExpressionSyntax.OpenParenToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax.AddElements(Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax.WithElements(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TupleElementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax.Elements" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TupleTypeSyntax.OpenParenToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax.AddArguments(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax.WithArguments(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax.WithGreaterThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax.WithLessThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax.Arguments" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax.GreaterThanToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeArgumentListSyntax.LessThanToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeConstraintSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeCrefSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.AddBaseListTypes(Microsoft.CodeAnalysis.CSharp.Syntax.BaseTypeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.AddConstraintClauses(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.AddMembers(Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.AddTypeParameterListParameters(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.WithBaseList(Microsoft.CodeAnalysis.CSharp.Syntax.BaseListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.WithConstraintClauses(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.WithMembers(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.MemberDeclarationSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.WithTypeParameterList(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.Arity" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.ConstraintClauses" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.Members" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeDeclarationSyntax.TypeParameterList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeOfExpressionSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.AddConstraints(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WithColonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WithConstraints(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WithWhereKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.ColonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Constraints" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintClauseSyntax.WhereKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterConstraintSyntax" />
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax.AddParameters(Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax.WithGreaterThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax.WithLessThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax.WithParameters(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax.GreaterThanToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax.LessThanToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterListSyntax.Parameters" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax.AddAttributeLists(Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax.WithVarianceKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeParameterSyntax.VarianceKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax">
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax.IsUnmanaged" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax.IsVar" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax.WithIsActive(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax.WithName(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax.WithUndefKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax.EndOfDirectiveToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax.IsActive" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.UndefDirectiveTriviaSyntax.UndefKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax.AddBlockStatements(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax.WithBlock(Microsoft.CodeAnalysis.CSharp.Syntax.BlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax.WithUnsafeKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax.Block" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.UnsafeStatementSyntax.UnsafeKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithAlias(Microsoft.CodeAnalysis.CSharp.Syntax.NameEqualsSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.NameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithStaticKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.WithUsingKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Alias" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.SemicolonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.StaticKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.UsingDirectiveSyntax.UsingKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax.WithDeclaration(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax.WithStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax.WithUsingKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax.Declaration" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax.Statement" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.UsingStatementSyntax.UsingKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax.AddVariables(Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax.WithType(Microsoft.CodeAnalysis.CSharp.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax.WithVariables(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax.Type" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclarationSyntax.Variables" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.AddArgumentListArguments(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.WithArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.WithInitializer(Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.ArgumentList" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.Initializer" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDesignationSyntax" />
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax.WithEndOfDirectiveToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax.WithIsActive(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax.WithWarningKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax.EndOfDirectiveToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax.IsActive" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.WarningDirectiveTriviaSyntax.WarningKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.WhenClauseSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.WhenClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WhenClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WhenClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WhenClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WhenClauseSyntax.WithCondition(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WhenClauseSyntax.WithWhenKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.WhenClauseSyntax.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.WhenClauseSyntax.WhenKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax.WithCondition(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax.WithWhereKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.WhereClauseSyntax.WhereKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax.WithCondition(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax.WithStatement(Microsoft.CodeAnalysis.CSharp.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax.WithWhileKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax.Statement" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.WhileStatementSyntax.WhileKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax.WithEndQuoteToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax.WithEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax.WithStartQuoteToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax.EndQuoteToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax.EqualsToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax.StartQuoteToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax.AddTextTokens(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax.WithEndCDataToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax.WithStartCDataToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax.WithTextTokens(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax.EndCDataToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax.StartCDataToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCDataSectionSyntax.TextTokens" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax.AddTextTokens(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax.WithLessThanExclamationMinusMinusToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax.WithMinusMinusGreaterThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax.WithTextTokens(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax.LessThanExclamationMinusMinusToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax.MinusMinusGreaterThanToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCommentSyntax.TextTokens" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax.WithCref(Microsoft.CodeAnalysis.CSharp.Syntax.CrefSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax.WithEndQuoteToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax.WithEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax.WithStartQuoteToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax.Cref" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax.EndQuoteToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax.EqualsToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlCrefAttributeSyntax.StartQuoteToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax.WithGreaterThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax.WithLessThanSlashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax.GreaterThanToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax.LessThanSlashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax.Name" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax.AddAttributes(Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax.WithAttributes(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax.WithGreaterThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax.WithLessThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax.Attributes" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax.GreaterThanToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax.LessThanToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax.Name" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax.AddContent(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax.AddStartTagAttributes(Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax},Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax.WithContent(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax.WithEndTag(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementEndTagSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax.WithStartTag(Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementStartTagSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax.Content" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax.EndTag" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlElementSyntax.StartTag" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax.AddAttributes(Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax.WithAttributes(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.XmlAttributeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax.WithLessThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax.WithSlashGreaterThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax.Attributes" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax.LessThanToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlEmptyElementSyntax.SlashGreaterThanToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeElementKind" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeElementKind">
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeElementKind.Parameter" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeElementKind.ParameterReference" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeElementKind.TypeParameter" />
      <Member Id="F:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeElementKind.TypeParameterReference" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax.WithEndQuoteToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax.WithEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax.WithIdentifier(Microsoft.CodeAnalysis.CSharp.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax.WithStartQuoteToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax.EndQuoteToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax.EqualsToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameAttributeSyntax.StartQuoteToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax.WithLocalName(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax.WithPrefix(Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax.LocalName" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax.Prefix" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.XmlNodeSyntax" />
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax.WithColonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax.WithPrefix(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax.ColonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlPrefixSyntax.Prefix" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax.AddTextTokens(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax.WithEndProcessingInstructionToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax.WithStartProcessingInstructionToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax.WithTextTokens(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax.EndProcessingInstructionToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax.StartProcessingInstructionToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlProcessingInstructionSyntax.TextTokens" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax.AddTextTokens(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax.Update(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax.WithEndQuoteToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax.WithEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax.WithName(Microsoft.CodeAnalysis.CSharp.Syntax.XmlNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax.WithStartQuoteToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax.WithTextTokens(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax.EndQuoteToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax.EqualsToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax.StartQuoteToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextAttributeSyntax.TextTokens" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax.AddTextTokens(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax.Update(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax.WithTextTokens(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.XmlTextSyntax.TextTokens" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax" Id="T:Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax.WithExpression(Microsoft.CodeAnalysis.CSharp.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax.WithReturnOrBreakKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax.WithSemicolonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax.WithYieldKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax.ReturnOrBreakKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax.SemicolonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.CSharp.Syntax.YieldStatementSyntax.YieldKeyword" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Diagnostics">
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.AnalysisContext" Id="T:Microsoft.CodeAnalysis.Diagnostics.AnalysisContext">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.ConfigureGeneratedCodeAnalysis(Microsoft.CodeAnalysis.Diagnostics.GeneratedCodeAnalysisFlags)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.EnableConcurrentExecution" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterCodeBlockAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterCodeBlockStartAction``1(System.Action{Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext{``0}})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterCompilationAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterCompilationStartAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterOperationAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.OperationAnalysisContext},Microsoft.CodeAnalysis.OperationKind[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterOperationAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.OperationAnalysisContext},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.OperationKind})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterOperationBlockAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterOperationBlockStartAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterSemanticModelAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterSymbolAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext},Microsoft.CodeAnalysis.SymbolKind[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterSymbolAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.SymbolKind})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterSyntaxNodeAction``1(System.Action{Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext},``0[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterSyntaxNodeAction``1(System.Action{Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext},System.Collections.Immutable.ImmutableArray{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.RegisterSyntaxTreeAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalysisContext.TryGetValue``1(Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Diagnostics.SourceTextValueProvider{``0},``0@)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.AnalysisResult" Id="T:Microsoft.CodeAnalysis.Diagnostics.AnalysisResult">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalysisResult.GetAllDiagnostics" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalysisResult.GetAllDiagnostics(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer)" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.AnalysisResult.Analyzers" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.AnalysisResult.AnalyzerTelemetryInfo" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.AnalysisResult.CompilationDiagnostics" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.AnalysisResult.SemanticDiagnostics" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.AnalysisResult.SyntaxDiagnostics" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference" Id="T:Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference">
      <Member Id="E:Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.AnalyzerLoadFailed" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.#ctor(System.String,Microsoft.CodeAnalysis.IAnalyzerAssemblyLoader)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.Equals(Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.GetAnalyzers(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.GetAnalyzersForAllLanguages" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.GetAssembly" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.GetHashCode" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.Display" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.FullPath" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference.Id" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.AnalyzerImageReference" Id="T:Microsoft.CodeAnalysis.Diagnostics.AnalyzerImageReference">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalyzerImageReference.#ctor(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer},System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalyzerImageReference.GetAnalyzers(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalyzerImageReference.GetAnalyzersForAllLanguages" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.AnalyzerImageReference.Display" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.AnalyzerImageReference.FullPath" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.AnalyzerImageReference.Id" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs" Id="T:Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.#ctor(Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode,System.String,System.Exception,System.String)" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.ErrorCode" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.Exception" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.Message" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.TypeName" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs/FailureErrorCode" Id="T:Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode">
      <Member Id="F:Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode.NoAnalyzers" />
      <Member Id="F:Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode.None" />
      <Member Id="F:Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode.UnableToCreateAnalyzer" />
      <Member Id="F:Microsoft.CodeAnalysis.Diagnostics.AnalyzerLoadFailureEventArgs.FailureErrorCode.UnableToLoadAnalyzer" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions" Id="T:Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions.#ctor(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.AdditionalText})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions.WithAdditionalFiles(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.AdditionalText})" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions.AdditionalFiles" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference" Id="T:Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference.GetAnalyzers(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference.GetAnalyzersForAllLanguages" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference.Display" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference.FullPath" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference.Id" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext" Id="T:Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.#ctor(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Action{Microsoft.CodeAnalysis.Diagnostic},System.Func{Microsoft.CodeAnalysis.Diagnostic,System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.ReportDiagnostic(Microsoft.CodeAnalysis.Diagnostic)" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.CancellationToken" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.CodeBlock" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.Options" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.OwningSymbol" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.SemanticModel" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext`1" Id="T:Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext`1">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext`1.#ctor(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext`1.RegisterCodeBlockEndAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext`1.RegisterSyntaxNodeAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext},`0[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext`1.RegisterSyntaxNodeAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext},System.Collections.Immutable.ImmutableArray{`0})" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext`1.CancellationToken" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext`1.CodeBlock" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext`1.Options" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext`1.OwningSymbol" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext`1.SemanticModel" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext" Id="T:Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.#ctor(Microsoft.CodeAnalysis.Compilation,Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Action{Microsoft.CodeAnalysis.Diagnostic},System.Func{Microsoft.CodeAnalysis.Diagnostic,System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.ReportDiagnostic(Microsoft.CodeAnalysis.Diagnostic)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.TryGetValue``1(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeValueProvider{``0},``0@)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.TryGetValue``1(Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Diagnostics.SourceTextValueProvider{``0},``0@)" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.CancellationToken" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.Compilation" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext.Options" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext" Id="T:Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.#ctor(Microsoft.CodeAnalysis.Compilation,Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterCodeBlockAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterCodeBlockStartAction``1(System.Action{Microsoft.CodeAnalysis.Diagnostics.CodeBlockStartAnalysisContext{``0}})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterCompilationEndAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.CompilationAnalysisContext})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterOperationAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.OperationAnalysisContext},Microsoft.CodeAnalysis.OperationKind[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterOperationAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.OperationAnalysisContext},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.OperationKind})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterOperationBlockAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterOperationBlockStartAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterSemanticModelAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterSymbolAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext},Microsoft.CodeAnalysis.SymbolKind[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterSymbolAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.SymbolKind})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterSyntaxNodeAction``1(System.Action{Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext},``0[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterSyntaxNodeAction``1(System.Action{Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext},System.Collections.Immutable.ImmutableArray{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.RegisterSyntaxTreeAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.TryGetValue``1(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeValueProvider{``0},``0@)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.TryGetValue``1(Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Diagnostics.SourceTextValueProvider{``0},``0@)" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.CancellationToken" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.Compilation" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CompilationStartAnalysisContext.Options" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers" Id="T:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.#ctor(Microsoft.CodeAnalysis.Compilation,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer},Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.#ctor(Microsoft.CodeAnalysis.Compilation,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer},Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.ClearAnalyzerState(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAllDiagnosticsAsync" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAllDiagnosticsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalysisResultAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerCompilationDiagnosticsAsync(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerCompilationDiagnosticsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerDiagnosticsAsync" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerDiagnosticsAsync(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerDiagnosticsAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerSemanticDiagnosticsAsync(Microsoft.CodeAnalysis.SemanticModel,System.Nullable{Microsoft.CodeAnalysis.Text.TextSpan},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerSemanticDiagnosticsAsync(Microsoft.CodeAnalysis.SemanticModel,System.Nullable{Microsoft.CodeAnalysis.Text.TextSpan},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerSyntaxDiagnosticsAsync(Microsoft.CodeAnalysis.SyntaxTree,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerSyntaxDiagnosticsAsync(Microsoft.CodeAnalysis.SyntaxTree,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetAnalyzerTelemetryInfoAsync(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetEffectiveDiagnostics(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostic},Microsoft.CodeAnalysis.Compilation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.GetEffectiveDiagnostics(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostic},Microsoft.CodeAnalysis.Compilation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.IsDiagnosticAnalyzerSuppressed(Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer,Microsoft.CodeAnalysis.CompilationOptions,System.Action{System.Exception,Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer,Microsoft.CodeAnalysis.Diagnostic})" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.AnalysisOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.Analyzers" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.CancellationToken" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzers.Compilation" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions" Id="T:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions.#ctor(Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Action{System.Exception,Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer,Microsoft.CodeAnalysis.Diagnostic},System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions.#ctor(Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Action{System.Exception,Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer,Microsoft.CodeAnalysis.Diagnostic},System.Boolean,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions.#ctor(Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Action{System.Exception,Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer,Microsoft.CodeAnalysis.Diagnostic},System.Boolean,System.Boolean,System.Boolean,System.Func{System.Exception,System.Boolean})" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions.AnalyzerExceptionFilter" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions.ConcurrentAnalysis" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions.LogAnalyzerExecutionTime" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions.OnAnalyzerException" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions.Options" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions.ReportSuppressedDiagnostics" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer" Id="T:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.Initialize(Microsoft.CodeAnalysis.Diagnostics.AnalysisContext)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer.SupportedDiagnostics" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute" Id="T:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute.#ctor(System.String,System.String[])" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerAttribute.Languages" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerExtensions" Id="T:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerExtensions">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerExtensions.WithAnalyzers(Microsoft.CodeAnalysis.Compilation,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer},Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzerExtensions.WithAnalyzers(Microsoft.CodeAnalysis.Compilation,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer},Microsoft.CodeAnalysis.Diagnostics.CompilationWithAnalyzersOptions)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.GeneratedCodeAnalysisFlags" Id="T:Microsoft.CodeAnalysis.Diagnostics.GeneratedCodeAnalysisFlags">
      <Member Id="F:Microsoft.CodeAnalysis.Diagnostics.GeneratedCodeAnalysisFlags.Analyze" />
      <Member Id="F:Microsoft.CodeAnalysis.Diagnostics.GeneratedCodeAnalysisFlags.None" />
      <Member Id="F:Microsoft.CodeAnalysis.Diagnostics.GeneratedCodeAnalysisFlags.ReportDiagnostics" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.OperationAnalysisContext" Id="T:Microsoft.CodeAnalysis.Diagnostics.OperationAnalysisContext">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.OperationAnalysisContext.#ctor(Microsoft.CodeAnalysis.IOperation,Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Compilation,Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Action{Microsoft.CodeAnalysis.Diagnostic},System.Func{Microsoft.CodeAnalysis.Diagnostic,System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.OperationAnalysisContext.GetControlFlowGraph" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.OperationAnalysisContext.ReportDiagnostic(Microsoft.CodeAnalysis.Diagnostic)" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.OperationAnalysisContext.CancellationToken" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.OperationAnalysisContext.Compilation" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.OperationAnalysisContext.ContainingSymbol" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.OperationAnalysisContext.Operation" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.OperationAnalysisContext.Options" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext" Id="T:Microsoft.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext.#ctor(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.IOperation},Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Compilation,Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Action{Microsoft.CodeAnalysis.Diagnostic},System.Func{Microsoft.CodeAnalysis.Diagnostic,System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext.GetControlFlowGraph(Microsoft.CodeAnalysis.IOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext.ReportDiagnostic(Microsoft.CodeAnalysis.Diagnostic)" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext.CancellationToken" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext.Compilation" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext.OperationBlocks" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext.Options" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext.OwningSymbol" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext" Id="T:Microsoft.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext.#ctor(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.IOperation},Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Compilation,Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext.GetControlFlowGraph(Microsoft.CodeAnalysis.IOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext.RegisterOperationAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.OperationAnalysisContext},Microsoft.CodeAnalysis.OperationKind[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext.RegisterOperationAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.OperationAnalysisContext},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.OperationKind})" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext.RegisterOperationBlockEndAction(System.Action{Microsoft.CodeAnalysis.Diagnostics.OperationBlockAnalysisContext})" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext.CancellationToken" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext.Compilation" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext.OperationBlocks" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext.Options" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.OperationBlockStartAnalysisContext.OwningSymbol" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext" Id="T:Microsoft.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext.#ctor(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Action{Microsoft.CodeAnalysis.Diagnostic},System.Func{Microsoft.CodeAnalysis.Diagnostic,System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext.ReportDiagnostic(Microsoft.CodeAnalysis.Diagnostic)" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext.CancellationToken" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext.Options" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.SemanticModelAnalysisContext.SemanticModel" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.SourceTextValueProvider`1" Id="T:Microsoft.CodeAnalysis.Diagnostics.SourceTextValueProvider`1">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.SourceTextValueProvider`1.#ctor(System.Func{Microsoft.CodeAnalysis.Text.SourceText,`0},System.Collections.Generic.IEqualityComparer{Microsoft.CodeAnalysis.Text.SourceText})" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.SuppressionInfo" Id="T:Microsoft.CodeAnalysis.Diagnostics.SuppressionInfo">
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.SuppressionInfo.Attribute" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.SuppressionInfo.Id" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext" Id="T:Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext.#ctor(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Compilation,Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Action{Microsoft.CodeAnalysis.Diagnostic},System.Func{Microsoft.CodeAnalysis.Diagnostic,System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext.ReportDiagnostic(Microsoft.CodeAnalysis.Diagnostic)" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext.CancellationToken" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext.Compilation" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext.Options" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.SymbolAnalysisContext.Symbol" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext" Id="T:Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.#ctor(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Action{Microsoft.CodeAnalysis.Diagnostic},System.Func{Microsoft.CodeAnalysis.Diagnostic,System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.#ctor(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Action{Microsoft.CodeAnalysis.Diagnostic},System.Func{Microsoft.CodeAnalysis.Diagnostic,System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.ReportDiagnostic(Microsoft.CodeAnalysis.Diagnostic)" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.CancellationToken" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.Compilation" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.ContainingSymbol" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.Node" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.Options" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.SyntaxNodeAnalysisContext.SemanticModel" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext" Id="T:Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.#ctor(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Action{Microsoft.CodeAnalysis.Diagnostic},System.Func{Microsoft.CodeAnalysis.Diagnostic,System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.ReportDiagnostic(Microsoft.CodeAnalysis.Diagnostic)" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.CancellationToken" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.Options" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeAnalysisContext.Tree" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeValueProvider`1" Id="T:Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeValueProvider`1">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.SyntaxTreeValueProvider`1.#ctor(System.Func{Microsoft.CodeAnalysis.SyntaxTree,`0},System.Collections.Generic.IEqualityComparer{Microsoft.CodeAnalysis.SyntaxTree})" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference" Id="T:Microsoft.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference.#ctor(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference.GetAnalyzers(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference.GetAnalyzersForAllLanguages" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference.Display" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference.FullPath" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference.Id" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Diagnostics.Telemetry">
    <Type Name="Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo" Id="T:Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo">
      <Member Id="M:Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.#ctor" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.CodeBlockActionsCount" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.CodeBlockEndActionsCount" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.CodeBlockStartActionsCount" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.CompilationActionsCount" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.CompilationEndActionsCount" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.CompilationStartActionsCount" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.Concurrent" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.ExecutionTime" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.OperationActionsCount" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.OperationBlockActionsCount" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.OperationBlockEndActionsCount" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.OperationBlockStartActionsCount" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.SemanticModelActionsCount" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.SymbolActionsCount" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.SyntaxNodeActionsCount" />
      <Member Id="P:Microsoft.CodeAnalysis.Diagnostics.Telemetry.AnalyzerTelemetryInfo.SyntaxTreeActionsCount" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Differencing">
    <Type Name="Microsoft.CodeAnalysis.Differencing.Edit`1" Id="T:Microsoft.CodeAnalysis.Differencing.Edit`1">
      <Member Id="M:Microsoft.CodeAnalysis.Differencing.Edit`1.Equals(Microsoft.CodeAnalysis.Differencing.Edit{`0})" />
      <Member Id="M:Microsoft.CodeAnalysis.Differencing.Edit`1.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.Differencing.Edit`1.GetHashCode" />
      <Member Id="P:Microsoft.CodeAnalysis.Differencing.Edit`1.Kind" />
      <Member Id="P:Microsoft.CodeAnalysis.Differencing.Edit`1.NewNode" />
      <Member Id="P:Microsoft.CodeAnalysis.Differencing.Edit`1.OldNode" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Differencing.EditKind" Id="T:Microsoft.CodeAnalysis.Differencing.EditKind">
      <Member Id="F:Microsoft.CodeAnalysis.Differencing.EditKind.Delete" />
      <Member Id="F:Microsoft.CodeAnalysis.Differencing.EditKind.Insert" />
      <Member Id="F:Microsoft.CodeAnalysis.Differencing.EditKind.Move" />
      <Member Id="F:Microsoft.CodeAnalysis.Differencing.EditKind.None" />
      <Member Id="F:Microsoft.CodeAnalysis.Differencing.EditKind.Reorder" />
      <Member Id="F:Microsoft.CodeAnalysis.Differencing.EditKind.Update" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Differencing.EditScript`1" Id="T:Microsoft.CodeAnalysis.Differencing.EditScript`1">
      <Member Id="P:Microsoft.CodeAnalysis.Differencing.EditScript`1.Edits" />
      <Member Id="P:Microsoft.CodeAnalysis.Differencing.EditScript`1.Match" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Differencing.Match`1" Id="T:Microsoft.CodeAnalysis.Differencing.Match`1">
      <Member Id="M:Microsoft.CodeAnalysis.Differencing.Match`1.GetSequenceEdits(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0})" />
      <Member Id="M:Microsoft.CodeAnalysis.Differencing.Match`1.GetTreeEdits" />
      <Member Id="M:Microsoft.CodeAnalysis.Differencing.Match`1.TryGetNewNode(`0,`0@)" />
      <Member Id="M:Microsoft.CodeAnalysis.Differencing.Match`1.TryGetOldNode(`0,`0@)" />
      <Member Id="P:Microsoft.CodeAnalysis.Differencing.Match`1.Comparer" />
      <Member Id="P:Microsoft.CodeAnalysis.Differencing.Match`1.Matches" />
      <Member Id="P:Microsoft.CodeAnalysis.Differencing.Match`1.NewRoot" />
      <Member Id="P:Microsoft.CodeAnalysis.Differencing.Match`1.OldRoot" />
      <Member Id="P:Microsoft.CodeAnalysis.Differencing.Match`1.ReverseMatches" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Differencing.TreeComparer`1" Id="T:Microsoft.CodeAnalysis.Differencing.TreeComparer`1">
      <Member Id="M:Microsoft.CodeAnalysis.Differencing.TreeComparer`1.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.Differencing.TreeComparer`1.ComputeEditScript(`0,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Differencing.TreeComparer`1.ComputeMatch(`0,`0,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`0}})" />
      <Member Id="M:Microsoft.CodeAnalysis.Differencing.TreeComparer`1.GetChildren(`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Differencing.TreeComparer`1.GetDescendants(`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Differencing.TreeComparer`1.GetDistance(`0,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Differencing.TreeComparer`1.GetLabel(`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Differencing.TreeComparer`1.GetSpan(`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Differencing.TreeComparer`1.TiedToAncestor(System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Differencing.TreeComparer`1.TreesEqual(`0,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Differencing.TreeComparer`1.TryGetParent(`0,`0@)" />
      <Member Id="M:Microsoft.CodeAnalysis.Differencing.TreeComparer`1.ValuesEqual(`0,`0)" />
      <Member Id="P:Microsoft.CodeAnalysis.Differencing.TreeComparer`1.LabelCount" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Editing">
    <Type Name="Microsoft.CodeAnalysis.Editing.DeclarationKind" Id="T:Microsoft.CodeAnalysis.Editing.DeclarationKind">
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.AddAccessor" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.Attribute" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.Class" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.CompilationUnit" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.Constructor" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.ConversionOperator" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.CustomEvent" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.Delegate" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.Destructor" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.Enum" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.EnumMember" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.Event" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.Field" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.GetAccessor" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.Indexer" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.Interface" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.LambdaExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.Method" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.Namespace" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.NamespaceImport" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.None" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.Operator" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.Parameter" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.Property" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.RaiseAccessor" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.RemoveAccessor" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.SetAccessor" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.Struct" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.DeclarationKind.Variable" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Editing.DeclarationModifiers" Id="T:Microsoft.CodeAnalysis.Editing.DeclarationModifiers">
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.Equals(Microsoft.CodeAnalysis.Editing.DeclarationModifiers)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.From(Microsoft.CodeAnalysis.ISymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.op_Addition(Microsoft.CodeAnalysis.Editing.DeclarationModifiers,Microsoft.CodeAnalysis.Editing.DeclarationModifiers)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.op_BitwiseAnd(Microsoft.CodeAnalysis.Editing.DeclarationModifiers,Microsoft.CodeAnalysis.Editing.DeclarationModifiers)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.op_BitwiseOr(Microsoft.CodeAnalysis.Editing.DeclarationModifiers,Microsoft.CodeAnalysis.Editing.DeclarationModifiers)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.op_Equality(Microsoft.CodeAnalysis.Editing.DeclarationModifiers,Microsoft.CodeAnalysis.Editing.DeclarationModifiers)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.op_Inequality(Microsoft.CodeAnalysis.Editing.DeclarationModifiers,Microsoft.CodeAnalysis.Editing.DeclarationModifiers)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.op_Subtraction(Microsoft.CodeAnalysis.Editing.DeclarationModifiers,Microsoft.CodeAnalysis.Editing.DeclarationModifiers)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.ToString" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.TryParse(System.String,Microsoft.CodeAnalysis.Editing.DeclarationModifiers@)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.WithAsync(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.WithIsAbstract(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.WithIsConst(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.WithIsNew(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.WithIsOverride(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.WithIsReadOnly(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.WithIsSealed(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.WithIsStatic(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.WithIsUnsafe(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.WithIsVirtual(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.WithIsWriteOnly(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.WithPartial(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.WithWithEvents(System.Boolean)" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.Abstract" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.Async" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.Const" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.IsAbstract" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.IsAsync" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.IsConst" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.IsNew" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.IsOverride" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.IsPartial" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.IsReadOnly" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.IsRef" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.IsSealed" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.IsStatic" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.IsUnsafe" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.IsVirtual" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.IsWithEvents" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.IsWriteOnly" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.New" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.None" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.Override" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.Partial" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.ReadOnly" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.Ref" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.Sealed" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.Static" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.Unsafe" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.Virtual" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.WithEvents" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DeclarationModifiers.WriteOnly" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Editing.DocumentEditor" Id="T:Microsoft.CodeAnalysis.Editing.DocumentEditor">
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DocumentEditor.CreateAsync(Microsoft.CodeAnalysis.Document,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.DocumentEditor.GetChangedDocument" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DocumentEditor.OriginalDocument" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.DocumentEditor.SemanticModel" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Editing.ImportAdder" Id="T:Microsoft.CodeAnalysis.Editing.ImportAdder">
      <Member Id="M:Microsoft.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.SyntaxAnnotation,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.ImportAdder.AddImportsAsync(Microsoft.CodeAnalysis.Document,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextSpan},Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Editing.OperatorKind" Id="T:Microsoft.CodeAnalysis.Editing.OperatorKind">
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.Addition" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.BitwiseAnd" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.BitwiseOr" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.Decrement" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.Division" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.Equality" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.ExclusiveOr" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.ExplicitConversion" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.False" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.GreaterThan" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.GreaterThanOrEqual" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.ImplicitConversion" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.Increment" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.Inequality" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.LeftShift" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.LessThan" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.LessThanOrEqual" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.LogicalNot" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.Modulus" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.Multiply" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.OnesComplement" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.RightShift" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.Subtraction" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.True" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.UnaryNegation" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.OperatorKind.UnaryPlus" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Editing.SolutionEditor" Id="T:Microsoft.CodeAnalysis.Editing.SolutionEditor">
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SolutionEditor.#ctor(Microsoft.CodeAnalysis.Solution)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SolutionEditor.GetChangedSolution" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SolutionEditor.GetDocumentEditorAsync(Microsoft.CodeAnalysis.DocumentId,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.SolutionEditor.OriginalSolution" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Editing.SpecialTypeConstraintKind" Id="T:Microsoft.CodeAnalysis.Editing.SpecialTypeConstraintKind">
      <Member Id="F:Microsoft.CodeAnalysis.Editing.SpecialTypeConstraintKind.Constructor" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.SpecialTypeConstraintKind.None" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.SpecialTypeConstraintKind.ReferenceType" />
      <Member Id="F:Microsoft.CodeAnalysis.Editing.SpecialTypeConstraintKind.ValueType" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Editing.SymbolEditor" Id="T:Microsoft.CodeAnalysis.Editing.SymbolEditor">
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.Create(Microsoft.CodeAnalysis.Document)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.Create(Microsoft.CodeAnalysis.Solution)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.EditAllDeclarationsAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.EditAllDeclarationsAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Location,Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.EditOneDeclarationAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Location,Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.GetChangedDocuments" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.GetCurrentDeclarationsAsync(Microsoft.CodeAnalysis.ISymbol,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SymbolEditor.GetCurrentSymbolAsync(Microsoft.CodeAnalysis.ISymbol,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.SymbolEditor.ChangedSolution" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.SymbolEditor.OriginalSolution" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Editing.SymbolEditor/AsyncDeclarationEditAction" Id="T:Microsoft.CodeAnalysis.Editing.SymbolEditor.AsyncDeclarationEditAction" />
    <Type Name="Microsoft.CodeAnalysis.Editing.SymbolEditor/DeclarationEditAction" Id="T:Microsoft.CodeAnalysis.Editing.SymbolEditor.DeclarationEditAction" />
    <Type Name="Microsoft.CodeAnalysis.Editing.SymbolEditorExtensions" Id="T:Microsoft.CodeAnalysis.Editing.SymbolEditorExtensions">
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SymbolEditorExtensions.GetBaseOrInterfaceDeclarationReferenceAsync(Microsoft.CodeAnalysis.Editing.SymbolEditor,Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.ITypeSymbol,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SymbolEditorExtensions.SetBaseTypeAsync(Microsoft.CodeAnalysis.Editing.SymbolEditor,Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.ITypeSymbol,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SymbolEditorExtensions.SetBaseTypeAsync(Microsoft.CodeAnalysis.Editing.SymbolEditor,Microsoft.CodeAnalysis.INamedTypeSymbol,System.Func{Microsoft.CodeAnalysis.Editing.SyntaxGenerator,Microsoft.CodeAnalysis.SyntaxNode},System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Editing.SyntaxEditor" Id="T:Microsoft.CodeAnalysis.Editing.SyntaxEditor">
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditor.#ctor(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Workspace)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditor.GetChangedRoot" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditor.InsertAfter(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditor.InsertAfter(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditor.InsertBefore(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditor.InsertBefore(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditor.RemoveNode(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditor.RemoveNode(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxRemoveOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditor.ReplaceNode(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditor.ReplaceNode(Microsoft.CodeAnalysis.SyntaxNode,System.Func{Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Editing.SyntaxGenerator,Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditor.TrackNode(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.SyntaxEditor.Generator" />
      <Member Id="P:Microsoft.CodeAnalysis.Editing.SyntaxEditor.OriginalRoot" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions" Id="T:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions">
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddAttribute(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddAttributeArgument(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddBaseType(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddInterfaceType(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddMember(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddParameter(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.AddReturnAttribute(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.InsertMembers(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.InsertParameter(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Int32,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetAccessibility(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Accessibility)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetExpression(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetGetAccessorStatements(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetModifiers(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Editing.DeclarationModifiers)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetName(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetSetAccessorStatements(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetStatements(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetType(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetTypeConstraint(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.String,Microsoft.CodeAnalysis.Editing.SpecialTypeConstraintKind,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxEditorExtensions.SetTypeParameters(Microsoft.CodeAnalysis.Editing.SyntaxEditor,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{System.String})" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Editing.SyntaxGenerator" Id="T:Microsoft.CodeAnalysis.Editing.SyntaxGenerator">
      <Member Id="F:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.DefaultRemoveOptions" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AddAccessors(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AddAttributeArguments(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AddAttributes(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AddAttributes(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AddBaseType(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AddEventHandler(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AddExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AddInterfaceType(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AddMembers(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AddMembers(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AddNamespaceImports(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AddNamespaceImports(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AddParameters(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AddReturnAttributes(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AddReturnAttributes(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AddSwitchSections(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AliasImportDeclaration(System.String,Microsoft.CodeAnalysis.INamespaceOrTypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AliasImportDeclaration(System.String,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.Argument(Microsoft.CodeAnalysis.RefKind,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.Argument(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.Argument(System.String,Microsoft.CodeAnalysis.RefKind,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ArrayCreationExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ArrayCreationExpression(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ArrayTypeExpression(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AsPrivateInterfaceImplementation(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AsPrivateInterfaceImplementation(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AsPublicInterfaceImplementation(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AsPublicInterfaceImplementation(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AssignmentStatement(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.Attribute(Microsoft.CodeAnalysis.AttributeData)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.Attribute(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.Attribute(System.String,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.Attribute(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AttributeArgument(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AttributeArgument(System.String,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.AwaitExpression(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.BaseExpression" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.BitwiseAndExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.BitwiseNotExpression(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.BitwiseOrExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.CastExpression(Microsoft.CodeAnalysis.ITypeSymbol,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.CastExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.CatchClause(Microsoft.CodeAnalysis.ITypeSymbol,System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.CatchClause(Microsoft.CodeAnalysis.SyntaxNode,System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ClassDeclaration(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.Accessibility,Microsoft.CodeAnalysis.Editing.DeclarationModifiers,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ClearTrivia``1(``0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.CoalesceExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.CompilationUnit(Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.CompilationUnit(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ConditionalExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ConstructorDeclaration(Microsoft.CodeAnalysis.IMethodSymbol,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ConstructorDeclaration(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},Microsoft.CodeAnalysis.Accessibility,Microsoft.CodeAnalysis.Editing.DeclarationModifiers,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ConvertExpression(Microsoft.CodeAnalysis.ITypeSymbol,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ConvertExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.CustomEventDeclaration(Microsoft.CodeAnalysis.IEventSymbol,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.CustomEventDeclaration(System.String,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Accessibility,Microsoft.CodeAnalysis.Editing.DeclarationModifiers,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.Declaration(Microsoft.CodeAnalysis.ISymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.DefaultExpression(Microsoft.CodeAnalysis.ITypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.DefaultExpression(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.DefaultSwitchSection(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.DelegateDeclaration(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Accessibility,Microsoft.CodeAnalysis.Editing.DeclarationModifiers)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.DivideExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.DottedName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ElementAccessExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ElementAccessExpression(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.EnumDeclaration(System.String,Microsoft.CodeAnalysis.Accessibility,Microsoft.CodeAnalysis.Editing.DeclarationModifiers,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.EnumMember(System.String,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.EventDeclaration(Microsoft.CodeAnalysis.IEventSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.EventDeclaration(System.String,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Accessibility,Microsoft.CodeAnalysis.Editing.DeclarationModifiers)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ExitSwitchStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ExpressionStatement(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.FalseLiteralExpression" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.FieldDeclaration(Microsoft.CodeAnalysis.IFieldSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.FieldDeclaration(Microsoft.CodeAnalysis.IFieldSymbol,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.FieldDeclaration(System.String,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Accessibility,Microsoft.CodeAnalysis.Editing.DeclarationModifiers,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GenericName(System.String,Microsoft.CodeAnalysis.ITypeSymbol[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GenericName(System.String,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GenericName(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ITypeSymbol})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GenericName(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetAccessibility(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetAccessor(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Editing.DeclarationKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetAccessorDeclaration(Microsoft.CodeAnalysis.Accessibility,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetAccessors(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetAttributeArguments(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetAttributes(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetBaseAndInterfaceTypes(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetDeclaration(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetDeclaration(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Editing.DeclarationKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetDeclarationKind(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetExpression(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetGenerator(Microsoft.CodeAnalysis.Document)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetGenerator(Microsoft.CodeAnalysis.Project)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetGenerator(Microsoft.CodeAnalysis.Workspace,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetGetAccessorStatements(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetMembers(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetModifiers(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetName(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetNamespaceImports(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetParameters(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetReturnAttributes(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetSetAccessorStatements(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetStatements(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetSwitchSections(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GetType(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GreaterThanExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.GreaterThanOrEqualExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.IdentifierName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.IfStatement(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.IfStatement(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.IndexerDeclaration(Microsoft.CodeAnalysis.IPropertySymbol,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.IndexerDeclaration(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Accessibility,Microsoft.CodeAnalysis.Editing.DeclarationModifiers,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.IndexOf``1(System.Collections.Generic.IReadOnlyList{``0},``0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.InsertAccessors(Microsoft.CodeAnalysis.SyntaxNode,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.InsertAttributeArguments(Microsoft.CodeAnalysis.SyntaxNode,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.InsertAttributes(Microsoft.CodeAnalysis.SyntaxNode,System.Int32,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.InsertAttributes(Microsoft.CodeAnalysis.SyntaxNode,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.InsertMembers(Microsoft.CodeAnalysis.SyntaxNode,System.Int32,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.InsertMembers(Microsoft.CodeAnalysis.SyntaxNode,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.InsertNamespaceImports(Microsoft.CodeAnalysis.SyntaxNode,System.Int32,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.InsertNamespaceImports(Microsoft.CodeAnalysis.SyntaxNode,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.InsertNodesAfter(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.InsertNodesBefore(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.InsertParameters(Microsoft.CodeAnalysis.SyntaxNode,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.InsertReturnAttributes(Microsoft.CodeAnalysis.SyntaxNode,System.Int32,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.InsertReturnAttributes(Microsoft.CodeAnalysis.SyntaxNode,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.InsertSwitchSections(Microsoft.CodeAnalysis.SyntaxNode,System.Int32,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.InterfaceDeclaration(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.Accessibility,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.InvocationExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.InvocationExpression(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.IsTypeExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.ITypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.IsTypeExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.LambdaParameter(System.String,Microsoft.CodeAnalysis.ITypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.LambdaParameter(System.String,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.LessThanExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.LessThanOrEqualExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.LiteralExpression(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.LocalDeclarationStatement(Microsoft.CodeAnalysis.ITypeSymbol,System.String,Microsoft.CodeAnalysis.SyntaxNode,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.LocalDeclarationStatement(Microsoft.CodeAnalysis.SyntaxNode,System.String,Microsoft.CodeAnalysis.SyntaxNode,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.LocalDeclarationStatement(System.String,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.LockStatement(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.LogicalAndExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.LogicalNotExpression(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.LogicalOrExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.MemberAccessExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.MemberAccessExpression(Microsoft.CodeAnalysis.SyntaxNode,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.MethodDeclaration(Microsoft.CodeAnalysis.IMethodSymbol,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.MethodDeclaration(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Accessibility,Microsoft.CodeAnalysis.Editing.DeclarationModifiers,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ModuloExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.MultiplyExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.NameExpression(Microsoft.CodeAnalysis.INamespaceOrTypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.NameOfExpression(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.NamespaceDeclaration(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.NamespaceDeclaration(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.NamespaceDeclaration(System.String,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.NamespaceDeclaration(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.NamespaceImportDeclaration(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.NamespaceImportDeclaration(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.NegateExpression(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.NullableTypeExpression(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.NullLiteralExpression" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ObjectCreationExpression(Microsoft.CodeAnalysis.ITypeSymbol,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ObjectCreationExpression(Microsoft.CodeAnalysis.ITypeSymbol,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ObjectCreationExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ObjectCreationExpression(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.OperatorDeclaration(Microsoft.CodeAnalysis.Editing.OperatorKind,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Accessibility,Microsoft.CodeAnalysis.Editing.DeclarationModifiers,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.OperatorDeclaration(Microsoft.CodeAnalysis.IMethodSymbol,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ParameterDeclaration(Microsoft.CodeAnalysis.IParameterSymbol,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ParameterDeclaration(System.String,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.RefKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.PreserveTrivia``1(``0,System.Func{``0,Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.PropertyDeclaration(Microsoft.CodeAnalysis.IPropertySymbol,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.PropertyDeclaration(System.String,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Accessibility,Microsoft.CodeAnalysis.Editing.DeclarationModifiers,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.QualifiedName(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ReferenceEqualsExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ReferenceNotEqualsExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.RemoveAllAttributes(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.RemoveEventHandler(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.RemoveNode(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.RemoveNode(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxRemoveOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.RemoveNodes(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.RemoveRange``1(Microsoft.CodeAnalysis.SeparatedSyntaxList{``0},System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.RemoveRange``1(Microsoft.CodeAnalysis.SyntaxList{``0},System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ReplaceNode(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ReplaceRange(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ReplaceWithTrivia(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ReplaceWithTrivia(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ReplaceWithTrivia``1(Microsoft.CodeAnalysis.SyntaxNode,``0,System.Func{``0,Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ReturnStatement(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.SetAccessorDeclaration(Microsoft.CodeAnalysis.Accessibility,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.StructDeclaration(System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.Accessibility,Microsoft.CodeAnalysis.Editing.DeclarationModifiers,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.SubtractExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.SwitchSection(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.SwitchSection(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.SwitchStatement(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.SwitchStatement(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ThisExpression" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ThrowExpression(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ThrowStatement(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.TrueLiteralExpression" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.TryCastExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.ITypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.TryCastExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.TryCatchStatement(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.TryCatchStatement(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.TryFinallyStatement(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.TupleElementExpression(Microsoft.CodeAnalysis.ITypeSymbol,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.TupleElementExpression(Microsoft.CodeAnalysis.SyntaxNode,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.TupleExpression(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.TupleTypeExpression(Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.TupleTypeExpression(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ITypeSymbol},System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.TupleTypeExpression(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.TypedConstantExpression(Microsoft.CodeAnalysis.TypedConstant)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.TypeExpression(Microsoft.CodeAnalysis.ITypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.TypeExpression(Microsoft.CodeAnalysis.ITypeSymbol,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.TypeExpression(Microsoft.CodeAnalysis.SpecialType)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.TypeOfExpression(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.UsingStatement(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.UsingStatement(Microsoft.CodeAnalysis.SyntaxNode,System.String,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.UsingStatement(System.String,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ValueEqualsExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ValueNotEqualsExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ValueReturningLambdaExpression(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ValueReturningLambdaExpression(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ValueReturningLambdaExpression(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ValueReturningLambdaExpression(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ValueReturningLambdaExpression(System.String,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.ValueReturningLambdaExpression(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.VoidReturningLambdaExpression(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.VoidReturningLambdaExpression(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.VoidReturningLambdaExpression(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.VoidReturningLambdaExpression(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.VoidReturningLambdaExpression(System.String,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.VoidReturningLambdaExpression(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WhileStatement(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithAccessibility(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Accessibility)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithAccessorDeclarations(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithAccessorDeclarations(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithExpression(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithGetAccessorStatements(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithModifiers(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Editing.DeclarationModifiers)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithName(Microsoft.CodeAnalysis.SyntaxNode,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithSetAccessorStatements(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithStatements(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithType(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithTypeArguments(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithTypeArguments(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithTypeConstraint(Microsoft.CodeAnalysis.SyntaxNode,System.String,Microsoft.CodeAnalysis.Editing.SpecialTypeConstraintKind,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithTypeConstraint(Microsoft.CodeAnalysis.SyntaxNode,System.String,Microsoft.CodeAnalysis.Editing.SpecialTypeConstraintKind,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithTypeConstraint(Microsoft.CodeAnalysis.SyntaxNode,System.String,Microsoft.CodeAnalysis.SyntaxNode[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithTypeParameters(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.Editing.SyntaxGenerator.WithTypeParameters(Microsoft.CodeAnalysis.SyntaxNode,System.String[])" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Emit">
    <Type Name="Microsoft.CodeAnalysis.Emit.DebugInformationFormat" Id="T:Microsoft.CodeAnalysis.Emit.DebugInformationFormat">
      <Member Id="F:Microsoft.CodeAnalysis.Emit.DebugInformationFormat.Embedded" />
      <Member Id="F:Microsoft.CodeAnalysis.Emit.DebugInformationFormat.Pdb" />
      <Member Id="F:Microsoft.CodeAnalysis.Emit.DebugInformationFormat.PortablePdb" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation" Id="T:Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation">
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation.Create(System.Collections.Immutable.ImmutableArray{System.Byte},System.Collections.Immutable.ImmutableArray{System.Byte})" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Emit.EmitBaseline" Id="T:Microsoft.CodeAnalysis.Emit.EmitBaseline">
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitBaseline.CreateInitialBaseline(Microsoft.CodeAnalysis.ModuleMetadata,System.Func{System.Reflection.Metadata.MethodDefinitionHandle,Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation})" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitBaseline.CreateInitialBaseline(Microsoft.CodeAnalysis.ModuleMetadata,System.Func{System.Reflection.Metadata.MethodDefinitionHandle,Microsoft.CodeAnalysis.Emit.EditAndContinueMethodDebugInformation},System.Func{System.Reflection.Metadata.MethodDefinitionHandle,System.Reflection.Metadata.StandaloneSignatureHandle},System.Boolean)" />
      <Member Id="P:Microsoft.CodeAnalysis.Emit.EmitBaseline.OriginalMetadata" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Emit.EmitDifferenceResult" Id="T:Microsoft.CodeAnalysis.Emit.EmitDifferenceResult">
      <Member Id="P:Microsoft.CodeAnalysis.Emit.EmitDifferenceResult.Baseline" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Emit.EmitOptions" Id="T:Microsoft.CodeAnalysis.Emit.EmitOptions">
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitOptions.#ctor(System.Boolean,Microsoft.CodeAnalysis.Emit.DebugInformationFormat,System.String,System.String,System.Int32,System.UInt64,System.Boolean,Microsoft.CodeAnalysis.SubsystemVersion,System.String,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitOptions.#ctor(System.Boolean,Microsoft.CodeAnalysis.Emit.DebugInformationFormat,System.String,System.String,System.Int32,System.UInt64,System.Boolean,Microsoft.CodeAnalysis.SubsystemVersion,System.String,System.Boolean,System.Boolean,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Emit.InstrumentationKind})" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitOptions.#ctor(System.Boolean,Microsoft.CodeAnalysis.Emit.DebugInformationFormat,System.String,System.String,System.Int32,System.UInt64,System.Boolean,Microsoft.CodeAnalysis.SubsystemVersion,System.String,System.Boolean,System.Boolean,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Emit.InstrumentationKind},System.Nullable{System.Security.Cryptography.HashAlgorithmName})" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitOptions.Equals(Microsoft.CodeAnalysis.Emit.EmitOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitOptions.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitOptions.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitOptions.op_Equality(Microsoft.CodeAnalysis.Emit.EmitOptions,Microsoft.CodeAnalysis.Emit.EmitOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitOptions.op_Inequality(Microsoft.CodeAnalysis.Emit.EmitOptions,Microsoft.CodeAnalysis.Emit.EmitOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithBaseAddress(System.UInt64)" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithDebugInformationFormat(Microsoft.CodeAnalysis.Emit.DebugInformationFormat)" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithEmitMetadataOnly(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithFileAlignment(System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithHighEntropyVirtualAddressSpace(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithIncludePrivateMembers(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithInstrumentationKinds(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Emit.InstrumentationKind})" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithOutputNameOverride(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithPdbChecksumAlgorithm(System.Security.Cryptography.HashAlgorithmName)" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithPdbFilePath(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithRuntimeMetadataVersion(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithSubsystemVersion(Microsoft.CodeAnalysis.SubsystemVersion)" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithTolerateErrors(System.Boolean)" />
      <Member Id="P:Microsoft.CodeAnalysis.Emit.EmitOptions.BaseAddress" />
      <Member Id="P:Microsoft.CodeAnalysis.Emit.EmitOptions.DebugInformationFormat" />
      <Member Id="P:Microsoft.CodeAnalysis.Emit.EmitOptions.EmitMetadataOnly" />
      <Member Id="P:Microsoft.CodeAnalysis.Emit.EmitOptions.FileAlignment" />
      <Member Id="P:Microsoft.CodeAnalysis.Emit.EmitOptions.HighEntropyVirtualAddressSpace" />
      <Member Id="P:Microsoft.CodeAnalysis.Emit.EmitOptions.IncludePrivateMembers" />
      <Member Id="P:Microsoft.CodeAnalysis.Emit.EmitOptions.InstrumentationKinds" />
      <Member Id="P:Microsoft.CodeAnalysis.Emit.EmitOptions.OutputNameOverride" />
      <Member Id="P:Microsoft.CodeAnalysis.Emit.EmitOptions.PdbChecksumAlgorithm" />
      <Member Id="P:Microsoft.CodeAnalysis.Emit.EmitOptions.PdbFilePath" />
      <Member Id="P:Microsoft.CodeAnalysis.Emit.EmitOptions.RuntimeMetadataVersion" />
      <Member Id="P:Microsoft.CodeAnalysis.Emit.EmitOptions.SubsystemVersion" />
      <Member Id="P:Microsoft.CodeAnalysis.Emit.EmitOptions.TolerateErrors" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Emit.EmitResult" Id="T:Microsoft.CodeAnalysis.Emit.EmitResult">
      <Member Id="M:Microsoft.CodeAnalysis.Emit.EmitResult.GetDebuggerDisplay" />
      <Member Id="P:Microsoft.CodeAnalysis.Emit.EmitResult.Diagnostics" />
      <Member Id="P:Microsoft.CodeAnalysis.Emit.EmitResult.Success" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Emit.InstrumentationKind" Id="T:Microsoft.CodeAnalysis.Emit.InstrumentationKind">
      <Member Id="F:Microsoft.CodeAnalysis.Emit.InstrumentationKind.None" />
      <Member Id="F:Microsoft.CodeAnalysis.Emit.InstrumentationKind.TestCoverage" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Emit.SemanticEdit" Id="T:Microsoft.CodeAnalysis.Emit.SemanticEdit">
      <Member Id="M:Microsoft.CodeAnalysis.Emit.SemanticEdit.#ctor(Microsoft.CodeAnalysis.Emit.SemanticEditKind,Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.ISymbol,System.Func{Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.SemanticEdit.Equals(Microsoft.CodeAnalysis.Emit.SemanticEdit)" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.SemanticEdit.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.Emit.SemanticEdit.GetHashCode" />
      <Member Id="P:Microsoft.CodeAnalysis.Emit.SemanticEdit.Kind" />
      <Member Id="P:Microsoft.CodeAnalysis.Emit.SemanticEdit.NewSymbol" />
      <Member Id="P:Microsoft.CodeAnalysis.Emit.SemanticEdit.OldSymbol" />
      <Member Id="P:Microsoft.CodeAnalysis.Emit.SemanticEdit.PreserveLocalVariables" />
      <Member Id="P:Microsoft.CodeAnalysis.Emit.SemanticEdit.SyntaxMap" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Emit.SemanticEditKind" Id="T:Microsoft.CodeAnalysis.Emit.SemanticEditKind">
      <Member Id="F:Microsoft.CodeAnalysis.Emit.SemanticEditKind.Delete" />
      <Member Id="F:Microsoft.CodeAnalysis.Emit.SemanticEditKind.Insert" />
      <Member Id="F:Microsoft.CodeAnalysis.Emit.SemanticEditKind.None" />
      <Member Id="F:Microsoft.CodeAnalysis.Emit.SemanticEditKind.Update" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.FindSymbols">
    <Type Name="Microsoft.CodeAnalysis.FindSymbols.IFindReferencesProgress" Id="T:Microsoft.CodeAnalysis.FindSymbols.IFindReferencesProgress">
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.IFindReferencesProgress.OnCompleted" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.IFindReferencesProgress.OnDefinitionFound(Microsoft.CodeAnalysis.ISymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.IFindReferencesProgress.OnFindInDocumentCompleted(Microsoft.CodeAnalysis.Document)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.IFindReferencesProgress.OnFindInDocumentStarted(Microsoft.CodeAnalysis.Document)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.IFindReferencesProgress.OnReferenceFound(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.IFindReferencesProgress.OnStarted" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.IFindReferencesProgress.ReportProgress(System.Int32,System.Int32)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.FindSymbols.ReferencedSymbol" Id="T:Microsoft.CodeAnalysis.FindSymbols.ReferencedSymbol">
      <Member Id="P:Microsoft.CodeAnalysis.FindSymbols.ReferencedSymbol.Definition" />
      <Member Id="P:Microsoft.CodeAnalysis.FindSymbols.ReferencedSymbol.Locations" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation" Id="T:Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation">
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.CompareTo(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Equals(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.op_Equality(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation,Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.op_Inequality(Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation,Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation)" />
      <Member Id="P:Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Alias" />
      <Member Id="P:Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.CandidateReason" />
      <Member Id="P:Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Document" />
      <Member Id="P:Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.IsCandidateLocation" />
      <Member Id="P:Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.IsImplicit" />
      <Member Id="P:Microsoft.CodeAnalysis.FindSymbols.ReferenceLocation.Location" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.FindSymbols.SymbolCallerInfo" Id="T:Microsoft.CodeAnalysis.FindSymbols.SymbolCallerInfo">
      <Member Id="P:Microsoft.CodeAnalysis.FindSymbols.SymbolCallerInfo.CalledSymbol" />
      <Member Id="P:Microsoft.CodeAnalysis.FindSymbols.SymbolCallerInfo.CallingSymbol" />
      <Member Id="P:Microsoft.CodeAnalysis.FindSymbols.SymbolCallerInfo.IsDirect" />
      <Member Id="P:Microsoft.CodeAnalysis.FindSymbols.SymbolCallerInfo.Locations" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.FindSymbols.SymbolFinder" Id="T:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder">
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindCallersAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Solution,System.Collections.Immutable.IImmutableSet{Microsoft.CodeAnalysis.Document},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindCallersAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Solution,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindDeclarationsAsync(Microsoft.CodeAnalysis.Project,System.String,System.Boolean,Microsoft.CodeAnalysis.SymbolFilter,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindDeclarationsAsync(Microsoft.CodeAnalysis.Project,System.String,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindDerivedClassesAsync(Microsoft.CodeAnalysis.INamedTypeSymbol,Microsoft.CodeAnalysis.Solution,System.Collections.Immutable.IImmutableSet{Microsoft.CodeAnalysis.Project},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindImplementationsAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Solution,System.Collections.Immutable.IImmutableSet{Microsoft.CodeAnalysis.Project},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindImplementedInterfaceMembersAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Solution,System.Collections.Immutable.IImmutableSet{Microsoft.CodeAnalysis.Project},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindOverridesAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Solution,System.Collections.Immutable.IImmutableSet{Microsoft.CodeAnalysis.Project},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindReferencesAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.FindSymbols.IFindReferencesProgress,System.Collections.Immutable.IImmutableSet{Microsoft.CodeAnalysis.Document},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindReferencesAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Solution,System.Collections.Immutable.IImmutableSet{Microsoft.CodeAnalysis.Document},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindReferencesAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Solution,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindSimilarSymbols``1(``0,Microsoft.CodeAnalysis.Compilation,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDeclarationsAsync(Microsoft.CodeAnalysis.Project,System.Func{System.String,System.Boolean},Microsoft.CodeAnalysis.SymbolFilter,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDeclarationsAsync(Microsoft.CodeAnalysis.Project,System.Func{System.String,System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDeclarationsAsync(Microsoft.CodeAnalysis.Project,System.String,System.Boolean,Microsoft.CodeAnalysis.SymbolFilter,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDeclarationsAsync(Microsoft.CodeAnalysis.Project,System.String,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDeclarationsAsync(Microsoft.CodeAnalysis.Solution,System.Func{System.String,System.Boolean},Microsoft.CodeAnalysis.SymbolFilter,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDeclarationsAsync(Microsoft.CodeAnalysis.Solution,System.Func{System.String,System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDeclarationsAsync(Microsoft.CodeAnalysis.Solution,System.String,System.Boolean,Microsoft.CodeAnalysis.SymbolFilter,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDeclarationsAsync(Microsoft.CodeAnalysis.Solution,System.String,System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDeclarationsWithPatternAsync(Microsoft.CodeAnalysis.Project,System.String,Microsoft.CodeAnalysis.SymbolFilter,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDeclarationsWithPatternAsync(Microsoft.CodeAnalysis.Project,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDeclarationsWithPatternAsync(Microsoft.CodeAnalysis.Solution,System.String,Microsoft.CodeAnalysis.SymbolFilter,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDeclarationsWithPatternAsync(Microsoft.CodeAnalysis.Solution,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindSourceDefinitionAsync(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.Solution,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindSymbolAtPosition(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.Workspace,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindSymbolAtPositionAsync(Microsoft.CodeAnalysis.Document,System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FindSymbols.SymbolFinder.FindSymbolAtPositionAsync(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.Workspace,System.Threading.CancellationToken)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.FlowAnalysis">
    <Type Name="Microsoft.CodeAnalysis.FlowAnalysis.BasicBlock" Id="T:Microsoft.CodeAnalysis.FlowAnalysis.BasicBlock">
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.BasicBlock.BranchValue" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.BasicBlock.ConditionalSuccessor" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.BasicBlock.ConditionKind" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.BasicBlock.EnclosingRegion" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.BasicBlock.FallThroughSuccessor" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.BasicBlock.IsReachable" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.BasicBlock.Kind" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.BasicBlock.Operations" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.BasicBlock.Ordinal" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.BasicBlock.Predecessors" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.FlowAnalysis.BasicBlockKind" Id="T:Microsoft.CodeAnalysis.FlowAnalysis.BasicBlockKind">
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.BasicBlockKind.Block" />
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.BasicBlockKind.Entry" />
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.BasicBlockKind.Exit" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.FlowAnalysis.CaptureId" Id="T:Microsoft.CodeAnalysis.FlowAnalysis.CaptureId">
      <Member Id="M:Microsoft.CodeAnalysis.FlowAnalysis.CaptureId.Equals(Microsoft.CodeAnalysis.FlowAnalysis.CaptureId)" />
      <Member Id="M:Microsoft.CodeAnalysis.FlowAnalysis.CaptureId.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.FlowAnalysis.CaptureId.GetHashCode" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowBranch" Id="T:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowBranch">
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowBranch.Destination" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowBranch.EnteringRegions" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowBranch.FinallyRegions" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowBranch.IsConditionalSuccessor" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowBranch.LeavingRegions" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowBranch.Semantics" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowBranch.Source" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics" Id="T:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics">
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics.Error" />
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics.None" />
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics.ProgramTermination" />
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics.Regular" />
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics.Rethrow" />
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics.Return" />
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics.StructuredExceptionHandling" />
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowBranchSemantics.Throw" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowConditionKind" Id="T:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowConditionKind">
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowConditionKind.None" />
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowConditionKind.WhenFalse" />
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowConditionKind.WhenTrue" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowGraph" Id="T:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowGraph">
      <Member Id="M:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowGraph.Create(Microsoft.CodeAnalysis.Operations.IBlockOperation,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowGraph.Create(Microsoft.CodeAnalysis.Operations.IConstructorBodyOperation,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowGraph.Create(Microsoft.CodeAnalysis.Operations.IFieldInitializerOperation,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowGraph.Create(Microsoft.CodeAnalysis.Operations.IMethodBodyOperation,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowGraph.Create(Microsoft.CodeAnalysis.Operations.IParameterInitializerOperation,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowGraph.Create(Microsoft.CodeAnalysis.Operations.IPropertyInitializerOperation,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowGraph.Create(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SemanticModel,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowGraph.GetAnonymousFunctionControlFlowGraph(Microsoft.CodeAnalysis.FlowAnalysis.IFlowAnonymousFunctionOperation,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowGraph.GetLocalFunctionControlFlowGraph(Microsoft.CodeAnalysis.IMethodSymbol,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowGraph.Blocks" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowGraph.LocalFunctions" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowGraph.OriginalOperation" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowGraph.Root" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegion" Id="T:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegion">
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegion.CaptureIds" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegion.EnclosingRegion" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegion.ExceptionType" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegion.FirstBlockOrdinal" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegion.Kind" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegion.LastBlockOrdinal" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegion.LocalFunctions" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegion.Locals" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegion.NestedRegions" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind" Id="T:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind">
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.Catch" />
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.ErroneousBody" />
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.Filter" />
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.FilterAndHandler" />
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.Finally" />
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.LocalLifetime" />
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.Root" />
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.StaticLocalInitializer" />
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.Try" />
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.TryAndCatch" />
      <Member Id="F:Microsoft.CodeAnalysis.FlowAnalysis.ControlFlowRegionKind.TryAndFinally" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.FlowAnalysis.ICaughtExceptionOperation" Id="T:Microsoft.CodeAnalysis.FlowAnalysis.ICaughtExceptionOperation" />
    <Type Name="Microsoft.CodeAnalysis.FlowAnalysis.IFlowAnonymousFunctionOperation" Id="T:Microsoft.CodeAnalysis.FlowAnalysis.IFlowAnonymousFunctionOperation">
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.IFlowAnonymousFunctionOperation.Symbol" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.FlowAnalysis.IFlowCaptureOperation" Id="T:Microsoft.CodeAnalysis.FlowAnalysis.IFlowCaptureOperation">
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.IFlowCaptureOperation.Id" />
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.IFlowCaptureOperation.Value" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.FlowAnalysis.IFlowCaptureReferenceOperation" Id="T:Microsoft.CodeAnalysis.FlowAnalysis.IFlowCaptureReferenceOperation">
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.IFlowCaptureReferenceOperation.Id" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.FlowAnalysis.IIsNullOperation" Id="T:Microsoft.CodeAnalysis.FlowAnalysis.IIsNullOperation">
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.IIsNullOperation.Operand" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.FlowAnalysis.IStaticLocalInitializationSemaphoreOperation" Id="T:Microsoft.CodeAnalysis.FlowAnalysis.IStaticLocalInitializationSemaphoreOperation">
      <Member Id="P:Microsoft.CodeAnalysis.FlowAnalysis.IStaticLocalInitializationSemaphoreOperation.Local" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Formatting">
    <Type Name="Microsoft.CodeAnalysis.Formatting.Formatter" Id="T:Microsoft.CodeAnalysis.Formatting.Formatter">
      <Member Id="M:Microsoft.CodeAnalysis.Formatting.Formatter.Format(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxAnnotation,Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Formatting.Formatter.Format(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Formatting.Formatter.Format(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Formatting.Formatter.Format(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextSpan},Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Formatting.Formatter.FormatAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Formatting.Formatter.FormatAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.SyntaxAnnotation,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Formatting.Formatter.FormatAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Formatting.Formatter.FormatAsync(Microsoft.CodeAnalysis.Document,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextSpan},Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Formatting.Formatter.GetFormattedTextChanges(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Formatting.Formatter.GetFormattedTextChanges(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Formatting.Formatter.GetFormattedTextChanges(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextSpan},Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.Formatting.Formatter.Annotation" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Formatting.FormattingOptions" Id="T:Microsoft.CodeAnalysis.Formatting.FormattingOptions">
      <Member Id="P:Microsoft.CodeAnalysis.Formatting.FormattingOptions.IndentationSize" />
      <Member Id="P:Microsoft.CodeAnalysis.Formatting.FormattingOptions.NewLine" />
      <Member Id="P:Microsoft.CodeAnalysis.Formatting.FormattingOptions.SmartIndent" />
      <Member Id="P:Microsoft.CodeAnalysis.Formatting.FormattingOptions.TabSize" />
      <Member Id="P:Microsoft.CodeAnalysis.Formatting.FormattingOptions.UseTabs" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Formatting.FormattingOptions/IndentStyle" Id="T:Microsoft.CodeAnalysis.Formatting.FormattingOptions.IndentStyle">
      <Member Id="F:Microsoft.CodeAnalysis.Formatting.FormattingOptions.IndentStyle.Block" />
      <Member Id="F:Microsoft.CodeAnalysis.Formatting.FormattingOptions.IndentStyle.None" />
      <Member Id="F:Microsoft.CodeAnalysis.Formatting.FormattingOptions.IndentStyle.Smart" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Host">
    <Type Name="Microsoft.CodeAnalysis.Host.HostLanguageServices" Id="T:Microsoft.CodeAnalysis.Host.HostLanguageServices">
      <Member Id="M:Microsoft.CodeAnalysis.Host.HostLanguageServices.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.HostLanguageServices.GetRequiredService``1" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.HostLanguageServices.GetService``1" />
      <Member Id="P:Microsoft.CodeAnalysis.Host.HostLanguageServices.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.Host.HostLanguageServices.WorkspaceServices" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Host.HostServices" Id="T:Microsoft.CodeAnalysis.Host.HostServices">
      <Member Id="M:Microsoft.CodeAnalysis.Host.HostServices.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.HostServices.CreateWorkspaceServices(Microsoft.CodeAnalysis.Workspace)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Host.HostWorkspaceServices" Id="T:Microsoft.CodeAnalysis.Host.HostWorkspaceServices">
      <Member Id="M:Microsoft.CodeAnalysis.Host.HostWorkspaceServices.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.HostWorkspaceServices.FindLanguageServices``1(Microsoft.CodeAnalysis.Host.HostWorkspaceServices.MetadataFilter)" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.HostWorkspaceServices.GetLanguageServices(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.HostWorkspaceServices.GetRequiredService``1" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.HostWorkspaceServices.GetService``1" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.HostWorkspaceServices.IsSupported(System.String)" />
      <Member Id="P:Microsoft.CodeAnalysis.Host.HostWorkspaceServices.HostServices" />
      <Member Id="P:Microsoft.CodeAnalysis.Host.HostWorkspaceServices.PersistentStorage" />
      <Member Id="P:Microsoft.CodeAnalysis.Host.HostWorkspaceServices.SupportedLanguages" />
      <Member Id="P:Microsoft.CodeAnalysis.Host.HostWorkspaceServices.TemporaryStorage" />
      <Member Id="P:Microsoft.CodeAnalysis.Host.HostWorkspaceServices.Workspace" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Host.HostWorkspaceServices/MetadataFilter" Id="T:Microsoft.CodeAnalysis.Host.HostWorkspaceServices.MetadataFilter" />
    <Type Name="Microsoft.CodeAnalysis.Host.IAnalyzerService" Id="T:Microsoft.CodeAnalysis.Host.IAnalyzerService">
      <Member Id="M:Microsoft.CodeAnalysis.Host.IAnalyzerService.GetLoader" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Host.ILanguageService" Id="T:Microsoft.CodeAnalysis.Host.ILanguageService" />
    <Type Name="Microsoft.CodeAnalysis.Host.IPersistentStorage" Id="T:Microsoft.CodeAnalysis.Host.IPersistentStorage">
      <Member Id="M:Microsoft.CodeAnalysis.Host.IPersistentStorage.ReadStreamAsync(Microsoft.CodeAnalysis.Document,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.IPersistentStorage.ReadStreamAsync(Microsoft.CodeAnalysis.Project,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.IPersistentStorage.ReadStreamAsync(System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.IPersistentStorage.WriteStreamAsync(Microsoft.CodeAnalysis.Document,System.String,System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.IPersistentStorage.WriteStreamAsync(Microsoft.CodeAnalysis.Project,System.String,System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.IPersistentStorage.WriteStreamAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Host.IPersistentStorageService" Id="T:Microsoft.CodeAnalysis.Host.IPersistentStorageService">
      <Member Id="M:Microsoft.CodeAnalysis.Host.IPersistentStorageService.GetStorage(Microsoft.CodeAnalysis.Solution)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Host.ITemporaryStorageService" Id="T:Microsoft.CodeAnalysis.Host.ITemporaryStorageService">
      <Member Id="M:Microsoft.CodeAnalysis.Host.ITemporaryStorageService.CreateTemporaryStreamStorage(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.ITemporaryStorageService.CreateTemporaryTextStorage(System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Host.ITemporaryStreamStorage" Id="T:Microsoft.CodeAnalysis.Host.ITemporaryStreamStorage">
      <Member Id="M:Microsoft.CodeAnalysis.Host.ITemporaryStreamStorage.ReadStream(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.ITemporaryStreamStorage.ReadStreamAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.ITemporaryStreamStorage.WriteStream(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.ITemporaryStreamStorage.WriteStreamAsync(System.IO.Stream,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Host.ITemporaryTextStorage" Id="T:Microsoft.CodeAnalysis.Host.ITemporaryTextStorage">
      <Member Id="M:Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.ReadText(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.ReadTextAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.WriteText(Microsoft.CodeAnalysis.Text.SourceText,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.ITemporaryTextStorage.WriteTextAsync(Microsoft.CodeAnalysis.Text.SourceText,System.Threading.CancellationToken)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Host.IWorkspaceService" Id="T:Microsoft.CodeAnalysis.Host.IWorkspaceService" />
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Host.Mef">
    <Type Name="Microsoft.CodeAnalysis.Host.Mef.DesktopMefHostServices" Id="T:Microsoft.CodeAnalysis.Host.Mef.DesktopMefHostServices">
      <Member Id="P:Microsoft.CodeAnalysis.Host.Mef.DesktopMefHostServices.DefaultAssemblies" />
      <Member Id="P:Microsoft.CodeAnalysis.Host.Mef.DesktopMefHostServices.DefaultServices" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Host.Mef.ExportLanguageServiceAttribute" Id="T:Microsoft.CodeAnalysis.Host.Mef.ExportLanguageServiceAttribute">
      <Member Id="M:Microsoft.CodeAnalysis.Host.Mef.ExportLanguageServiceAttribute.#ctor(System.Type,System.String,System.String)" />
      <Member Id="P:Microsoft.CodeAnalysis.Host.Mef.ExportLanguageServiceAttribute.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.Host.Mef.ExportLanguageServiceAttribute.Layer" />
      <Member Id="P:Microsoft.CodeAnalysis.Host.Mef.ExportLanguageServiceAttribute.ServiceType" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Host.Mef.ExportLanguageServiceFactoryAttribute" Id="T:Microsoft.CodeAnalysis.Host.Mef.ExportLanguageServiceFactoryAttribute">
      <Member Id="M:Microsoft.CodeAnalysis.Host.Mef.ExportLanguageServiceFactoryAttribute.#ctor(System.Type,System.String,System.String)" />
      <Member Id="P:Microsoft.CodeAnalysis.Host.Mef.ExportLanguageServiceFactoryAttribute.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.Host.Mef.ExportLanguageServiceFactoryAttribute.Layer" />
      <Member Id="P:Microsoft.CodeAnalysis.Host.Mef.ExportLanguageServiceFactoryAttribute.ServiceType" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Host.Mef.ExportWorkspaceServiceAttribute" Id="T:Microsoft.CodeAnalysis.Host.Mef.ExportWorkspaceServiceAttribute">
      <Member Id="M:Microsoft.CodeAnalysis.Host.Mef.ExportWorkspaceServiceAttribute.#ctor(System.Type,System.String)" />
      <Member Id="P:Microsoft.CodeAnalysis.Host.Mef.ExportWorkspaceServiceAttribute.Layer" />
      <Member Id="P:Microsoft.CodeAnalysis.Host.Mef.ExportWorkspaceServiceAttribute.ServiceType" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Host.Mef.ExportWorkspaceServiceFactoryAttribute" Id="T:Microsoft.CodeAnalysis.Host.Mef.ExportWorkspaceServiceFactoryAttribute">
      <Member Id="M:Microsoft.CodeAnalysis.Host.Mef.ExportWorkspaceServiceFactoryAttribute.#ctor(System.Type,System.String)" />
      <Member Id="P:Microsoft.CodeAnalysis.Host.Mef.ExportWorkspaceServiceFactoryAttribute.Layer" />
      <Member Id="P:Microsoft.CodeAnalysis.Host.Mef.ExportWorkspaceServiceFactoryAttribute.ServiceType" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Host.Mef.ILanguageServiceFactory" Id="T:Microsoft.CodeAnalysis.Host.Mef.ILanguageServiceFactory">
      <Member Id="M:Microsoft.CodeAnalysis.Host.Mef.ILanguageServiceFactory.CreateLanguageService(Microsoft.CodeAnalysis.Host.HostLanguageServices)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Host.Mef.IWorkspaceServiceFactory" Id="T:Microsoft.CodeAnalysis.Host.Mef.IWorkspaceServiceFactory">
      <Member Id="M:Microsoft.CodeAnalysis.Host.Mef.IWorkspaceServiceFactory.CreateService(Microsoft.CodeAnalysis.Host.HostWorkspaceServices)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Host.Mef.MefHostServices" Id="T:Microsoft.CodeAnalysis.Host.Mef.MefHostServices">
      <Member Id="M:Microsoft.CodeAnalysis.Host.Mef.MefHostServices.#ctor(System.Composition.CompositionContext)" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.Mef.MefHostServices.Create(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.Mef.MefHostServices.Create(System.Composition.CompositionContext)" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.Mef.MefHostServices.CreateWorkspaceServices(Microsoft.CodeAnalysis.Workspace)" />
      <Member Id="P:Microsoft.CodeAnalysis.Host.Mef.MefHostServices.DefaultAssemblies" />
      <Member Id="P:Microsoft.CodeAnalysis.Host.Mef.MefHostServices.DefaultHost" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Host.Mef.MefV1HostServices" Id="T:Microsoft.CodeAnalysis.Host.Mef.MefV1HostServices">
      <Member Id="M:Microsoft.CodeAnalysis.Host.Mef.MefV1HostServices.Create(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.Mef.MefV1HostServices.Create(System.ComponentModel.Composition.Hosting.ExportProvider)" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.Mef.MefV1HostServices.CreateWorkspaceServices(Microsoft.CodeAnalysis.Workspace)" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.Mef.MefV1HostServices.GetExports``1" />
      <Member Id="M:Microsoft.CodeAnalysis.Host.Mef.MefV1HostServices.GetExports``2" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Host.Mef.ServiceLayer" Id="T:Microsoft.CodeAnalysis.Host.Mef.ServiceLayer">
      <Member Id="F:Microsoft.CodeAnalysis.Host.Mef.ServiceLayer.Default" />
      <Member Id="F:Microsoft.CodeAnalysis.Host.Mef.ServiceLayer.Desktop" />
      <Member Id="F:Microsoft.CodeAnalysis.Host.Mef.ServiceLayer.Editor" />
      <Member Id="F:Microsoft.CodeAnalysis.Host.Mef.ServiceLayer.Host" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Operations">
    <Type Name="Microsoft.CodeAnalysis.Operations.ArgumentKind" Id="T:Microsoft.CodeAnalysis.Operations.ArgumentKind">
      <Member Id="F:Microsoft.CodeAnalysis.Operations.ArgumentKind.DefaultValue" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.ArgumentKind.Explicit" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.ArgumentKind.None" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.ArgumentKind.ParamArray" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.BinaryOperatorKind" Id="T:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind">
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.Add" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.And" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.Concatenate" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.ConditionalAnd" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.ConditionalOr" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.Divide" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.Equals" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.ExclusiveOr" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.GreaterThan" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.GreaterThanOrEqual" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.IntegerDivide" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.LeftShift" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.LessThan" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.LessThanOrEqual" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.Like" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.Multiply" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.None" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.NotEquals" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.ObjectValueEquals" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.ObjectValueNotEquals" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.Or" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.Power" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.Remainder" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.RightShift" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BinaryOperatorKind.Subtract" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.BranchKind" Id="T:Microsoft.CodeAnalysis.Operations.BranchKind">
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BranchKind.Break" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BranchKind.Continue" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BranchKind.GoTo" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.BranchKind.None" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.CaseKind" Id="T:Microsoft.CodeAnalysis.Operations.CaseKind">
      <Member Id="F:Microsoft.CodeAnalysis.Operations.CaseKind.Default" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.CaseKind.None" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.CaseKind.Pattern" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.CaseKind.Range" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.CaseKind.Relational" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.CaseKind.SingleValue" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.CommonConversion" Id="T:Microsoft.CodeAnalysis.Operations.CommonConversion">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.CommonConversion.Exists" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.CommonConversion.IsIdentity" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.CommonConversion.IsImplicit" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.CommonConversion.IsNumeric" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.CommonConversion.IsReference" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.CommonConversion.IsUserDefined" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.CommonConversion.MethodSymbol" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IAddressOfOperation" Id="T:Microsoft.CodeAnalysis.Operations.IAddressOfOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IAddressOfOperation.Reference" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IAnonymousFunctionOperation" Id="T:Microsoft.CodeAnalysis.Operations.IAnonymousFunctionOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IAnonymousFunctionOperation.Body" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IAnonymousFunctionOperation.Symbol" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IAnonymousObjectCreationOperation" Id="T:Microsoft.CodeAnalysis.Operations.IAnonymousObjectCreationOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IAnonymousObjectCreationOperation.Initializers" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IArgumentOperation" Id="T:Microsoft.CodeAnalysis.Operations.IArgumentOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IArgumentOperation.ArgumentKind" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IArgumentOperation.InConversion" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IArgumentOperation.OutConversion" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IArgumentOperation.Parameter" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IArgumentOperation.Value" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IArrayCreationOperation" Id="T:Microsoft.CodeAnalysis.Operations.IArrayCreationOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IArrayCreationOperation.DimensionSizes" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IArrayCreationOperation.Initializer" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IArrayElementReferenceOperation" Id="T:Microsoft.CodeAnalysis.Operations.IArrayElementReferenceOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IArrayElementReferenceOperation.ArrayReference" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IArrayElementReferenceOperation.Indices" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation" Id="T:Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation.ElementValues" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IAssignmentOperation" Id="T:Microsoft.CodeAnalysis.Operations.IAssignmentOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IAssignmentOperation.Target" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IAssignmentOperation.Value" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IAwaitOperation" Id="T:Microsoft.CodeAnalysis.Operations.IAwaitOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IAwaitOperation.Operation" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IBinaryOperation" Id="T:Microsoft.CodeAnalysis.Operations.IBinaryOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IBinaryOperation.IsChecked" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IBinaryOperation.IsCompareText" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IBinaryOperation.IsLifted" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IBinaryOperation.LeftOperand" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IBinaryOperation.OperatorKind" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IBinaryOperation.OperatorMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IBinaryOperation.RightOperand" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IBlockOperation" Id="T:Microsoft.CodeAnalysis.Operations.IBlockOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IBlockOperation.Locals" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IBlockOperation.Operations" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IBranchOperation" Id="T:Microsoft.CodeAnalysis.Operations.IBranchOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IBranchOperation.BranchKind" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IBranchOperation.Target" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.ICaseClauseOperation" Id="T:Microsoft.CodeAnalysis.Operations.ICaseClauseOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ICaseClauseOperation.CaseKind" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ICaseClauseOperation.Label" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.ICatchClauseOperation" Id="T:Microsoft.CodeAnalysis.Operations.ICatchClauseOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ICatchClauseOperation.ExceptionDeclarationOrExpression" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ICatchClauseOperation.ExceptionType" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ICatchClauseOperation.Filter" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ICatchClauseOperation.Handler" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ICatchClauseOperation.Locals" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.ICoalesceOperation" Id="T:Microsoft.CodeAnalysis.Operations.ICoalesceOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ICoalesceOperation.Value" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ICoalesceOperation.ValueConversion" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ICoalesceOperation.WhenNull" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.ICollectionElementInitializerOperation" Id="T:Microsoft.CodeAnalysis.Operations.ICollectionElementInitializerOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ICollectionElementInitializerOperation.AddMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ICollectionElementInitializerOperation.Arguments" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ICollectionElementInitializerOperation.IsDynamic" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation" Id="T:Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation.InConversion" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation.IsChecked" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation.IsLifted" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation.OperatorKind" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation.OperatorMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation.OutConversion" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IConditionalAccessInstanceOperation" Id="T:Microsoft.CodeAnalysis.Operations.IConditionalAccessInstanceOperation" />
    <Type Name="Microsoft.CodeAnalysis.Operations.IConditionalAccessOperation" Id="T:Microsoft.CodeAnalysis.Operations.IConditionalAccessOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IConditionalAccessOperation.Operation" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IConditionalAccessOperation.WhenNotNull" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IConditionalOperation" Id="T:Microsoft.CodeAnalysis.Operations.IConditionalOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IConditionalOperation.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IConditionalOperation.IsRef" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IConditionalOperation.WhenFalse" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IConditionalOperation.WhenTrue" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IConstantPatternOperation" Id="T:Microsoft.CodeAnalysis.Operations.IConstantPatternOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IConstantPatternOperation.Value" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IConstructorBodyOperation" Id="T:Microsoft.CodeAnalysis.Operations.IConstructorBodyOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IConstructorBodyOperation.Initializer" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IConstructorBodyOperation.Locals" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IConversionOperation" Id="T:Microsoft.CodeAnalysis.Operations.IConversionOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IConversionOperation.Conversion" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IConversionOperation.IsChecked" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IConversionOperation.IsTryCast" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IConversionOperation.Operand" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IConversionOperation.OperatorMethod" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IDeclarationExpressionOperation" Id="T:Microsoft.CodeAnalysis.Operations.IDeclarationExpressionOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IDeclarationExpressionOperation.Expression" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation" Id="T:Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation.DeclaredSymbol" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IDeconstructionAssignmentOperation" Id="T:Microsoft.CodeAnalysis.Operations.IDeconstructionAssignmentOperation" />
    <Type Name="Microsoft.CodeAnalysis.Operations.IDefaultCaseClauseOperation" Id="T:Microsoft.CodeAnalysis.Operations.IDefaultCaseClauseOperation" />
    <Type Name="Microsoft.CodeAnalysis.Operations.IDefaultValueOperation" Id="T:Microsoft.CodeAnalysis.Operations.IDefaultValueOperation" />
    <Type Name="Microsoft.CodeAnalysis.Operations.IDelegateCreationOperation" Id="T:Microsoft.CodeAnalysis.Operations.IDelegateCreationOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IDelegateCreationOperation.Target" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IDiscardOperation" Id="T:Microsoft.CodeAnalysis.Operations.IDiscardOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IDiscardOperation.DiscardSymbol" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IDynamicIndexerAccessOperation" Id="T:Microsoft.CodeAnalysis.Operations.IDynamicIndexerAccessOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IDynamicIndexerAccessOperation.Arguments" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IDynamicIndexerAccessOperation.Operation" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IDynamicInvocationOperation" Id="T:Microsoft.CodeAnalysis.Operations.IDynamicInvocationOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IDynamicInvocationOperation.Arguments" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IDynamicInvocationOperation.Operation" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation" Id="T:Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation.ContainingType" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation.Instance" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation.MemberName" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation.TypeArguments" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IDynamicObjectCreationOperation" Id="T:Microsoft.CodeAnalysis.Operations.IDynamicObjectCreationOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IDynamicObjectCreationOperation.Arguments" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IDynamicObjectCreationOperation.Initializer" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IEmptyOperation" Id="T:Microsoft.CodeAnalysis.Operations.IEmptyOperation" />
    <Type Name="Microsoft.CodeAnalysis.Operations.IEndOperation" Id="T:Microsoft.CodeAnalysis.Operations.IEndOperation" />
    <Type Name="Microsoft.CodeAnalysis.Operations.IEventAssignmentOperation" Id="T:Microsoft.CodeAnalysis.Operations.IEventAssignmentOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IEventAssignmentOperation.Adds" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IEventAssignmentOperation.EventReference" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IEventAssignmentOperation.HandlerValue" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IEventReferenceOperation" Id="T:Microsoft.CodeAnalysis.Operations.IEventReferenceOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IEventReferenceOperation.Event" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IExpressionStatementOperation" Id="T:Microsoft.CodeAnalysis.Operations.IExpressionStatementOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IExpressionStatementOperation.Operation" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IFieldInitializerOperation" Id="T:Microsoft.CodeAnalysis.Operations.IFieldInitializerOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IFieldInitializerOperation.InitializedFields" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation" Id="T:Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation.Field" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation.IsDeclaration" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IForEachLoopOperation" Id="T:Microsoft.CodeAnalysis.Operations.IForEachLoopOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IForEachLoopOperation.Collection" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IForEachLoopOperation.LoopControlVariable" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IForEachLoopOperation.NextVariables" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IForLoopOperation" Id="T:Microsoft.CodeAnalysis.Operations.IForLoopOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IForLoopOperation.AtLoopBottom" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IForLoopOperation.Before" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IForLoopOperation.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IForLoopOperation.ConditionLocals" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IForToLoopOperation" Id="T:Microsoft.CodeAnalysis.Operations.IForToLoopOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IForToLoopOperation.InitialValue" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IForToLoopOperation.IsChecked" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IForToLoopOperation.LimitValue" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IForToLoopOperation.LoopControlVariable" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IForToLoopOperation.NextVariables" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IForToLoopOperation.StepValue" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IIncrementOrDecrementOperation" Id="T:Microsoft.CodeAnalysis.Operations.IIncrementOrDecrementOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IIncrementOrDecrementOperation.IsChecked" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IIncrementOrDecrementOperation.IsLifted" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IIncrementOrDecrementOperation.IsPostfix" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IIncrementOrDecrementOperation.OperatorMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IIncrementOrDecrementOperation.Target" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation" Id="T:Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation.ReferenceKind" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation" Id="T:Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation" />
    <Type Name="Microsoft.CodeAnalysis.Operations.IInterpolatedStringOperation" Id="T:Microsoft.CodeAnalysis.Operations.IInterpolatedStringOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IInterpolatedStringOperation.Parts" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IInterpolatedStringTextOperation" Id="T:Microsoft.CodeAnalysis.Operations.IInterpolatedStringTextOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IInterpolatedStringTextOperation.Text" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IInterpolationOperation" Id="T:Microsoft.CodeAnalysis.Operations.IInterpolationOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IInterpolationOperation.Alignment" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IInterpolationOperation.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IInterpolationOperation.FormatString" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IInvalidOperation" Id="T:Microsoft.CodeAnalysis.Operations.IInvalidOperation" />
    <Type Name="Microsoft.CodeAnalysis.Operations.IInvocationOperation" Id="T:Microsoft.CodeAnalysis.Operations.IInvocationOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IInvocationOperation.Arguments" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IInvocationOperation.Instance" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IInvocationOperation.IsVirtual" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IInvocationOperation.TargetMethod" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IIsPatternOperation" Id="T:Microsoft.CodeAnalysis.Operations.IIsPatternOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IIsPatternOperation.Pattern" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IIsPatternOperation.Value" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IIsTypeOperation" Id="T:Microsoft.CodeAnalysis.Operations.IIsTypeOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IIsTypeOperation.IsNegated" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IIsTypeOperation.TypeOperand" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IIsTypeOperation.ValueOperand" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.ILabeledOperation" Id="T:Microsoft.CodeAnalysis.Operations.ILabeledOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ILabeledOperation.Label" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ILabeledOperation.Operation" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.ILiteralOperation" Id="T:Microsoft.CodeAnalysis.Operations.ILiteralOperation" />
    <Type Name="Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation" Id="T:Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation.Body" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation.IgnoredBody" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation.Symbol" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.ILocalReferenceOperation" Id="T:Microsoft.CodeAnalysis.Operations.ILocalReferenceOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ILocalReferenceOperation.IsDeclaration" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ILocalReferenceOperation.Local" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.ILockOperation" Id="T:Microsoft.CodeAnalysis.Operations.ILockOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ILockOperation.Body" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ILockOperation.LockedValue" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.ILoopOperation" Id="T:Microsoft.CodeAnalysis.Operations.ILoopOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ILoopOperation.Body" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ILoopOperation.ContinueLabel" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ILoopOperation.ExitLabel" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ILoopOperation.Locals" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ILoopOperation.LoopKind" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IMemberInitializerOperation" Id="T:Microsoft.CodeAnalysis.Operations.IMemberInitializerOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IMemberInitializerOperation.InitializedMember" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IMemberInitializerOperation.Initializer" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IMemberReferenceOperation" Id="T:Microsoft.CodeAnalysis.Operations.IMemberReferenceOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IMemberReferenceOperation.Instance" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IMemberReferenceOperation.Member" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IMethodBodyBaseOperation" Id="T:Microsoft.CodeAnalysis.Operations.IMethodBodyBaseOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IMethodBodyBaseOperation.BlockBody" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IMethodBodyBaseOperation.ExpressionBody" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IMethodBodyOperation" Id="T:Microsoft.CodeAnalysis.Operations.IMethodBodyOperation" />
    <Type Name="Microsoft.CodeAnalysis.Operations.IMethodReferenceOperation" Id="T:Microsoft.CodeAnalysis.Operations.IMethodReferenceOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IMethodReferenceOperation.IsVirtual" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IMethodReferenceOperation.Method" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.INameOfOperation" Id="T:Microsoft.CodeAnalysis.Operations.INameOfOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.INameOfOperation.Argument" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.InstanceReferenceKind" Id="T:Microsoft.CodeAnalysis.Operations.InstanceReferenceKind">
      <Member Id="F:Microsoft.CodeAnalysis.Operations.InstanceReferenceKind.ContainingTypeInstance" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.InstanceReferenceKind.ImplicitReceiver" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IObjectCreationOperation" Id="T:Microsoft.CodeAnalysis.Operations.IObjectCreationOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IObjectCreationOperation.Arguments" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IObjectCreationOperation.Constructor" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IObjectCreationOperation.Initializer" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation" Id="T:Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation.Initializers" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IOmittedArgumentOperation" Id="T:Microsoft.CodeAnalysis.Operations.IOmittedArgumentOperation" />
    <Type Name="Microsoft.CodeAnalysis.Operations.IParameterInitializerOperation" Id="T:Microsoft.CodeAnalysis.Operations.IParameterInitializerOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IParameterInitializerOperation.Parameter" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IParameterReferenceOperation" Id="T:Microsoft.CodeAnalysis.Operations.IParameterReferenceOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IParameterReferenceOperation.Parameter" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IParenthesizedOperation" Id="T:Microsoft.CodeAnalysis.Operations.IParenthesizedOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IParenthesizedOperation.Operand" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IPatternCaseClauseOperation" Id="T:Microsoft.CodeAnalysis.Operations.IPatternCaseClauseOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IPatternCaseClauseOperation.Guard" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IPatternCaseClauseOperation.Label" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IPatternCaseClauseOperation.Pattern" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IPatternOperation" Id="T:Microsoft.CodeAnalysis.Operations.IPatternOperation" />
    <Type Name="Microsoft.CodeAnalysis.Operations.IPropertyInitializerOperation" Id="T:Microsoft.CodeAnalysis.Operations.IPropertyInitializerOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IPropertyInitializerOperation.InitializedProperties" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IPropertyReferenceOperation" Id="T:Microsoft.CodeAnalysis.Operations.IPropertyReferenceOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IPropertyReferenceOperation.Arguments" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IPropertyReferenceOperation.Property" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IRaiseEventOperation" Id="T:Microsoft.CodeAnalysis.Operations.IRaiseEventOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IRaiseEventOperation.Arguments" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IRaiseEventOperation.EventReference" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IRangeCaseClauseOperation" Id="T:Microsoft.CodeAnalysis.Operations.IRangeCaseClauseOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IRangeCaseClauseOperation.MaximumValue" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IRangeCaseClauseOperation.MinimumValue" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IRelationalCaseClauseOperation" Id="T:Microsoft.CodeAnalysis.Operations.IRelationalCaseClauseOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IRelationalCaseClauseOperation.Relation" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IRelationalCaseClauseOperation.Value" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IReturnOperation" Id="T:Microsoft.CodeAnalysis.Operations.IReturnOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IReturnOperation.ReturnedValue" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.ISimpleAssignmentOperation" Id="T:Microsoft.CodeAnalysis.Operations.ISimpleAssignmentOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ISimpleAssignmentOperation.IsRef" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.ISingleValueCaseClauseOperation" Id="T:Microsoft.CodeAnalysis.Operations.ISingleValueCaseClauseOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ISingleValueCaseClauseOperation.Value" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.ISizeOfOperation" Id="T:Microsoft.CodeAnalysis.Operations.ISizeOfOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ISizeOfOperation.TypeOperand" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IStopOperation" Id="T:Microsoft.CodeAnalysis.Operations.IStopOperation" />
    <Type Name="Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation" Id="T:Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation.Body" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation.Clauses" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation.Locals" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.ISwitchOperation" Id="T:Microsoft.CodeAnalysis.Operations.ISwitchOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ISwitchOperation.Cases" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ISwitchOperation.ExitLabel" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ISwitchOperation.Locals" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ISwitchOperation.Value" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.ISymbolInitializerOperation" Id="T:Microsoft.CodeAnalysis.Operations.ISymbolInitializerOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ISymbolInitializerOperation.Locals" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ISymbolInitializerOperation.Value" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IThrowOperation" Id="T:Microsoft.CodeAnalysis.Operations.IThrowOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IThrowOperation.Exception" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.ITranslatedQueryOperation" Id="T:Microsoft.CodeAnalysis.Operations.ITranslatedQueryOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ITranslatedQueryOperation.Operation" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.ITryOperation" Id="T:Microsoft.CodeAnalysis.Operations.ITryOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ITryOperation.Body" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ITryOperation.Catches" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ITryOperation.ExitLabel" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ITryOperation.Finally" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.ITupleBinaryOperation" Id="T:Microsoft.CodeAnalysis.Operations.ITupleBinaryOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ITupleBinaryOperation.LeftOperand" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ITupleBinaryOperation.OperatorKind" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ITupleBinaryOperation.RightOperand" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.ITupleOperation" Id="T:Microsoft.CodeAnalysis.Operations.ITupleOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ITupleOperation.Elements" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ITupleOperation.NaturalType" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.ITypeOfOperation" Id="T:Microsoft.CodeAnalysis.Operations.ITypeOfOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ITypeOfOperation.TypeOperand" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.ITypeParameterObjectCreationOperation" Id="T:Microsoft.CodeAnalysis.Operations.ITypeParameterObjectCreationOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.ITypeParameterObjectCreationOperation.Initializer" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IUnaryOperation" Id="T:Microsoft.CodeAnalysis.Operations.IUnaryOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IUnaryOperation.IsChecked" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IUnaryOperation.IsLifted" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IUnaryOperation.Operand" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IUnaryOperation.OperatorKind" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IUnaryOperation.OperatorMethod" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IUsingOperation" Id="T:Microsoft.CodeAnalysis.Operations.IUsingOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IUsingOperation.Body" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IUsingOperation.Locals" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IUsingOperation.Resources" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation" Id="T:Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation.Declarations" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation" Id="T:Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation.Declarators" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation.Initializer" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation" Id="T:Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation.IgnoredArguments" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation.Initializer" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation.Symbol" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation" Id="T:Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation" />
    <Type Name="Microsoft.CodeAnalysis.Operations.IWhileLoopOperation" Id="T:Microsoft.CodeAnalysis.Operations.IWhileLoopOperation">
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IWhileLoopOperation.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IWhileLoopOperation.ConditionIsTop" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IWhileLoopOperation.ConditionIsUntil" />
      <Member Id="P:Microsoft.CodeAnalysis.Operations.IWhileLoopOperation.IgnoredCondition" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.LoopKind" Id="T:Microsoft.CodeAnalysis.Operations.LoopKind">
      <Member Id="F:Microsoft.CodeAnalysis.Operations.LoopKind.For" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.LoopKind.ForEach" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.LoopKind.ForTo" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.LoopKind.None" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.LoopKind.While" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.OperationExtensions" Id="T:Microsoft.CodeAnalysis.Operations.OperationExtensions">
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationExtensions.Descendants(Microsoft.CodeAnalysis.IOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationExtensions.DescendantsAndSelf(Microsoft.CodeAnalysis.IOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationExtensions.GetArgumentName(Microsoft.CodeAnalysis.Operations.IDynamicIndexerAccessOperation,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationExtensions.GetArgumentName(Microsoft.CodeAnalysis.Operations.IDynamicInvocationOperation,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationExtensions.GetArgumentName(Microsoft.CodeAnalysis.Operations.IDynamicObjectCreationOperation,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationExtensions.GetArgumentRefKind(Microsoft.CodeAnalysis.Operations.IDynamicIndexerAccessOperation,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationExtensions.GetArgumentRefKind(Microsoft.CodeAnalysis.Operations.IDynamicInvocationOperation,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationExtensions.GetArgumentRefKind(Microsoft.CodeAnalysis.Operations.IDynamicObjectCreationOperation,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationExtensions.GetDeclaredVariables(Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationExtensions.GetDeclaredVariables(Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationExtensions.GetVariableInitializer(Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.OperationVisitor" Id="T:Microsoft.CodeAnalysis.Operations.OperationVisitor">
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.DefaultVisit(Microsoft.CodeAnalysis.IOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.Visit(Microsoft.CodeAnalysis.IOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitAddressOf(Microsoft.CodeAnalysis.Operations.IAddressOfOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitAnonymousFunction(Microsoft.CodeAnalysis.Operations.IAnonymousFunctionOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitAnonymousObjectCreation(Microsoft.CodeAnalysis.Operations.IAnonymousObjectCreationOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitArgument(Microsoft.CodeAnalysis.Operations.IArgumentOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitArrayCreation(Microsoft.CodeAnalysis.Operations.IArrayCreationOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitArrayElementReference(Microsoft.CodeAnalysis.Operations.IArrayElementReferenceOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitArrayInitializer(Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitAwait(Microsoft.CodeAnalysis.Operations.IAwaitOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitBinaryOperator(Microsoft.CodeAnalysis.Operations.IBinaryOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitBlock(Microsoft.CodeAnalysis.Operations.IBlockOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitBranch(Microsoft.CodeAnalysis.Operations.IBranchOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitCatchClause(Microsoft.CodeAnalysis.Operations.ICatchClauseOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitCaughtException(Microsoft.CodeAnalysis.FlowAnalysis.ICaughtExceptionOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitCoalesce(Microsoft.CodeAnalysis.Operations.ICoalesceOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitCollectionElementInitializer(Microsoft.CodeAnalysis.Operations.ICollectionElementInitializerOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitCompoundAssignment(Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitConditional(Microsoft.CodeAnalysis.Operations.IConditionalOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitConditionalAccess(Microsoft.CodeAnalysis.Operations.IConditionalAccessOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitConditionalAccessInstance(Microsoft.CodeAnalysis.Operations.IConditionalAccessInstanceOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitConstantPattern(Microsoft.CodeAnalysis.Operations.IConstantPatternOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitConstructorBodyOperation(Microsoft.CodeAnalysis.Operations.IConstructorBodyOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitConversion(Microsoft.CodeAnalysis.Operations.IConversionOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitDeclarationExpression(Microsoft.CodeAnalysis.Operations.IDeclarationExpressionOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitDeclarationPattern(Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitDeconstructionAssignment(Microsoft.CodeAnalysis.Operations.IDeconstructionAssignmentOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitDefaultCaseClause(Microsoft.CodeAnalysis.Operations.IDefaultCaseClauseOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitDefaultValue(Microsoft.CodeAnalysis.Operations.IDefaultValueOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitDelegateCreation(Microsoft.CodeAnalysis.Operations.IDelegateCreationOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitDiscardOperation(Microsoft.CodeAnalysis.Operations.IDiscardOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitDynamicIndexerAccess(Microsoft.CodeAnalysis.Operations.IDynamicIndexerAccessOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitDynamicInvocation(Microsoft.CodeAnalysis.Operations.IDynamicInvocationOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitDynamicMemberReference(Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitDynamicObjectCreation(Microsoft.CodeAnalysis.Operations.IDynamicObjectCreationOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitEmpty(Microsoft.CodeAnalysis.Operations.IEmptyOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitEnd(Microsoft.CodeAnalysis.Operations.IEndOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitEventAssignment(Microsoft.CodeAnalysis.Operations.IEventAssignmentOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitEventReference(Microsoft.CodeAnalysis.Operations.IEventReferenceOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitExpressionStatement(Microsoft.CodeAnalysis.Operations.IExpressionStatementOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitFieldInitializer(Microsoft.CodeAnalysis.Operations.IFieldInitializerOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitFieldReference(Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitFlowAnonymousFunction(Microsoft.CodeAnalysis.FlowAnalysis.IFlowAnonymousFunctionOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitFlowCapture(Microsoft.CodeAnalysis.FlowAnalysis.IFlowCaptureOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitFlowCaptureReference(Microsoft.CodeAnalysis.FlowAnalysis.IFlowCaptureReferenceOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitForEachLoop(Microsoft.CodeAnalysis.Operations.IForEachLoopOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitForLoop(Microsoft.CodeAnalysis.Operations.IForLoopOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitForToLoop(Microsoft.CodeAnalysis.Operations.IForToLoopOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitIncrementOrDecrement(Microsoft.CodeAnalysis.Operations.IIncrementOrDecrementOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitInstanceReference(Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitInterpolatedString(Microsoft.CodeAnalysis.Operations.IInterpolatedStringOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitInterpolatedStringText(Microsoft.CodeAnalysis.Operations.IInterpolatedStringTextOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitInterpolation(Microsoft.CodeAnalysis.Operations.IInterpolationOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitInvalid(Microsoft.CodeAnalysis.Operations.IInvalidOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitInvocation(Microsoft.CodeAnalysis.Operations.IInvocationOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitIsNull(Microsoft.CodeAnalysis.FlowAnalysis.IIsNullOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitIsPattern(Microsoft.CodeAnalysis.Operations.IIsPatternOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitIsType(Microsoft.CodeAnalysis.Operations.IIsTypeOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitLabeled(Microsoft.CodeAnalysis.Operations.ILabeledOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitLiteral(Microsoft.CodeAnalysis.Operations.ILiteralOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitLocalFunction(Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitLocalReference(Microsoft.CodeAnalysis.Operations.ILocalReferenceOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitLock(Microsoft.CodeAnalysis.Operations.ILockOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitMemberInitializer(Microsoft.CodeAnalysis.Operations.IMemberInitializerOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitMethodBodyOperation(Microsoft.CodeAnalysis.Operations.IMethodBodyOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitMethodReference(Microsoft.CodeAnalysis.Operations.IMethodReferenceOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitNameOf(Microsoft.CodeAnalysis.Operations.INameOfOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitObjectCreation(Microsoft.CodeAnalysis.Operations.IObjectCreationOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitObjectOrCollectionInitializer(Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitOmittedArgument(Microsoft.CodeAnalysis.Operations.IOmittedArgumentOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitParameterInitializer(Microsoft.CodeAnalysis.Operations.IParameterInitializerOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitParameterReference(Microsoft.CodeAnalysis.Operations.IParameterReferenceOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitParenthesized(Microsoft.CodeAnalysis.Operations.IParenthesizedOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitPatternCaseClause(Microsoft.CodeAnalysis.Operations.IPatternCaseClauseOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitPropertyInitializer(Microsoft.CodeAnalysis.Operations.IPropertyInitializerOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitPropertyReference(Microsoft.CodeAnalysis.Operations.IPropertyReferenceOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitRaiseEvent(Microsoft.CodeAnalysis.Operations.IRaiseEventOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitRangeCaseClause(Microsoft.CodeAnalysis.Operations.IRangeCaseClauseOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitRelationalCaseClause(Microsoft.CodeAnalysis.Operations.IRelationalCaseClauseOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitReturn(Microsoft.CodeAnalysis.Operations.IReturnOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitSimpleAssignment(Microsoft.CodeAnalysis.Operations.ISimpleAssignmentOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitSingleValueCaseClause(Microsoft.CodeAnalysis.Operations.ISingleValueCaseClauseOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitSizeOf(Microsoft.CodeAnalysis.Operations.ISizeOfOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitStaticLocalInitializationSemaphore(Microsoft.CodeAnalysis.FlowAnalysis.IStaticLocalInitializationSemaphoreOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitStop(Microsoft.CodeAnalysis.Operations.IStopOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitSwitch(Microsoft.CodeAnalysis.Operations.ISwitchOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitSwitchCase(Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitThrow(Microsoft.CodeAnalysis.Operations.IThrowOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitTranslatedQuery(Microsoft.CodeAnalysis.Operations.ITranslatedQueryOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitTry(Microsoft.CodeAnalysis.Operations.ITryOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitTuple(Microsoft.CodeAnalysis.Operations.ITupleOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitTupleBinaryOperator(Microsoft.CodeAnalysis.Operations.ITupleBinaryOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitTypeOf(Microsoft.CodeAnalysis.Operations.ITypeOfOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitTypeParameterObjectCreation(Microsoft.CodeAnalysis.Operations.ITypeParameterObjectCreationOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitUnaryOperator(Microsoft.CodeAnalysis.Operations.IUnaryOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitUsing(Microsoft.CodeAnalysis.Operations.IUsingOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitVariableDeclaration(Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitVariableDeclarationGroup(Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitVariableDeclarator(Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitVariableInitializer(Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor.VisitWhileLoop(Microsoft.CodeAnalysis.Operations.IWhileLoopOperation)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.OperationVisitor`2" Id="T:Microsoft.CodeAnalysis.Operations.OperationVisitor`2">
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.DefaultVisit(Microsoft.CodeAnalysis.IOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.Visit(Microsoft.CodeAnalysis.IOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitAddressOf(Microsoft.CodeAnalysis.Operations.IAddressOfOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitAnonymousFunction(Microsoft.CodeAnalysis.Operations.IAnonymousFunctionOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitAnonymousObjectCreation(Microsoft.CodeAnalysis.Operations.IAnonymousObjectCreationOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitArgument(Microsoft.CodeAnalysis.Operations.IArgumentOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitArrayCreation(Microsoft.CodeAnalysis.Operations.IArrayCreationOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitArrayElementReference(Microsoft.CodeAnalysis.Operations.IArrayElementReferenceOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitArrayInitializer(Microsoft.CodeAnalysis.Operations.IArrayInitializerOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitAwait(Microsoft.CodeAnalysis.Operations.IAwaitOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitBinaryOperator(Microsoft.CodeAnalysis.Operations.IBinaryOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitBlock(Microsoft.CodeAnalysis.Operations.IBlockOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitBranch(Microsoft.CodeAnalysis.Operations.IBranchOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitCatchClause(Microsoft.CodeAnalysis.Operations.ICatchClauseOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitCaughtException(Microsoft.CodeAnalysis.FlowAnalysis.ICaughtExceptionOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitCoalesce(Microsoft.CodeAnalysis.Operations.ICoalesceOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitCollectionElementInitializer(Microsoft.CodeAnalysis.Operations.ICollectionElementInitializerOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitCompoundAssignment(Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitConditional(Microsoft.CodeAnalysis.Operations.IConditionalOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitConditionalAccess(Microsoft.CodeAnalysis.Operations.IConditionalAccessOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitConditionalAccessInstance(Microsoft.CodeAnalysis.Operations.IConditionalAccessInstanceOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitConstantPattern(Microsoft.CodeAnalysis.Operations.IConstantPatternOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitConstructorBodyOperation(Microsoft.CodeAnalysis.Operations.IConstructorBodyOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitConversion(Microsoft.CodeAnalysis.Operations.IConversionOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitDeclarationExpression(Microsoft.CodeAnalysis.Operations.IDeclarationExpressionOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitDeclarationPattern(Microsoft.CodeAnalysis.Operations.IDeclarationPatternOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitDeconstructionAssignment(Microsoft.CodeAnalysis.Operations.IDeconstructionAssignmentOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitDefaultCaseClause(Microsoft.CodeAnalysis.Operations.IDefaultCaseClauseOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitDefaultValue(Microsoft.CodeAnalysis.Operations.IDefaultValueOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitDelegateCreation(Microsoft.CodeAnalysis.Operations.IDelegateCreationOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitDiscardOperation(Microsoft.CodeAnalysis.Operations.IDiscardOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitDynamicIndexerAccess(Microsoft.CodeAnalysis.Operations.IDynamicIndexerAccessOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitDynamicInvocation(Microsoft.CodeAnalysis.Operations.IDynamicInvocationOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitDynamicMemberReference(Microsoft.CodeAnalysis.Operations.IDynamicMemberReferenceOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitDynamicObjectCreation(Microsoft.CodeAnalysis.Operations.IDynamicObjectCreationOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitEmpty(Microsoft.CodeAnalysis.Operations.IEmptyOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitEnd(Microsoft.CodeAnalysis.Operations.IEndOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitEventAssignment(Microsoft.CodeAnalysis.Operations.IEventAssignmentOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitEventReference(Microsoft.CodeAnalysis.Operations.IEventReferenceOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitExpressionStatement(Microsoft.CodeAnalysis.Operations.IExpressionStatementOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitFieldInitializer(Microsoft.CodeAnalysis.Operations.IFieldInitializerOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitFieldReference(Microsoft.CodeAnalysis.Operations.IFieldReferenceOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitFlowAnonymousFunction(Microsoft.CodeAnalysis.FlowAnalysis.IFlowAnonymousFunctionOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitFlowCapture(Microsoft.CodeAnalysis.FlowAnalysis.IFlowCaptureOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitFlowCaptureReference(Microsoft.CodeAnalysis.FlowAnalysis.IFlowCaptureReferenceOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitForEachLoop(Microsoft.CodeAnalysis.Operations.IForEachLoopOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitForLoop(Microsoft.CodeAnalysis.Operations.IForLoopOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitForToLoop(Microsoft.CodeAnalysis.Operations.IForToLoopOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitIncrementOrDecrement(Microsoft.CodeAnalysis.Operations.IIncrementOrDecrementOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitInstanceReference(Microsoft.CodeAnalysis.Operations.IInstanceReferenceOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitInterpolatedString(Microsoft.CodeAnalysis.Operations.IInterpolatedStringOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitInterpolatedStringText(Microsoft.CodeAnalysis.Operations.IInterpolatedStringTextOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitInterpolation(Microsoft.CodeAnalysis.Operations.IInterpolationOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitInvalid(Microsoft.CodeAnalysis.Operations.IInvalidOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitInvocation(Microsoft.CodeAnalysis.Operations.IInvocationOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitIsNull(Microsoft.CodeAnalysis.FlowAnalysis.IIsNullOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitIsPattern(Microsoft.CodeAnalysis.Operations.IIsPatternOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitIsType(Microsoft.CodeAnalysis.Operations.IIsTypeOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitLabeled(Microsoft.CodeAnalysis.Operations.ILabeledOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitLiteral(Microsoft.CodeAnalysis.Operations.ILiteralOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitLocalFunction(Microsoft.CodeAnalysis.Operations.ILocalFunctionOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitLocalReference(Microsoft.CodeAnalysis.Operations.ILocalReferenceOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitLock(Microsoft.CodeAnalysis.Operations.ILockOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitMemberInitializer(Microsoft.CodeAnalysis.Operations.IMemberInitializerOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitMethodBodyOperation(Microsoft.CodeAnalysis.Operations.IMethodBodyOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitMethodReference(Microsoft.CodeAnalysis.Operations.IMethodReferenceOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitNameOf(Microsoft.CodeAnalysis.Operations.INameOfOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitObjectCreation(Microsoft.CodeAnalysis.Operations.IObjectCreationOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitObjectOrCollectionInitializer(Microsoft.CodeAnalysis.Operations.IObjectOrCollectionInitializerOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitOmittedArgument(Microsoft.CodeAnalysis.Operations.IOmittedArgumentOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitParameterInitializer(Microsoft.CodeAnalysis.Operations.IParameterInitializerOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitParameterReference(Microsoft.CodeAnalysis.Operations.IParameterReferenceOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitParenthesized(Microsoft.CodeAnalysis.Operations.IParenthesizedOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitPatternCaseClause(Microsoft.CodeAnalysis.Operations.IPatternCaseClauseOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitPropertyInitializer(Microsoft.CodeAnalysis.Operations.IPropertyInitializerOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitPropertyReference(Microsoft.CodeAnalysis.Operations.IPropertyReferenceOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitRaiseEvent(Microsoft.CodeAnalysis.Operations.IRaiseEventOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitRangeCaseClause(Microsoft.CodeAnalysis.Operations.IRangeCaseClauseOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitRelationalCaseClause(Microsoft.CodeAnalysis.Operations.IRelationalCaseClauseOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitReturn(Microsoft.CodeAnalysis.Operations.IReturnOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitSimpleAssignment(Microsoft.CodeAnalysis.Operations.ISimpleAssignmentOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitSingleValueCaseClause(Microsoft.CodeAnalysis.Operations.ISingleValueCaseClauseOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitSizeOf(Microsoft.CodeAnalysis.Operations.ISizeOfOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitStaticLocalInitializationSemaphore(Microsoft.CodeAnalysis.FlowAnalysis.IStaticLocalInitializationSemaphoreOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitStop(Microsoft.CodeAnalysis.Operations.IStopOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitSwitch(Microsoft.CodeAnalysis.Operations.ISwitchOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitSwitchCase(Microsoft.CodeAnalysis.Operations.ISwitchCaseOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitThrow(Microsoft.CodeAnalysis.Operations.IThrowOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitTranslatedQuery(Microsoft.CodeAnalysis.Operations.ITranslatedQueryOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitTry(Microsoft.CodeAnalysis.Operations.ITryOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitTuple(Microsoft.CodeAnalysis.Operations.ITupleOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitTupleBinaryOperator(Microsoft.CodeAnalysis.Operations.ITupleBinaryOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitTypeOf(Microsoft.CodeAnalysis.Operations.ITypeOfOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitTypeParameterObjectCreation(Microsoft.CodeAnalysis.Operations.ITypeParameterObjectCreationOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitUnaryOperator(Microsoft.CodeAnalysis.Operations.IUnaryOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitUsing(Microsoft.CodeAnalysis.Operations.IUsingOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitVariableDeclaration(Microsoft.CodeAnalysis.Operations.IVariableDeclarationOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitVariableDeclarationGroup(Microsoft.CodeAnalysis.Operations.IVariableDeclarationGroupOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitVariableDeclarator(Microsoft.CodeAnalysis.Operations.IVariableDeclaratorOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitVariableInitializer(Microsoft.CodeAnalysis.Operations.IVariableInitializerOperation,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationVisitor`2.VisitWhileLoop(Microsoft.CodeAnalysis.Operations.IWhileLoopOperation,`0)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.OperationWalker" Id="T:Microsoft.CodeAnalysis.Operations.OperationWalker">
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationWalker.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationWalker.DefaultVisit(Microsoft.CodeAnalysis.IOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.Operations.OperationWalker.Visit(Microsoft.CodeAnalysis.IOperation)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Operations.UnaryOperatorKind" Id="T:Microsoft.CodeAnalysis.Operations.UnaryOperatorKind">
      <Member Id="F:Microsoft.CodeAnalysis.Operations.UnaryOperatorKind.BitwiseNegation" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.UnaryOperatorKind.False" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.UnaryOperatorKind.Minus" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.UnaryOperatorKind.None" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.UnaryOperatorKind.Not" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.UnaryOperatorKind.Plus" />
      <Member Id="F:Microsoft.CodeAnalysis.Operations.UnaryOperatorKind.True" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Options">
    <Type Name="Microsoft.CodeAnalysis.Options.DocumentOptionSet" Id="T:Microsoft.CodeAnalysis.Options.DocumentOptionSet">
      <Member Id="M:Microsoft.CodeAnalysis.Options.DocumentOptionSet.GetOption(Microsoft.CodeAnalysis.Options.OptionKey)" />
      <Member Id="M:Microsoft.CodeAnalysis.Options.DocumentOptionSet.GetOption``1(Microsoft.CodeAnalysis.Options.PerLanguageOption{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.Options.DocumentOptionSet.WithChangedOption(Microsoft.CodeAnalysis.Options.OptionKey,System.Object)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Options.IOption" Id="T:Microsoft.CodeAnalysis.Options.IOption">
      <Member Id="P:Microsoft.CodeAnalysis.Options.IOption.DefaultValue" />
      <Member Id="P:Microsoft.CodeAnalysis.Options.IOption.Feature" />
      <Member Id="P:Microsoft.CodeAnalysis.Options.IOption.IsPerLanguage" />
      <Member Id="P:Microsoft.CodeAnalysis.Options.IOption.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.Options.IOption.StorageLocations" />
      <Member Id="P:Microsoft.CodeAnalysis.Options.IOption.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Options.Option`1" Id="T:Microsoft.CodeAnalysis.Options.Option`1">
      <Member Id="M:Microsoft.CodeAnalysis.Options.Option`1.#ctor(System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Options.Option`1.#ctor(System.String,System.String,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Options.Option`1.#ctor(System.String,System.String,`0,Microsoft.CodeAnalysis.Options.OptionStorageLocation[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Options.Option`1.op_Implicit(Microsoft.CodeAnalysis.Options.Option{`0})~Microsoft.CodeAnalysis.Options.OptionKey" />
      <Member Id="M:Microsoft.CodeAnalysis.Options.Option`1.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.Options.Option`1.DefaultValue" />
      <Member Id="P:Microsoft.CodeAnalysis.Options.Option`1.Feature" />
      <Member Id="P:Microsoft.CodeAnalysis.Options.Option`1.Microsoft#CodeAnalysis#Options#IOption#DefaultValue" />
      <Member Id="P:Microsoft.CodeAnalysis.Options.Option`1.Microsoft#CodeAnalysis#Options#IOption#IsPerLanguage" />
      <Member Id="P:Microsoft.CodeAnalysis.Options.Option`1.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.Options.Option`1.StorageLocations" />
      <Member Id="P:Microsoft.CodeAnalysis.Options.Option`1.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Options.OptionKey" Id="T:Microsoft.CodeAnalysis.Options.OptionKey">
      <Member Id="M:Microsoft.CodeAnalysis.Options.OptionKey.#ctor(Microsoft.CodeAnalysis.Options.IOption,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Options.OptionKey.Equals(Microsoft.CodeAnalysis.Options.OptionKey)" />
      <Member Id="M:Microsoft.CodeAnalysis.Options.OptionKey.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.Options.OptionKey.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.Options.OptionKey.op_Equality(Microsoft.CodeAnalysis.Options.OptionKey,Microsoft.CodeAnalysis.Options.OptionKey)" />
      <Member Id="M:Microsoft.CodeAnalysis.Options.OptionKey.op_Inequality(Microsoft.CodeAnalysis.Options.OptionKey,Microsoft.CodeAnalysis.Options.OptionKey)" />
      <Member Id="P:Microsoft.CodeAnalysis.Options.OptionKey.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.Options.OptionKey.Option" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Options.OptionSet" Id="T:Microsoft.CodeAnalysis.Options.OptionSet">
      <Member Id="M:Microsoft.CodeAnalysis.Options.OptionSet.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.Options.OptionSet.GetOption(Microsoft.CodeAnalysis.Options.OptionKey)" />
      <Member Id="M:Microsoft.CodeAnalysis.Options.OptionSet.GetOption``1(Microsoft.CodeAnalysis.Options.Option{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.Options.OptionSet.GetOption``1(Microsoft.CodeAnalysis.Options.PerLanguageOption{``0},System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Options.OptionSet.WithChangedOption(Microsoft.CodeAnalysis.Options.OptionKey,System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.Options.OptionSet.WithChangedOption``1(Microsoft.CodeAnalysis.Options.Option{``0},``0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Options.OptionSet.WithChangedOption``1(Microsoft.CodeAnalysis.Options.PerLanguageOption{``0},System.String,``0)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Options.OptionStorageLocation" Id="T:Microsoft.CodeAnalysis.Options.OptionStorageLocation">
      <Member Id="M:Microsoft.CodeAnalysis.Options.OptionStorageLocation.#ctor" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Options.PerLanguageOption`1" Id="T:Microsoft.CodeAnalysis.Options.PerLanguageOption`1">
      <Member Id="M:Microsoft.CodeAnalysis.Options.PerLanguageOption`1.#ctor(System.String,System.String,`0)" />
      <Member Id="M:Microsoft.CodeAnalysis.Options.PerLanguageOption`1.#ctor(System.String,System.String,`0,Microsoft.CodeAnalysis.Options.OptionStorageLocation[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Options.PerLanguageOption`1.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.Options.PerLanguageOption`1.DefaultValue" />
      <Member Id="P:Microsoft.CodeAnalysis.Options.PerLanguageOption`1.Feature" />
      <Member Id="P:Microsoft.CodeAnalysis.Options.PerLanguageOption`1.Microsoft#CodeAnalysis#Options#IOption#DefaultValue" />
      <Member Id="P:Microsoft.CodeAnalysis.Options.PerLanguageOption`1.Microsoft#CodeAnalysis#Options#IOption#IsPerLanguage" />
      <Member Id="P:Microsoft.CodeAnalysis.Options.PerLanguageOption`1.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.Options.PerLanguageOption`1.StorageLocations" />
      <Member Id="P:Microsoft.CodeAnalysis.Options.PerLanguageOption`1.Type" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Recommendations">
    <Type Name="Microsoft.CodeAnalysis.Recommendations.RecommendationOptions" Id="T:Microsoft.CodeAnalysis.Recommendations.RecommendationOptions">
      <Member Id="P:Microsoft.CodeAnalysis.Recommendations.RecommendationOptions.FilterOutOfScopeLocals" />
      <Member Id="P:Microsoft.CodeAnalysis.Recommendations.RecommendationOptions.HideAdvancedMembers" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Recommendations.Recommender" Id="T:Microsoft.CodeAnalysis.Recommendations.Recommender">
      <Member Id="M:Microsoft.CodeAnalysis.Recommendations.Recommender.GetRecommendedSymbolsAtPosition(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Recommendations.Recommender.GetRecommendedSymbolsAtPositionAsync(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.Workspace,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Rename">
    <Type Name="Microsoft.CodeAnalysis.Rename.RenameEntityKind" Id="T:Microsoft.CodeAnalysis.Rename.RenameEntityKind">
      <Member Id="F:Microsoft.CodeAnalysis.Rename.RenameEntityKind.BaseSymbol" />
      <Member Id="F:Microsoft.CodeAnalysis.Rename.RenameEntityKind.OverloadedSymbols" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Rename.RenameOptions" Id="T:Microsoft.CodeAnalysis.Rename.RenameOptions">
      <Member Id="P:Microsoft.CodeAnalysis.Rename.RenameOptions.PreviewChanges" />
      <Member Id="P:Microsoft.CodeAnalysis.Rename.RenameOptions.RenameInComments" />
      <Member Id="P:Microsoft.CodeAnalysis.Rename.RenameOptions.RenameInStrings" />
      <Member Id="P:Microsoft.CodeAnalysis.Rename.RenameOptions.RenameOverloads" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Rename.Renamer" Id="T:Microsoft.CodeAnalysis.Rename.Renamer">
      <Member Id="M:Microsoft.CodeAnalysis.Rename.Renamer.RenameSymbolAsync(Microsoft.CodeAnalysis.Solution,Microsoft.CodeAnalysis.ISymbol,System.String,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Simplification">
    <Type Name="Microsoft.CodeAnalysis.Simplification.SimplificationOptions" Id="T:Microsoft.CodeAnalysis.Simplification.SimplificationOptions">
      <Member Id="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.AllowSimplificationToBaseType" />
      <Member Id="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.AllowSimplificationToGenericType" />
      <Member Id="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferAliasToQualification" />
      <Member Id="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferImplicitTypeInference" />
      <Member Id="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferImplicitTypeInLocalDeclaration" />
      <Member Id="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferIntrinsicPredefinedTypeKeywordInDeclaration" />
      <Member Id="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferIntrinsicPredefinedTypeKeywordInMemberAccess" />
      <Member Id="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.PreferOmittingModuleNamesInQualification" />
      <Member Id="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.QualifyEventAccess" />
      <Member Id="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.QualifyFieldAccess" />
      <Member Id="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.QualifyMemberAccessWithThisOrMe" />
      <Member Id="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.QualifyMethodAccess" />
      <Member Id="P:Microsoft.CodeAnalysis.Simplification.SimplificationOptions.QualifyPropertyAccess" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Simplification.Simplifier" Id="T:Microsoft.CodeAnalysis.Simplification.Simplifier">
      <Member Id="M:Microsoft.CodeAnalysis.Simplification.Simplifier.Expand(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.Workspace,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Simplification.Simplifier.Expand``1(``0,Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.Workspace,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Simplification.Simplifier.ExpandAsync(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.Document,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Simplification.Simplifier.ExpandAsync``1(``0,Microsoft.CodeAnalysis.Document,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Boolean},System.Boolean,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Simplification.Simplifier.ReduceAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Simplification.Simplifier.ReduceAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.SyntaxAnnotation,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Simplification.Simplifier.ReduceAsync(Microsoft.CodeAnalysis.Document,Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Simplification.Simplifier.ReduceAsync(Microsoft.CodeAnalysis.Document,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextSpan},Microsoft.CodeAnalysis.Options.OptionSet,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.Simplification.Simplifier.Annotation" />
      <Member Id="P:Microsoft.CodeAnalysis.Simplification.Simplifier.SpecialTypeAnnotation" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Tags">
    <Type Name="Microsoft.CodeAnalysis.Tags.WellKnownTags" Id="T:Microsoft.CodeAnalysis.Tags.WellKnownTags">
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Assembly" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Class" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Constant" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Delegate" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Enum" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.EnumMember" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Error" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Event" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.ExtensionMethod" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Field" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.File" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Folder" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Interface" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Internal" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Intrinsic" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Keyword" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Label" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Local" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Method" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Module" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Namespace" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Operator" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Parameter" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Private" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Project" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Property" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Protected" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Public" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.RangeVariable" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Reference" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Snippet" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Structure" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.TypeParameter" />
      <Member Id="F:Microsoft.CodeAnalysis.Tags.WellKnownTags.Warning" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.Text">
    <Type Name="Microsoft.CodeAnalysis.Text.LinePosition" Id="T:Microsoft.CodeAnalysis.Text.LinePosition">
      <Member Id="M:Microsoft.CodeAnalysis.Text.LinePosition.#ctor(System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.LinePosition.CompareTo(Microsoft.CodeAnalysis.Text.LinePosition)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.LinePosition.Equals(Microsoft.CodeAnalysis.Text.LinePosition)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.LinePosition.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.LinePosition.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.LinePosition.op_Equality(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.LinePosition.op_GreaterThan(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.LinePosition.op_GreaterThanOrEqual(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.LinePosition.op_Inequality(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.LinePosition.op_LessThan(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.LinePosition.op_LessThanOrEqual(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.LinePosition.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.LinePosition.Character" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.LinePosition.Line" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.LinePosition.Zero" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Text.LinePositionSpan" Id="T:Microsoft.CodeAnalysis.Text.LinePositionSpan">
      <Member Id="M:Microsoft.CodeAnalysis.Text.LinePositionSpan.#ctor(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.LinePositionSpan.Equals(Microsoft.CodeAnalysis.Text.LinePositionSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.LinePositionSpan.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.LinePositionSpan.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.LinePositionSpan.op_Equality(Microsoft.CodeAnalysis.Text.LinePositionSpan,Microsoft.CodeAnalysis.Text.LinePositionSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.LinePositionSpan.op_Inequality(Microsoft.CodeAnalysis.Text.LinePositionSpan,Microsoft.CodeAnalysis.Text.LinePositionSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.LinePositionSpan.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.LinePositionSpan.End" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.LinePositionSpan.Start" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Text.SourceHashAlgorithm" Id="T:Microsoft.CodeAnalysis.Text.SourceHashAlgorithm">
      <Member Id="F:Microsoft.CodeAnalysis.Text.SourceHashAlgorithm.None" />
      <Member Id="F:Microsoft.CodeAnalysis.Text.SourceHashAlgorithm.Sha1" />
      <Member Id="F:Microsoft.CodeAnalysis.Text.SourceHashAlgorithm.Sha256" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Text.SourceText" Id="T:Microsoft.CodeAnalysis.Text.SourceText">
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.#ctor(System.Collections.Immutable.ImmutableArray{System.Byte},Microsoft.CodeAnalysis.Text.SourceHashAlgorithm,Microsoft.CodeAnalysis.Text.SourceTextContainer)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.ContentEquals(Microsoft.CodeAnalysis.Text.SourceText)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.ContentEqualsImpl(Microsoft.CodeAnalysis.Text.SourceText)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.From(System.Byte[],System.Int32,System.Text.Encoding,Microsoft.CodeAnalysis.Text.SourceHashAlgorithm,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.From(System.Byte[],System.Int32,System.Text.Encoding,Microsoft.CodeAnalysis.Text.SourceHashAlgorithm,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.From(System.IO.Stream,System.Text.Encoding,Microsoft.CodeAnalysis.Text.SourceHashAlgorithm,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.From(System.IO.Stream,System.Text.Encoding,Microsoft.CodeAnalysis.Text.SourceHashAlgorithm,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.From(System.IO.TextReader,System.Int32,System.Text.Encoding,Microsoft.CodeAnalysis.Text.SourceHashAlgorithm)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.From(System.String,System.Text.Encoding,Microsoft.CodeAnalysis.Text.SourceHashAlgorithm)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.GetChangeRanges(Microsoft.CodeAnalysis.Text.SourceText)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.GetChecksum" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.GetLinesCore" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.GetSubText(Microsoft.CodeAnalysis.Text.TextSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.GetSubText(System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.GetTextChanges(Microsoft.CodeAnalysis.Text.SourceText)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.Replace(Microsoft.CodeAnalysis.Text.TextSpan,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.Replace(System.Int32,System.Int32,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.ToString" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.ToString(Microsoft.CodeAnalysis.Text.TextSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.WithChanges(Microsoft.CodeAnalysis.Text.TextChange[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.WithChanges(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextChange})" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.Write(System.IO.TextWriter,Microsoft.CodeAnalysis.Text.TextSpan,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceText.Write(System.IO.TextWriter,System.Threading.CancellationToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.SourceText.CanBeEmbedded" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.SourceText.ChecksumAlgorithm" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.SourceText.Container" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.SourceText.Encoding" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.SourceText.Item(System.Int32)" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.SourceText.Length" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.SourceText.Lines" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Text.SourceTextContainer" Id="T:Microsoft.CodeAnalysis.Text.SourceTextContainer">
      <Member Id="E:Microsoft.CodeAnalysis.Text.SourceTextContainer.TextChanged" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.SourceTextContainer.#ctor" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.SourceTextContainer.CurrentText" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Text.TextChange" Id="T:Microsoft.CodeAnalysis.Text.TextChange">
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextChange.#ctor(Microsoft.CodeAnalysis.Text.TextSpan,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextChange.Equals(Microsoft.CodeAnalysis.Text.TextChange)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextChange.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextChange.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextChange.op_Equality(Microsoft.CodeAnalysis.Text.TextChange,Microsoft.CodeAnalysis.Text.TextChange)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextChange.op_Implicit(Microsoft.CodeAnalysis.Text.TextChange)~Microsoft.CodeAnalysis.Text.TextChangeRange" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextChange.op_Inequality(Microsoft.CodeAnalysis.Text.TextChange,Microsoft.CodeAnalysis.Text.TextChange)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextChange.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextChange.NewText" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextChange.NoChanges" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextChange.Span" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Text.TextChangeEventArgs" Id="T:Microsoft.CodeAnalysis.Text.TextChangeEventArgs">
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextChangeEventArgs.#ctor(Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Text.TextChangeRange[])" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextChangeEventArgs.#ctor(Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Text.SourceText,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextChangeRange})" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextChangeEventArgs.Changes" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextChangeEventArgs.NewText" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextChangeEventArgs.OldText" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Text.TextChangeRange" Id="T:Microsoft.CodeAnalysis.Text.TextChangeRange">
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextChangeRange.#ctor(Microsoft.CodeAnalysis.Text.TextSpan,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextChangeRange.Collapse(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Text.TextChangeRange})" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextChangeRange.Equals(Microsoft.CodeAnalysis.Text.TextChangeRange)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextChangeRange.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextChangeRange.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextChangeRange.op_Equality(Microsoft.CodeAnalysis.Text.TextChangeRange,Microsoft.CodeAnalysis.Text.TextChangeRange)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextChangeRange.op_Inequality(Microsoft.CodeAnalysis.Text.TextChangeRange,Microsoft.CodeAnalysis.Text.TextChangeRange)" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextChangeRange.NewLength" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextChangeRange.NoChanges" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextChangeRange.Span" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Text.TextLine" Id="T:Microsoft.CodeAnalysis.Text.TextLine">
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLine.Equals(Microsoft.CodeAnalysis.Text.TextLine)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLine.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLine.FromSpan(Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.Text.TextSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLine.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLine.op_Equality(Microsoft.CodeAnalysis.Text.TextLine,Microsoft.CodeAnalysis.Text.TextLine)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLine.op_Inequality(Microsoft.CodeAnalysis.Text.TextLine,Microsoft.CodeAnalysis.Text.TextLine)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLine.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextLine.End" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextLine.EndIncludingLineBreak" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextLine.LineNumber" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextLine.Span" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextLine.SpanIncludingLineBreak" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextLine.Start" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextLine.Text" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Text.TextLineCollection" Id="T:Microsoft.CodeAnalysis.Text.TextLineCollection">
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLineCollection.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLineCollection.GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLineCollection.GetLineFromPosition(System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLineCollection.GetLinePosition(System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLineCollection.GetLinePositionSpan(Microsoft.CodeAnalysis.Text.TextSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLineCollection.GetPosition(Microsoft.CodeAnalysis.Text.LinePosition)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLineCollection.GetTextSpan(Microsoft.CodeAnalysis.Text.LinePositionSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLineCollection.IndexOf(System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLineCollection.System#Collections#Generic#IEnumerable&lt;Microsoft#CodeAnalysis#Text#TextLine&gt;#GetEnumerator" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLineCollection.System#Collections#IEnumerable#GetEnumerator" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextLineCollection.Count" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextLineCollection.Item(System.Int32)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Text.TextLineCollection/Enumerator" Id="T:Microsoft.CodeAnalysis.Text.TextLineCollection.Enumerator">
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLineCollection.Enumerator.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLineCollection.Enumerator.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLineCollection.Enumerator.MoveNext" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLineCollection.Enumerator.System#Collections#IEnumerator#MoveNext" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLineCollection.Enumerator.System#Collections#IEnumerator#Reset" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextLineCollection.Enumerator.System#IDisposable#Dispose" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextLineCollection.Enumerator.Current" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextLineCollection.Enumerator.System#Collections#IEnumerator#Current" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.Text.TextSpan" Id="T:Microsoft.CodeAnalysis.Text.TextSpan">
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextSpan.#ctor(System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextSpan.CompareTo(Microsoft.CodeAnalysis.Text.TextSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextSpan.Contains(Microsoft.CodeAnalysis.Text.TextSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextSpan.Contains(System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextSpan.Equals(Microsoft.CodeAnalysis.Text.TextSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextSpan.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextSpan.FromBounds(System.Int32,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextSpan.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextSpan.Intersection(Microsoft.CodeAnalysis.Text.TextSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextSpan.IntersectsWith(Microsoft.CodeAnalysis.Text.TextSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextSpan.IntersectsWith(System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextSpan.op_Equality(Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Text.TextSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextSpan.op_Inequality(Microsoft.CodeAnalysis.Text.TextSpan,Microsoft.CodeAnalysis.Text.TextSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextSpan.Overlap(Microsoft.CodeAnalysis.Text.TextSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextSpan.OverlapsWith(Microsoft.CodeAnalysis.Text.TextSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.Text.TextSpan.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextSpan.End" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextSpan.IsEmpty" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextSpan.Length" />
      <Member Id="P:Microsoft.CodeAnalysis.Text.TextSpan.Start" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.VisualBasic">
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.AggregateClauseSymbolInfo" Id="T:Microsoft.CodeAnalysis.VisualBasic.AggregateClauseSymbolInfo">
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.AggregateClauseSymbolInfo.Select1" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.AggregateClauseSymbolInfo.Select2" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.AwaitExpressionInfo" Id="T:Microsoft.CodeAnalysis.VisualBasic.AwaitExpressionInfo">
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.AwaitExpressionInfo.GetAwaiterMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.AwaitExpressionInfo.GetResultMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.AwaitExpressionInfo.IsCompletedProperty" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.CollectionRangeVariableSymbolInfo" Id="T:Microsoft.CodeAnalysis.VisualBasic.CollectionRangeVariableSymbolInfo">
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.CollectionRangeVariableSymbolInfo.AsClauseConversion" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.CollectionRangeVariableSymbolInfo.SelectMany" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.CollectionRangeVariableSymbolInfo.ToQueryableCollectionConversion" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Conversion" Id="T:Microsoft.CodeAnalysis.VisualBasic.Conversion">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Conversion.Equals(Microsoft.CodeAnalysis.VisualBasic.Conversion)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Conversion.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Conversion.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Conversion.op_Equality(Microsoft.CodeAnalysis.VisualBasic.Conversion,Microsoft.CodeAnalysis.VisualBasic.Conversion)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Conversion.op_Inequality(Microsoft.CodeAnalysis.VisualBasic.Conversion,Microsoft.CodeAnalysis.VisualBasic.Conversion)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Conversion.ToCommonConversion" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Conversion.ToString" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Conversion.Exists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Conversion.IsAnonymousDelegate" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Conversion.IsArray" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Conversion.IsBoolean" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Conversion.IsDefault" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Conversion.IsIdentity" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Conversion.IsLambda" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Conversion.IsNarrowing" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Conversion.IsNullableValueType" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Conversion.IsNumeric" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Conversion.IsReference" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Conversion.IsString" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Conversion.IsTypeParameter" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Conversion.IsUserDefined" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Conversion.IsValueType" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Conversion.IsWidening" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Conversion.MethodSymbol" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.ForEachStatementInfo" Id="T:Microsoft.CodeAnalysis.VisualBasic.ForEachStatementInfo">
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.ForEachStatementInfo.CurrentConversion" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.ForEachStatementInfo.CurrentProperty" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.ForEachStatementInfo.DisposeMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.ForEachStatementInfo.ElementConversion" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.ForEachStatementInfo.ElementType" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.ForEachStatementInfo.GetEnumeratorMethod" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.ForEachStatementInfo.MoveNextMethod" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.GeneratedExtensionSyntaxFacts" Id="T:Microsoft.CodeAnalysis.VisualBasic.GeneratedExtensionSyntaxFacts">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.GeneratedExtensionSyntaxFacts.GetText(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.GlobalImport" Id="T:Microsoft.CodeAnalysis.VisualBasic.GlobalImport">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.GlobalImport.Equals(Microsoft.CodeAnalysis.VisualBasic.GlobalImport)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.GlobalImport.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.GlobalImport.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.GlobalImport.op_Equality(Microsoft.CodeAnalysis.VisualBasic.GlobalImport,Microsoft.CodeAnalysis.VisualBasic.GlobalImport)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.GlobalImport.op_Inequality(Microsoft.CodeAnalysis.VisualBasic.GlobalImport,Microsoft.CodeAnalysis.VisualBasic.GlobalImport)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.GlobalImport.Parse(System.Collections.Generic.IEnumerable{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.GlobalImport.Parse(System.Collections.Generic.IEnumerable{System.String},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostic}@)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.GlobalImport.Parse(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.GlobalImport.Parse(System.String,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Diagnostic}@)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.GlobalImport.Parse(System.String[])" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.GlobalImport.Clause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.GlobalImport.Name" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.HandledEvent" Id="T:Microsoft.CodeAnalysis.VisualBasic.HandledEvent">
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.HandledEvent.EventContainer" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.HandledEvent.EventSymbol" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.HandledEvent.HandlesKind" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.HandledEvent.WithEventsSourceProperty" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.HandledEventKind" Id="T:Microsoft.CodeAnalysis.VisualBasic.HandledEventKind">
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.HandledEventKind.Me" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.HandledEventKind.MyBase" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.HandledEventKind.MyClass" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.HandledEventKind.WithEvents" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.LanguageVersion" Id="T:Microsoft.CodeAnalysis.VisualBasic.LanguageVersion">
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.LanguageVersion.Default" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.LanguageVersion.Latest" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.LanguageVersion.VisualBasic10" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.LanguageVersion.VisualBasic11" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.LanguageVersion.VisualBasic12" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.LanguageVersion.VisualBasic14" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.LanguageVersion.VisualBasic15" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.LanguageVersion.VisualBasic15_3" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.LanguageVersion.VisualBasic15_5" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.LanguageVersion.VisualBasic9" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.LanguageVersionFacts" Id="T:Microsoft.CodeAnalysis.VisualBasic.LanguageVersionFacts">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.LanguageVersionFacts.MapSpecifiedToEffectiveVersion(Microsoft.CodeAnalysis.VisualBasic.LanguageVersion)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.LanguageVersionFacts.ToDisplayString(Microsoft.CodeAnalysis.VisualBasic.LanguageVersion)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.LanguageVersionFacts.TryParse(System.String,Microsoft.CodeAnalysis.VisualBasic.LanguageVersion@)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.LocalizableErrorArgument" Id="T:Microsoft.CodeAnalysis.VisualBasic.LocalizableErrorArgument">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.LocalizableErrorArgument.ToString" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.LocalizableErrorArgument.ToString_IFormattable(System.String,System.IFormatProvider)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.OptionStrict" Id="T:Microsoft.CodeAnalysis.VisualBasic.OptionStrict">
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.OptionStrict.Custom" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.OptionStrict.Off" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.OptionStrict.On" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.PredefinedPreprocessorSymbols" Id="T:Microsoft.CodeAnalysis.VisualBasic.PredefinedPreprocessorSymbols">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.PredefinedPreprocessorSymbols.AddPredefinedPreprocessorSymbols(Microsoft.CodeAnalysis.OutputKind,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.PredefinedPreprocessorSymbols.AddPredefinedPreprocessorSymbols(Microsoft.CodeAnalysis.OutputKind,System.Collections.Generic.KeyValuePair{System.String,System.Object}[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.PredefinedPreprocessorSymbols.AddPredefinedPreprocessorSymbols(Microsoft.CodeAnalysis.OutputKind,System.Collections.Immutable.ImmutableArray{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.SymbolDisplay" Id="T:Microsoft.CodeAnalysis.VisualBasic.SymbolDisplay">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SymbolDisplay.FormatPrimitive(System.Object,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SymbolDisplay.ToDisplayParts(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.SymbolDisplayFormat)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SymbolDisplay.ToDisplayString(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.SymbolDisplayFormat)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SymbolDisplay.ToMinimalDisplayParts(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.SymbolDisplayFormat)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SymbolDisplay.ToMinimalDisplayString(Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.SymbolDisplayFormat)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.SyntaxExtensions" Id="T:Microsoft.CodeAnalysis.VisualBasic.SyntaxExtensions">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxExtensions.Attributes(Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxExtensions.NormalizeWhitespace(Microsoft.CodeAnalysis.SyntaxToken,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxExtensions.NormalizeWhitespace(Microsoft.CodeAnalysis.SyntaxToken,System.String,System.String,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxExtensions.NormalizeWhitespace(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.String,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxExtensions.NormalizeWhitespace``1(``0,System.Boolean,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxExtensions.NormalizeWhitespace``1(``0,System.Boolean,System.String,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxExtensions.ToSyntaxTriviaList(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxExtensions.TryGetInferredMemberName(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxExtensions.Type(Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxExtensions.Type(Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxExtensions.WithIdentifier(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory" Id="T:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AccessorBlock(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AccessorBlock(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AccessorStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AccessorStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AddAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AddAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AddExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AddExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AddHandlerAccessorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AddHandlerAccessorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AddHandlerAccessorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AddHandlerAccessorStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AddHandlerAccessorStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AddHandlerAccessorStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AddHandlerStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AddHandlerStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AddRemoveHandlerStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AddRemoveHandlerStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AddressOfExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AddressOfExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AggregateClause(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax},Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AggregateClause(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryClauseSyntax},Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AggregateClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryClauseSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AggregationRangeVariable(Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AggregationRangeVariable(Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AndAlsoExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AndAlsoExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AndExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AndExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AnonymousObjectCreationExpression(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AnonymousObjectCreationExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AnonymousObjectCreationExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AreEquivalent(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AreEquivalent(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.SyntaxNode,System.Func{Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AreEquivalent(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AreEquivalent(Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AreEquivalent(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SyntaxTree,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AreEquivalent``1(Microsoft.CodeAnalysis.SeparatedSyntaxList{``0},Microsoft.CodeAnalysis.SeparatedSyntaxList{``0},System.Func{Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AreEquivalent``1(Microsoft.CodeAnalysis.SyntaxList{``0},Microsoft.CodeAnalysis.SyntaxList{``0},System.Func{Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ArgumentList" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ArgumentList(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ArgumentList(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ArrayCreationExpression(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ArrayCreationExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ArrayCreationExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ArrayRankSpecifier" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ArrayRankSpecifier(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ArrayType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ArrayType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AscendingOrdering(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AscendingOrdering(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AsNewClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AsNewClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Attribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Attribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AttributeList" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AttributeList(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AttributeList(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AttributesStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AttributesStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AttributeTarget(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AttributeTarget(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AwaitExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.AwaitExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.BadDirectiveTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.BadDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.BadToken(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.BadToken(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.BinaryConditionalExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.BinaryConditionalExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.BinaryExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.BracketedIdentifier(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.BracketedIdentifier(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CallStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CallStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseBlock(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseBlock(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseElseBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseElseBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseElseStatement(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseElseStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseElseStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseEqualsClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseEqualsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseGreaterThanClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseGreaterThanClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseGreaterThanOrEqualClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseGreaterThanOrEqualClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseLessThanClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseLessThanClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseLessThanOrEqualClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseLessThanOrEqualClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseNotEqualsClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseNotEqualsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseStatement(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CaseStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CatchBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CatchBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CatchFilterClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CatchFilterClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CatchStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CatchStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CatchStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CharacterLiteralExpression(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CharacterLiteralToken(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.Char,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CharacterLiteralToken(System.String,System.Char)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ClassBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ClassBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ClassBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ClassConstraint(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ClassStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ClassStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ClassStatement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ClassStatement(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CollectionInitializer" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CollectionInitializer(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CollectionInitializer(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CollectionRangeVariable(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CollectionRangeVariable(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CollectionRangeVariable(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ColonTrivia(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CommentTrivia(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CompilationUnit" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CompilationUnit(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.OptionStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributesStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CompilationUnit(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.OptionStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributesStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ConcatenateAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ConcatenateAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ConcatenateExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ConcatenateExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ConditionalAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ConditionalAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ConditionalAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ConflictMarkerTrivia(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ConstDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ConstDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ConstDirectiveTrivia(System.String,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ConstructorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ConstructorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ConstructorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ContinueDoStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ContinueDoStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ContinueForStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ContinueForStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ContinueStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ContinueStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ContinueWhileStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ContinueWhileStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CrefOperatorReference(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CrefOperatorReference(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CrefReference(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CrefReference(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignatureSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CrefSignature(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignaturePartSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CrefSignature(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignaturePartSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CrefSignature(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignaturePartSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CrefSignaturePart" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CrefSignaturePart(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CTypeExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CTypeExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DateLiteralExpression(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DateLiteralToken(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.DateTime,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DateLiteralToken(System.String,System.DateTime)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DecimalLiteralToken(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter,System.Decimal,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DecimalLiteralToken(System.String,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter,System.Decimal)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DeclareFunctionStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DeclareFunctionStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DeclareFunctionStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DeclareFunctionStatement(System.String,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DeclareStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DeclareStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DeclareStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DeclareStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,System.String,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DeclareSubStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DeclareSubStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DeclareSubStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DeclareSubStatement(System.String,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DelegateFunctionStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DelegateFunctionStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DelegateFunctionStatement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DelegateFunctionStatement(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DelegateStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DelegateStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DelegateStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DelegateStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DelegateSubStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DelegateSubStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DelegateSubStatement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DelegateSubStatement(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DescendingOrdering(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DescendingOrdering(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DictionaryAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DictionaryAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DictionaryAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DirectCastExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DirectCastExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DisabledTextTrivia(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DisableWarningDirectiveTrivia(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DisableWarningDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DisableWarningDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DistinctClause" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DistinctClause(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DivideAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DivideAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DivideExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DivideExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DocumentationComment(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DocumentationCommentExteriorTrivia(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DocumentationCommentLineBreakToken(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DocumentationCommentLineBreakToken(System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DocumentationCommentTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DocumentationCommentTrivia(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DoLoopBlock(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DoLoopBlock(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DoLoopUntilBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DoLoopUntilBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DoLoopWhileBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DoLoopWhileBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DoStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DoStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DoStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DoUntilLoopBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DoUntilLoopBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DoUntilStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DoUntilStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DoUntilStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DoWhileLoopBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DoWhileLoopBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DoWhileStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DoWhileStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.DoWhileStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElasticEndOfLine(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElasticWhitespace(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElseBlock" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElseBlock(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElseBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElseCaseClause" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElseCaseClause(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElseDirectiveTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElseDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElseIfBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElseIfBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElseIfDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElseIfDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElseIfStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElseIfStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElseStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElseStatement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EmptyStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EmptyStatement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EnableWarningDirectiveTrivia(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EnableWarningDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EnableWarningDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndAddHandlerStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndAddHandlerStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndBlockStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndBlockStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndClassStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndClassStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndEnumStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndEnumStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndEventStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndEventStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndExternalSourceDirectiveTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndExternalSourceDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndFunctionStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndFunctionStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndGetStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndGetStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndIfDirectiveTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndIfDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndIfStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndIfStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndInterfaceStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndInterfaceStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndModuleStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndModuleStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndNamespaceStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndNamespaceStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndOfLine(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndOfLine(System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndOfLineTrivia(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndOperatorStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndOperatorStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndPropertyStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndPropertyStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndRaiseEventStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndRaiseEventStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndRegionDirectiveTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndRegionDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndRemoveHandlerStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndRemoveHandlerStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndSelectStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndSelectStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndSetStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndSetStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndStatement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndStructureStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndStructureStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndSubStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndSubStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndSyncLockStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndSyncLockStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndTryStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndTryStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndUsingStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndUsingStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndWhileStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndWhileStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndWithStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EndWithStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EnumBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EnumBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EnumBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EnumMemberDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EnumMemberDeclaration(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EnumMemberDeclaration(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EnumStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EnumStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EnumStatement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EnumStatement(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EqualsExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EqualsExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EqualsValue(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EqualsValue(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EraseStatement(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EraseStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EraseStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ErrorStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ErrorStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EventBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EventBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EventStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EventStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EventStatement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.EventStatement(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExclusiveOrExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExclusiveOrExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExitDoStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExitDoStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExitForStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExitForStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExitFunctionStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExitFunctionStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExitOperatorStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExitOperatorStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExitPropertyStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExitPropertyStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExitSelectStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExitSelectStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExitStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExitStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExitSubStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExitSubStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExitTryStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExitTryStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExitWhileStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExitWhileStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExponentiateAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExponentiateAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExponentiateExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExponentiateExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExpressionRangeVariable(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExpressionRangeVariable(Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExpressionStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExternalChecksumDirectiveTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExternalChecksumDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExternalSourceDirectiveTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ExternalSourceDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FalseLiteralExpression(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FieldDeclaration(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FieldDeclaration(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FieldDeclaration(Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FinallyBlock" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FinallyBlock(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FinallyBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FinallyStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FinallyStatement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FloatingLiteralToken(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter,System.Double,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FloatingLiteralToken(System.String,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter,System.Double)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.NextStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForEachBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForEachBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.NextStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForEachStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForEachStatement(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForStatement(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForStepClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ForStepClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FromClause(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FromClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FromClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FunctionAggregation(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FunctionAggregation(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FunctionAggregation(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FunctionAggregation(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FunctionBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FunctionBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FunctionBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FunctionLambdaHeader" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FunctionLambdaHeader(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FunctionLambdaHeader(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FunctionStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FunctionStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FunctionStatement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.FunctionStatement(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GenericName(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GenericName(System.String,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GetAccessorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GetAccessorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GetAccessorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GetAccessorStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GetAccessorStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GetAccessorStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GetStandaloneExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GetTypeExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GetTypeExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GetXmlNamespaceExpression" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GetXmlNamespaceExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GlobalName" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GlobalName(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GoToStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GoToStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GreaterThanExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GreaterThanExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GreaterThanOrEqualExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GreaterThanOrEqualExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GroupAggregation" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GroupAggregation(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GroupByClause(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax},Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GroupByClause(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax},Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax},Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GroupByClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GroupJoinClause(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax},Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax},Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GroupJoinClause(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax},Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax},Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.GroupJoinClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.HandlesClause(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseItemSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.HandlesClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseItemSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.HandlesClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseItemSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.HandlesClauseItem(Microsoft.CodeAnalysis.VisualBasic.Syntax.EventContainerSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.HandlesClauseItem(Microsoft.CodeAnalysis.VisualBasic.Syntax.EventContainerSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Identifier(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Identifier(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.Boolean,System.String,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Identifier(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Identifier(System.String,System.Boolean,System.String,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IdentifierLabel(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IdentifierLabel(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IdentifierName(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IdentifierName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IfDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IfDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IfDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IfDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IfStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IfStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ImplementsClause(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ImplementsClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ImplementsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ImplementsStatement(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ImplementsStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ImplementsStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ImportAliasClause(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ImportAliasClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ImportAliasClause(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ImportsStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ImportsStatement(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ImportsStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IncompleteMember" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IncompleteMember(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InferredFieldInitializer(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InferredFieldInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InheritsStatement(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InheritsStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InheritsStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IntegerDivideAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IntegerDivideAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IntegerDivideExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IntegerDivideExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IntegerLiteralToken(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralBase,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter,System.UInt64,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IntegerLiteralToken(System.String,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralBase,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter,System.UInt64)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InterfaceBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InterfaceBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InterfaceBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InterfaceStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InterfaceStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InterfaceStatement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InterfaceStatement(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InterpolatedStringExpression(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InterpolatedStringExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InterpolatedStringExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InterpolatedStringText" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InterpolatedStringText(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InterpolatedStringTextToken(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InterpolatedStringTextToken(System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Interpolation(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationFormatClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Interpolation(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Interpolation(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InterpolationAlignmentClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InterpolationAlignmentClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InterpolationFormatClause" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InterpolationFormatClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InvocationExpression" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InvocationExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.InvocationExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IsExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IsExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IsNotExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.IsNotExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.JoinCondition(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.JoinCondition(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.KeywordEventContainer(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Label(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Label(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LabelStatement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LabelStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LabelStatement(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LambdaHeader(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LambdaHeader(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LeftShiftAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LeftShiftAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LeftShiftExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LeftShiftExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LessThanExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LessThanExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LessThanOrEqualExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LessThanOrEqualExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LetClause(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LetClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LetClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LikeExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LikeExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LineContinuationTrivia(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.List``1" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.List``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.Char,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.Decimal,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.Double,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.Int32,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.Int64,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.Single,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.UInt32,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.UInt64,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(System.Char)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(System.Decimal)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(System.Double)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(System.Int64)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(System.Single)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(System.String,System.Char)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(System.String,System.Decimal)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(System.String,System.Double)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(System.String,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(System.String,System.Int64)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(System.String,System.Single)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(System.String,System.UInt32)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(System.String,System.UInt64)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(System.UInt32)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Literal(System.UInt64)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LiteralExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LocalDeclarationStatement(Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LoopStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LoopStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LoopStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LoopUntilStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LoopUntilStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LoopUntilStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LoopWhileStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LoopWhileStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LoopWhileStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MeExpression" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MeExpression(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MemberAccessExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MemberAccessExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MethodBlock(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MethodBlock(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MethodStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MethodStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MethodStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MidAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MidAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MidExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MidExpression(System.String,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ModifiedIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ModifiedIdentifier(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ModifiedIdentifier(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ModifiedIdentifier(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ModuleBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ModuleBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ModuleBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ModuleStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ModuleStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ModuleStatement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ModuleStatement(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ModuloExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ModuloExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MultiLineFunctionLambdaExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MultiLineFunctionLambdaExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MultiLineIfBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.IfStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MultiLineIfBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.IfStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfBlockSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MultiLineIfBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.IfStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfBlockSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseBlockSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MultiLineLambdaExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MultiLineLambdaExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MultiLineSubLambdaExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MultiLineSubLambdaExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MultiplyAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MultiplyAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MultiplyExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MultiplyExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MyBaseExpression" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MyBaseExpression(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MyClassExpression" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.MyClassExpression(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NameColonEquals(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NameColonEquals(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NamedFieldInitializer(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NamedFieldInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NamedTupleElement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NamedTupleElement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NamedTupleElement(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NameOfExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NameOfExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NamespaceBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NamespaceBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NamespaceBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NamespaceStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NamespaceStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NewConstraint(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NextLabel" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NextLabel(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NextStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NextStatement(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NextStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NodeOrTokenList" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NodeOrTokenList(Microsoft.CodeAnalysis.SyntaxNodeOrToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NodeOrTokenList(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNodeOrToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NotEqualsExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NotEqualsExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NotExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NotExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NothingLiteralExpression(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NullableType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NullableType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NumericLabel" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NumericLabel(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.NumericLiteralExpression(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ObjectCollectionInitializer(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ObjectCollectionInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ObjectCreationExpression(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ObjectCreationExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ObjectCreationExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ObjectMemberInitializer(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldInitializerSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ObjectMemberInitializer(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldInitializerSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ObjectMemberInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldInitializerSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OmittedArgument" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OmittedArgument(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OnErrorGoToLabelStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OnErrorGoToLabelStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OnErrorGoToMinusOneStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OnErrorGoToMinusOneStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OnErrorGoToStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OnErrorGoToStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OnErrorGoToZeroStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OnErrorGoToZeroStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OnErrorResumeNextStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OnErrorResumeNextStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OperatorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OperatorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OperatorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OperatorStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OperatorStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OperatorStatement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OptionStatement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OptionStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OptionStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OrderByClause(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderingSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OrderByClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderingSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OrderByClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderingSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Ordering(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Ordering(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OrElseExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OrElseExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OrExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.OrExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Parameter(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Parameter(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ParameterList" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ParameterList(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ParameterList(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ParenthesizedExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ParenthesizedExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ParseArgumentList(System.String,System.Int32,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ParseCompilationUnit(System.String,System.Int32,Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ParseExecutableStatement(System.String,System.Int32,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ParseExpression(System.String,System.Int32,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ParseLeadingTrivia(System.String,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ParseName(System.String,System.Int32,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ParseParameterList(System.String,System.Int32,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ParseSyntaxTree(Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.ParseOptions,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ParseSyntaxTree(System.String,Microsoft.CodeAnalysis.ParseOptions,System.String,System.Text.Encoding,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ParseToken(System.String,System.Int32,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ParseTokens(System.String,System.Int32,System.Int32,Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ParseTrailingTrivia(System.String,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ParseTypeName(System.String,System.Int32,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.PartitionClause(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.PartitionWhileClause(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.PartitionWhileClause(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.PredefinedCastExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.PredefinedCastExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.PredefinedType(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.PrintStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.PrintStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.PropertyBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.PropertyBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.PropertyStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.PropertyStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.PropertyStatement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.PropertyStatement(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.QualifiedCrefOperatorReference(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefOperatorReferenceSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.QualifiedCrefOperatorReference(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefOperatorReferenceSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.QualifiedName(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.QualifiedName(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.QueryExpression(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.QueryExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RaiseEventAccessorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RaiseEventAccessorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RaiseEventAccessorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RaiseEventAccessorStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RaiseEventAccessorStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RaiseEventAccessorStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RaiseEventStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RaiseEventStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RaiseEventStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RangeArgument(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RangeArgument(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RangeCaseClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RangeCaseClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RedimClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ReDimPreserveStatement(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ReDimPreserveStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ReDimPreserveStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ReDimStatement(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ReDimStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ReDimStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ReDimStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ReDimStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ReDimStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ReferenceDirectiveTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ReferenceDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RegionDirectiveTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RegionDirectiveTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RelationalCaseClause(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RelationalCaseClause(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RemoveHandlerAccessorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RemoveHandlerAccessorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RemoveHandlerAccessorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RemoveHandlerAccessorStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RemoveHandlerAccessorStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RemoveHandlerAccessorStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RemoveHandlerStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RemoveHandlerStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ResumeLabelStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ResumeLabelStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ResumeLabelStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ResumeNextStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ResumeNextStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ResumeNextStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ResumeStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ResumeStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ResumeStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ResumeStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ResumeStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ResumeStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ReturnStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ReturnStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ReturnStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RightShiftAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RightShiftAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RightShiftExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.RightShiftExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SelectBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SelectBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SelectBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SelectClause(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SelectClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SelectClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SelectStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SelectStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList``1" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList``1(Microsoft.CodeAnalysis.SyntaxNodeOrTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList``1(System.Collections.Generic.IEnumerable{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SeparatedList``1(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNodeOrToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SetAccessorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SetAccessorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SetAccessorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SetAccessorStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SetAccessorStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SetAccessorStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleArgument(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleArgument(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameColonEqualsSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleAsClause(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleAsClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleAsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleCaseClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleDoLoopBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleDoLoopBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleDoStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleDoStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleDoStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleImportsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleImportsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleJoinClause(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax},Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleJoinClause(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax},Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleJoinClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleLoopStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleLoopStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleLoopStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleMemberAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleMemberAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SimpleMemberAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SingleLineElseClause" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SingleLineElseClause(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SingleLineElseClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SingleLineFunctionLambdaExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax,Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SingleLineIfStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineElseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SingleLineIfStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SingleLineIfStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineElseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SingleLineLambdaExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax,Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SingleLineSubLambdaExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax,Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SingletonList``1(``0)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SingletonSeparatedList``1(``0)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SkipClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SkipClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SkippedTokensTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SkippedTokensTrivia(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SkipWhileClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SkipWhileClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SpecialConstraint(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.StopOrEndStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.StopStatement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.StringLiteralExpression(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.StringLiteralToken(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.StringLiteralToken(System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.StructureBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.StructureBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.StructureBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.StructureConstraint(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.StructureStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.StructureStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.StructureStatement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.StructureStatement(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SubBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SubBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SubBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SubLambdaHeader" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SubLambdaHeader(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SubLambdaHeader(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SubNewStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SubNewStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SubNewStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SubStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SubStatement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SubStatement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SubStatement(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SubtractAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SubtractAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SubtractExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SubtractExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SyncLockBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SyncLockBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SyncLockBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SyncLockStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SyncLockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SyntaxTree(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.ParseOptions,System.String,System.Text.Encoding)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.SyntaxTrivia(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TakeClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TakeClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TakeWhileClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TakeWhileClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TernaryConditionalExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TernaryConditionalExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ThrowStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ThrowStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ThrowStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Token(Microsoft.CodeAnalysis.SyntaxTriviaList,Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxTriviaList,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Token(Microsoft.CodeAnalysis.SyntaxTriviaList,Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Token(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxTriviaList,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Token(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TokenList" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TokenList(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TokenList(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TokenList(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Trivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.StructuredTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TriviaList" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TriviaList(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TriviaList(Microsoft.CodeAnalysis.SyntaxTrivia[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TriviaList(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TrueLiteralExpression(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TryBlock" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TryBlock(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchBlockSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TryBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.TryStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchBlockSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyBlockSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TryCastExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TryCastExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TryStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TryStatement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TupleExpression(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleArgumentSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TupleExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleArgumentSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TupleExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TupleType(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleElementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TupleType(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleElementSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TupleType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleElementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeArgumentList(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeArgumentList(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeArgumentList(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeBlock(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeConstraint(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypedTupleElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeOfExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeOfExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeOfIsExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeOfIsExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeOfIsNotExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeOfIsNotExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeParameter(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeParameter(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterConstraintClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeParameter(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeParameterList(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeParameterList(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeParameterMultipleConstraintClause(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstraintSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeParameterMultipleConstraintClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstraintSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeParameterMultipleConstraintClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstraintSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeParameterSingleConstraintClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstraintSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeParameterSingleConstraintClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstraintSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.TypeStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.UnaryExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.UnaryMinusExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.UnaryMinusExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.UnaryPlusExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.UnaryPlusExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.UntilClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.UntilClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.UsingBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.UsingBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.UsingBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.UsingStatement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.UsingStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.UsingStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.VariableDeclarator(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.VariableDeclarator(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.VariableDeclarator(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.VariableNameEquals(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.VariableNameEquals(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.VariableNameEquals(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.WhereClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.WhereClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.WhileBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.WhileBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.WhileBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.WhileClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.WhileClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.WhileOrUntilClause(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.WhileStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.WhileStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Whitespace(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Whitespace(System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.WhitespaceTrivia(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.WithBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.WithStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.WithBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.WithStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.WithBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.WithStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.WithEventsEventContainer(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.WithEventsEventContainer(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.WithEventsPropertyEventContainer(Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsEventContainerSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.WithEventsPropertyEventContainer(Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsEventContainerSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.WithStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.WithStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlAttribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlAttribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlAttributeAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlAttributeAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlAttributeAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlBracketedName(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlBracketedName(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlCDataSection" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlCDataSection(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlComment" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlComment(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlCrefAttribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlCrefAttribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax,Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlCrefAttribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlCrefAttribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlDeclaration(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlDeclaration(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlDeclaration(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlDeclarationOption(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlStringSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlDeclarationOption(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlStringSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlDescendantAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlDescendantAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlDescendantAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlDocument(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlDocument(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementStartTagSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementEndTagSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementStartTagSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementEndTagSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlElement(System.String,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlElementAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlElementAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlElementAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlElementEndTag" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlElementEndTag(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlElementEndTag(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlElementStartTag(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlElementStartTag(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlElementStartTag(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlEmbeddedExpression(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlEmbeddedExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlEmptyElement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlEmptyElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlEmptyElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlEmptyElement(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlEntityLiteralToken(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlEntityLiteralToken(System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlExampleElement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlExampleElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlExceptionElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlExceptionElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlMemberAccessExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlMemberAccessExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlMemberAccessExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlMultiLineElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlMultiLineElement(System.String,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlName" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlName(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlNameAttribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlNameAttribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlNameAttribute(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlNamespaceImportsClause(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlAttributeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlNamespaceImportsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlAttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlNameToken(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlNameToken(System.String,Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlNewLine(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlNullKeywordElement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlParaElement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlParaElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlParamElement(System.String,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlParamElement(System.String,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlParamRefElement(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlPermissionElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlPermissionElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlPlaceholderElement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlPlaceholderElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlPrefix" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlPrefix(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlPrefixName" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlPrefixName(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlPreliminaryElement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlProcessingInstruction" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlProcessingInstruction(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlRemarksElement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlRemarksElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlReturnsElement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlReturnsElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlSeeAlsoElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlSeeAlsoElement(System.Uri,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlSeeElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlString(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlString(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlSummaryElement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlSummaryElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlText" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlText(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlText(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlText(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlTextLiteral(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlTextLiteral(System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlTextLiteralToken(Microsoft.CodeAnalysis.SyntaxTriviaList,System.String,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlTextLiteralToken(System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlTextNewLine(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlTextNewLine(System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlTextNewLine(System.String,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlTextToken(Microsoft.CodeAnalysis.SyntaxTriviaList,Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,System.String,System.String,Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlTextToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlThreadSafetyElement" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlThreadSafetyElement(System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlValueElement(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.XmlValueElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.YieldStatement(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.YieldStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CarriageReturn" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.CarriageReturnLineFeed" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElasticCarriageReturn" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElasticCarriageReturnLineFeed" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElasticLineFeed" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElasticMarker" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElasticSpace" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.ElasticTab" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.LineFeed" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Space" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.SyntaxFactory.Tab" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts" Id="T:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.AllowsLeadingImplicitLineContinuation(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.AllowsTrailingImplicitLineContinuation(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetAccessorStatementKind(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetBaseTypeStatementKind(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetBinaryExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetBlockName(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetContextualKeywordKind(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetContextualKeywordKinds" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetInstanceExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetKeywordKind(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetKeywordKinds" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetLiteralExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetOperatorKind(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetPreprocessorKeywordKind(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetPreprocessorKeywordKinds" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetPunctuationKinds" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetReservedKeywordKinds" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetText(Microsoft.CodeAnalysis.Accessibility)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetText(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetTypeStatementKind(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetUnaryExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAccessibilityModifier(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAccessorBlock(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAccessorStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAccessorStatementAccessorKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAccessorStatementKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAddRemoveHandlerStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAddRemoveHandlerStatementAddHandlerOrRemoveHandlerKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAddressOfOperand(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAnyToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAssignmentStatementOperatorToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAttributeName(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAttributeTargetAttributeModifier(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsBinaryExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsBinaryExpressionOperatorToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsCaseBlock(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsCaseStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsColon(System.Char)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsContextualKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsContinueStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsContinueStatementBlockKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsCrefOperatorReferenceOperatorToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsCrefSignaturePartModifier(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDeclareStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDeclareStatementCharsetKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDeclareStatementKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDeclareStatementSubOrFunctionKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDelegateStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDelegateStatementKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDelegateStatementSubOrFunctionKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDoLoopBlock(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDoStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsEndBlockStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsEndBlockStatementBlockKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsExitStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsExitStatementBlockKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsHash(System.Char)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsIdentifierPartCharacter(System.Char)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsIdentifierStartCharacter(System.Char)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsIfDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsIfDirectiveTriviaIfOrElseIfKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsInNamespaceOrTypeContext(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsInstanceExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsInTypeOnlyContext(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsInvocationOrAddressOfOperand(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsInvoked(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsKeywordEventContainerKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsKeywordKind(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLabel(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLabelLabelToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLabelStatementLabelToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLambdaHeader(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLambdaHeaderKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLambdaHeaderSubOrFunctionKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLanguagePunctuation(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLiteralExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLiteralExpressionToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLoopStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsMemberAccessExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsMemberAccessExpressionOperatorToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsMethodBlock(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsMethodStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsMethodStatementKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsMethodStatementSubOrFunctionKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsMultiLineLambdaExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsName(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsNamedArgumentName(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsNamespaceMemberDeclaration(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsNewLine(System.Char)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsOnErrorGoToStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsOperator(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsOperatorStatementOperatorToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsOptionStatementNameKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsOptionStatementValueKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsOrdering(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsOrderingAscendingOrDescendingKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPartitionClause(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPartitionClauseSkipOrTakeKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPartitionWhileClause(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPartitionWhileClauseSkipOrTakeKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPredefinedCastExpressionKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPredefinedType(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPreprocessorDirective(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPreprocessorKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPreprocessorPunctuation(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPunctuation(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPunctuationOrKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsReDimStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsRelationalCaseClause(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsRelationalCaseClauseOperatorToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsRelationalOperator(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsReservedKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsReservedTupleElementName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsResumeStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsSingleLineLambdaExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsSpecialConstraint(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsSpecialConstraintConstraintKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsStopOrEndStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsStopOrEndStatementStopOrEndKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsTrivia(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsTypeOfExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsTypeOfExpressionOperatorToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsTypeParameterVarianceKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsUnaryExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsUnaryExpressionOperatorToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsUnderscore(System.Char)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsValidIdentifier(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsWhileOrUntilClause(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsWhileOrUntilClauseWhileOrUntilKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsWhitespace(System.Char)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlCrefAttributeEndQuoteToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlCrefAttributeStartQuoteToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlMemberAccessExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlMemberAccessExpressionToken2(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlNameAttributeEndQuoteToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlNameAttributeStartQuoteToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlStringEndQuoteToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlStringStartQuoteToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlTextToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlWhitespace(System.Char)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.MakeHalfWidthIdentifier(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.VarianceKindFromToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.EqualityComparer" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" Id="T:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind">
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AddAssignmentStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AddExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AddHandlerAccessorBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AddHandlerAccessorStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AddHandlerKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AddHandlerStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AddressOfExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AddressOfKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AggregateClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AggregateKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AggregationRangeVariable" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AliasKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AllKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AmpersandEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AmpersandToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AndAlsoExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AndAlsoKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AndExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AndKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AnonymousObjectCreationExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AnsiKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ArgumentList" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ArrayCreationExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ArrayRankSpecifier" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ArrayType" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AscendingKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AscendingOrdering" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AsKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AsNewClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AssemblyKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AsteriskEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AsteriskToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AsyncKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AtToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.Attribute" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AttributeList" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AttributesStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AttributeTarget" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AutoKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AwaitExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.AwaitKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.BackslashEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.BackslashToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.BadDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.BadToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.BeginCDataToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.BinaryConditionalExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.BinaryKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.BooleanKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ByKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ByRefKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ByteKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ByValKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CallKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CallStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CaretEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CaretToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CaseBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CaseElseBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CaseElseStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CaseEqualsClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CaseGreaterThanClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CaseGreaterThanOrEqualClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CaseKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CaseLessThanClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CaseLessThanOrEqualClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CaseNotEqualsClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CaseStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CatchBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CatchFilterClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CatchKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CatchStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CBoolKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CByteKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CCharKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CDateKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CDblKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CDecKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CharacterLiteralExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CharacterLiteralToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CharKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CIntKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ClassBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ClassConstraint" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ClassKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ClassStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CLngKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CloseBraceToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CloseParenToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CObjKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CollectionInitializer" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CollectionRangeVariable" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ColonEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ColonToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ColonTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CommaToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CommentTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CompareKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CompilationUnit" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ConcatenateAssignmentStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ConcatenateExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ConditionalAccessExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ConflictMarkerTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ConstDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ConstKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ConstructorBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ContinueDoStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ContinueForStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ContinueKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ContinueWhileStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CrefOperatorReference" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CrefReference" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CrefSignature" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CrefSignaturePart" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CSByteKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CShortKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CSngKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CStrKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CTypeExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CTypeKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CUIntKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CULngKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CUShortKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.CustomKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DateKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DateLiteralExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DateLiteralToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DecimalKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DecimalLiteralToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DeclareFunctionStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DeclareKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DeclareSubStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DefaultKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DelegateFunctionStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DelegateKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DelegateSubStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DescendingKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DescendingOrdering" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DictionaryAccessExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DimKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DirectCastExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DirectCastKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DisabledTextTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DisableKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DisableWarningDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DistinctClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DistinctKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DivideAssignmentStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DivideExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DocumentationCommentExteriorTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DocumentationCommentLineBreakToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DocumentationCommentTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DoKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DollarSignDoubleQuoteToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DoLoopUntilBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DoLoopWhileBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DotToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DoubleKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DoubleQuoteToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DoUntilLoopBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DoUntilStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DoWhileLoopBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.DoWhileStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EachKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ElseBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ElseCaseClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ElseDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ElseIfBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ElseIfDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ElseIfKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ElseIfStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ElseKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ElseStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EmptyStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EmptyToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EnableKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EnableWarningDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndAddHandlerStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndCDataToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndClassStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndEnumStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndEventStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndExternalSourceDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndFunctionStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndGetStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndIfDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndIfKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndIfStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndInterfaceStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndModuleStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndNamespaceStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndOfFileToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndOfInterpolatedStringToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndOfLineTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndOfXmlToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndOperatorStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndPropertyStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndRaiseEventStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndRegionDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndRemoveHandlerStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndSelectStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndSetStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndStructureStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndSubStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndSyncLockStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndTryStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndUsingStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndWhileStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EndWithStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EnumBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EnumKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EnumMemberDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EnumStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EqualsExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EqualsKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EqualsValue" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EraseKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EraseStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ErrorKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ErrorStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EventBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EventKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.EventStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ExclamationToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ExclusiveOrExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ExitDoStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ExitForStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ExitFunctionStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ExitKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ExitOperatorStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ExitPropertyStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ExitSelectStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ExitSubStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ExitTryStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ExitWhileStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ExplicitKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ExponentiateAssignmentStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ExponentiateExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ExpressionRangeVariable" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ExpressionStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ExternalChecksumDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ExternalChecksumKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ExternalSourceDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ExternalSourceKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FalseKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FalseLiteralExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FieldDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FinallyBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FinallyKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FinallyStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FloatingLiteralToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ForBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ForEachBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ForEachStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ForKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ForStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ForStepClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FriendKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FromClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FromKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FunctionAggregation" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FunctionBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FunctionKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FunctionLambdaHeader" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.FunctionStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GenericName" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GetAccessorBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GetAccessorStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GetKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GetTypeExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GetTypeKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GetXmlNamespaceExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GetXmlNamespaceKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GlobalKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GlobalName" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GosubKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GoToKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GoToStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GreaterThanEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GreaterThanExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GreaterThanGreaterThanEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GreaterThanGreaterThanToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GreaterThanOrEqualExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GreaterThanToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GroupAggregation" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GroupByClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GroupJoinClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.GroupKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.HandlesClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.HandlesClauseItem" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.HandlesKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.HashToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.IdentifierLabel" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.IdentifierName" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.IdentifierToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.IfDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.IfKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.IfStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ImplementsClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ImplementsKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ImplementsStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ImportAliasClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ImportsKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ImportsStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.IncompleteMember" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.InferKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.InferredFieldInitializer" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.InheritsKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.InheritsStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.InKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.IntegerDivideAssignmentStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.IntegerDivideExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.IntegerKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.IntegerLiteralToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.InterfaceBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.InterfaceKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.InterfaceStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.InterpolatedStringExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.InterpolatedStringText" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.InterpolatedStringTextToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.Interpolation" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.InterpolationAlignmentClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.InterpolationFormatClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.IntoKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.InvocationExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.IsExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.IsFalseKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.IsKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.IsNotExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.IsNotKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.IsTrueKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.IteratorKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.JoinCondition" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.JoinKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.KeyKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.KeywordEventContainer" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LabelStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LeftShiftAssignmentStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LeftShiftExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LessThanEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LessThanExclamationMinusMinusToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LessThanExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LessThanGreaterThanToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LessThanLessThanEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LessThanLessThanToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LessThanOrEqualExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LessThanPercentEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LessThanQuestionToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LessThanSlashToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LessThanToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LetClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LetKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LibKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LikeExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LikeKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LineContinuationTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.List" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LocalDeclarationStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LongKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LoopKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LoopUntilStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.LoopWhileStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.MeExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.MeKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.MidAssignmentStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.MidExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.MidKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.MinusEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.MinusMinusGreaterThanToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.MinusToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ModifiedIdentifier" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ModKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ModuleBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ModuleKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ModuleStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ModuloExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.MultiLineFunctionLambdaExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.MultiLineIfBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.MultiLineSubLambdaExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.MultiplyAssignmentStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.MultiplyExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.MustInheritKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.MustOverrideKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.MyBaseExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.MyBaseKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.MyClassExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.MyClassKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NameColonEquals" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NamedFieldInitializer" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NamedTupleElement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NameOfExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NameOfKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NamespaceBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NamespaceKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NamespaceStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NarrowingKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NewConstraint" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NewKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NextKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NextLabel" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NextStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.None" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NotEqualsExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NotExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NothingKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NothingLiteralExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NotInheritableKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NotKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NotOverridableKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NullableType" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NumericLabel" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.NumericLiteralExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ObjectCollectionInitializer" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ObjectCreationExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ObjectKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ObjectMemberInitializer" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OffKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OfKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OmittedArgument" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OnErrorGoToLabelStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OnErrorGoToMinusOneStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OnErrorGoToZeroStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OnErrorResumeNextStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OnKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OpenBraceToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OpenParenToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OperatorBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OperatorKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OperatorStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OptionalKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OptionKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OptionStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OrderByClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OrderKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OrElseExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OrElseKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OrExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OrKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OutKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OverloadsKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OverridableKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.OverridesKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ParamArrayKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.Parameter" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ParameterList" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ParenthesizedExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.PartialKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.PercentGreaterThanToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.PlusEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.PlusToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.PredefinedCastExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.PredefinedType" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.PreserveKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.PrintStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.PrivateKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.PropertyBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.PropertyKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.PropertyStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ProtectedKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.PublicKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.QualifiedCrefOperatorReference" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.QualifiedName" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.QueryExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.QuestionGreaterThanToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.QuestionToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.RaiseEventAccessorBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.RaiseEventAccessorStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.RaiseEventKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.RaiseEventStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.RangeArgument" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.RangeCaseClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ReadOnlyKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.RedimClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ReDimKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ReDimPreserveStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ReDimStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ReferenceDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ReferenceKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.RegionDirectiveTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.RegionKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.REMKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.RemoveHandlerAccessorBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.RemoveHandlerAccessorStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.RemoveHandlerKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.RemoveHandlerStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ResumeKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ResumeLabelStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ResumeNextStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ResumeStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ReturnKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ReturnStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.RightShiftAssignmentStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.RightShiftExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SByteKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SelectBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SelectClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SelectKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SelectStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SemicolonToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SetAccessorBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SetAccessorStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SetKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ShadowsKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SharedKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ShortKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SimpleArgument" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SimpleAsClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SimpleAssignmentStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SimpleCaseClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SimpleDoLoopBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SimpleDoStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SimpleImportsClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SimpleJoinClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SimpleLoopStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SimpleMemberAccessExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SingleKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SingleLineElseClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SingleLineFunctionLambdaExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SingleLineIfPart" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SingleLineIfStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SingleLineSubLambdaExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SingleQuoteToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SkipClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SkipKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SkippedTokensTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SkipWhileClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SlashEqualsToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SlashGreaterThanToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SlashToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.StatementTerminatorToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.StaticKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.StepKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.StopKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.StopStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.StrictKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.StringKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.StringLiteralExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.StringLiteralToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.StructureBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.StructureConstraint" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.StructureKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.StructureStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SubBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SubKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SubLambdaHeader" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SubNewStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SubStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SubtractAssignmentStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SubtractExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SyncLockBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SyncLockKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.SyncLockStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TakeClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TakeKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TakeWhileClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TernaryConditionalExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TextKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ThenKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ThrowKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ThrowStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ToKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TrueKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TrueLiteralExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TryBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TryCastExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TryCastKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TryKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TryStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TupleExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TupleType" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TypeArgumentList" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TypeConstraint" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TypedTupleElement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TypeKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TypeOfIsExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TypeOfIsNotExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TypeOfKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TypeParameter" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TypeParameterList" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TypeParameterMultipleConstraintClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.TypeParameterSingleConstraintClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.UIntegerKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.ULongKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.UnaryMinusExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.UnaryPlusExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.UnicodeKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.UntilClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.UntilKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.UShortKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.UsingBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.UsingKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.UsingStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.VariableDeclarator" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.VariableNameEquals" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.VariantKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.WarningKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.WendKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.WhenKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.WhereClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.WhereKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.WhileBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.WhileClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.WhileKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.WhileStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.WhitespaceTrivia" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.WideningKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.WithBlock" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.WithEventsEventContainer" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.WithEventsKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.WithEventsPropertyEventContainer" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.WithKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.WithStatement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.WriteOnlyKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlAttribute" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlAttributeAccessExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlBracketedName" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlCDataSection" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlComment" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlCrefAttribute" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlDeclaration" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlDeclarationOption" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlDescendantAccessExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlDocument" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlElement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlElementAccessExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlElementEndTag" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlElementStartTag" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlEmbeddedExpression" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlEmptyElement" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlEntityLiteralToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlName" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlNameAttribute" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlNamespaceImportsClause" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlNameToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlPrefix" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlPrefixName" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlProcessingInstruction" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlString" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlText" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XmlTextLiteralToken" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.XorKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.YieldKeyword" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind.YieldStatement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.TypedConstantExtensions" Id="T:Microsoft.CodeAnalysis.VisualBasic.TypedConstantExtensions">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.TypedConstantExtensions.ToVisualBasicString(Microsoft.CodeAnalysis.TypedConstant)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.VisualBasicCommandLineArguments" Id="T:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCommandLineArguments">
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCommandLineArguments.CompilationOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCommandLineArguments.CompilationOptionsCore" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCommandLineArguments.ParseOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCommandLineArguments.ParseOptionsCore" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.VisualBasicCommandLineParser" Id="T:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCommandLineParser">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCommandLineParser.Parse(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCommandLineParser.ParseConditionalCompilationSymbols(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostic}@,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCommandLineParser.Default" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCommandLineParser.RegularFileExtension" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCommandLineParser.Script" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCommandLineParser.ScriptFileExtension" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation" Id="T:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.AddReferences(Microsoft.CodeAnalysis.MetadataReference[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.AddReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.AddSyntaxTrees(Microsoft.CodeAnalysis.SyntaxTree[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.AddSyntaxTrees(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.AppendDefaultVersionResource(System.IO.Stream)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.ClassifyCommonConversion(Microsoft.CodeAnalysis.ITypeSymbol,Microsoft.CodeAnalysis.ITypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.ClassifyConversion(Microsoft.CodeAnalysis.ITypeSymbol,Microsoft.CodeAnalysis.ITypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.Clone" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonAddSyntaxTrees(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonClone" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonContainsSyntaxTree(Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonCreateAnonymousTypeSymbol(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.ITypeSymbol},System.Collections.Immutable.ImmutableArray{System.String},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Location},System.Collections.Immutable.ImmutableArray{System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonCreateArrayTypeSymbol(Microsoft.CodeAnalysis.ITypeSymbol,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonCreateErrorNamespaceSymbol(Microsoft.CodeAnalysis.INamespaceSymbol,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonCreateErrorTypeSymbol(Microsoft.CodeAnalysis.INamespaceOrTypeSymbol,System.String,System.Int32)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonCreatePointerTypeSymbol(Microsoft.CodeAnalysis.ITypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonCreateTupleTypeSymbol(Microsoft.CodeAnalysis.INamedTypeSymbol,System.Collections.Immutable.ImmutableArray{System.String},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Location})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonCreateTupleTypeSymbol(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.ITypeSymbol},System.Collections.Immutable.ImmutableArray{System.String},System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Location})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonGetAssemblyOrModuleSymbol(Microsoft.CodeAnalysis.MetadataReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonGetCompilationNamespace(Microsoft.CodeAnalysis.INamespaceSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonGetEntryPoint(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonGetSemanticModel(Microsoft.CodeAnalysis.SyntaxTree,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonGetSpecialType(Microsoft.CodeAnalysis.SpecialType)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonGetTypeByMetadataName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonRemoveAllSyntaxTrees" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonRemoveSyntaxTrees(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonReplaceSyntaxTree(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonWithAssemblyName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonWithOptions(Microsoft.CodeAnalysis.CompilationOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonWithReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonWithScriptCompilationInfo(Microsoft.CodeAnalysis.ScriptCompilationInfo)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.ContainsSymbolsWithName(System.Func{System.String,System.Boolean},Microsoft.CodeAnalysis.SymbolFilter,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.ContainsSymbolsWithName(System.String,Microsoft.CodeAnalysis.SymbolFilter,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.ContainsSyntaxTree(Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.Create(System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference},Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.GetDeclarationDiagnostics(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.GetDiagnostics(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.GetMethodBodyDiagnostics(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.GetParseDiagnostics(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.GetSemanticModel(Microsoft.CodeAnalysis.SyntaxTree,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.GetSymbolsWithName(System.Func{System.String,System.Boolean},Microsoft.CodeAnalysis.SymbolFilter,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.GetSymbolsWithName(System.String,Microsoft.CodeAnalysis.SymbolFilter,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.RemoveAllReferences" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.RemoveAllSyntaxTrees" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.RemoveReferences(Microsoft.CodeAnalysis.MetadataReference[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.RemoveReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.RemoveSyntaxTrees(Microsoft.CodeAnalysis.SyntaxTree[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.RemoveSyntaxTrees(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTree})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.ReplaceReference(Microsoft.CodeAnalysis.MetadataReference,Microsoft.CodeAnalysis.MetadataReference)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.ReplaceSyntaxTree(Microsoft.CodeAnalysis.SyntaxTree,Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.ToMetadataReference(System.Collections.Immutable.ImmutableArray{System.String},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.WithAssemblyName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.WithOptions(Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.WithReferences(Microsoft.CodeAnalysis.MetadataReference[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.WithReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonAssembly" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonDynamicType" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonGlobalNamespace" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonObjectType" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonScriptClass" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonSourceModule" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.CommonSyntaxTrees" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.DirectiveReferences" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.IsCaseSensitive" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.LanguageVersion" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.Options" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.ReferencedAssemblyNames" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilation.SyntaxTrees" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions" Id="T:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.#ctor(Microsoft.CodeAnalysis.OutputKind,System.Boolean,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.VisualBasic.GlobalImport},System.String,Microsoft.CodeAnalysis.VisualBasic.OptionStrict,System.Boolean,System.Boolean,System.Boolean,Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions,System.Boolean,Microsoft.CodeAnalysis.OptimizationLevel,System.Boolean,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Nullable{System.Boolean},Microsoft.CodeAnalysis.Platform,Microsoft.CodeAnalysis.ReportDiagnostic,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}},System.Boolean,System.Boolean,Microsoft.CodeAnalysis.XmlReferenceResolver,Microsoft.CodeAnalysis.SourceReferenceResolver,Microsoft.CodeAnalysis.MetadataReferenceResolver,Microsoft.CodeAnalysis.AssemblyIdentityComparer,Microsoft.CodeAnalysis.StrongNameProvider)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.#ctor(Microsoft.CodeAnalysis.OutputKind,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.VisualBasic.GlobalImport},System.String,Microsoft.CodeAnalysis.VisualBasic.OptionStrict,System.Boolean,System.Boolean,System.Boolean,Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions,System.Boolean,Microsoft.CodeAnalysis.OptimizationLevel,System.Boolean,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Nullable{System.Boolean},Microsoft.CodeAnalysis.Platform,Microsoft.CodeAnalysis.ReportDiagnostic,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}},System.Boolean,Microsoft.CodeAnalysis.XmlReferenceResolver,Microsoft.CodeAnalysis.SourceReferenceResolver,Microsoft.CodeAnalysis.MetadataReferenceResolver,Microsoft.CodeAnalysis.AssemblyIdentityComparer,Microsoft.CodeAnalysis.StrongNameProvider)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.#ctor(Microsoft.CodeAnalysis.OutputKind,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.VisualBasic.GlobalImport},System.String,Microsoft.CodeAnalysis.VisualBasic.OptionStrict,System.Boolean,System.Boolean,System.Boolean,Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions,System.Boolean,Microsoft.CodeAnalysis.OptimizationLevel,System.Boolean,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Nullable{System.Boolean},Microsoft.CodeAnalysis.Platform,Microsoft.CodeAnalysis.ReportDiagnostic,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}},System.Boolean,System.Boolean,Microsoft.CodeAnalysis.XmlReferenceResolver,Microsoft.CodeAnalysis.SourceReferenceResolver,Microsoft.CodeAnalysis.MetadataReferenceResolver,Microsoft.CodeAnalysis.AssemblyIdentityComparer,Microsoft.CodeAnalysis.StrongNameProvider)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.#ctor(Microsoft.CodeAnalysis.OutputKind,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.VisualBasic.GlobalImport},System.String,Microsoft.CodeAnalysis.VisualBasic.OptionStrict,System.Boolean,System.Boolean,System.Boolean,Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions,System.Boolean,Microsoft.CodeAnalysis.OptimizationLevel,System.Boolean,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Nullable{System.Boolean},Microsoft.CodeAnalysis.Platform,Microsoft.CodeAnalysis.ReportDiagnostic,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}},System.Boolean,System.Boolean,Microsoft.CodeAnalysis.XmlReferenceResolver,Microsoft.CodeAnalysis.SourceReferenceResolver,Microsoft.CodeAnalysis.MetadataReferenceResolver,Microsoft.CodeAnalysis.AssemblyIdentityComparer,Microsoft.CodeAnalysis.StrongNameProvider,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.#ctor(Microsoft.CodeAnalysis.OutputKind,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.VisualBasic.GlobalImport},System.String,Microsoft.CodeAnalysis.VisualBasic.OptionStrict,System.Boolean,System.Boolean,System.Boolean,Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions,System.Boolean,Microsoft.CodeAnalysis.OptimizationLevel,System.Boolean,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Nullable{System.Boolean},Microsoft.CodeAnalysis.Platform,Microsoft.CodeAnalysis.ReportDiagnostic,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}},System.Boolean,System.Boolean,Microsoft.CodeAnalysis.XmlReferenceResolver,Microsoft.CodeAnalysis.SourceReferenceResolver,Microsoft.CodeAnalysis.MetadataReferenceResolver,Microsoft.CodeAnalysis.AssemblyIdentityComparer,Microsoft.CodeAnalysis.StrongNameProvider,System.Boolean,System.Boolean,Microsoft.CodeAnalysis.MetadataImportOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithAssemblyIdentityComparer(Microsoft.CodeAnalysis.AssemblyIdentityComparer)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithCheckOverflow(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithConcurrentBuild(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithCryptoKeyContainer(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithCryptoKeyFile(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithCryptoPublicKey(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithDelaySign(System.Nullable{System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithDeterministic(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithFeatures(System.Collections.Immutable.ImmutableArray{System.String})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithGeneralDiagnosticOption(Microsoft.CodeAnalysis.ReportDiagnostic)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithMainTypeName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithMetadataImportOptions(Microsoft.CodeAnalysis.MetadataImportOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithMetadataReferenceResolver(Microsoft.CodeAnalysis.MetadataReferenceResolver)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithModuleName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithOptimizationLevel(Microsoft.CodeAnalysis.OptimizationLevel)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithOutputKind(Microsoft.CodeAnalysis.OutputKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithPlatform(Microsoft.CodeAnalysis.Platform)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithPublicSign(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithReportSuppressedDiagnostics(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithScriptClassName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithSourceReferenceResolver(Microsoft.CodeAnalysis.SourceReferenceResolver)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithSpecificDiagnosticOptions(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithSpecificDiagnosticOptions(System.Collections.Immutable.ImmutableDictionary{System.String,Microsoft.CodeAnalysis.ReportDiagnostic})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithStrongNameProvider(Microsoft.CodeAnalysis.StrongNameProvider)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.CommonWithXmlReferenceResolver(Microsoft.CodeAnalysis.XmlReferenceResolver)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.Equals(Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithAssemblyIdentityComparer(Microsoft.CodeAnalysis.AssemblyIdentityComparer)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithConcurrentBuild(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithCryptoKeyContainer(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithCryptoKeyFile(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithCryptoPublicKey(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithDelaySign(System.Nullable{System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithDeterministic(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithEmbedVbCoreRuntime(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithGeneralDiagnosticOption(Microsoft.CodeAnalysis.ReportDiagnostic)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithGlobalImports(Microsoft.CodeAnalysis.VisualBasic.GlobalImport[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithGlobalImports(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.VisualBasic.GlobalImport})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithGlobalImports(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.VisualBasic.GlobalImport})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithMainTypeName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithMetadataImportOptions(Microsoft.CodeAnalysis.MetadataImportOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithMetadataReferenceResolver(Microsoft.CodeAnalysis.MetadataReferenceResolver)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithModuleName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithOptimizationLevel(Microsoft.CodeAnalysis.OptimizationLevel)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithOptionCompareText(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithOptionExplicit(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithOptionInfer(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithOptionStrict(Microsoft.CodeAnalysis.VisualBasic.OptionStrict)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithOutputKind(Microsoft.CodeAnalysis.OutputKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithOverflowChecks(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithParseOptions(Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithPlatform(Microsoft.CodeAnalysis.Platform)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithPublicSign(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithReportSuppressedDiagnostics(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithRootNamespace(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithScriptClassName(System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithSourceReferenceResolver(Microsoft.CodeAnalysis.SourceReferenceResolver)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithSpecificDiagnosticOptions(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithSpecificDiagnosticOptions(System.Collections.Immutable.ImmutableDictionary{System.String,Microsoft.CodeAnalysis.ReportDiagnostic})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithStrongNameProvider(Microsoft.CodeAnalysis.StrongNameProvider)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.WithXmlReferenceResolver(Microsoft.CodeAnalysis.XmlReferenceResolver)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.EmbedVbCoreRuntime" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.GlobalImports" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.OptionCompareText" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.OptionExplicit" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.OptionInfer" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.OptionStrict" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.ParseOptions" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicCompilationOptions.RootNamespace" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.VisualBasicDiagnosticFormatter" Id="T:Microsoft.CodeAnalysis.VisualBasic.VisualBasicDiagnosticFormatter">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicDiagnosticFormatter.#ctor" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicDiagnosticFormatter.Instance" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions" Id="T:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.Add(Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.AliasImports(Microsoft.CodeAnalysis.Compilation)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.AnalyzeControlFlow(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.AnalyzeControlFlow(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.AnalyzeDataFlow(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.AnalyzeDataFlow(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.AnalyzeDataFlow(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.AssociatedField(Microsoft.CodeAnalysis.IEventSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.ClassifyConversion(Microsoft.CodeAnalysis.Compilation,Microsoft.CodeAnalysis.ITypeSymbol,Microsoft.CodeAnalysis.ITypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.ClassifyConversion(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.ITypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.ClassifyConversion(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.ITypeSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetAggregateClauseSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetAliasInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetAwaitExpressionInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.AwaitExpressionSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetBase(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetCollectionInitializerSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetCollectionRangeVariableSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetCompilationUnitRoot(Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetConversion(Microsoft.CodeAnalysis.Operations.IConversionOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetConversion(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldInitializerSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelStatementSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleElementSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDeclaredSymbol(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetDirectives(Microsoft.CodeAnalysis.SyntaxNode,System.Func{Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectiveTriviaSyntax,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetFieldAttributes(Microsoft.CodeAnalysis.IEventSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetFirstDirective(Microsoft.CodeAnalysis.SyntaxNode,System.Func{Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectiveTriviaSyntax,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetForEachStatementInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetForEachStatementInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetIdentifierText(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetInConversion(Microsoft.CodeAnalysis.Operations.IArgumentOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetInConversion(Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetLastDirective(Microsoft.CodeAnalysis.SyntaxNode,System.Func{Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectiveTriviaSyntax,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetMemberGroup(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetMemberGroup(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetModuleMembers(Microsoft.CodeAnalysis.INamespaceSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetModuleMembers(Microsoft.CodeAnalysis.INamespaceSymbol,System.String)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetOutConversion(Microsoft.CodeAnalysis.Operations.IArgumentOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetOutConversion(Microsoft.CodeAnalysis.Operations.ICompoundAssignmentOperation)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetPreprocessingSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetSpecialType(Microsoft.CodeAnalysis.Compilation,Microsoft.CodeAnalysis.SpecialType)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetSpeculativeAliasInfo(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SpeculativeBindingOption)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetSpeculativeConversion(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SpeculativeBindingOption)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetSpeculativeMemberGroup(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetSpeculativeSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetSpeculativeSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SpeculativeBindingOption)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetSpeculativeTypeInfo(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SpeculativeBindingOption)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.FunctionAggregationSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderingSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetSymbolInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryClauseSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetTypeCharacter(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetTypeInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.GetTypeInfo(Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.HandledEvents(Microsoft.CodeAnalysis.IMethodSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.HasAssociatedField(Microsoft.CodeAnalysis.IEventSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.Insert(Microsoft.CodeAnalysis.SyntaxTokenList,System.Int32,Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.IsBracketed(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.IsCatch(Microsoft.CodeAnalysis.ILocalSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.IsContextualKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.IsDefault(Microsoft.CodeAnalysis.IPropertySymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.IsFor(Microsoft.CodeAnalysis.ILocalSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.IsForEach(Microsoft.CodeAnalysis.ILocalSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.IsImplicitlyDeclared(Microsoft.CodeAnalysis.IEventSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.IsKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.IsMe(Microsoft.CodeAnalysis.IParameterSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.IsMustOverride(Microsoft.CodeAnalysis.ISymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.IsNotOverridable(Microsoft.CodeAnalysis.ISymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.IsOverloads(Microsoft.CodeAnalysis.IMethodSymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.IsOverloads(Microsoft.CodeAnalysis.IPropertySymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.IsOverridable(Microsoft.CodeAnalysis.ISymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.IsOverrides(Microsoft.CodeAnalysis.ISymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.IsPreprocessorKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.IsReservedKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.IsShared(Microsoft.CodeAnalysis.ISymbol)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.Kind(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.Kind(Microsoft.CodeAnalysis.SyntaxNodeOrToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.Kind(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.Kind(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.MemberImports(Microsoft.CodeAnalysis.Compilation)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.OptionCompareText(Microsoft.CodeAnalysis.SemanticModel)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.OptionExplicit(Microsoft.CodeAnalysis.SemanticModel)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.OptionInfer(Microsoft.CodeAnalysis.SemanticModel)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.OptionStrict(Microsoft.CodeAnalysis.SemanticModel)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.ReplaceTrivia(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.ReplaceTrivia(Microsoft.CodeAnalysis.SyntaxToken,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia},System.Func{Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.RootNamespace(Microsoft.CodeAnalysis.Compilation)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax,Microsoft.CodeAnalysis.SemanticModel@)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax,Microsoft.CodeAnalysis.SemanticModel@)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExecutableStatementSyntax,Microsoft.CodeAnalysis.SemanticModel@)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax,Microsoft.CodeAnalysis.SemanticModel@)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModel(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SemanticModel@,Microsoft.CodeAnalysis.SpeculativeBindingOption)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicExtensions.TryGetSpeculativeSemanticModelForMethodBody(Microsoft.CodeAnalysis.SemanticModel,System.Int32,Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax,Microsoft.CodeAnalysis.SemanticModel@)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions" Id="T:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.#ctor(Microsoft.CodeAnalysis.VisualBasic.LanguageVersion,Microsoft.CodeAnalysis.DocumentationMode,Microsoft.CodeAnalysis.SourceCodeKind,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.CommonWithDocumentationMode(Microsoft.CodeAnalysis.DocumentationMode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.CommonWithFeatures(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.CommonWithKind(Microsoft.CodeAnalysis.SourceCodeKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.Equals(Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.Equals(System.Object)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.GetHashCode" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.WithDocumentationMode(Microsoft.CodeAnalysis.DocumentationMode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.WithFeatures(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.WithKind(Microsoft.CodeAnalysis.SourceCodeKind)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.WithLanguageVersion(Microsoft.CodeAnalysis.VisualBasic.LanguageVersion)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.WithPreprocessorSymbols(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.WithPreprocessorSymbols(System.Collections.Generic.KeyValuePair{System.String,System.Object}[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.WithPreprocessorSymbols(System.Collections.Immutable.ImmutableArray{System.Collections.Generic.KeyValuePair{System.String,System.Object}})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.Default" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.Features" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.LanguageVersion" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.PreprocessorSymbolNames" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.PreprocessorSymbols" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions.SpecifiedLanguageVersion" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode" Id="T:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.DeserializeFrom(System.IO.Stream,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.FindToken(System.Int32,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.FindTrivia(System.Int32,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.GetDiagnostics" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.GetDirectives(System.Func{Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectiveTriviaSyntax,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.GetFirstDirective(System.Func{Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectiveTriviaSyntax,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.GetFirstToken(System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.GetLastDirective(System.Func{Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectiveTriviaSyntax,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.GetLastToken(System.Boolean,System.Boolean,System.Boolean,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.GetLeadingTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.GetLocation" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.GetTrailingTrivia" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.InsertNodesInListCore(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.InsertTokensInListCore(Microsoft.CodeAnalysis.SyntaxToken,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.InsertTriviaInListCore(Microsoft.CodeAnalysis.SyntaxTrivia,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia},System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.IsEquivalentToCore(Microsoft.CodeAnalysis.SyntaxNode,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.Kind" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.NormalizeWhitespaceCore(System.String,System.String,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.RemoveNodesCore(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode},Microsoft.CodeAnalysis.SyntaxRemoveOptions)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.ReplaceCore``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,Microsoft.CodeAnalysis.SyntaxNode},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken},System.Func{Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken},System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia},System.Func{Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia,Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.ReplaceNodeInListCore(Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxNode})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.ReplaceTokenInListCore(Microsoft.CodeAnalysis.SyntaxToken,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxToken})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.ReplaceTriviaInListCore(Microsoft.CodeAnalysis.SyntaxTrivia,System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.SyntaxTrivia})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.IsDirective" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.Language" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.SpanStart" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode.SyntaxTreeCore" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter" Id="T:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.#ctor(System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.Visit(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitAccessorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitAccessorStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitAddRemoveHandlerStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.AddRemoveHandlerStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitAggregateClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitAggregationRangeVariable(Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitAnonymousObjectCreationExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitArgumentList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitArrayCreationExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitArrayRankSpecifier(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitArrayType(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitAsNewClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.AssignmentStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitAttribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitAttributeList(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitAttributesStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributesStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitAttributeTarget(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitAwaitExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.AwaitExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitBadDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.BadDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitBinaryConditionalExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitBinaryExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitCallStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.CallStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitCaseBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitCaseStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitCatchBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitCatchFilterClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitCatchStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitClassBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitClassStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitCollectionInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitCollectionRangeVariable(Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitCompilationUnit(Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitConditionalAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ConditionalAccessExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitConstDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitConstructorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitContinueStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ContinueStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitCrefOperatorReference(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefOperatorReferenceSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitCrefReference(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitCrefSignature(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignatureSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitCrefSignaturePart(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignaturePartSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitCTypeExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.CTypeExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitDeclareStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitDelegateStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitDirectCastExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectCastExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitDisableWarningDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.DisableWarningDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitDistinctClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.DistinctClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitDocumentationCommentTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.DocumentationCommentTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitDoLoopBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitDoStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitElseBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitElseCaseClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseCaseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitElseDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitElseIfBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitElseIfStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitElseStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitEmptyStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EmptyStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitEnableWarningDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.EnableWarningDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitEndBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitEndExternalSourceDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndExternalSourceDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitEndIfDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndIfDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitEndRegionDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndRegionDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitEnumBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitEnumMemberDeclaration(Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitEnumStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitEqualsValue(Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitEraseStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EraseStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitErrorStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ErrorStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitEventBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitEventStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitExitStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExitStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitExpressionRangeVariable(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitExpressionStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitExternalChecksumDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitExternalSourceDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitFieldDeclaration(Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitFinallyBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitFinallyStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitForBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitForEachBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitForEachStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitForStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitForStepClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitFromClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.FromClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitFunctionAggregation(Microsoft.CodeAnalysis.VisualBasic.Syntax.FunctionAggregationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitGenericName(Microsoft.CodeAnalysis.VisualBasic.Syntax.GenericNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitGetTypeExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.GetTypeExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitGetXmlNamespaceExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.GetXmlNamespaceExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitGlobalName(Microsoft.CodeAnalysis.VisualBasic.Syntax.GlobalNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitGoToStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.GoToStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitGroupAggregation(Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupAggregationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitGroupByClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitGroupJoinClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitHandlesClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitHandlesClauseItem(Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseItemSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitIdentifierName(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitIfDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.IfDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitIfStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.IfStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitImplementsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitImplementsStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitImportAliasClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitImportsStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitIncompleteMember(Microsoft.CodeAnalysis.VisualBasic.Syntax.IncompleteMemberSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitInferredFieldInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.InferredFieldInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitInheritsStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitInterfaceBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitInterfaceStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitInterpolatedStringExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitInterpolatedStringText(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringTextSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitInterpolation(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitInterpolationAlignmentClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitInterpolationFormatClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationFormatClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitInvocationExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.InvocationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitJoinCondition(Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitKeywordEventContainer(Microsoft.CodeAnalysis.VisualBasic.Syntax.KeywordEventContainerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitLabel(Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitLabelStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitLambdaHeader(Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitLetClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitList(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitList(Microsoft.CodeAnalysis.SyntaxTriviaList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitList``1(Microsoft.CodeAnalysis.SeparatedSyntaxList{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitList``1(Microsoft.CodeAnalysis.SyntaxList{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitListElement(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitListElement(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitListElement``1(``0)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitListSeparator(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitLiteralExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitLocalDeclarationStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.LocalDeclarationStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitLoopStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitMeExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.MeExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitMemberAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitMethodBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitMethodStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitMidExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.MidExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitModifiedIdentifier(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitModuleBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitModuleStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitMultiLineIfBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineIfBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitMultiLineLambdaExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineLambdaExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitMyBaseExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.MyBaseExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitMyClassExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.MyClassExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitNameColonEquals(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameColonEqualsSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitNamedFieldInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedFieldInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitNamedTupleElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedTupleElementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitNameOfExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameOfExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitNamespaceBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitNamespaceStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitNextStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.NextStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitNullableType(Microsoft.CodeAnalysis.VisualBasic.Syntax.NullableTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitObjectCollectionInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCollectionInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitObjectCreationExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitObjectMemberInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitOmittedArgument(Microsoft.CodeAnalysis.VisualBasic.Syntax.OmittedArgumentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitOnErrorGoToStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorGoToStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitOnErrorResumeNextStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorResumeNextStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitOperatorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitOperatorStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitOptionStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.OptionStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitOrderByClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderByClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitOrdering(Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderingSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitParameter(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitParenthesizedExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParenthesizedExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitPartitionClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitPartitionWhileClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionWhileClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitPredefinedCastExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedCastExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitPredefinedType(Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitPrintStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.PrintStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitPropertyBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitPropertyStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitQualifiedCrefOperatorReference(Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedCrefOperatorReferenceSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitQualifiedName(Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitQueryExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitRaiseEventStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.RaiseEventStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitRangeArgument(Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitRangeCaseClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeCaseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitRedimClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitReDimStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ReDimStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitReferenceDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.ReferenceDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitRegionDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.RegionDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitRelationalCaseClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.RelationalCaseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitResumeStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ResumeStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitReturnStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ReturnStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitSelectBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitSelectClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitSelectStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitSimpleArgument(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleArgumentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitSimpleAsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitSimpleCaseClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleCaseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitSimpleImportsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitSimpleJoinClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleJoinClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitSingleLineElseClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineElseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitSingleLineIfStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineIfStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitSingleLineLambdaExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineLambdaExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitSkippedTokensTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.SkippedTokensTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitSpecialConstraint(Microsoft.CodeAnalysis.VisualBasic.Syntax.SpecialConstraintSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitStopOrEndStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.StopOrEndStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitStructureBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitStructureStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitSubNewStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitSyncLockBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitSyncLockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitTernaryConditionalExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitThrowStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ThrowStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitTrivia(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitTryBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.TryBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitTryCastExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitTryStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.TryStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitTupleExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitTupleType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitTypeArgumentList(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitTypeConstraint(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeConstraintSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitTypedTupleElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypedTupleElementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitTypeOfExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeOfExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitTypeParameter(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitTypeParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitTypeParameterMultipleConstraintClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterMultipleConstraintClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitTypeParameterSingleConstraintClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSingleConstraintClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitUnaryExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.UnaryExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitUsingBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitUsingStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitVariableDeclarator(Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitVariableNameEquals(Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitWhereClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhereClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitWhileBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitWhileOrUntilClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitWhileStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitWithBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.WithBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitWithEventsEventContainer(Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsEventContainerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitWithEventsPropertyEventContainer(Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsPropertyEventContainerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitWithStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.WithStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlAttribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlAttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlBracketedName(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlBracketedNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlCDataSection(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCDataSectionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlComment(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCommentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlCrefAttribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlDeclaration(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlDeclarationOption(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlDocument(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDocumentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlElementEndTag(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementEndTagSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlElementStartTag(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementStartTagSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlEmbeddedExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmbeddedExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlEmptyElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlMemberAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlMemberAccessExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlName(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlNameAttribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameAttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlNamespaceImportsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNamespaceImportsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlPrefix(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlPrefixName(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlProcessingInstruction(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlProcessingInstructionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlString(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlStringSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitXmlText(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlTextSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitYieldStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.YieldStatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxRewriter.VisitIntoStructuredTrivia" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree" Id="T:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.CloneNodeAsRoot``1(``0)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.Create(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode,Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions,System.String,System.Text.Encoding)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.GetChangedSpans(Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.GetChanges(Microsoft.CodeAnalysis.SyntaxTree)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.GetCompilationUnitRoot(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.GetDiagnostics(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.GetDiagnostics(Microsoft.CodeAnalysis.SyntaxNodeOrToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.GetDiagnostics(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.GetDiagnostics(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.GetDiagnostics(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.GetLineSpan(Microsoft.CodeAnalysis.Text.TextSpan,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.GetLineVisibility(System.Int32,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.GetLocation(Microsoft.CodeAnalysis.Text.TextSpan)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.GetMappedLineSpan(Microsoft.CodeAnalysis.Text.TextSpan,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.GetRoot(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.GetRootAsync(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.GetRootAsyncCore(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.GetRootCore(System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.HasHiddenRegions" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.IsEquivalentTo(Microsoft.CodeAnalysis.SyntaxTree,System.Boolean)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.ParseText(Microsoft.CodeAnalysis.Text.SourceText,Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions,System.String,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.ParseText(System.String,Microsoft.CodeAnalysis.VisualBasic.VisualBasicParseOptions,System.String,System.Text.Encoding,System.Threading.CancellationToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.TryGetRoot(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode@)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.TryGetRootCore(Microsoft.CodeAnalysis.SyntaxNode@)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.WithChangedText(Microsoft.CodeAnalysis.Text.SourceText)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.Options" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxTree.OptionsCore" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor" Id="T:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.DefaultVisit(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.Visit(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitAccessorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitAccessorStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitAddRemoveHandlerStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.AddRemoveHandlerStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitAggregateClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitAggregationRangeVariable(Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitAnonymousObjectCreationExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitArgumentList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitArrayCreationExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitArrayRankSpecifier(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitArrayType(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitAsNewClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.AssignmentStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitAttribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitAttributeList(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitAttributesStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributesStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitAttributeTarget(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitAwaitExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.AwaitExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitBadDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.BadDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitBinaryConditionalExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitBinaryExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitCallStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.CallStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitCaseBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitCaseStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitCatchBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitCatchFilterClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitCatchStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitClassBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitClassStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitCollectionInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitCollectionRangeVariable(Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitCompilationUnit(Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitConditionalAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ConditionalAccessExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitConstDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitConstructorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitContinueStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ContinueStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitCrefOperatorReference(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefOperatorReferenceSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitCrefReference(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitCrefSignature(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignatureSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitCrefSignaturePart(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignaturePartSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitCTypeExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.CTypeExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitDeclareStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitDelegateStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitDirectCastExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectCastExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitDisableWarningDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.DisableWarningDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitDistinctClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.DistinctClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitDocumentationCommentTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.DocumentationCommentTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitDoLoopBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitDoStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitElseBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitElseCaseClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseCaseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitElseDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitElseIfBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitElseIfStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitElseStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitEmptyStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EmptyStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitEnableWarningDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.EnableWarningDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitEndBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitEndExternalSourceDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndExternalSourceDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitEndIfDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndIfDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitEndRegionDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndRegionDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitEnumBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitEnumMemberDeclaration(Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitEnumStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitEqualsValue(Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitEraseStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EraseStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitErrorStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ErrorStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitEventBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitEventStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitExitStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExitStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitExpressionRangeVariable(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitExpressionStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitExternalChecksumDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitExternalSourceDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitFieldDeclaration(Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitFinallyBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitFinallyStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitForBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitForEachBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitForEachStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitForStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitForStepClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitFromClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.FromClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitFunctionAggregation(Microsoft.CodeAnalysis.VisualBasic.Syntax.FunctionAggregationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitGenericName(Microsoft.CodeAnalysis.VisualBasic.Syntax.GenericNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitGetTypeExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.GetTypeExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitGetXmlNamespaceExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.GetXmlNamespaceExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitGlobalName(Microsoft.CodeAnalysis.VisualBasic.Syntax.GlobalNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitGoToStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.GoToStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitGroupAggregation(Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupAggregationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitGroupByClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitGroupJoinClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitHandlesClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitHandlesClauseItem(Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseItemSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitIdentifierName(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitIfDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.IfDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitIfStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.IfStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitImplementsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitImplementsStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitImportAliasClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitImportsStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitIncompleteMember(Microsoft.CodeAnalysis.VisualBasic.Syntax.IncompleteMemberSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitInferredFieldInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.InferredFieldInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitInheritsStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitInterfaceBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitInterfaceStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitInterpolatedStringExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitInterpolatedStringText(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringTextSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitInterpolation(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitInterpolationAlignmentClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitInterpolationFormatClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationFormatClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitInvocationExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.InvocationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitJoinCondition(Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitKeywordEventContainer(Microsoft.CodeAnalysis.VisualBasic.Syntax.KeywordEventContainerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitLabel(Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitLabelStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitLambdaHeader(Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitLetClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitLiteralExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitLocalDeclarationStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.LocalDeclarationStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitLoopStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitMeExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.MeExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitMemberAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitMethodBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitMethodStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitMidExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.MidExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitModifiedIdentifier(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitModuleBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitModuleStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitMultiLineIfBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineIfBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitMultiLineLambdaExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineLambdaExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitMyBaseExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.MyBaseExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitMyClassExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.MyClassExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitNameColonEquals(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameColonEqualsSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitNamedFieldInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedFieldInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitNamedTupleElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedTupleElementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitNameOfExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameOfExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitNamespaceBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitNamespaceStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitNextStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.NextStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitNullableType(Microsoft.CodeAnalysis.VisualBasic.Syntax.NullableTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitObjectCollectionInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCollectionInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitObjectCreationExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitObjectMemberInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitOmittedArgument(Microsoft.CodeAnalysis.VisualBasic.Syntax.OmittedArgumentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitOnErrorGoToStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorGoToStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitOnErrorResumeNextStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorResumeNextStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitOperatorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitOperatorStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitOptionStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.OptionStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitOrderByClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderByClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitOrdering(Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderingSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitParameter(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitParenthesizedExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParenthesizedExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitPartitionClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitPartitionWhileClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionWhileClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitPredefinedCastExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedCastExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitPredefinedType(Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitPrintStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.PrintStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitPropertyBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitPropertyStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitQualifiedCrefOperatorReference(Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedCrefOperatorReferenceSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitQualifiedName(Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitQueryExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitRaiseEventStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.RaiseEventStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitRangeArgument(Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitRangeCaseClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeCaseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitRedimClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitReDimStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ReDimStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitReferenceDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.ReferenceDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitRegionDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.RegionDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitRelationalCaseClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.RelationalCaseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitResumeStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ResumeStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitReturnStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ReturnStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitSelectBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitSelectClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitSelectStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitSimpleArgument(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleArgumentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitSimpleAsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitSimpleCaseClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleCaseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitSimpleImportsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitSimpleJoinClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleJoinClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitSingleLineElseClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineElseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitSingleLineIfStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineIfStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitSingleLineLambdaExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineLambdaExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitSkippedTokensTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.SkippedTokensTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitSpecialConstraint(Microsoft.CodeAnalysis.VisualBasic.Syntax.SpecialConstraintSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitStopOrEndStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.StopOrEndStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitStructureBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitStructureStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitSubNewStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitSyncLockBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitSyncLockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitTernaryConditionalExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitThrowStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ThrowStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitTryBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.TryBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitTryCastExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitTryStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.TryStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitTupleExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitTupleType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitTypeArgumentList(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitTypeConstraint(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeConstraintSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitTypedTupleElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypedTupleElementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitTypeOfExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeOfExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitTypeParameter(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitTypeParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitTypeParameterMultipleConstraintClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterMultipleConstraintClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitTypeParameterSingleConstraintClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSingleConstraintClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitUnaryExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.UnaryExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitUsingBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitUsingStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitVariableDeclarator(Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitVariableNameEquals(Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitWhereClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhereClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitWhileBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitWhileOrUntilClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitWhileStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitWithBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.WithBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitWithEventsEventContainer(Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsEventContainerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitWithEventsPropertyEventContainer(Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsPropertyEventContainerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitWithStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.WithStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlAttribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlAttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlBracketedName(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlBracketedNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlCDataSection(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCDataSectionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlComment(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCommentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlCrefAttribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlDeclaration(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlDeclarationOption(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlDocument(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDocumentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlElementEndTag(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementEndTagSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlElementStartTag(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementStartTagSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlEmbeddedExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmbeddedExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlEmptyElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlMemberAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlMemberAccessExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlName(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlNameAttribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameAttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlNamespaceImportsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNamespaceImportsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlPrefix(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlPrefixName(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlProcessingInstruction(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlProcessingInstructionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlString(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlStringSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitXmlText(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlTextSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor.VisitYieldStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.YieldStatementSyntax)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1" Id="T:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.#ctor" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.DefaultVisit(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.Visit(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitAccessorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitAccessorStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitAddRemoveHandlerStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.AddRemoveHandlerStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitAggregateClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitAggregationRangeVariable(Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitAnonymousObjectCreationExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitArgumentList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitArrayCreationExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitArrayRankSpecifier(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitArrayType(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitAsNewClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.AssignmentStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitAttribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitAttributeList(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitAttributesStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributesStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitAttributeTarget(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitAwaitExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.AwaitExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitBadDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.BadDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitBinaryConditionalExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitBinaryExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitCallStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.CallStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitCaseBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitCaseStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitCatchBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitCatchFilterClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitCatchStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitClassBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitClassStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitCollectionInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitCollectionRangeVariable(Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitCompilationUnit(Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitConditionalAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ConditionalAccessExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitConstDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitConstructorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitContinueStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ContinueStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitCrefOperatorReference(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefOperatorReferenceSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitCrefReference(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitCrefSignature(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignatureSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitCrefSignaturePart(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignaturePartSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitCTypeExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.CTypeExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitDeclareStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitDelegateStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitDirectCastExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectCastExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitDisableWarningDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.DisableWarningDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitDistinctClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.DistinctClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitDocumentationCommentTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.DocumentationCommentTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitDoLoopBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitDoStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitElseBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitElseCaseClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseCaseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitElseDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitElseIfBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitElseIfStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitElseStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitEmptyStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EmptyStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitEnableWarningDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.EnableWarningDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitEndBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitEndExternalSourceDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndExternalSourceDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitEndIfDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndIfDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitEndRegionDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndRegionDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitEnumBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitEnumMemberDeclaration(Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitEnumStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitEqualsValue(Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitEraseStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EraseStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitErrorStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ErrorStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitEventBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitEventStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitExitStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExitStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitExpressionRangeVariable(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitExpressionStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitExternalChecksumDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitExternalSourceDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitFieldDeclaration(Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitFinallyBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitFinallyStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitForBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitForEachBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitForEachStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitForStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitForStepClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitFromClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.FromClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitFunctionAggregation(Microsoft.CodeAnalysis.VisualBasic.Syntax.FunctionAggregationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitGenericName(Microsoft.CodeAnalysis.VisualBasic.Syntax.GenericNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitGetTypeExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.GetTypeExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitGetXmlNamespaceExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.GetXmlNamespaceExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitGlobalName(Microsoft.CodeAnalysis.VisualBasic.Syntax.GlobalNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitGoToStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.GoToStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitGroupAggregation(Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupAggregationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitGroupByClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitGroupJoinClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitHandlesClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitHandlesClauseItem(Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseItemSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitIdentifierName(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitIfDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.IfDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitIfStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.IfStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitImplementsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitImplementsStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitImportAliasClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitImportsStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitIncompleteMember(Microsoft.CodeAnalysis.VisualBasic.Syntax.IncompleteMemberSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitInferredFieldInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.InferredFieldInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitInheritsStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitInterfaceBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitInterfaceStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitInterpolatedStringExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitInterpolatedStringText(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringTextSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitInterpolation(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitInterpolationAlignmentClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitInterpolationFormatClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationFormatClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitInvocationExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.InvocationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitJoinCondition(Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitKeywordEventContainer(Microsoft.CodeAnalysis.VisualBasic.Syntax.KeywordEventContainerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitLabel(Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitLabelStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitLambdaHeader(Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitLetClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitLiteralExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitLocalDeclarationStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.LocalDeclarationStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitLoopStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitMeExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.MeExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitMemberAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitMethodBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitMethodStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitMidExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.MidExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitModifiedIdentifier(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitModuleBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitModuleStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitMultiLineIfBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineIfBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitMultiLineLambdaExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineLambdaExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitMyBaseExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.MyBaseExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitMyClassExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.MyClassExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitNameColonEquals(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameColonEqualsSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitNamedFieldInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedFieldInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitNamedTupleElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedTupleElementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitNameOfExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameOfExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitNamespaceBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitNamespaceStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitNextStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.NextStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitNullableType(Microsoft.CodeAnalysis.VisualBasic.Syntax.NullableTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitObjectCollectionInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCollectionInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitObjectCreationExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitObjectMemberInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitOmittedArgument(Microsoft.CodeAnalysis.VisualBasic.Syntax.OmittedArgumentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitOnErrorGoToStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorGoToStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitOnErrorResumeNextStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorResumeNextStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitOperatorBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitOperatorStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitOptionStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.OptionStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitOrderByClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderByClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitOrdering(Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderingSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitParameter(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitParenthesizedExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParenthesizedExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitPartitionClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitPartitionWhileClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionWhileClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitPredefinedCastExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedCastExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitPredefinedType(Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitPrintStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.PrintStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitPropertyBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitPropertyStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitQualifiedCrefOperatorReference(Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedCrefOperatorReferenceSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitQualifiedName(Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitQueryExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitRaiseEventStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.RaiseEventStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitRangeArgument(Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitRangeCaseClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeCaseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitRedimClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitReDimStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ReDimStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitReferenceDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.ReferenceDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitRegionDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.RegionDirectiveTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitRelationalCaseClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.RelationalCaseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitResumeStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ResumeStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitReturnStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ReturnStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitSelectBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitSelectClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitSelectStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitSimpleArgument(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleArgumentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitSimpleAsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitSimpleCaseClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleCaseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitSimpleImportsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitSimpleJoinClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleJoinClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitSingleLineElseClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineElseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitSingleLineIfStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineIfStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitSingleLineLambdaExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineLambdaExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitSkippedTokensTrivia(Microsoft.CodeAnalysis.VisualBasic.Syntax.SkippedTokensTriviaSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitSpecialConstraint(Microsoft.CodeAnalysis.VisualBasic.Syntax.SpecialConstraintSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitStopOrEndStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.StopOrEndStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitStructureBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitStructureStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitSubNewStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitSyncLockBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitSyncLockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitTernaryConditionalExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitThrowStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ThrowStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitTryBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.TryBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitTryCastExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitTryStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.TryStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitTupleExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitTupleType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleTypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitTypeArgumentList(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitTypeConstraint(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeConstraintSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitTypedTupleElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypedTupleElementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitTypeOfExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeOfExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitTypeParameter(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitTypeParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitTypeParameterMultipleConstraintClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterMultipleConstraintClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitTypeParameterSingleConstraintClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSingleConstraintClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitUnaryExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.UnaryExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitUsingBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitUsingStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitVariableDeclarator(Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitVariableNameEquals(Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitWhereClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhereClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitWhileBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitWhileOrUntilClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitWhileStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitWithBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.WithBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitWithEventsEventContainer(Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsEventContainerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitWithEventsPropertyEventContainer(Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsPropertyEventContainerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitWithStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.WithStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlAttribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlAttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlBracketedName(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlBracketedNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlCDataSection(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCDataSectionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlComment(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCommentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlCrefAttribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlDeclaration(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlDeclarationOption(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlDocument(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDocumentSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlElementEndTag(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementEndTagSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlElementStartTag(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementStartTagSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlEmbeddedExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmbeddedExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlEmptyElement(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlMemberAccessExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlMemberAccessExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlName(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlNameAttribute(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameAttributeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlNamespaceImportsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNamespaceImportsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlPrefix(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlPrefixName(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlProcessingInstruction(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlProcessingInstructionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlString(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlStringSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitXmlText(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlTextSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1.VisitYieldStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.YieldStatementSyntax)" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxWalker" Id="T:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxWalker">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxWalker.#ctor(Microsoft.CodeAnalysis.SyntaxWalkerDepth)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxWalker.DefaultVisit(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxWalker.Visit(Microsoft.CodeAnalysis.SyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxWalker.VisitLeadingTrivia(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxWalker.VisitToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxWalker.VisitTrailingTrivia(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxWalker.VisitTrivia(Microsoft.CodeAnalysis.SyntaxTrivia)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxWalker.Depth" />
    </Type>
  </Namespace>
  <Namespace Name="Microsoft.CodeAnalysis.VisualBasic.Syntax">
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax.WithAccessorStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax.WithBegin(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax.WithBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax.WithEnd(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax.WithEndAccessorStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax.WithEndBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax.AccessorStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax.Begin" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax.BlockStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax.End" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax.EndAccessorStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax.EndBlockStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax.Statements" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax.WithAccessorKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax.WithDeclarationKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax.WithParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax.AccessorKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax.DeclarationKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorStatementSyntax.ParameterList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.AddRemoveHandlerStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.AddRemoveHandlerStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AddRemoveHandlerStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AddRemoveHandlerStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AddRemoveHandlerStatementSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AddRemoveHandlerStatementSyntax.WithAddHandlerOrRemoveHandlerKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AddRemoveHandlerStatementSyntax.WithCommaToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AddRemoveHandlerStatementSyntax.WithDelegateExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AddRemoveHandlerStatementSyntax.WithEventExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AddRemoveHandlerStatementSyntax.AddHandlerOrRemoveHandlerKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AddRemoveHandlerStatementSyntax.CommaToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AddRemoveHandlerStatementSyntax.DelegateExpression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AddRemoveHandlerStatementSyntax.EventExpression" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax.AddAdditionalQueryOperators(Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax.AddAggregationVariables(Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax.AddVariables(Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryClauseSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax.WithAdditionalQueryOperators(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax.WithAggregateKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax.WithAggregationVariables(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax.WithIntoKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax.WithVariables(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax.AdditionalQueryOperators" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax.AggregateKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax.AggregationVariables" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax.IntoKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregateClauseSyntax.Variables" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax.WithAggregation(Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax.WithNameEquals(Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax.Aggregation" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax.NameEquals" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationSyntax" />
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax.AddInitializerInitializers(Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldInitializerSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax.WithInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax.WithNewKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax.Initializer" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AnonymousObjectCreationExpressionSyntax.NewKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax.AddArguments(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax.WithArguments(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax.Arguments" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax.OpenParenToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax.GetExpression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax.IsNamed" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax.IsOmitted" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.AddArrayBoundsArguments(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.AddInitializerInitializers(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.AddRankSpecifiers(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.WithArrayBounds(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.WithInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.WithNewKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.WithRankSpecifiers(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.WithType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.ArrayBounds" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.Initializer" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.NewKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.RankSpecifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayCreationExpressionSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax.AddCommaTokens(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax.WithCommaTokens(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax.CommaTokens" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax.Rank" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayTypeSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayTypeSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayTypeSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayTypeSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayTypeSyntax.AddRankSpecifiers(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayTypeSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayTypeSyntax.WithElementType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayTypeSyntax.WithRankSpecifiers(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayTypeSyntax.ElementType" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayTypeSyntax.RankSpecifiers" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax.WithAsKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax.AsKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax.WithAsKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax.WithNewExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax.AsKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax.NewExpression" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.AssignmentStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.AssignmentStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AssignmentStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AssignmentStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AssignmentStatementSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AssignmentStatementSyntax.WithLeft(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AssignmentStatementSyntax.WithOperatorToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AssignmentStatementSyntax.WithRight(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AssignmentStatementSyntax.Left" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AssignmentStatementSyntax.OperatorToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AssignmentStatementSyntax.Right" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax.AddAttributes(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax.WithAttributes(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax.WithGreaterThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax.WithLessThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax.Attributes" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax.GreaterThanToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax.LessThanToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributesStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributesStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributesStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributesStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributesStatementSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributesStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributesStatementSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributesStatementSyntax.AttributeLists" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.AddArgumentListArguments(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.WithArgumentList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.WithName(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.WithTarget(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.ArgumentList" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.Target" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax.WithAttributeModifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax.WithColonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax.AttributeModifier" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax.ColonToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.AwaitExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.AwaitExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AwaitExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AwaitExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AwaitExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AwaitExpressionSyntax.WithAwaitKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AwaitExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AwaitExpressionSyntax.AwaitKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AwaitExpressionSyntax.Expression" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.BadDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.BadDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.BadDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.BadDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.BadDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.BadDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.BadDirectiveTriviaSyntax.HashToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.BaseXmlAttributeSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.BaseXmlAttributeSyntax" />
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax.WithCommaToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax.WithFirstExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax.WithIfKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax.WithSecondExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax.CommaToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax.FirstExpression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax.IfKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryConditionalExpressionSyntax.SecondExpression" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryExpressionSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryExpressionSyntax.WithLeft(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryExpressionSyntax.WithOperatorToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryExpressionSyntax.WithRight(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryExpressionSyntax.Left" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryExpressionSyntax.OperatorToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.BinaryExpressionSyntax.Right" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.CallStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.CallStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CallStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CallStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CallStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CallStatementSyntax.WithCallKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CallStatementSyntax.WithInvocation(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CallStatementSyntax.CallKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CallStatementSyntax.Invocation" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax.AddBeginCases(Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax.AddCaseStatementCases(Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax.WithBegin(Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax.WithCaseStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax.Begin" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax.CaseStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax.Statements" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseClauseSyntax" />
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax.AddCases(Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax.WithCaseKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax.WithCases(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseClauseSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax.CaseKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseStatementSyntax.Cases" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.WithCommaToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.WithType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.CommaToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchBlockSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchBlockSyntax.WithCatchStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchBlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchBlockSyntax.CatchStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchBlockSyntax.Statements" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax.WithFilter(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax.WithWhenKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax.Filter" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax.WhenKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax.WithAsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax.WithCatchKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax.WithIdentifierName(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax.WithWhenClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchFilterClauseSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax.AsClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax.CatchKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax.IdentifierName" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchStatementSyntax.WhenClause" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.AddImplements(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.AddInherits(Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.AddMembers(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.WithBegin(Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.WithBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.WithClassStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.WithEnd(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.WithEndBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.WithEndClassStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.WithImplements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.WithInherits(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.WithMembers(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.Begin" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.BlockStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.ClassStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.End" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.EndBlockStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.EndClassStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.Implements" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.Inherits" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassBlockSyntax.Members" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax.AddTypeParameterListParameters(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax.WithClassKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax.WithDeclarationKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax.WithTypeParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax.ClassKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax.DeclarationKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ClassStatementSyntax.TypeParameterList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax.AddInitializers(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax.WithInitializers(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax.CloseBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax.Initializers" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax.OpenBraceToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax.WithAsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax.WithIdentifier(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax.WithInKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax.AsClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax.InKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax.AddAttributes(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributesStatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax.AddImports(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsStatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax.AddMembers(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax.AddOptions(Microsoft.CodeAnalysis.VisualBasic.Syntax.OptionStatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax.GetReferenceDirectives" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.OptionStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributesStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax.WithAttributes(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributesStatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax.WithEndOfFileToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax.WithImports(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsStatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax.WithMembers(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax.WithOptions(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.OptionStatementSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax.Attributes" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax.EndOfFileToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax.ICompilationUnitSyntax_EndOfFileToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax.Imports" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax.Members" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CompilationUnitSyntax.Options" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ConditionalAccessExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConditionalAccessExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConditionalAccessExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConditionalAccessExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConditionalAccessExpressionSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConditionalAccessExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConditionalAccessExpressionSyntax.WithQuestionMarkToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConditionalAccessExpressionSyntax.WithWhenNotNull(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConditionalAccessExpressionSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConditionalAccessExpressionSyntax.QuestionMarkToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConditionalAccessExpressionSyntax.WhenNotNull" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstDirectiveTriviaSyntax.WithConstKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstDirectiveTriviaSyntax.WithEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstDirectiveTriviaSyntax.WithName(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstDirectiveTriviaSyntax.WithValue(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstDirectiveTriviaSyntax.ConstKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstDirectiveTriviaSyntax.EqualsToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstDirectiveTriviaSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstDirectiveTriviaSyntax.Value" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstraintSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstraintSyntax" />
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.WithBegin(Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.WithBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.WithEnd(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.WithEndBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.WithEndSubStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.WithSubNewStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.Begin" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.BlockStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.End" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.EndBlockStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.EndSubStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.Statements" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstructorBlockSyntax.SubNewStatement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ContinueStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ContinueStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ContinueStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ContinueStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ContinueStatementSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ContinueStatementSyntax.WithBlockKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ContinueStatementSyntax.WithContinueKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ContinueStatementSyntax.BlockKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ContinueStatementSyntax.ContinueKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefOperatorReferenceSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefOperatorReferenceSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefOperatorReferenceSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefOperatorReferenceSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefOperatorReferenceSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefOperatorReferenceSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefOperatorReferenceSyntax.WithOperatorKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefOperatorReferenceSyntax.WithOperatorToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefOperatorReferenceSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefOperatorReferenceSyntax.OperatorKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefOperatorReferenceSyntax.OperatorToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax.AddSignatureArgumentTypes(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignaturePartSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignatureSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax.WithAsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax.WithName(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax.WithSignature(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignatureSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax.AsClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax.Signature" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignaturePartSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignaturePartSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignaturePartSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignaturePartSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignaturePartSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignaturePartSyntax.WithModifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignaturePartSyntax.WithType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignaturePartSyntax.Modifier" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignaturePartSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignatureSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignatureSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignatureSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignatureSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignatureSyntax.AddArgumentTypes(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignaturePartSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignatureSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignaturePartSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignatureSyntax.WithArgumentTypes(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignaturePartSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignatureSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignatureSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignatureSyntax.ArgumentTypes" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignatureSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefSignatureSyntax.OpenParenToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.CTypeExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.CTypeExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CTypeExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CTypeExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CTypeExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CTypeExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CTypeExpressionSyntax.WithCommaToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CTypeExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CTypeExpressionSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CTypeExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.CTypeExpressionSyntax.WithType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CTypeExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CTypeExpressionSyntax.CommaToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CTypeExpressionSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CTypeExpressionSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CTypeExpressionSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CTypeExpressionSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclarationStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclarationStatementSyntax" />
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.WithAliasKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.WithAliasName(Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.WithAsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.WithCharsetKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.WithDeclarationKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.WithDeclareKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.WithLibKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.WithLibraryName(Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.WithParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.WithSubOrFunctionKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.AliasKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.AliasName" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.AsClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.CharsetKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.DeclarationKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.DeclareKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.LibKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.LibraryName" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.ParameterList" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DeclareStatementSyntax.SubOrFunctionKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.AddTypeParameterListParameters(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.WithAsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.WithDeclarationKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.WithDelegateKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.WithParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.WithSubOrFunctionKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.WithTypeParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.AsClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.DeclarationKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.DelegateKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.ParameterList" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.SubOrFunctionKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DelegateStatementSyntax.TypeParameterList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectCastExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectCastExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectCastExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectCastExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectCastExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectCastExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectCastExpressionSyntax.WithCommaToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectCastExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectCastExpressionSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectCastExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectCastExpressionSyntax.WithType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectCastExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectCastExpressionSyntax.CommaToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectCastExpressionSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectCastExpressionSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectCastExpressionSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectCastExpressionSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectiveTriviaSyntax.GetNextDirective(System.Func{Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectiveTriviaSyntax,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectiveTriviaSyntax.GetPreviousDirective(System.Func{Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectiveTriviaSyntax,System.Boolean})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectiveTriviaSyntax.GetRelatedDirectives" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DirectiveTriviaSyntax.HashToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.DisableWarningDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.DisableWarningDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DisableWarningDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DisableWarningDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DisableWarningDirectiveTriviaSyntax.AddErrorCodes(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DisableWarningDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DisableWarningDirectiveTriviaSyntax.WithDisableKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DisableWarningDirectiveTriviaSyntax.WithErrorCodes(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DisableWarningDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DisableWarningDirectiveTriviaSyntax.WithWarningKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DisableWarningDirectiveTriviaSyntax.DisableKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DisableWarningDirectiveTriviaSyntax.ErrorCodes" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DisableWarningDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DisableWarningDirectiveTriviaSyntax.WarningKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.DistinctClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.DistinctClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DistinctClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DistinctClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DistinctClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DistinctClauseSyntax.WithDistinctKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DistinctClauseSyntax.DistinctKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.DocumentationCommentTriviaSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.DocumentationCommentTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DocumentationCommentTriviaSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DocumentationCommentTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DocumentationCommentTriviaSyntax.AddContent(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DocumentationCommentTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DocumentationCommentTriviaSyntax.WithContent(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DocumentationCommentTriviaSyntax.Content" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax.WithDoStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax.WithLoopStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax.DoStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax.LoopStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DoLoopBlockSyntax.Statements" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax.WithDoKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax.WithWhileOrUntilClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax.DoKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.DoStatementSyntax.WhileOrUntilClause" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseBlockSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseBlockSyntax.WithElseStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseBlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseBlockSyntax.ElseStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseBlockSyntax.Statements" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseCaseClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseCaseClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseCaseClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseCaseClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseCaseClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseCaseClauseSyntax.WithElseKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseCaseClauseSyntax.ElseKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseDirectiveTriviaSyntax.WithElseKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseDirectiveTriviaSyntax.ElseKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseDirectiveTriviaSyntax.HashToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfBlockSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfBlockSyntax.WithElseIfStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfBlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfBlockSyntax.ElseIfStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfBlockSyntax.Statements" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfStatementSyntax.WithCondition(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfStatementSyntax.WithElseIfKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfStatementSyntax.WithThenKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfStatementSyntax.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfStatementSyntax.ElseIfKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfStatementSyntax.ThenKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseStatementSyntax.WithElseKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseStatementSyntax.ElseKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.EmptyStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.EmptyStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EmptyStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EmptyStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EmptyStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EmptyStatementSyntax.WithEmpty(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EmptyStatementSyntax.Empty" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.EnableWarningDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnableWarningDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnableWarningDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnableWarningDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnableWarningDirectiveTriviaSyntax.AddErrorCodes(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnableWarningDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnableWarningDirectiveTriviaSyntax.WithEnableKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnableWarningDirectiveTriviaSyntax.WithErrorCodes(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnableWarningDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnableWarningDirectiveTriviaSyntax.WithWarningKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnableWarningDirectiveTriviaSyntax.EnableKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnableWarningDirectiveTriviaSyntax.ErrorCodes" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnableWarningDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnableWarningDirectiveTriviaSyntax.WarningKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax.WithBlockKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax.WithEndKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax.BlockKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax.EndKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.EndExternalSourceDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndExternalSourceDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndExternalSourceDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndExternalSourceDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndExternalSourceDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndExternalSourceDirectiveTriviaSyntax.WithEndKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndExternalSourceDirectiveTriviaSyntax.WithExternalSourceKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndExternalSourceDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndExternalSourceDirectiveTriviaSyntax.EndKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndExternalSourceDirectiveTriviaSyntax.ExternalSourceKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndExternalSourceDirectiveTriviaSyntax.HashToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.EndIfDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndIfDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndIfDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndIfDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndIfDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndIfDirectiveTriviaSyntax.WithEndKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndIfDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndIfDirectiveTriviaSyntax.WithIfKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndIfDirectiveTriviaSyntax.EndKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndIfDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndIfDirectiveTriviaSyntax.IfKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.EndRegionDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndRegionDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndRegionDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndRegionDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndRegionDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndRegionDirectiveTriviaSyntax.WithEndKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndRegionDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndRegionDirectiveTriviaSyntax.WithRegionKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndRegionDirectiveTriviaSyntax.EndKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndRegionDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EndRegionDirectiveTriviaSyntax.RegionKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax.AddMembers(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax.WithEndEnumStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax.WithEnumStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax.WithMembers(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax.EndEnumStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax.EnumStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumBlockSyntax.Members" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax.WithInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumMemberDeclarationSyntax.Initializer" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax.WithEnumKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax.WithUnderlyingType(Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax.EnumKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EnumStatementSyntax.UnderlyingType" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax.WithEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax.WithValue(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax.EqualsToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax.Value" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.EraseStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.EraseStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EraseStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EraseStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EraseStatementSyntax.AddExpressions(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EraseStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EraseStatementSyntax.WithEraseKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EraseStatementSyntax.WithExpressions(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EraseStatementSyntax.EraseKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EraseStatementSyntax.Expressions" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ErrorStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ErrorStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ErrorStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ErrorStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ErrorStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ErrorStatementSyntax.WithErrorKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ErrorStatementSyntax.WithErrorNumber(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ErrorStatementSyntax.ErrorKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ErrorStatementSyntax.ErrorNumber" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax.AddAccessors(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax.WithAccessors(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax.WithEndEventStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax.WithEventStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax.Accessors" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax.EndEventStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventBlockSyntax.EventStatement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.EventContainerSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventContainerSyntax" />
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.AddImplementsClauseInterfaceMembers(Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.WithAsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.WithCustomKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.WithDeclarationKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.WithEventKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.WithImplementsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.WithParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.AsClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.CustomKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.DeclarationKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.EventKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.ImplementsClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.EventStatementSyntax.ParameterList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExecutableStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExecutableStatementSyntax" />
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExitStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExitStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExitStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExitStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExitStatementSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExitStatementSyntax.WithBlockKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExitStatementSyntax.WithExitKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExitStatementSyntax.BlockKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExitStatementSyntax.ExitKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax.WithNameEquals(Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax.NameEquals" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionStatementSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionStatementSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionStatementSyntax.Expression" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax" />
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax.WithChecksum(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax.WithExternalChecksumKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax.WithExternalSource(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax.WithFirstCommaToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax.WithGuid(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax.WithSecondCommaToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax.Checksum" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax.ExternalChecksumKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax.ExternalSource" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax.FirstCommaToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax.Guid" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalChecksumDirectiveTriviaSyntax.SecondCommaToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax.WithCommaToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax.WithExternalSource(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax.WithExternalSourceKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax.WithLineStart(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax.CommaToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax.ExternalSource" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax.ExternalSourceKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax.LineStart" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ExternalSourceDirectiveTriviaSyntax.OpenParenToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldDeclarationSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldDeclarationSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldDeclarationSyntax.AddDeclarators(Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldDeclarationSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldDeclarationSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldDeclarationSyntax.WithDeclarators(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldDeclarationSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldDeclarationSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldDeclarationSyntax.Declarators" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldDeclarationSyntax.Modifiers" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldInitializerSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldInitializerSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldInitializerSyntax.WithKeyKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldInitializerSyntax.KeyKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyBlockSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyBlockSyntax.WithFinallyStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyBlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyBlockSyntax.FinallyStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyBlockSyntax.Statements" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyStatementSyntax.WithFinallyKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyStatementSyntax.FinallyKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ForBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForBlockSyntax.AddNextStatementControlVariables(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForBlockSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.NextStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForBlockSyntax.WithForStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForBlockSyntax.WithNextStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.NextStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForBlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForBlockSyntax.ForOrForEachStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForBlockSyntax.ForStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForBlockSyntax.NextStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForBlockSyntax.Statements" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachBlockSyntax.AddNextStatementControlVariables(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachBlockSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.NextStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachBlockSyntax.WithForEachStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachBlockSyntax.WithNextStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.NextStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachBlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachBlockSyntax.ForEachStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachBlockSyntax.ForOrForEachStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachBlockSyntax.NextStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachBlockSyntax.Statements" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.WithControlVariable(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.WithEachKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.WithForKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.WithInKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.ControlVariable" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.EachKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.ForKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForEachStatementSyntax.InKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachBlockSyntax.AddNextStatementControlVariables(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachBlockSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachBlockSyntax.WithNextStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.NextStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachBlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachBlockSyntax.ForOrForEachStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachBlockSyntax.NextStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachBlockSyntax.Statements" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachStatementSyntax.WithControlVariable(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachStatementSyntax.WithForKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachStatementSyntax.ControlVariable" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForOrForEachStatementSyntax.ForKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax.WithControlVariable(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax.WithEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax.WithForKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax.WithFromValue(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax.WithStepClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax.WithToKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax.WithToValue(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax.ControlVariable" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax.EqualsToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax.ForKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax.FromValue" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax.StepClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax.ToKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStatementSyntax.ToValue" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax.WithStepKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax.WithStepValue(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax.StepKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ForStepClauseSyntax.StepValue" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.FromClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.FromClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FromClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FromClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FromClauseSyntax.AddVariables(Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FromClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FromClauseSyntax.WithFromKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FromClauseSyntax.WithVariables(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.FromClauseSyntax.FromKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.FromClauseSyntax.Variables" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.FunctionAggregationSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.FunctionAggregationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FunctionAggregationSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FunctionAggregationSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FunctionAggregationSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FunctionAggregationSyntax.WithArgument(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FunctionAggregationSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FunctionAggregationSyntax.WithFunctionName(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.FunctionAggregationSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.FunctionAggregationSyntax.Argument" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.FunctionAggregationSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.FunctionAggregationSyntax.FunctionName" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.FunctionAggregationSyntax.OpenParenToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.GenericNameSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.GenericNameSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GenericNameSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GenericNameSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GenericNameSyntax.AddTypeArgumentListArguments(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GenericNameSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GenericNameSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GenericNameSyntax.WithTypeArgumentList(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeArgumentListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GenericNameSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GenericNameSyntax.TypeArgumentList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.GetTypeExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetTypeExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetTypeExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetTypeExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetTypeExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetTypeExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetTypeExpressionSyntax.WithGetTypeKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetTypeExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetTypeExpressionSyntax.WithType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetTypeExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetTypeExpressionSyntax.GetTypeKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetTypeExpressionSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetTypeExpressionSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.GetXmlNamespaceExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetXmlNamespaceExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetXmlNamespaceExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetXmlNamespaceExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetXmlNamespaceExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetXmlNamespaceExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetXmlNamespaceExpressionSyntax.WithGetXmlNamespaceKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetXmlNamespaceExpressionSyntax.WithName(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetXmlNamespaceExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetXmlNamespaceExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetXmlNamespaceExpressionSyntax.GetXmlNamespaceKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetXmlNamespaceExpressionSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GetXmlNamespaceExpressionSyntax.OpenParenToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.GlobalNameSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.GlobalNameSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GlobalNameSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GlobalNameSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GlobalNameSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GlobalNameSyntax.WithGlobalKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GlobalNameSyntax.GlobalKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.GoToStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.GoToStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GoToStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GoToStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GoToStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GoToStatementSyntax.WithGoToKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GoToStatementSyntax.WithLabel(Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GoToStatementSyntax.GoToKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GoToStatementSyntax.Label" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupAggregationSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupAggregationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupAggregationSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupAggregationSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupAggregationSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupAggregationSyntax.WithGroupKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupAggregationSyntax.GroupKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.AddAggregationVariables(Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.AddItems(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.AddKeys(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.WithAggregationVariables(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.WithByKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.WithGroupKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.WithIntoKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.WithItems(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.WithKeys(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.AggregationVariables" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.ByKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.GroupKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.IntoKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.Items" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupByClauseSyntax.Keys" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.AddAdditionalJoins(Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.AddAggregationVariables(Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.AddJoinConditions(Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.AddJoinedVariables(Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.WithAdditionalJoins(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.WithAggregationVariables(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AggregationRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.WithGroupKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.WithIntoKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.WithJoinConditions(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.WithJoinedVariables(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.WithJoinKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.WithOnKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.AdditionalJoins" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.AggregationVariables" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.GroupKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.IntoKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.JoinConditions" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.JoinedVariables" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.JoinKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.GroupJoinClauseSyntax.OnKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseItemSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseItemSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseItemSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseItemSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseItemSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.EventContainerSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseItemSyntax.WithDotToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseItemSyntax.WithEventContainer(Microsoft.CodeAnalysis.VisualBasic.Syntax.EventContainerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseItemSyntax.WithEventMember(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseItemSyntax.DotToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseItemSyntax.EventContainer" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseItemSyntax.EventMember" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseSyntax.AddEvents(Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseItemSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseItemSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseSyntax.WithEvents(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseItemSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseSyntax.WithHandlesKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseSyntax.Events" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseSyntax.HandlesKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax.Identifier" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.IfDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfDirectiveTriviaSyntax.WithCondition(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfDirectiveTriviaSyntax.WithElseKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfDirectiveTriviaSyntax.WithIfOrElseIfKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfDirectiveTriviaSyntax.WithThenKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfDirectiveTriviaSyntax.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfDirectiveTriviaSyntax.ElseKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfDirectiveTriviaSyntax.IfOrElseIfKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfDirectiveTriviaSyntax.ThenKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.IfStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfStatementSyntax.WithCondition(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfStatementSyntax.WithIfKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfStatementSyntax.WithThenKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfStatementSyntax.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfStatementSyntax.IfKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.IfStatementSyntax.ThenKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax.AddInterfaceMembers(Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax.WithImplementsKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax.WithInterfaceMembers(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax.ImplementsKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax.InterfaceMembers" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax.AddTypes(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax.WithImplementsKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax.WithTypes(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax.ImplementsKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax.Types" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax.WithEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax.EqualsToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax.Identifier" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsClauseSyntax" />
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsStatementSyntax.AddImportsClauses(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsStatementSyntax.WithImportsClauses(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsStatementSyntax.WithImportsKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsStatementSyntax.ImportsClauses" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsStatementSyntax.ImportsKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.IncompleteMemberSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.IncompleteMemberSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IncompleteMemberSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IncompleteMemberSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IncompleteMemberSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IncompleteMemberSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IncompleteMemberSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IncompleteMemberSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IncompleteMemberSyntax.WithMissingIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.IncompleteMemberSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.IncompleteMemberSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.IncompleteMemberSyntax.MissingIdentifier" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.IncompleteMemberSyntax.Modifiers" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.InferredFieldInitializerSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.InferredFieldInitializerSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InferredFieldInitializerSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InferredFieldInitializerSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InferredFieldInitializerSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InferredFieldInitializerSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InferredFieldInitializerSyntax.WithKeyKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InferredFieldInitializerSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InferredFieldInitializerSyntax.KeyKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsOrImplementsStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsOrImplementsStatementSyntax" />
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax.AddTypes(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax.WithInheritsKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax.WithTypes(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax.InheritsKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax.Types" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.InstanceExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.InstanceExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InstanceExpressionSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InstanceExpressionSyntax.Keyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.AddImplements(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.AddInherits(Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.AddMembers(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.WithBegin(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.WithBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.WithEnd(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.WithEndBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.WithEndInterfaceStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.WithImplements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.WithInherits(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.WithInterfaceStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.WithMembers(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.Begin" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.BlockStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.End" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.EndBlockStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.EndInterfaceStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.Implements" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.Inherits" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.InterfaceStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceBlockSyntax.Members" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax.AddTypeParameterListParameters(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax.WithDeclarationKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax.WithInterfaceKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax.WithTypeParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax.DeclarationKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax.InterfaceKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterfaceStatementSyntax.TypeParameterList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax" />
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax.AddContents(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax.WithContents(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringContentSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax.WithDollarSignDoubleQuoteToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax.WithDoubleQuoteToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax.Contents" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax.DollarSignDoubleQuoteToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringExpressionSyntax.DoubleQuoteToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringTextSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringTextSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringTextSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringTextSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringTextSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringTextSyntax.WithTextToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolatedStringTextSyntax.TextToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax.WithCommaToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax.WithValue(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax.CommaToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax.Value" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationFormatClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationFormatClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationFormatClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationFormatClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationFormatClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationFormatClauseSyntax.WithColonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationFormatClauseSyntax.WithFormatStringToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationFormatClauseSyntax.ColonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationFormatClauseSyntax.FormatStringToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationFormatClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax.WithAlignmentClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationAlignmentClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax.WithFormatClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationFormatClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax.AlignmentClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax.CloseBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax.FormatClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InterpolationSyntax.OpenBraceToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.InvocationExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.InvocationExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InvocationExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InvocationExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InvocationExpressionSyntax.AddArgumentListArguments(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InvocationExpressionSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InvocationExpressionSyntax.WithArgumentList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.InvocationExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InvocationExpressionSyntax.ArgumentList" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.InvocationExpressionSyntax.Expression" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax.AddAdditionalJoins(Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax.AddJoinConditions(Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax.AddJoinedVariables(Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax.WithAdditionalJoins(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax.WithJoinConditions(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax.WithJoinedVariables(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax.WithJoinKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax.WithOnKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax.AdditionalJoins" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax.JoinConditions" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax.JoinedVariables" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax.JoinKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax.OnKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax.WithEqualsKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax.WithLeft(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax.WithRight(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax.EqualsKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax.Left" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax.Right" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.KeywordEventContainerSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.KeywordEventContainerSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.KeywordEventContainerSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.KeywordEventContainerSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.KeywordEventContainerSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.KeywordEventContainerSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.KeywordEventContainerSyntax.Keyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelStatementSyntax.WithColonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelStatementSyntax.WithLabelToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelStatementSyntax.ColonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelStatementSyntax.LabelToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax.WithLabelToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax.LabelToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaExpressionSyntax.WithSubOrFunctionHeader(Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaExpressionSyntax.Begin" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaExpressionSyntax.SubOrFunctionHeader" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax.WithAsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax.WithDeclarationKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax.WithParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax.WithSubOrFunctionKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax.AsClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax.DeclarationKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax.ParameterList" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax.SubOrFunctionKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax.AddVariables(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax.WithLetKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax.WithVariables(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax.LetKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.LetClauseSyntax.Variables" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralBase" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralBase">
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralBase.Binary" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralBase.Decimal" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralBase.Hexadecimal" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralBase.Octal" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax.WithToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.LiteralExpressionSyntax.Token" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.LocalDeclarationStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.LocalDeclarationStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LocalDeclarationStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LocalDeclarationStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LocalDeclarationStatementSyntax.AddDeclarators(Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LocalDeclarationStatementSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LocalDeclarationStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LocalDeclarationStatementSyntax.WithDeclarators(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LocalDeclarationStatementSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.LocalDeclarationStatementSyntax.Declarators" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.LocalDeclarationStatementSyntax.Modifiers" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax.WithLoopKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax.WithWhileOrUntilClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax.LoopKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.LoopStatementSyntax.WhileOrUntilClause" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.MeExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.MeExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MeExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MeExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MeExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MeExpressionSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MeExpressionSyntax.Keyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax.WithName(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax.WithOperatorToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MemberAccessExpressionSyntax.OperatorToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.WithDeclarationKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.WithParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.DeclarationKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax.ParameterList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax.WithBegin(Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax.WithBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax.WithEnd(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax.WithEndBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax.Begin" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax.BlockStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax.End" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax.EndBlockStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockBaseSyntax.Statements" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax.WithBegin(Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax.WithBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax.WithEnd(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax.WithEndBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax.WithEndSubOrFunctionStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax.WithSubOrFunctionStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax.Begin" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax.BlockStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax.End" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax.EndBlockStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax.EndSubOrFunctionStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax.Statements" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBlockSyntax.SubOrFunctionStatement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.AddHandlesClauseEvents(Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseItemSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.AddImplementsClauseInterfaceMembers(Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.AddTypeParameterListParameters(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.WithAsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.WithDeclarationKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.WithHandlesClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.HandlesClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.WithImplementsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.WithParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.WithSubOrFunctionKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.WithTypeParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.AsClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.DeclarationKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.HandlesClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.ImplementsClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.ParameterList" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.SubOrFunctionKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodStatementSyntax.TypeParameterList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.MidExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.MidExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MidExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MidExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MidExpressionSyntax.AddArgumentListArguments(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MidExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MidExpressionSyntax.WithArgumentList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MidExpressionSyntax.WithMid(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MidExpressionSyntax.ArgumentList" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MidExpressionSyntax.Mid" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax.AddArrayBoundsArguments(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax.AddArrayRankSpecifiers(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax.WithArrayBounds(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax.WithArrayRankSpecifiers(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ArrayRankSpecifierSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax.WithNullable(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax.ArrayBounds" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax.ArrayRankSpecifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax.Nullable" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.AddImplements(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.AddInherits(Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.AddMembers(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.WithBegin(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.WithBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.WithEnd(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.WithEndBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.WithEndModuleStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.WithImplements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.WithInherits(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.WithMembers(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.WithModuleStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.Begin" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.BlockStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.End" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.EndBlockStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.EndModuleStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.Implements" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.Inherits" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.Members" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleBlockSyntax.ModuleStatement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax.AddTypeParameterListParameters(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax.WithDeclarationKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax.WithModuleKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax.WithTypeParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax.DeclarationKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax.ModuleKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ModuleStatementSyntax.TypeParameterList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineIfBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineIfBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineIfBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineIfBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineIfBlockSyntax.AddElseBlockStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineIfBlockSyntax.AddElseIfBlocks(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfBlockSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineIfBlockSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineIfBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.IfStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfBlockSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseBlockSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineIfBlockSyntax.WithElseBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineIfBlockSyntax.WithElseIfBlocks(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ElseIfBlockSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineIfBlockSyntax.WithEndIfStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineIfBlockSyntax.WithIfStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.IfStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineIfBlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineIfBlockSyntax.ElseBlock" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineIfBlockSyntax.ElseIfBlocks" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineIfBlockSyntax.EndIfStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineIfBlockSyntax.IfStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineIfBlockSyntax.Statements" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineLambdaExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineLambdaExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineLambdaExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineLambdaExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineLambdaExpressionSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineLambdaExpressionSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineLambdaExpressionSyntax.WithBegin(Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineLambdaExpressionSyntax.WithEnd(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineLambdaExpressionSyntax.WithEndSubOrFunctionStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineLambdaExpressionSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineLambdaExpressionSyntax.WithSubOrFunctionHeader(Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineLambdaExpressionSyntax.Begin" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineLambdaExpressionSyntax.End" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineLambdaExpressionSyntax.EndSubOrFunctionStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineLambdaExpressionSyntax.Statements" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MultiLineLambdaExpressionSyntax.SubOrFunctionHeader" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.MyBaseExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.MyBaseExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MyBaseExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MyBaseExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MyBaseExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MyBaseExpressionSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MyBaseExpressionSyntax.Keyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.MyClassExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.MyClassExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MyClassExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MyClassExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MyClassExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.MyClassExpressionSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.MyClassExpressionSyntax.Keyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.NameColonEqualsSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameColonEqualsSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameColonEqualsSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameColonEqualsSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameColonEqualsSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameColonEqualsSyntax.WithColonEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameColonEqualsSyntax.WithName(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameColonEqualsSyntax.ColonEqualsToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameColonEqualsSyntax.Name" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedFieldInitializerSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedFieldInitializerSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedFieldInitializerSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedFieldInitializerSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedFieldInitializerSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedFieldInitializerSyntax.WithDotToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedFieldInitializerSyntax.WithEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedFieldInitializerSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedFieldInitializerSyntax.WithKeyKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedFieldInitializerSyntax.WithName(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedFieldInitializerSyntax.DotToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedFieldInitializerSyntax.EqualsToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedFieldInitializerSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedFieldInitializerSyntax.KeyKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedFieldInitializerSyntax.Name" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedTupleElementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedTupleElementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedTupleElementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedTupleElementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedTupleElementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedTupleElementSyntax.WithAsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedTupleElementSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedTupleElementSyntax.AsClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamedTupleElementSyntax.Identifier" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.NameOfExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameOfExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameOfExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameOfExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameOfExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameOfExpressionSyntax.WithArgument(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameOfExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameOfExpressionSyntax.WithNameOfKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameOfExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameOfExpressionSyntax.Argument" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameOfExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameOfExpressionSyntax.NameOfKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameOfExpressionSyntax.OpenParenToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax.AddMembers(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax.WithEndNamespaceStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax.WithMembers(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax.WithNamespaceStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax.EndNamespaceStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax.Members" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceBlockSyntax.NamespaceStatement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax.WithName(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax.WithNamespaceKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NamespaceStatementSyntax.NamespaceKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax">
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax.Arity" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax.WithNewKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax.NewKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.NextStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.NextStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NextStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NextStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NextStatementSyntax.AddControlVariables(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NextStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NextStatementSyntax.WithControlVariables(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NextStatementSyntax.WithNextKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NextStatementSyntax.ControlVariables" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NextStatementSyntax.NextKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.NullableTypeSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.NullableTypeSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NullableTypeSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NullableTypeSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NullableTypeSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NullableTypeSyntax.WithElementType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.NullableTypeSyntax.WithQuestionMarkToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NullableTypeSyntax.ElementType" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.NullableTypeSyntax.QuestionMarkToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCollectionInitializerSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCollectionInitializerSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCollectionInitializerSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCollectionInitializerSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCollectionInitializerSyntax.AddInitializerInitializers(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCollectionInitializerSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCollectionInitializerSyntax.WithFromKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCollectionInitializerSyntax.WithInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionInitializerSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCollectionInitializerSyntax.FromKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCollectionInitializerSyntax.Initializer" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationExpressionSyntax.AddArgumentListArguments(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationExpressionSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationExpressionSyntax.WithArgumentList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationExpressionSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationExpressionSyntax.WithInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationInitializerSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationExpressionSyntax.WithNewKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationExpressionSyntax.WithType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationExpressionSyntax.ArgumentList" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationExpressionSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationExpressionSyntax.Initializer" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationExpressionSyntax.NewKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationExpressionSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationInitializerSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectCreationInitializerSyntax" />
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax.AddInitializers(Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldInitializerSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldInitializerSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax.WithInitializers(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.FieldInitializerSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax.WithWithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax.CloseBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax.Initializers" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax.OpenBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ObjectMemberInitializerSyntax.WithKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.OmittedArgumentSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.OmittedArgumentSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OmittedArgumentSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OmittedArgumentSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OmittedArgumentSyntax.GetExpression" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OmittedArgumentSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OmittedArgumentSyntax.WithEmpty(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OmittedArgumentSyntax.Empty" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OmittedArgumentSyntax.IsNamed" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorGoToStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorGoToStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorGoToStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorGoToStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorGoToStatementSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorGoToStatementSyntax.WithErrorKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorGoToStatementSyntax.WithGoToKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorGoToStatementSyntax.WithLabel(Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorGoToStatementSyntax.WithMinus(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorGoToStatementSyntax.WithOnKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorGoToStatementSyntax.ErrorKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorGoToStatementSyntax.GoToKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorGoToStatementSyntax.Label" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorGoToStatementSyntax.Minus" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorGoToStatementSyntax.OnKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorResumeNextStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorResumeNextStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorResumeNextStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorResumeNextStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorResumeNextStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorResumeNextStatementSyntax.WithErrorKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorResumeNextStatementSyntax.WithNextKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorResumeNextStatementSyntax.WithOnKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorResumeNextStatementSyntax.WithResumeKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorResumeNextStatementSyntax.ErrorKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorResumeNextStatementSyntax.NextKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorResumeNextStatementSyntax.OnKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OnErrorResumeNextStatementSyntax.ResumeKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax.WithBegin(Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax.WithBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.MethodBaseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax.WithEnd(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax.WithEndBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax.WithEndOperatorStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax.WithOperatorStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax.Begin" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax.BlockStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax.End" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax.EndBlockStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax.EndOperatorStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax.OperatorStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorBlockSyntax.Statements" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.WithAsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.WithDeclarationKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.WithOperatorKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.WithOperatorToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.WithParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.AsClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.DeclarationKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.OperatorKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.OperatorToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OperatorStatementSyntax.ParameterList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.OptionStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.OptionStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OptionStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OptionStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OptionStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OptionStatementSyntax.WithNameKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OptionStatementSyntax.WithOptionKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OptionStatementSyntax.WithValueKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OptionStatementSyntax.NameKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OptionStatementSyntax.OptionKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OptionStatementSyntax.ValueKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderByClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderByClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderByClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderByClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderByClauseSyntax.AddOrderings(Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderingSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderByClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderingSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderByClauseSyntax.WithByKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderByClauseSyntax.WithOrderings(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderingSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderByClauseSyntax.WithOrderKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderByClauseSyntax.ByKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderByClauseSyntax.Orderings" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderByClauseSyntax.OrderKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderingSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderingSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderingSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderingSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderingSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderingSyntax.WithAscendingOrDescendingKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderingSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderingSyntax.AscendingOrDescendingKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.OrderingSyntax.Expression" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax.AddParameters(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax.WithParameters(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax.Parameters" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax.WithAsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax.WithDefault(Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax.WithIdentifier(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax.AsClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax.Default" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax.Modifiers" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ParenthesizedExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParenthesizedExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParenthesizedExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParenthesizedExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParenthesizedExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParenthesizedExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParenthesizedExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParenthesizedExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParenthesizedExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParenthesizedExpressionSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ParenthesizedExpressionSyntax.OpenParenToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionClauseSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionClauseSyntax.WithCount(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionClauseSyntax.WithSkipOrTakeKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionClauseSyntax.Count" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionClauseSyntax.SkipOrTakeKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionWhileClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionWhileClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionWhileClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionWhileClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionWhileClauseSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionWhileClauseSyntax.WithCondition(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionWhileClauseSyntax.WithSkipOrTakeKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionWhileClauseSyntax.WithWhileKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionWhileClauseSyntax.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionWhileClauseSyntax.SkipOrTakeKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PartitionWhileClauseSyntax.WhileKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedCastExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedCastExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedCastExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedCastExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedCastExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedCastExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedCastExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedCastExpressionSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedCastExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedCastExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedCastExpressionSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedCastExpressionSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedCastExpressionSyntax.OpenParenToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedTypeSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedTypeSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedTypeSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedTypeSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedTypeSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedTypeSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PredefinedTypeSyntax.Keyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.PrintStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.PrintStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PrintStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PrintStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PrintStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PrintStatementSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PrintStatementSyntax.WithQuestionToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PrintStatementSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PrintStatementSyntax.QuestionToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax.AddAccessors(Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax.WithAccessors(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AccessorBlockSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax.WithEndPropertyStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax.WithPropertyStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax.Accessors" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax.EndPropertyStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyBlockSyntax.PropertyStatement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.AddImplementsClauseInterfaceMembers(Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.WithAsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.WithDeclarationKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.WithImplementsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.WithInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.WithParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.WithPropertyKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.AsClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.DeclarationKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.ImplementsClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.Initializer" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.ParameterList" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.PropertyStatementSyntax.PropertyKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedCrefOperatorReferenceSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedCrefOperatorReferenceSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedCrefOperatorReferenceSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedCrefOperatorReferenceSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedCrefOperatorReferenceSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefOperatorReferenceSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedCrefOperatorReferenceSyntax.WithDotToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedCrefOperatorReferenceSyntax.WithLeft(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedCrefOperatorReferenceSyntax.WithRight(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefOperatorReferenceSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedCrefOperatorReferenceSyntax.DotToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedCrefOperatorReferenceSyntax.Left" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedCrefOperatorReferenceSyntax.Right" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax.WithDotToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax.WithLeft(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax.WithRight(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax.DotToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax.Left" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.QualifiedNameSyntax.Right" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryClauseSyntax" />
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryExpressionSyntax.AddClauses(Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryExpressionSyntax.WithClauses(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryClauseSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.QueryExpressionSyntax.Clauses" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.RaiseEventStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.RaiseEventStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RaiseEventStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RaiseEventStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RaiseEventStatementSyntax.AddArgumentListArguments(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RaiseEventStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RaiseEventStatementSyntax.WithArgumentList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RaiseEventStatementSyntax.WithName(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RaiseEventStatementSyntax.WithRaiseEventKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.RaiseEventStatementSyntax.ArgumentList" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.RaiseEventStatementSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.RaiseEventStatementSyntax.RaiseEventKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax.GetExpression" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax.WithLowerBound(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax.WithToKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax.WithUpperBound(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax.IsNamed" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax.LowerBound" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax.ToKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeArgumentSyntax.UpperBound" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeCaseClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeCaseClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeCaseClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeCaseClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeCaseClauseSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeCaseClauseSyntax.WithLowerBound(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeCaseClauseSyntax.WithToKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeCaseClauseSyntax.WithUpperBound(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeCaseClauseSyntax.LowerBound" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeCaseClauseSyntax.ToKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.RangeCaseClauseSyntax.UpperBound" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax.AddArrayBoundsArguments(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax.WithArrayBounds(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax.ArrayBounds" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax.Expression" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ReDimStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReDimStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReDimStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReDimStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReDimStatementSyntax.AddClauses(Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReDimStatementSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReDimStatementSyntax.WithClauses(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.RedimClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReDimStatementSyntax.WithPreserveKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReDimStatementSyntax.WithReDimKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReDimStatementSyntax.Clauses" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReDimStatementSyntax.PreserveKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReDimStatementSyntax.ReDimKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ReferenceDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReferenceDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReferenceDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReferenceDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReferenceDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReferenceDirectiveTriviaSyntax.WithFile(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReferenceDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReferenceDirectiveTriviaSyntax.WithReferenceKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReferenceDirectiveTriviaSyntax.File" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReferenceDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReferenceDirectiveTriviaSyntax.ReferenceKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.RegionDirectiveTriviaSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.RegionDirectiveTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RegionDirectiveTriviaSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RegionDirectiveTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RegionDirectiveTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RegionDirectiveTriviaSyntax.WithHashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RegionDirectiveTriviaSyntax.WithName(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RegionDirectiveTriviaSyntax.WithRegionKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.RegionDirectiveTriviaSyntax.HashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.RegionDirectiveTriviaSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.RegionDirectiveTriviaSyntax.RegionKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.RelationalCaseClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.RelationalCaseClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RelationalCaseClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RelationalCaseClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RelationalCaseClauseSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RelationalCaseClauseSyntax.WithIsKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RelationalCaseClauseSyntax.WithOperatorToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.RelationalCaseClauseSyntax.WithValue(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.RelationalCaseClauseSyntax.IsKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.RelationalCaseClauseSyntax.OperatorToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.RelationalCaseClauseSyntax.Value" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ResumeStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ResumeStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ResumeStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ResumeStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ResumeStatementSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ResumeStatementSyntax.WithLabel(Microsoft.CodeAnalysis.VisualBasic.Syntax.LabelSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ResumeStatementSyntax.WithResumeKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ResumeStatementSyntax.Label" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ResumeStatementSyntax.ResumeKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ReturnStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReturnStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReturnStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReturnStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReturnStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReturnStatementSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReturnStatementSyntax.WithReturnKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReturnStatementSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ReturnStatementSyntax.ReturnKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectBlockSyntax.AddCaseBlocks(Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectBlockSyntax.WithCaseBlocks(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CaseBlockSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectBlockSyntax.WithEndSelectStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectBlockSyntax.WithSelectStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectStatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectBlockSyntax.CaseBlocks" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectBlockSyntax.EndSelectStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectBlockSyntax.SelectStatement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectClauseSyntax.AddVariables(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectClauseSyntax.WithSelectKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectClauseSyntax.WithVariables(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionRangeVariableSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectClauseSyntax.SelectKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectClauseSyntax.Variables" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectStatementSyntax.WithCaseKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectStatementSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectStatementSyntax.WithSelectKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectStatementSyntax.CaseKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectStatementSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SelectStatementSyntax.SelectKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleArgumentSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleArgumentSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleArgumentSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleArgumentSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleArgumentSyntax.GetExpression" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleArgumentSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameColonEqualsSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleArgumentSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleArgumentSyntax.WithNameColonEquals(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameColonEqualsSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleArgumentSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleArgumentSyntax.IsNamed" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleArgumentSyntax.NameColonEquals" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax.WithAsKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax.WithType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax.AsKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleCaseClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleCaseClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleCaseClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleCaseClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleCaseClauseSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleCaseClauseSyntax.WithValue(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleCaseClauseSyntax.Value" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax.WithAlias(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax.WithName(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax.Alias" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax.Name" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleJoinClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleJoinClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleJoinClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleJoinClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleJoinClauseSyntax.AddAdditionalJoins(Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleJoinClauseSyntax.AddJoinConditions(Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleJoinClauseSyntax.AddJoinedVariables(Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleJoinClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax},Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleJoinClauseSyntax.WithAdditionalJoins(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinClauseSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleJoinClauseSyntax.WithJoinConditions(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.JoinConditionSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleJoinClauseSyntax.WithJoinedVariables(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CollectionRangeVariableSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleJoinClauseSyntax.WithJoinKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleJoinClauseSyntax.WithOnKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleJoinClauseSyntax.AdditionalJoins" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleJoinClauseSyntax.JoinConditions" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleJoinClauseSyntax.JoinedVariables" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleJoinClauseSyntax.JoinKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleJoinClauseSyntax.OnKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleNameSyntax.Identifier" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineElseClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineElseClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineElseClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineElseClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineElseClauseSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineElseClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineElseClauseSyntax.WithElseKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineElseClauseSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineElseClauseSyntax.ElseKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineElseClauseSyntax.Statements" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineIfStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineIfStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineIfStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineIfStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineIfStatementSyntax.AddElseClauseStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineIfStatementSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineIfStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineElseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineIfStatementSyntax.WithCondition(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineIfStatementSyntax.WithElseClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineElseClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineIfStatementSyntax.WithIfKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineIfStatementSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineIfStatementSyntax.WithThenKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineIfStatementSyntax.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineIfStatementSyntax.ElseClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineIfStatementSyntax.IfKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineIfStatementSyntax.Statements" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineIfStatementSyntax.ThenKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineLambdaExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineLambdaExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineLambdaExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineLambdaExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineLambdaExpressionSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax,Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineLambdaExpressionSyntax.WithBegin(Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineLambdaExpressionSyntax.WithBody(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineLambdaExpressionSyntax.WithSubOrFunctionHeader(Microsoft.CodeAnalysis.VisualBasic.Syntax.LambdaHeaderSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineLambdaExpressionSyntax.Begin" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineLambdaExpressionSyntax.Body" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SingleLineLambdaExpressionSyntax.SubOrFunctionHeader" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.SkippedTokensTriviaSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.SkippedTokensTriviaSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SkippedTokensTriviaSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SkippedTokensTriviaSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SkippedTokensTriviaSyntax.AddTokens(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SkippedTokensTriviaSyntax.Update(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SkippedTokensTriviaSyntax.WithTokens(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SkippedTokensTriviaSyntax.ISkippedTokensTriviaSyntax_Tokens" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SkippedTokensTriviaSyntax.Tokens" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.SpecialConstraintSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.SpecialConstraintSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SpecialConstraintSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SpecialConstraintSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SpecialConstraintSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SpecialConstraintSyntax.WithConstraintKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SpecialConstraintSyntax.ConstraintKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax" />
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.StopOrEndStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.StopOrEndStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StopOrEndStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StopOrEndStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StopOrEndStatementSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StopOrEndStatementSyntax.WithStopOrEndKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.StopOrEndStatementSyntax.StopOrEndKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.AddImplements(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.AddInherits(Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.AddMembers(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.WithBegin(Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.WithBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.WithEnd(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.WithEndBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.WithEndStructureStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.WithImplements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.WithInherits(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.WithMembers(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.WithStructureStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.Begin" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.BlockStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.End" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.EndBlockStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.EndStructureStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.Implements" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.Inherits" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.Members" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureBlockSyntax.StructureStatement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.StructuredTriviaSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructuredTriviaSyntax">
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructuredTriviaSyntax.ParentTrivia" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax.AddTypeParameterListParameters(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax.WithDeclarationKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax.WithStructureKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax.WithTypeParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax.DeclarationKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax.StructureKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.StructureStatementSyntax.TypeParameterList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax.AddParameterListParameters(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax},Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax.WithDeclarationKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax.WithNewKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax.WithParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ParameterListSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax.WithSubKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax.DeclarationKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax.NewKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax.ParameterList" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SubNewStatementSyntax.SubKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockBlockSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockBlockSyntax.WithEndSyncLockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockBlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockBlockSyntax.WithSyncLockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockStatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockBlockSyntax.EndSyncLockStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockBlockSyntax.Statements" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockBlockSyntax.SyncLockStatement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockStatementSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockStatementSyntax.WithSyncLockKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockStatementSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SyncLockStatementSyntax.SyncLockKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.SyntaxNodeRemover" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.SyntaxNodeRemover">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SyntaxNodeRemover.#ctor" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax.WithCondition(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax.WithFirstCommaToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax.WithIfKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax.WithSecondCommaToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax.WithWhenFalse(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax.WithWhenTrue(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax.FirstCommaToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax.IfKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax.SecondCommaToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax.WhenFalse" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TernaryConditionalExpressionSyntax.WhenTrue" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.ThrowStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.ThrowStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ThrowStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ThrowStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ThrowStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ThrowStatementSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.ThrowStatementSyntax.WithThrowKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ThrowStatementSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.ThrowStatementSyntax.ThrowKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.TryBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryBlockSyntax.AddCatchBlocks(Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchBlockSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryBlockSyntax.AddFinallyBlockStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryBlockSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.TryStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchBlockSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyBlockSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryBlockSyntax.WithCatchBlocks(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.CatchBlockSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryBlockSyntax.WithEndTryStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryBlockSyntax.WithFinallyBlock(Microsoft.CodeAnalysis.VisualBasic.Syntax.FinallyBlockSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryBlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryBlockSyntax.WithTryStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.TryStatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryBlockSyntax.CatchBlocks" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryBlockSyntax.EndTryStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryBlockSyntax.FinallyBlock" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryBlockSyntax.Statements" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryBlockSyntax.TryStatement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.WithCommaToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.WithType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.CommaToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryCastExpressionSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.TryStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryStatementSyntax.WithTryKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TryStatementSyntax.TryKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleElementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleElementSyntax" />
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleExpressionSyntax.AddArguments(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleArgumentSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleArgumentSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleExpressionSyntax.WithArguments(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleArgumentSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleExpressionSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleExpressionSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleExpressionSyntax.Arguments" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleExpressionSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleExpressionSyntax.OpenParenToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleTypeSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleTypeSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleTypeSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleTypeSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleTypeSyntax.AddElements(Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleElementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleTypeSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleElementSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleTypeSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleTypeSyntax.WithElements(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleElementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleTypeSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleTypeSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleTypeSyntax.Elements" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TupleTypeSyntax.OpenParenToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeArgumentListSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeArgumentListSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeArgumentListSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeArgumentListSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeArgumentListSyntax.AddArguments(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeArgumentListSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeArgumentListSyntax.WithArguments(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeArgumentListSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeArgumentListSyntax.WithOfKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeArgumentListSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeArgumentListSyntax.Arguments" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeArgumentListSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeArgumentListSyntax.OfKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeArgumentListSyntax.OpenParenToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.AddImplements(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.AddInherits(Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.AddMembers(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.WithBegin(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.WithBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.WithEnd(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.WithEndBlockStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.WithImplements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ImplementsStatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.WithInherits(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.InheritsStatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.WithMembers(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.Begin" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.BlockStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.End" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.EndBlockStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.Implements" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.Inherits" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeBlockSyntax.Members" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter">
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter.Decimal" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter.DecimalLiteral" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter.Double" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter.DoubleLiteral" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter.Integer" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter.IntegerLiteral" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter.Long" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter.LongLiteral" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter.None" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter.ShortLiteral" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter.Single" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter.SingleLiteral" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter.String" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter.UIntegerLiteral" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter.ULongLiteral" />
      <Member Id="F:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeCharacter.UShortLiteral" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeConstraintSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeConstraintSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeConstraintSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeConstraintSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeConstraintSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeConstraintSyntax.WithType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeConstraintSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypedTupleElementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypedTupleElementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypedTupleElementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypedTupleElementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypedTupleElementSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypedTupleElementSyntax.WithType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypedTupleElementSyntax.Type" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeOfExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeOfExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeOfExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeOfExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeOfExpressionSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeOfExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeOfExpressionSyntax.WithOperatorToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeOfExpressionSyntax.WithType(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeOfExpressionSyntax.WithTypeOfKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeOfExpressionSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeOfExpressionSyntax.OperatorToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeOfExpressionSyntax.Type" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeOfExpressionSyntax.TypeOfKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterConstraintClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterConstraintClauseSyntax" />
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax.AddParameters(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax.WithCloseParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax.WithOfKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax.WithOpenParenToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax.WithParameters(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax.CloseParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax.OfKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax.OpenParenToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax.Parameters" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterMultipleConstraintClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterMultipleConstraintClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterMultipleConstraintClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterMultipleConstraintClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterMultipleConstraintClauseSyntax.AddConstraints(Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstraintSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterMultipleConstraintClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstraintSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterMultipleConstraintClauseSyntax.WithAsKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterMultipleConstraintClauseSyntax.WithCloseBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterMultipleConstraintClauseSyntax.WithConstraints(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstraintSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterMultipleConstraintClauseSyntax.WithOpenBraceToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterMultipleConstraintClauseSyntax.AsKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterMultipleConstraintClauseSyntax.CloseBraceToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterMultipleConstraintClauseSyntax.Constraints" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterMultipleConstraintClauseSyntax.OpenBraceToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSingleConstraintClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSingleConstraintClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSingleConstraintClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSingleConstraintClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSingleConstraintClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstraintSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSingleConstraintClauseSyntax.WithAsKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSingleConstraintClauseSyntax.WithConstraint(Microsoft.CodeAnalysis.VisualBasic.Syntax.ConstraintSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSingleConstraintClauseSyntax.AsKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSingleConstraintClauseSyntax.Constraint" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterConstraintClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax.WithTypeParameterConstraintClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterConstraintClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax.WithVarianceKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax.TypeParameterConstraintClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax.VarianceKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.AddAttributeLists(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.AddModifiers(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.AddTypeParameterListParameters(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.WithAttributeLists(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeListSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.WithDeclarationKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.WithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.WithModifiers(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.WithTypeParameterList(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeParameterListSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.Arity" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.AttributeLists" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.DeclarationKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.Identifier" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.Keyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.Modifiers" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeStatementSyntax.TypeParameterList" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax" />
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.UnaryExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.UnaryExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.UnaryExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.UnaryExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.UnaryExpressionSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.UnaryExpressionSyntax.WithOperand(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.UnaryExpressionSyntax.WithOperatorToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.UnaryExpressionSyntax.Operand" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.UnaryExpressionSyntax.OperatorToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingBlockSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingBlockSyntax.WithEndUsingStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingBlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingBlockSyntax.WithUsingStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingStatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingBlockSyntax.EndUsingStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingBlockSyntax.Statements" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingBlockSyntax.UsingStatement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingStatementSyntax.AddVariables(Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingStatementSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingStatementSyntax.WithUsingKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingStatementSyntax.WithVariables(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingStatementSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingStatementSyntax.UsingKeyword" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.UsingStatementSyntax.Variables" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax.AddNames(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax.Update(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax.WithAsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax.WithInitializer(Microsoft.CodeAnalysis.VisualBasic.Syntax.EqualsValueSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax.WithNames(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax})" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax.AsClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax.Initializer" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableDeclaratorSyntax.Names" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax.WithAsClause(Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleAsClauseSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax.WithEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax.WithIdentifier(Microsoft.CodeAnalysis.VisualBasic.Syntax.ModifiedIdentifierSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax.AsClause" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax.EqualsToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.VariableNameEqualsSyntax.Identifier" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.WhereClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhereClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhereClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhereClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhereClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhereClauseSyntax.WithCondition(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhereClauseSyntax.WithWhereKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhereClauseSyntax.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhereClauseSyntax.WhereKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileBlockSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileBlockSyntax.WithEndWhileStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileBlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileBlockSyntax.WithWhileStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileStatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileBlockSyntax.EndWhileStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileBlockSyntax.Statements" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileBlockSyntax.WhileStatement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax.WithCondition(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax.WithWhileOrUntilKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileOrUntilClauseSyntax.WhileOrUntilKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileStatementSyntax.WithCondition(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileStatementSyntax.WithWhileKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileStatementSyntax.Condition" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.WhileStatementSyntax.WhileKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.WithBlockSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithBlockSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithBlockSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithBlockSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithBlockSyntax.AddStatements(Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithBlockSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.WithStatementSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithBlockSyntax.WithEndWithStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.EndBlockStatementSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithBlockSyntax.WithStatements(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.StatementSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithBlockSyntax.WithWithStatement(Microsoft.CodeAnalysis.VisualBasic.Syntax.WithStatementSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithBlockSyntax.EndWithStatement" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithBlockSyntax.Statements" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithBlockSyntax.WithStatement" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsEventContainerSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsEventContainerSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsEventContainerSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsEventContainerSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsEventContainerSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsEventContainerSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsEventContainerSyntax.Identifier" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsPropertyEventContainerSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsPropertyEventContainerSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsPropertyEventContainerSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsPropertyEventContainerSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsPropertyEventContainerSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsEventContainerSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsPropertyEventContainerSyntax.WithDotToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsPropertyEventContainerSyntax.WithProperty(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsPropertyEventContainerSyntax.WithWithEventsContainer(Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsEventContainerSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsPropertyEventContainerSyntax.DotToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsPropertyEventContainerSyntax.Property" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithEventsPropertyEventContainerSyntax.WithEventsContainer" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.WithStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithStatementSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithStatementSyntax.WithWithKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithStatementSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.WithStatementSyntax.WithKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlAttributeSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlAttributeSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlAttributeSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlAttributeSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlAttributeSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlAttributeSyntax.WithEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlAttributeSyntax.WithName(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlAttributeSyntax.WithValue(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlAttributeSyntax.EqualsToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlAttributeSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlAttributeSyntax.Value" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlBracketedNameSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlBracketedNameSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlBracketedNameSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlBracketedNameSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlBracketedNameSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlBracketedNameSyntax.WithGreaterThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlBracketedNameSyntax.WithLessThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlBracketedNameSyntax.WithName(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlBracketedNameSyntax.GreaterThanToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlBracketedNameSyntax.LessThanToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlBracketedNameSyntax.Name" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCDataSectionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCDataSectionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCDataSectionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCDataSectionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCDataSectionSyntax.AddTextTokens(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCDataSectionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCDataSectionSyntax.WithBeginCDataToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCDataSectionSyntax.WithEndCDataToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCDataSectionSyntax.WithTextTokens(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCDataSectionSyntax.BeginCDataToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCDataSectionSyntax.EndCDataToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCDataSectionSyntax.TextTokens" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCommentSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCommentSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCommentSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCommentSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCommentSyntax.AddTextTokens(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCommentSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCommentSyntax.WithLessThanExclamationMinusMinusToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCommentSyntax.WithMinusMinusGreaterThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCommentSyntax.WithTextTokens(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCommentSyntax.LessThanExclamationMinusMinusToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCommentSyntax.MinusMinusGreaterThanToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCommentSyntax.TextTokens" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.WithEndQuoteToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.WithEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.WithName(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.WithReference(Microsoft.CodeAnalysis.VisualBasic.Syntax.CrefReferenceSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.WithStartQuoteToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.EndQuoteToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.EqualsToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.Reference" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlCrefAttributeSyntax.StartQuoteToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlStringSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax.WithEquals(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax.WithName(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax.WithValue(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlStringSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax.Equals" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax.Value" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.WithEncoding(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.WithLessThanQuestionToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.WithQuestionGreaterThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.WithStandalone(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.WithVersion(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationOptionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.WithXmlKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.Encoding" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.LessThanQuestionToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.QuestionGreaterThanToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.Standalone" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.Version" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax.XmlKeyword" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDocumentSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDocumentSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDocumentSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDocumentSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDocumentSyntax.AddFollowingMisc(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDocumentSyntax.AddPrecedingMisc(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDocumentSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDocumentSyntax.WithDeclaration(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDeclarationSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDocumentSyntax.WithFollowingMisc(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDocumentSyntax.WithPrecedingMisc(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDocumentSyntax.WithRoot(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDocumentSyntax.Declaration" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDocumentSyntax.FollowingMisc" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDocumentSyntax.PrecedingMisc" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlDocumentSyntax.Root" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementEndTagSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementEndTagSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementEndTagSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementEndTagSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementEndTagSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementEndTagSyntax.WithGreaterThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementEndTagSyntax.WithLessThanSlashToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementEndTagSyntax.WithName(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementEndTagSyntax.GreaterThanToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementEndTagSyntax.LessThanSlashToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementEndTagSyntax.Name" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementStartTagSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementStartTagSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementStartTagSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementStartTagSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementStartTagSyntax.AddAttributes(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementStartTagSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementStartTagSyntax.WithAttributes(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementStartTagSyntax.WithGreaterThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementStartTagSyntax.WithLessThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementStartTagSyntax.WithName(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementStartTagSyntax.Attributes" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementStartTagSyntax.GreaterThanToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementStartTagSyntax.LessThanToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementStartTagSyntax.Name" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax.AddContent(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementStartTagSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax},Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementEndTagSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax.WithContent(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax.WithEndTag(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementEndTagSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax.WithStartTag(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementStartTagSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax.Content" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax.EndTag" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlElementSyntax.StartTag" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmbeddedExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmbeddedExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmbeddedExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmbeddedExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmbeddedExpressionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmbeddedExpressionSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmbeddedExpressionSyntax.WithLessThanPercentEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmbeddedExpressionSyntax.WithPercentGreaterThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmbeddedExpressionSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmbeddedExpressionSyntax.LessThanPercentEqualsToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmbeddedExpressionSyntax.PercentGreaterThanToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax.AddAttributes(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax,Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax},Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax.WithAttributes(Microsoft.CodeAnalysis.SyntaxList{Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax.WithLessThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax.WithName(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax.WithSlashGreaterThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax.Attributes" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax.LessThanToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlEmptyElementSyntax.SlashGreaterThanToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlMemberAccessExpressionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlMemberAccessExpressionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlMemberAccessExpressionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlMemberAccessExpressionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlMemberAccessExpressionSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlMemberAccessExpressionSyntax.WithBase(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlMemberAccessExpressionSyntax.WithName(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlMemberAccessExpressionSyntax.WithToken1(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlMemberAccessExpressionSyntax.WithToken2(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlMemberAccessExpressionSyntax.WithToken3(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlMemberAccessExpressionSyntax.Base" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlMemberAccessExpressionSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlMemberAccessExpressionSyntax.Token1" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlMemberAccessExpressionSyntax.Token2" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlMemberAccessExpressionSyntax.Token3" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameAttributeSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameAttributeSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameAttributeSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameAttributeSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameAttributeSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameAttributeSyntax.WithEndQuoteToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameAttributeSyntax.WithEqualsToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameAttributeSyntax.WithName(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameAttributeSyntax.WithReference(Microsoft.CodeAnalysis.VisualBasic.Syntax.IdentifierNameSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameAttributeSyntax.WithStartQuoteToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameAttributeSyntax.EndQuoteToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameAttributeSyntax.EqualsToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameAttributeSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameAttributeSyntax.Reference" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameAttributeSyntax.StartQuoteToken" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNamespaceImportsClauseSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNamespaceImportsClauseSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNamespaceImportsClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNamespaceImportsClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNamespaceImportsClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlAttributeSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNamespaceImportsClauseSyntax.WithGreaterThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNamespaceImportsClauseSyntax.WithLessThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNamespaceImportsClauseSyntax.WithXmlNamespace(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlAttributeSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNamespaceImportsClauseSyntax.GreaterThanToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNamespaceImportsClauseSyntax.LessThanToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNamespaceImportsClauseSyntax.XmlNamespace" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixSyntax,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax.WithLocalName(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax.WithPrefix(Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixSyntax)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax.LocalName" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNameSyntax.Prefix" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlNodeSyntax" />
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixNameSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixNameSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixNameSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixNameSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixNameSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixNameSyntax.WithName(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixNameSyntax.Name" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixSyntax.WithColonToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixSyntax.WithName(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixSyntax.ColonToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlPrefixSyntax.Name" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlProcessingInstructionSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlProcessingInstructionSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlProcessingInstructionSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlProcessingInstructionSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlProcessingInstructionSyntax.AddTextTokens(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlProcessingInstructionSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlProcessingInstructionSyntax.WithLessThanQuestionToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlProcessingInstructionSyntax.WithName(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlProcessingInstructionSyntax.WithQuestionGreaterThanToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlProcessingInstructionSyntax.WithTextTokens(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlProcessingInstructionSyntax.LessThanQuestionToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlProcessingInstructionSyntax.Name" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlProcessingInstructionSyntax.QuestionGreaterThanToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlProcessingInstructionSyntax.TextTokens" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlStringSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlStringSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlStringSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlStringSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlStringSyntax.AddTextTokens(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlStringSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.SyntaxTokenList,Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlStringSyntax.WithEndQuoteToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlStringSyntax.WithStartQuoteToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlStringSyntax.WithTextTokens(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlStringSyntax.EndQuoteToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlStringSyntax.StartQuoteToken" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlStringSyntax.TextTokens" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlTextSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlTextSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlTextSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlTextSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlTextSyntax.AddTextTokens(Microsoft.CodeAnalysis.SyntaxToken[])" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlTextSyntax.Update(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlTextSyntax.WithTextTokens(Microsoft.CodeAnalysis.SyntaxTokenList)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.XmlTextSyntax.TextTokens" />
    </Type>
    <Type Name="Microsoft.CodeAnalysis.VisualBasic.Syntax.YieldStatementSyntax" Id="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.YieldStatementSyntax">
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.YieldStatementSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.YieldStatementSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.YieldStatementSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.YieldStatementSyntax.WithExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <Member Id="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.YieldStatementSyntax.WithYieldKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.YieldStatementSyntax.Expression" />
      <Member Id="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.YieldStatementSyntax.YieldKeyword" />
    </Type>
  </Namespace>
</Framework>