<Type Name="ClassifiedSpan" FullName="Microsoft.CodeAnalysis.Classification.ClassifiedSpan">
  <TypeSignature Language="C#" Value="public struct ClassifiedSpan : IEquatable&lt;Microsoft.CodeAnalysis.Classification.ClassifiedSpan&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ClassifiedSpan extends System.ValueType implements class System.IEquatable`1&lt;valuetype Microsoft.CodeAnalysis.Classification.ClassifiedSpan&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Classification.ClassifiedSpan" />
  <TypeSignature Language="VB.NET" Value="Public Structure ClassifiedSpan&#xA;Implements IEquatable(Of ClassifiedSpan)" />
  <TypeSignature Language="F#" Value="type ClassifiedSpan = struct" />
  <TypeSignature Language="C++ CLI" Value="public value class ClassifiedSpan : IEquatable&lt;Microsoft::CodeAnalysis::Classification::ClassifiedSpan&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.CodeAnalysis.Classification.ClassifiedSpan&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClassifiedSpan (Microsoft.CodeAnalysis.Text.TextSpan textSpan, string classificationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.CodeAnalysis.Text.TextSpan textSpan, string classificationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Classification.ClassifiedSpan.#ctor(Microsoft.CodeAnalysis.Text.TextSpan,System.String)" />
      <MemberSignature Language="F#" Value="new Microsoft.CodeAnalysis.Classification.ClassifiedSpan : Microsoft.CodeAnalysis.Text.TextSpan * string -&gt; Microsoft.CodeAnalysis.Classification.ClassifiedSpan" Usage="new Microsoft.CodeAnalysis.Classification.ClassifiedSpan (textSpan, classificationType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClassifiedSpan(Microsoft::CodeAnalysis::Text::TextSpan textSpan, System::String ^ classificationType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="textSpan" Type="Microsoft.CodeAnalysis.Text.TextSpan" />
        <Parameter Name="classificationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textSpan">To be added.</param>
        <param name="classificationType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClassifiedSpan (string classificationType, Microsoft.CodeAnalysis.Text.TextSpan textSpan);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string classificationType, valuetype Microsoft.CodeAnalysis.Text.TextSpan textSpan) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Classification.ClassifiedSpan.#ctor(System.String,Microsoft.CodeAnalysis.Text.TextSpan)" />
      <MemberSignature Language="F#" Value="new Microsoft.CodeAnalysis.Classification.ClassifiedSpan : string * Microsoft.CodeAnalysis.Text.TextSpan -&gt; Microsoft.CodeAnalysis.Classification.ClassifiedSpan" Usage="new Microsoft.CodeAnalysis.Classification.ClassifiedSpan (classificationType, textSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClassifiedSpan(System::String ^ classificationType, Microsoft::CodeAnalysis::Text::TextSpan textSpan);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="classificationType" Type="System.String" />
        <Parameter Name="textSpan" Type="Microsoft.CodeAnalysis.Text.TextSpan" />
      </Parameters>
      <Docs>
        <param name="classificationType">To be added.</param>
        <param name="textSpan">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClassificationType">
      <MemberSignature Language="C#" Value="public string ClassificationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClassificationType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Classification.ClassifiedSpan.ClassificationType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassificationType As String" />
      <MemberSignature Language="F#" Value="member this.ClassificationType : string" Usage="Microsoft.CodeAnalysis.Classification.ClassifiedSpan.ClassificationType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClassificationType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.CodeAnalysis.Classification.ClassifiedSpan other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Microsoft.CodeAnalysis.Classification.ClassifiedSpan other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Classification.ClassifiedSpan.Equals(Microsoft.CodeAnalysis.Classification.ClassifiedSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ClassifiedSpan) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.CodeAnalysis.Classification.ClassifiedSpan -&gt; bool" Usage="classifiedSpan.Equals other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Microsoft::CodeAnalysis::Classification::ClassifiedSpan other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.CodeAnalysis.Classification.ClassifiedSpan" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Classification.ClassifiedSpan.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="classifiedSpan.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Classification.ClassifiedSpan.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="classifiedSpan.GetHashCode " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextSpan">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Text.TextSpan TextSpan { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.Text.TextSpan TextSpan" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Classification.ClassifiedSpan.TextSpan" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextSpan As TextSpan" />
      <MemberSignature Language="F#" Value="member this.TextSpan : Microsoft.CodeAnalysis.Text.TextSpan" Usage="Microsoft.CodeAnalysis.Classification.ClassifiedSpan.TextSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::Text::TextSpan TextSpan { Microsoft::CodeAnalysis::Text::TextSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Text.TextSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>