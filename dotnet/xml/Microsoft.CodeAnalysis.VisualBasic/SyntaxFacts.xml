<Type Name="SyntaxFacts" FullName="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts">
  <TypeSignature Language="C#" Value="public class SyntaxFacts" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SyntaxFacts extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts" />
  <TypeSignature Language="VB.NET" Value="Public Class SyntaxFacts" />
  <TypeSignature Language="F#" Value="type SyntaxFacts = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class SyntaxFacts" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class SyntaxFacts" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
 Provides members for determining Syntax facts about characters and Unicode conversions.
 </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SyntaxFacts ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SyntaxFacts();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; SyntaxFacts();" />
      <MemberSignature Language="C++ WINRT" Value=" SyntaxFacts();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowsLeadingImplicitLineContinuation">
      <MemberSignature Language="C#" Value="public static bool AllowsLeadingImplicitLineContinuation (Microsoft.CodeAnalysis.SyntaxToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool AllowsLeadingImplicitLineContinuation(valuetype Microsoft.CodeAnalysis.SyntaxToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.AllowsLeadingImplicitLineContinuation(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllowsLeadingImplicitLineContinuation (token As SyntaxToken) As Boolean" />
      <MemberSignature Language="F#" Value="static member AllowsLeadingImplicitLineContinuation : Microsoft.CodeAnalysis.SyntaxToken -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.AllowsLeadingImplicitLineContinuation token" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool AllowsLeadingImplicitLineContinuation(Microsoft::CodeAnalysis::SyntaxToken token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="token">The token to test. This token must be parented by a SyntaxNode.</param>
        <summary>
 Indicates whether a newline may validly precede the specified SyntaxToken without requiring an explicit line continuation sequence ' _' or terminating the containing statement.
 </summary>
        <returns>True if implicit line continuation is allowed after token.</returns>
        <remarks>
          <para>Refer to "Statements in Visual Basic", 2010 version, http://msdn.microsoft.com/en-us/library/865x40k4(v=vs.100).aspx 
 for examples.</para>
          <para>Implicit line continuation may be used in Visual Basic: </para>
          <list>
            <item>After a comma (,).</item>
            <item>After a less-than sign (&lt;) or before a greater-than sign (&gt;) when you specify an attribute.</item>
            <item>After an open parenthesis (() or before a closing parenthesis ()).</item>
            <item>After an open curly brace ({) or before a closing curly brace (}).</item>
            <item>After an open embedded expression (&lt;%=) or before the close of an embedded expression (%&gt;) within an XML literal.</item>
            <item>
              <para>Before and after query operators (Aggregate, Distinct, From, Group By, Group Join, Join, Let, 
 Order By, Select, Skip, Skip While, Take, Take While, Where, In, Into, On, Ascending, and Descending).</para>
              <para>You cannot break a line between the keywords of query operators that are made up of multiple keywords 
 (Order By, Group Join, Take While, and Skip While).</para>
            </item>
            <item>After the concatenation operator (&amp;).</item>
            <item>After assignment operators (=, &amp;=, :=, +=, -=, *=, /=, \=, ^=, &lt;&lt;=, &gt;&gt;=).</item>
            <item>After binary operators (+, -, /, *, Mod, &lt;&gt;, &lt;, &gt;, &lt;=, &gt;=, ^, &gt;&gt;, &lt;&lt;, And, AndAlso, Or, OrElse, Like, Xor) within an expression.</item>
            <item>After the Is and IsNot operators.</item>
            <item>After a less-than sign (&lt;) or before a greater-than sign (&gt;) when you specify an attribute.</item>
            <item>
              <para>Also after a greater-than sign (&gt;) when you specify an attribute.</para>
              <para>However, you must include a line-continuation character (_) when you specify assembly-level or module-level attributes.</para>
            </item>
            <item>
              <para>After a member qualifier character (.) and before the member name.</para>
              <para>However, you must include a line-continuation character (_) following a member qualifier character when you are using the With statement or 
 supplying values in the initialization list for a type.</para>
            </item>
            <item>
              <para>After an XML axis property qualifier (. or ...).</para>
              <para>However, you must include a line-continuation character (_) when you specify a member qualifier when you are using the With keyword.</para>
            </item>
            <item>After the From keyword in a collection initializer.</item>
            <item>After the With keyword in a member initializer.</item>
            <item>After the In keyword in a For Each statement.</item>
          </list>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowsTrailingImplicitLineContinuation">
      <MemberSignature Language="C#" Value="public static bool AllowsTrailingImplicitLineContinuation (Microsoft.CodeAnalysis.SyntaxToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool AllowsTrailingImplicitLineContinuation(valuetype Microsoft.CodeAnalysis.SyntaxToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.AllowsTrailingImplicitLineContinuation(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AllowsTrailingImplicitLineContinuation (token As SyntaxToken) As Boolean" />
      <MemberSignature Language="F#" Value="static member AllowsTrailingImplicitLineContinuation : Microsoft.CodeAnalysis.SyntaxToken -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.AllowsTrailingImplicitLineContinuation token" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool AllowsTrailingImplicitLineContinuation(Microsoft::CodeAnalysis::SyntaxToken token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="token">The token to test. This token must be parented by a SyntaxNode.</param>
        <summary>
 Indicates whether a newline may validly follow the specified SyntaxToken without requiring an explicit line continuation sequence ' _' or terminating the containing statement.
 </summary>
        <returns>True if implicit line continuation is allowed after token.</returns>
        <remarks>
          <para>Refer to "Statements in Visual Basic", 2010 version, http://msdn.microsoft.com/en-us/library/865x40k4(v=vs.100).aspx 
 for examples.</para>
          <para>Implicit line continuation may be used in Visual Basic: </para>
          <list>
            <item>After a comma (,).</item>
            <item>After a less-than sign (&lt;) or before a greater-than sign (&gt;) when you specify an attribute.</item>
            <item>After an open parenthesis (() or before a closing parenthesis ()).</item>
            <item>After an open curly brace ({) or before a closing curly brace (}).</item>
            <item>After an open embedded expression (&lt;%=) or before the close of an embedded expression (%&gt;) within an XML literal.</item>
            <item>
              <para>Before and after query operators (Aggregate, Distinct, From, Group By, Group Join, Join, Let, 
 Order By, Select, Skip, Skip While, Take, Take While, Where, In, Into, On, Ascending, and Descending).</para>
              <para>You cannot break a line between the keywords of query operators that are made up of multiple keywords 
 (Order By, Group Join, Take While, and Skip While).</para>
            </item>
            <item>After the concatenation operator (&amp;).</item>
            <item>After assignment operators (=, &amp;=, :=, +=, -=, *=, /=, \=, ^=, &lt;&lt;=, &gt;&gt;=).</item>
            <item>After binary operators (+, -, /, *, Mod, &lt;&gt;, &lt;, &gt;, &lt;=, &gt;=, ^, &gt;&gt;, &lt;&lt;, And, AndAlso, Or, OrElse, Like, Xor) within an expression.</item>
            <item>After the Is and IsNot operators.</item>
            <item>After a less-than sign (&lt;) or before a greater-than sign (&gt;) when you specify an attribute.</item>
            <item>
              <para>Also after a greater-than sign (&gt;) when you specify an attribute.</para>
              <para>However, you must include a line-continuation character (_) when you specify assembly-level or module-level attributes.</para>
            </item>
            <item>
              <para>After a member qualifier character (.) and before the member name.</para>
              <para>However, you must include a line-continuation character (_) following a member qualifier character when you are using the With statement or 
 supplying values in the initialization list for a type.</para>
            </item>
            <item>
              <para>After an XML axis property qualifier (. or ...).</para>
              <para>However, you must include a line-continuation character (_) when you specify a member qualifier when you are using the With keyword.</para>
            </item>
            <item>After the From keyword in a collection initializer.</item>
            <item>After the With keyword in a member initializer.</item>
            <item>After the In keyword in a For Each statement.</item>
          </list>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EqualityComparer">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEqualityComparer&lt;Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt; EqualityComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IEqualityComparer`1&lt;valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt; EqualityComparer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.EqualityComparer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EqualityComparer As IEqualityComparer(Of SyntaxKind)" />
      <MemberSignature Language="F#" Value="member this.EqualityComparer : System.Collections.Generic.IEqualityComparer&lt;Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt;" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.EqualityComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IEqualityComparer&lt;Microsoft::CodeAnalysis::VisualBasic::SyntaxKind&gt; ^ EqualityComparer { System::Collections::Generic::IEqualityComparer&lt;Microsoft::CodeAnalysis::VisualBasic::SyntaxKind&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEqualityComparer&lt;Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 A custom equality comparer for <see cref="T:Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" /></summary>
        <value>To be added.</value>
        <remarks>
 PERF: The framework specializes EqualityComparer for enums, but only if the underlying type is System.Int32
 Since SyntaxKind's underlying type is System.UInt16, ObjectEqualityComparer will be chosen instead.
 </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccessorStatementKind">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetAccessorStatementKind (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetAccessorStatementKind(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetAccessorStatementKind(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAccessorStatementKind (keyword As SyntaxKind) As SyntaxKind" />
      <MemberSignature Language="F#" Value="static member GetAccessorStatementKind : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetAccessorStatementKind keyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetAccessorStatementKind(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind keyword);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetAccessorStatementKind(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind keyword);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetAccessorStatementKind(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.SyntaxKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="keyword">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBaseTypeStatementKind">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetBaseTypeStatementKind (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetBaseTypeStatementKind(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetBaseTypeStatementKind(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBaseTypeStatementKind (keyword As SyntaxKind) As SyntaxKind" />
      <MemberSignature Language="F#" Value="static member GetBaseTypeStatementKind : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetBaseTypeStatementKind keyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetBaseTypeStatementKind(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind keyword);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetBaseTypeStatementKind(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind keyword);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetBaseTypeStatementKind(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.SyntaxKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="keyword">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBinaryExpression">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetBinaryExpression (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetBinaryExpression(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetBinaryExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBinaryExpression (keyword As SyntaxKind) As SyntaxKind" />
      <MemberSignature Language="F#" Value="static member GetBinaryExpression : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetBinaryExpression keyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetBinaryExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind keyword);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetBinaryExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind keyword);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetBinaryExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.SyntaxKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="keyword">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBlockName">
      <MemberSignature Language="C#" Value="public static string GetBlockName (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetBlockName(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetBlockName(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBlockName (kind As SyntaxKind) As String" />
      <MemberSignature Language="F#" Value="static member GetBlockName : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; string" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetBlockName kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetBlockName(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ GetBlockName(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring GetBlockName(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>
 Return keyword or punctuation text based on SyntaxKind
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContextualKeywordKind">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetContextualKeywordKind (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetContextualKeywordKind(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetContextualKeywordKind(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetContextualKeywordKind (text As String) As SyntaxKind" />
      <MemberSignature Language="F#" Value="static member GetContextualKeywordKind : string -&gt; Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetContextualKeywordKind text" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetContextualKeywordKind(System::String ^ text);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetContextualKeywordKind(Platform::String ^ text);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetContextualKeywordKind(std::wstring const &amp; text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.SyntaxKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetContextualKeywordKinds">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt; GetContextualKeywordKinds ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt; GetContextualKeywordKinds() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetContextualKeywordKinds" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetContextualKeywordKinds () As IEnumerable(Of SyntaxKind)" />
      <MemberSignature Language="F#" Value="static member GetContextualKeywordKinds : unit -&gt; seq&lt;Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt;" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetContextualKeywordKinds " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::VisualBasic::SyntaxKind&gt; ^ GetContextualKeywordKinds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
 Get contextual keywords
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstanceExpression">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetInstanceExpression (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetInstanceExpression(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetInstanceExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstanceExpression (kind As SyntaxKind) As SyntaxKind" />
      <MemberSignature Language="F#" Value="static member GetInstanceExpression : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetInstanceExpression kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetInstanceExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetInstanceExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetInstanceExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.SyntaxKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>
 Return correspondent expression syntax for 'Me', 'MyBase' and 'MyClass' 
 keywords or SyntaxKind.None for other syntax kinds
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeywordKind">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetKeywordKind (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetKeywordKind(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetKeywordKind(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetKeywordKind (text As String) As SyntaxKind" />
      <MemberSignature Language="F#" Value="static member GetKeywordKind : string -&gt; Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetKeywordKind text" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetKeywordKind(System::String ^ text);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetKeywordKind(Platform::String ^ text);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetKeywordKind(std::wstring const &amp; text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.SyntaxKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeywordKinds">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt; GetKeywordKinds ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt; GetKeywordKinds() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetKeywordKinds" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetKeywordKinds () As IEnumerable(Of SyntaxKind)" />
      <MemberSignature Language="F#" Value="static member GetKeywordKinds : unit -&gt; seq&lt;Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt;" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetKeywordKinds " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::VisualBasic::SyntaxKind&gt; ^ GetKeywordKinds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
 Get all reserved and contextual keywords
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLiteralExpression">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetLiteralExpression (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind token);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetLiteralExpression(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetLiteralExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLiteralExpression (token As SyntaxKind) As SyntaxKind" />
      <MemberSignature Language="F#" Value="static member GetLiteralExpression : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetLiteralExpression token" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetLiteralExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind token);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetLiteralExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind token);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetLiteralExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.SyntaxKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOperatorKind">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetOperatorKind (string operatorMetadataName);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetOperatorKind(string operatorMetadataName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetOperatorKind(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetOperatorKind (operatorMetadataName As String) As SyntaxKind" />
      <MemberSignature Language="F#" Value="static member GetOperatorKind : string -&gt; Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetOperatorKind operatorMetadataName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetOperatorKind(System::String ^ operatorMetadataName);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetOperatorKind(Platform::String ^ operatorMetadataName);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetOperatorKind(std::wstring const &amp; operatorMetadataName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.SyntaxKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operatorMetadataName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="operatorMetadataName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreprocessorKeywordKind">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetPreprocessorKeywordKind (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetPreprocessorKeywordKind(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetPreprocessorKeywordKind(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPreprocessorKeywordKind (text As String) As SyntaxKind" />
      <MemberSignature Language="F#" Value="static member GetPreprocessorKeywordKind : string -&gt; Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetPreprocessorKeywordKind text" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetPreprocessorKeywordKind(System::String ^ text);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetPreprocessorKeywordKind(Platform::String ^ text);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetPreprocessorKeywordKind(std::wstring const &amp; text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.SyntaxKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreprocessorKeywordKinds">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt; GetPreprocessorKeywordKinds ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt; GetPreprocessorKeywordKinds() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetPreprocessorKeywordKinds" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPreprocessorKeywordKinds () As IEnumerable(Of SyntaxKind)" />
      <MemberSignature Language="F#" Value="static member GetPreprocessorKeywordKinds : unit -&gt; seq&lt;Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt;" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetPreprocessorKeywordKinds " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::VisualBasic::SyntaxKind&gt; ^ GetPreprocessorKeywordKinds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
 Get preprocessor keywords
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPunctuationKinds">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt; GetPunctuationKinds ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt; GetPunctuationKinds() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetPunctuationKinds" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPunctuationKinds () As IEnumerable(Of SyntaxKind)" />
      <MemberSignature Language="F#" Value="static member GetPunctuationKinds : unit -&gt; seq&lt;Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt;" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetPunctuationKinds " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::VisualBasic::SyntaxKind&gt; ^ GetPunctuationKinds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
 Get punctuations
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReservedKeywordKinds">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt; GetReservedKeywordKinds ();" />
      <MemberSignature Language="ILAsm" Value=".method public static class System.Collections.Generic.IEnumerable`1&lt;valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt; GetReservedKeywordKinds() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetReservedKeywordKinds" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetReservedKeywordKinds () As IEnumerable(Of SyntaxKind)" />
      <MemberSignature Language="F#" Value="static member GetReservedKeywordKinds : unit -&gt; seq&lt;Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt;" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetReservedKeywordKinds " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::VisualBasic::SyntaxKind&gt; ^ GetReservedKeywordKinds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.VisualBasic.SyntaxKind&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
 Get all reserved keywords
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText (Microsoft.CodeAnalysis.Accessibility accessibility);" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetText(valuetype Microsoft.CodeAnalysis.Accessibility accessibility) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetText(Microsoft.CodeAnalysis.Accessibility)" />
      <MemberSignature Language="F#" Value="static member GetText : Microsoft.CodeAnalysis.Accessibility -&gt; string" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetText accessibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText(Microsoft::CodeAnalysis::Accessibility accessibility);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ GetText(Microsoft::CodeAnalysis::Accessibility accessibility);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring GetText(Microsoft::CodeAnalysis::Accessibility accessibility);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="accessibility" Type="Microsoft.CodeAnalysis.Accessibility" />
      </Parameters>
      <Docs>
        <param name="accessibility">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public static string GetText (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static string GetText(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetText(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetText (kind As SyntaxKind) As String" />
      <MemberSignature Language="F#" Value="static member GetText : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; string" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetText kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetText(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ GetText(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring GetText(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>
 Return keyword or punctuation text based on SyntaxKind
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeStatementKind">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetTypeStatementKind (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetTypeStatementKind(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetTypeStatementKind(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeStatementKind (keyword As SyntaxKind) As SyntaxKind" />
      <MemberSignature Language="F#" Value="static member GetTypeStatementKind : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetTypeStatementKind keyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetTypeStatementKind(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind keyword);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetTypeStatementKind(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind keyword);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetTypeStatementKind(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind keyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.SyntaxKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="keyword">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUnaryExpression">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetUnaryExpression (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind token);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind GetUnaryExpression(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetUnaryExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnaryExpression (token As SyntaxKind) As SyntaxKind" />
      <MemberSignature Language="F#" Value="static member GetUnaryExpression : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.GetUnaryExpression token" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetUnaryExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind token);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetUnaryExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind token);" />
      <MemberSignature Language="C++ WINRT" Value=" static Microsoft::CodeAnalysis::VisualBasic::SyntaxKind GetUnaryExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.SyntaxKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAccessibilityModifier">
      <MemberSignature Language="C#" Value="public static bool IsAccessibilityModifier (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsAccessibilityModifier(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAccessibilityModifier(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAccessibilityModifier (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsAccessibilityModifier : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAccessibilityModifier kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAccessibilityModifier(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsAccessibilityModifier(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsAccessibilityModifier(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAccessorBlock">
      <MemberSignature Language="C#" Value="public static bool IsAccessorBlock (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsAccessorBlock(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAccessorBlock(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAccessorBlock (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsAccessorBlock : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAccessorBlock kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAccessorBlock(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsAccessorBlock(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsAccessorBlock(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAccessorStatement">
      <MemberSignature Language="C#" Value="public static bool IsAccessorStatement (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsAccessorStatement(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAccessorStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAccessorStatement (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsAccessorStatement : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAccessorStatement kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAccessorStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsAccessorStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsAccessorStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAccessorStatementAccessorKeyword">
      <MemberSignature Language="C#" Value="public static bool IsAccessorStatementAccessorKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsAccessorStatementAccessorKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAccessorStatementAccessorKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAccessorStatementAccessorKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsAccessorStatementAccessorKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAccessorStatementAccessorKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAccessorStatementAccessorKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsAccessorStatementAccessorKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsAccessorStatementAccessorKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAccessorStatementKeyword">
      <MemberSignature Language="C#" Value="public static bool IsAccessorStatementKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsAccessorStatementKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAccessorStatementKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAccessorStatementKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsAccessorStatementKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAccessorStatementKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAccessorStatementKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsAccessorStatementKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsAccessorStatementKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This member is obsolete. Use IsAccessorStatementAccessorKeyword instead.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddRemoveHandlerStatement">
      <MemberSignature Language="C#" Value="public static bool IsAddRemoveHandlerStatement (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsAddRemoveHandlerStatement(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAddRemoveHandlerStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAddRemoveHandlerStatement (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsAddRemoveHandlerStatement : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAddRemoveHandlerStatement kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAddRemoveHandlerStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsAddRemoveHandlerStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsAddRemoveHandlerStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddRemoveHandlerStatementAddHandlerOrRemoveHandlerKeyword">
      <MemberSignature Language="C#" Value="public static bool IsAddRemoveHandlerStatementAddHandlerOrRemoveHandlerKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsAddRemoveHandlerStatementAddHandlerOrRemoveHandlerKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAddRemoveHandlerStatementAddHandlerOrRemoveHandlerKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAddRemoveHandlerStatementAddHandlerOrRemoveHandlerKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsAddRemoveHandlerStatementAddHandlerOrRemoveHandlerKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAddRemoveHandlerStatementAddHandlerOrRemoveHandlerKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAddRemoveHandlerStatementAddHandlerOrRemoveHandlerKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsAddRemoveHandlerStatementAddHandlerOrRemoveHandlerKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsAddRemoveHandlerStatementAddHandlerOrRemoveHandlerKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAddressOfOperand">
      <MemberSignature Language="C#" Value="public static bool IsAddressOfOperand (Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax node);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsAddressOfOperand(class Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAddressOfOperand(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAddressOfOperand (node As ExpressionSyntax) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsAddressOfOperand : Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAddressOfOperand node" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAddressOfOperand(Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ node);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsAddressOfOperand(Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ node);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsAddressOfOperand(Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax const &amp; node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>
 Returns true if the node is the operand of an AddressOf expression
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAnyToken">
      <MemberSignature Language="C#" Value="public static bool IsAnyToken (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsAnyToken(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAnyToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAnyToken (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsAnyToken : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAnyToken kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAnyToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsAnyToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsAnyToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssignmentStatement">
      <MemberSignature Language="C#" Value="public static bool IsAssignmentStatement (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsAssignmentStatement(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAssignmentStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAssignmentStatement (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsAssignmentStatement : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAssignmentStatement kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAssignmentStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsAssignmentStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsAssignmentStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAssignmentStatementOperatorToken">
      <MemberSignature Language="C#" Value="public static bool IsAssignmentStatementOperatorToken (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsAssignmentStatementOperatorToken(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAssignmentStatementOperatorToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAssignmentStatementOperatorToken (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsAssignmentStatementOperatorToken : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAssignmentStatementOperatorToken kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAssignmentStatementOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsAssignmentStatementOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsAssignmentStatementOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAttributeName">
      <MemberSignature Language="C#" Value="public static bool IsAttributeName (Microsoft.CodeAnalysis.SyntaxNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsAttributeName(class Microsoft.CodeAnalysis.SyntaxNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAttributeName(Microsoft.CodeAnalysis.SyntaxNode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAttributeName (node As SyntaxNode) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsAttributeName : Microsoft.CodeAnalysis.SyntaxNode -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAttributeName node" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAttributeName(Microsoft::CodeAnalysis::SyntaxNode ^ node);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsAttributeName(Microsoft::CodeAnalysis::SyntaxNode ^ node);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsAttributeName(Microsoft::CodeAnalysis::SyntaxNode const &amp; node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Microsoft.CodeAnalysis.SyntaxNode" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>
 Checks if the SyntaxNode is an attribute name. To be an attribute name, the syntax
 must be parented by an Attribute and the node itself must be equal to the Attribute.Name
 property.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAttributeTargetAttributeModifier">
      <MemberSignature Language="C#" Value="public static bool IsAttributeTargetAttributeModifier (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsAttributeTargetAttributeModifier(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAttributeTargetAttributeModifier(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsAttributeTargetAttributeModifier (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsAttributeTargetAttributeModifier : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsAttributeTargetAttributeModifier kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsAttributeTargetAttributeModifier(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsAttributeTargetAttributeModifier(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsAttributeTargetAttributeModifier(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBinaryExpression">
      <MemberSignature Language="C#" Value="public static bool IsBinaryExpression (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsBinaryExpression(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsBinaryExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsBinaryExpression (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsBinaryExpression : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsBinaryExpression kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsBinaryExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsBinaryExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsBinaryExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBinaryExpressionOperatorToken">
      <MemberSignature Language="C#" Value="public static bool IsBinaryExpressionOperatorToken (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsBinaryExpressionOperatorToken(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsBinaryExpressionOperatorToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsBinaryExpressionOperatorToken (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsBinaryExpressionOperatorToken : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsBinaryExpressionOperatorToken kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsBinaryExpressionOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsBinaryExpressionOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsBinaryExpressionOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCaseBlock">
      <MemberSignature Language="C#" Value="public static bool IsCaseBlock (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsCaseBlock(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsCaseBlock(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsCaseBlock (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsCaseBlock : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsCaseBlock kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsCaseBlock(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsCaseBlock(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsCaseBlock(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCaseStatement">
      <MemberSignature Language="C#" Value="public static bool IsCaseStatement (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsCaseStatement(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsCaseStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsCaseStatement (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsCaseStatement : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsCaseStatement kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsCaseStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsCaseStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsCaseStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsColon">
      <MemberSignature Language="C#" Value="public static bool IsColon (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsColon(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsColon(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsColon (c As Char) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsColon : char -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsColon c" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsColon(char c);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsColon(char16 c);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsColon(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">The unicode character.</param>
        <summary>
 Determines if the unicode character is a colon character.
 </summary>
        <returns>A boolean value set to True if character is a colon character.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContextualKeyword">
      <MemberSignature Language="C#" Value="public static bool IsContextualKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsContextualKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsContextualKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsContextualKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsContextualKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsContextualKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsContextualKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsContextualKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsContextualKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>
 Determine if the kind represents a contextual keyword
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContinueStatement">
      <MemberSignature Language="C#" Value="public static bool IsContinueStatement (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsContinueStatement(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsContinueStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsContinueStatement (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsContinueStatement : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsContinueStatement kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsContinueStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsContinueStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsContinueStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContinueStatementBlockKeyword">
      <MemberSignature Language="C#" Value="public static bool IsContinueStatementBlockKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsContinueStatementBlockKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsContinueStatementBlockKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsContinueStatementBlockKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsContinueStatementBlockKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsContinueStatementBlockKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsContinueStatementBlockKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsContinueStatementBlockKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsContinueStatementBlockKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCrefOperatorReferenceOperatorToken">
      <MemberSignature Language="C#" Value="public static bool IsCrefOperatorReferenceOperatorToken (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsCrefOperatorReferenceOperatorToken(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsCrefOperatorReferenceOperatorToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsCrefOperatorReferenceOperatorToken (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsCrefOperatorReferenceOperatorToken : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsCrefOperatorReferenceOperatorToken kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsCrefOperatorReferenceOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsCrefOperatorReferenceOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsCrefOperatorReferenceOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCrefSignaturePartModifier">
      <MemberSignature Language="C#" Value="public static bool IsCrefSignaturePartModifier (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsCrefSignaturePartModifier(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsCrefSignaturePartModifier(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsCrefSignaturePartModifier (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsCrefSignaturePartModifier : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsCrefSignaturePartModifier kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsCrefSignaturePartModifier(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsCrefSignaturePartModifier(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsCrefSignaturePartModifier(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeclareStatement">
      <MemberSignature Language="C#" Value="public static bool IsDeclareStatement (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDeclareStatement(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDeclareStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDeclareStatement (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsDeclareStatement : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDeclareStatement kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDeclareStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsDeclareStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsDeclareStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeclareStatementCharsetKeyword">
      <MemberSignature Language="C#" Value="public static bool IsDeclareStatementCharsetKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDeclareStatementCharsetKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDeclareStatementCharsetKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDeclareStatementCharsetKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsDeclareStatementCharsetKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDeclareStatementCharsetKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDeclareStatementCharsetKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsDeclareStatementCharsetKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsDeclareStatementCharsetKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeclareStatementKeyword">
      <MemberSignature Language="C#" Value="public static bool IsDeclareStatementKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDeclareStatementKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDeclareStatementKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDeclareStatementKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsDeclareStatementKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDeclareStatementKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDeclareStatementKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsDeclareStatementKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsDeclareStatementKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This member is obsolete. Use IsDeclareStatementSubOrFunctionKeyword instead.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeclareStatementSubOrFunctionKeyword">
      <MemberSignature Language="C#" Value="public static bool IsDeclareStatementSubOrFunctionKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDeclareStatementSubOrFunctionKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDeclareStatementSubOrFunctionKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDeclareStatementSubOrFunctionKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsDeclareStatementSubOrFunctionKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDeclareStatementSubOrFunctionKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDeclareStatementSubOrFunctionKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsDeclareStatementSubOrFunctionKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsDeclareStatementSubOrFunctionKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDelegateStatement">
      <MemberSignature Language="C#" Value="public static bool IsDelegateStatement (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDelegateStatement(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDelegateStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDelegateStatement (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsDelegateStatement : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDelegateStatement kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDelegateStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsDelegateStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsDelegateStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDelegateStatementKeyword">
      <MemberSignature Language="C#" Value="public static bool IsDelegateStatementKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDelegateStatementKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDelegateStatementKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDelegateStatementKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsDelegateStatementKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDelegateStatementKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDelegateStatementKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsDelegateStatementKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsDelegateStatementKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This member is obsolete. Use IsDelegateStatementSubOrFunctionKeyword instead.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDelegateStatementSubOrFunctionKeyword">
      <MemberSignature Language="C#" Value="public static bool IsDelegateStatementSubOrFunctionKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDelegateStatementSubOrFunctionKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDelegateStatementSubOrFunctionKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDelegateStatementSubOrFunctionKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsDelegateStatementSubOrFunctionKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDelegateStatementSubOrFunctionKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDelegateStatementSubOrFunctionKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsDelegateStatementSubOrFunctionKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsDelegateStatementSubOrFunctionKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDoLoopBlock">
      <MemberSignature Language="C#" Value="public static bool IsDoLoopBlock (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDoLoopBlock(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDoLoopBlock(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDoLoopBlock (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsDoLoopBlock : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDoLoopBlock kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDoLoopBlock(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsDoLoopBlock(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsDoLoopBlock(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDoStatement">
      <MemberSignature Language="C#" Value="public static bool IsDoStatement (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsDoStatement(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDoStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDoStatement (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsDoStatement : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsDoStatement kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDoStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsDoStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsDoStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEndBlockStatement">
      <MemberSignature Language="C#" Value="public static bool IsEndBlockStatement (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsEndBlockStatement(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsEndBlockStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsEndBlockStatement (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsEndBlockStatement : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsEndBlockStatement kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEndBlockStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsEndBlockStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsEndBlockStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEndBlockStatementBlockKeyword">
      <MemberSignature Language="C#" Value="public static bool IsEndBlockStatementBlockKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsEndBlockStatementBlockKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsEndBlockStatementBlockKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsEndBlockStatementBlockKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsEndBlockStatementBlockKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsEndBlockStatementBlockKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsEndBlockStatementBlockKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsEndBlockStatementBlockKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsEndBlockStatementBlockKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExitStatement">
      <MemberSignature Language="C#" Value="public static bool IsExitStatement (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsExitStatement(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsExitStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsExitStatement (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsExitStatement : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsExitStatement kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsExitStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsExitStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsExitStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExitStatementBlockKeyword">
      <MemberSignature Language="C#" Value="public static bool IsExitStatementBlockKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsExitStatementBlockKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsExitStatementBlockKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsExitStatementBlockKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsExitStatementBlockKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsExitStatementBlockKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsExitStatementBlockKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsExitStatementBlockKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsExitStatementBlockKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHash">
      <MemberSignature Language="C#" Value="public static bool IsHash (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsHash(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsHash(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsHash (c As Char) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsHash : char -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsHash c" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsHash(char c);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsHash(char16 c);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsHash(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">The unicode character.</param>
        <summary>
 Determines if the unicode character is a hash character.
 </summary>
        <returns>A boolean value set to True if character is a hash character.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdentifierPartCharacter">
      <MemberSignature Language="C#" Value="public static bool IsIdentifierPartCharacter (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsIdentifierPartCharacter(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsIdentifierPartCharacter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsIdentifierPartCharacter (c As Char) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsIdentifierPartCharacter : char -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsIdentifierPartCharacter c" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsIdentifierPartCharacter(char c);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsIdentifierPartCharacter(char16 c);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsIdentifierPartCharacter(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">The Unicode character.</param>
        <summary>
 Determines if the Unicode character can be a part of a Visual Basic identifier.
 </summary>
        <returns>A boolean value set to True if character can be part of a valid identifier.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdentifierStartCharacter">
      <MemberSignature Language="C#" Value="public static bool IsIdentifierStartCharacter (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsIdentifierStartCharacter(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsIdentifierStartCharacter(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsIdentifierStartCharacter (c As Char) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsIdentifierStartCharacter : char -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsIdentifierStartCharacter c" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsIdentifierStartCharacter(char c);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsIdentifierStartCharacter(char16 c);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsIdentifierStartCharacter(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">The Unicode character.</param>
        <summary>
 Determines if the Unicode character can be the starting character of a Visual Basic identifier.
 </summary>
        <returns>A boolean value set to True if character can be part of a valid start character in an identifier.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIfDirectiveTrivia">
      <MemberSignature Language="C#" Value="public static bool IsIfDirectiveTrivia (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsIfDirectiveTrivia(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsIfDirectiveTrivia(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsIfDirectiveTrivia (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsIfDirectiveTrivia : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsIfDirectiveTrivia kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsIfDirectiveTrivia(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsIfDirectiveTrivia(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsIfDirectiveTrivia(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIfDirectiveTriviaIfOrElseIfKeyword">
      <MemberSignature Language="C#" Value="public static bool IsIfDirectiveTriviaIfOrElseIfKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsIfDirectiveTriviaIfOrElseIfKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsIfDirectiveTriviaIfOrElseIfKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsIfDirectiveTriviaIfOrElseIfKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsIfDirectiveTriviaIfOrElseIfKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsIfDirectiveTriviaIfOrElseIfKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsIfDirectiveTriviaIfOrElseIfKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsIfDirectiveTriviaIfOrElseIfKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsIfDirectiveTriviaIfOrElseIfKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInNamespaceOrTypeContext">
      <MemberSignature Language="C#" Value="public static bool IsInNamespaceOrTypeContext (Microsoft.CodeAnalysis.SyntaxNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsInNamespaceOrTypeContext(class Microsoft.CodeAnalysis.SyntaxNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsInNamespaceOrTypeContext(Microsoft.CodeAnalysis.SyntaxNode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsInNamespaceOrTypeContext (node As SyntaxNode) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsInNamespaceOrTypeContext : Microsoft.CodeAnalysis.SyntaxNode -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsInNamespaceOrTypeContext node" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsInNamespaceOrTypeContext(Microsoft::CodeAnalysis::SyntaxNode ^ node);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsInNamespaceOrTypeContext(Microsoft::CodeAnalysis::SyntaxNode ^ node);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsInNamespaceOrTypeContext(Microsoft::CodeAnalysis::SyntaxNode const &amp; node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Microsoft.CodeAnalysis.SyntaxNode" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInstanceExpression">
      <MemberSignature Language="C#" Value="public static bool IsInstanceExpression (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsInstanceExpression(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsInstanceExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsInstanceExpression (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsInstanceExpression : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsInstanceExpression kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsInstanceExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsInstanceExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsInstanceExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>
 Determine if the token instance represents 'Me', 'MyBase' or 'MyClass' keywords
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInTypeOnlyContext">
      <MemberSignature Language="C#" Value="public static bool IsInTypeOnlyContext (Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax node);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsInTypeOnlyContext(class Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsInTypeOnlyContext(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsInTypeOnlyContext (node As ExpressionSyntax) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsInTypeOnlyContext : Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsInTypeOnlyContext node" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsInTypeOnlyContext(Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ node);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsInTypeOnlyContext(Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ node);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsInTypeOnlyContext(Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax const &amp; node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInvocationOrAddressOfOperand">
      <MemberSignature Language="C#" Value="public static bool IsInvocationOrAddressOfOperand (Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax node);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsInvocationOrAddressOfOperand(class Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsInvocationOrAddressOfOperand(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsInvocationOrAddressOfOperand (node As ExpressionSyntax) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsInvocationOrAddressOfOperand : Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsInvocationOrAddressOfOperand node" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsInvocationOrAddressOfOperand(Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ node);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsInvocationOrAddressOfOperand(Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ node);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsInvocationOrAddressOfOperand(Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax const &amp; node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>
 Returns true if the node is the operand of an AddressOf expression, or the object
 of an invocation. This is used for special binding rules around the return value variable 
 inside Functions and Property Get accessors.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInvoked">
      <MemberSignature Language="C#" Value="public static bool IsInvoked (Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax node);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsInvoked(class Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsInvoked(Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsInvoked (node As ExpressionSyntax) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsInvoked : Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsInvoked node" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsInvoked(Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ node);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsInvoked(Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ node);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsInvoked(Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax const &amp; node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>
 Returns true if the node is the object of an invocation expression
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeywordEventContainerKeyword">
      <MemberSignature Language="C#" Value="public static bool IsKeywordEventContainerKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsKeywordEventContainerKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsKeywordEventContainerKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsKeywordEventContainerKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsKeywordEventContainerKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsKeywordEventContainerKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeywordEventContainerKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsKeywordEventContainerKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsKeywordEventContainerKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeywordKind">
      <MemberSignature Language="C#" Value="public static bool IsKeywordKind (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsKeywordKind(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsKeywordKind(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsKeywordKind (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsKeywordKind : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsKeywordKind kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeywordKind(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsKeywordKind(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsKeywordKind(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLabel">
      <MemberSignature Language="C#" Value="public static bool IsLabel (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsLabel(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLabel(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLabel (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsLabel : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLabel kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLabel(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsLabel(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsLabel(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLabelLabelToken">
      <MemberSignature Language="C#" Value="public static bool IsLabelLabelToken (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsLabelLabelToken(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLabelLabelToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLabelLabelToken (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsLabelLabelToken : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLabelLabelToken kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLabelLabelToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsLabelLabelToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsLabelLabelToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLabelStatementLabelToken">
      <MemberSignature Language="C#" Value="public static bool IsLabelStatementLabelToken (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsLabelStatementLabelToken(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLabelStatementLabelToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLabelStatementLabelToken (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsLabelStatementLabelToken : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLabelStatementLabelToken kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLabelStatementLabelToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsLabelStatementLabelToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsLabelStatementLabelToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLambdaHeader">
      <MemberSignature Language="C#" Value="public static bool IsLambdaHeader (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsLambdaHeader(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLambdaHeader(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLambdaHeader (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsLambdaHeader : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLambdaHeader kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLambdaHeader(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsLambdaHeader(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsLambdaHeader(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLambdaHeaderKeyword">
      <MemberSignature Language="C#" Value="public static bool IsLambdaHeaderKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsLambdaHeaderKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLambdaHeaderKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLambdaHeaderKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsLambdaHeaderKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLambdaHeaderKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLambdaHeaderKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsLambdaHeaderKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsLambdaHeaderKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This member is obsolete. Use IsLambdaHeaderSubOrFunctionKeyword instead.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLambdaHeaderSubOrFunctionKeyword">
      <MemberSignature Language="C#" Value="public static bool IsLambdaHeaderSubOrFunctionKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsLambdaHeaderSubOrFunctionKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLambdaHeaderSubOrFunctionKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLambdaHeaderSubOrFunctionKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsLambdaHeaderSubOrFunctionKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLambdaHeaderSubOrFunctionKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLambdaHeaderSubOrFunctionKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsLambdaHeaderSubOrFunctionKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsLambdaHeaderSubOrFunctionKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLanguagePunctuation">
      <MemberSignature Language="C#" Value="public static bool IsLanguagePunctuation (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsLanguagePunctuation(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLanguagePunctuation(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLanguagePunctuation (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsLanguagePunctuation : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLanguagePunctuation kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLanguagePunctuation(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsLanguagePunctuation(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsLanguagePunctuation(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiteralExpression">
      <MemberSignature Language="C#" Value="public static bool IsLiteralExpression (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsLiteralExpression(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLiteralExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLiteralExpression (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsLiteralExpression : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLiteralExpression kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLiteralExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsLiteralExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsLiteralExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLiteralExpressionToken">
      <MemberSignature Language="C#" Value="public static bool IsLiteralExpressionToken (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsLiteralExpressionToken(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLiteralExpressionToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLiteralExpressionToken (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsLiteralExpressionToken : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLiteralExpressionToken kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLiteralExpressionToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsLiteralExpressionToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsLiteralExpressionToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoopStatement">
      <MemberSignature Language="C#" Value="public static bool IsLoopStatement (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsLoopStatement(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLoopStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsLoopStatement (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsLoopStatement : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsLoopStatement kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsLoopStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsLoopStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsLoopStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMemberAccessExpression">
      <MemberSignature Language="C#" Value="public static bool IsMemberAccessExpression (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsMemberAccessExpression(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsMemberAccessExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMemberAccessExpression (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsMemberAccessExpression : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsMemberAccessExpression kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMemberAccessExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsMemberAccessExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsMemberAccessExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMemberAccessExpressionOperatorToken">
      <MemberSignature Language="C#" Value="public static bool IsMemberAccessExpressionOperatorToken (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsMemberAccessExpressionOperatorToken(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsMemberAccessExpressionOperatorToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMemberAccessExpressionOperatorToken (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsMemberAccessExpressionOperatorToken : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsMemberAccessExpressionOperatorToken kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMemberAccessExpressionOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsMemberAccessExpressionOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsMemberAccessExpressionOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMethodBlock">
      <MemberSignature Language="C#" Value="public static bool IsMethodBlock (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsMethodBlock(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsMethodBlock(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMethodBlock (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsMethodBlock : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsMethodBlock kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMethodBlock(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsMethodBlock(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsMethodBlock(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMethodStatement">
      <MemberSignature Language="C#" Value="public static bool IsMethodStatement (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsMethodStatement(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsMethodStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMethodStatement (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsMethodStatement : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsMethodStatement kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMethodStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsMethodStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsMethodStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMethodStatementKeyword">
      <MemberSignature Language="C#" Value="public static bool IsMethodStatementKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsMethodStatementKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsMethodStatementKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMethodStatementKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsMethodStatementKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsMethodStatementKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMethodStatementKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsMethodStatementKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsMethodStatementKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This member is obsolete. Use IsMethodStatementSubOrFunctionKeyword instead.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMethodStatementSubOrFunctionKeyword">
      <MemberSignature Language="C#" Value="public static bool IsMethodStatementSubOrFunctionKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsMethodStatementSubOrFunctionKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsMethodStatementSubOrFunctionKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMethodStatementSubOrFunctionKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsMethodStatementSubOrFunctionKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsMethodStatementSubOrFunctionKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMethodStatementSubOrFunctionKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsMethodStatementSubOrFunctionKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsMethodStatementSubOrFunctionKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMultiLineLambdaExpression">
      <MemberSignature Language="C#" Value="public static bool IsMultiLineLambdaExpression (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsMultiLineLambdaExpression(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsMultiLineLambdaExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsMultiLineLambdaExpression (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsMultiLineLambdaExpression : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsMultiLineLambdaExpression kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsMultiLineLambdaExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsMultiLineLambdaExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsMultiLineLambdaExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsName">
      <MemberSignature Language="C#" Value="public static bool IsName (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsName(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsName(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsName (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsName : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsName kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsName(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsName(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsName(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNamedArgumentName">
      <MemberSignature Language="C#" Value="public static bool IsNamedArgumentName (Microsoft.CodeAnalysis.SyntaxNode node);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNamedArgumentName(class Microsoft.CodeAnalysis.SyntaxNode node) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsNamedArgumentName(Microsoft.CodeAnalysis.SyntaxNode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNamedArgumentName (node As SyntaxNode) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsNamedArgumentName : Microsoft.CodeAnalysis.SyntaxNode -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsNamedArgumentName node" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNamedArgumentName(Microsoft::CodeAnalysis::SyntaxNode ^ node);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsNamedArgumentName(Microsoft::CodeAnalysis::SyntaxNode ^ node);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsNamedArgumentName(Microsoft::CodeAnalysis::SyntaxNode const &amp; node);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="Microsoft.CodeAnalysis.SyntaxNode" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>
 Is the node the name of a named argument of an invocation or object creation expression, 
 but not an attribute.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceMemberDeclaration">
      <MemberSignature Language="C#" Value="public static bool IsNamespaceMemberDeclaration (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNamespaceMemberDeclaration(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsNamespaceMemberDeclaration(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNamespaceMemberDeclaration (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsNamespaceMemberDeclaration : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsNamespaceMemberDeclaration kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNamespaceMemberDeclaration(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsNamespaceMemberDeclaration(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsNamespaceMemberDeclaration(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNewLine">
      <MemberSignature Language="C#" Value="public static bool IsNewLine (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsNewLine(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsNewLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNewLine (c As Char) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsNewLine : char -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsNewLine c" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNewLine(char c);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsNewLine(char16 c);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsNewLine(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">The Unicode character.</param>
        <summary>
 Determines if the Unicode character is a newline character.
 </summary>
        <returns>A boolean value set to True if character is a newline character.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOnErrorGoToStatement">
      <MemberSignature Language="C#" Value="public static bool IsOnErrorGoToStatement (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsOnErrorGoToStatement(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsOnErrorGoToStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsOnErrorGoToStatement (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsOnErrorGoToStatement : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsOnErrorGoToStatement kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsOnErrorGoToStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsOnErrorGoToStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsOnErrorGoToStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOperator">
      <MemberSignature Language="C#" Value="public static bool IsOperator (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsOperator(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsOperator(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsOperator (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsOperator : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsOperator kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsOperator(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsOperator(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsOperator(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOperatorStatementOperatorToken">
      <MemberSignature Language="C#" Value="public static bool IsOperatorStatementOperatorToken (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsOperatorStatementOperatorToken(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsOperatorStatementOperatorToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsOperatorStatementOperatorToken (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsOperatorStatementOperatorToken : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsOperatorStatementOperatorToken kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsOperatorStatementOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsOperatorStatementOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsOperatorStatementOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOptionStatementNameKeyword">
      <MemberSignature Language="C#" Value="public static bool IsOptionStatementNameKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsOptionStatementNameKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsOptionStatementNameKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsOptionStatementNameKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsOptionStatementNameKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsOptionStatementNameKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsOptionStatementNameKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsOptionStatementNameKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsOptionStatementNameKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOptionStatementValueKeyword">
      <MemberSignature Language="C#" Value="public static bool IsOptionStatementValueKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsOptionStatementValueKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsOptionStatementValueKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsOptionStatementValueKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsOptionStatementValueKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsOptionStatementValueKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsOptionStatementValueKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsOptionStatementValueKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsOptionStatementValueKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOrdering">
      <MemberSignature Language="C#" Value="public static bool IsOrdering (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsOrdering(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsOrdering(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsOrdering (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsOrdering : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsOrdering kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsOrdering(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsOrdering(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsOrdering(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOrderingAscendingOrDescendingKeyword">
      <MemberSignature Language="C#" Value="public static bool IsOrderingAscendingOrDescendingKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsOrderingAscendingOrDescendingKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsOrderingAscendingOrDescendingKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsOrderingAscendingOrDescendingKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsOrderingAscendingOrDescendingKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsOrderingAscendingOrDescendingKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsOrderingAscendingOrDescendingKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsOrderingAscendingOrDescendingKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsOrderingAscendingOrDescendingKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPartitionClause">
      <MemberSignature Language="C#" Value="public static bool IsPartitionClause (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsPartitionClause(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPartitionClause(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPartitionClause (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsPartitionClause : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPartitionClause kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPartitionClause(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsPartitionClause(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsPartitionClause(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPartitionClauseSkipOrTakeKeyword">
      <MemberSignature Language="C#" Value="public static bool IsPartitionClauseSkipOrTakeKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsPartitionClauseSkipOrTakeKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPartitionClauseSkipOrTakeKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPartitionClauseSkipOrTakeKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsPartitionClauseSkipOrTakeKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPartitionClauseSkipOrTakeKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPartitionClauseSkipOrTakeKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsPartitionClauseSkipOrTakeKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsPartitionClauseSkipOrTakeKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPartitionWhileClause">
      <MemberSignature Language="C#" Value="public static bool IsPartitionWhileClause (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsPartitionWhileClause(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPartitionWhileClause(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPartitionWhileClause (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsPartitionWhileClause : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPartitionWhileClause kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPartitionWhileClause(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsPartitionWhileClause(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsPartitionWhileClause(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPartitionWhileClauseSkipOrTakeKeyword">
      <MemberSignature Language="C#" Value="public static bool IsPartitionWhileClauseSkipOrTakeKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsPartitionWhileClauseSkipOrTakeKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPartitionWhileClauseSkipOrTakeKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPartitionWhileClauseSkipOrTakeKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsPartitionWhileClauseSkipOrTakeKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPartitionWhileClauseSkipOrTakeKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPartitionWhileClauseSkipOrTakeKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsPartitionWhileClauseSkipOrTakeKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsPartitionWhileClauseSkipOrTakeKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPredefinedCastExpressionKeyword">
      <MemberSignature Language="C#" Value="public static bool IsPredefinedCastExpressionKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsPredefinedCastExpressionKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPredefinedCastExpressionKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPredefinedCastExpressionKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsPredefinedCastExpressionKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPredefinedCastExpressionKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPredefinedCastExpressionKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsPredefinedCastExpressionKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsPredefinedCastExpressionKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPredefinedType">
      <MemberSignature Language="C#" Value="public static bool IsPredefinedType (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsPredefinedType(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPredefinedType(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPredefinedType (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsPredefinedType : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPredefinedType kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPredefinedType(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsPredefinedType(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsPredefinedType(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>
 Helper to check whether the token is a predefined type
 </summary>
        <returns>True if it is a predefined type</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPreprocessorDirective">
      <MemberSignature Language="C#" Value="public static bool IsPreprocessorDirective (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsPreprocessorDirective(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPreprocessorDirective(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPreprocessorDirective (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsPreprocessorDirective : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPreprocessorDirective kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPreprocessorDirective(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsPreprocessorDirective(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsPreprocessorDirective(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPreprocessorKeyword">
      <MemberSignature Language="C#" Value="public static bool IsPreprocessorKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsPreprocessorKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPreprocessorKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPreprocessorKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsPreprocessorKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPreprocessorKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPreprocessorKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsPreprocessorKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsPreprocessorKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>
 Determine if the token instance represents a preprocessor keyword
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPreprocessorPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPreprocessorPunctuation (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsPreprocessorPunctuation(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPreprocessorPunctuation(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPreprocessorPunctuation (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsPreprocessorPunctuation : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPreprocessorPunctuation kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPreprocessorPunctuation(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsPreprocessorPunctuation(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsPreprocessorPunctuation(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPunctuation">
      <MemberSignature Language="C#" Value="public static bool IsPunctuation (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsPunctuation(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPunctuation(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuation (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsPunctuation : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPunctuation kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuation(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsPunctuation(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsPunctuation(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPunctuationOrKeyword">
      <MemberSignature Language="C#" Value="public static bool IsPunctuationOrKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsPunctuationOrKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPunctuationOrKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsPunctuationOrKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsPunctuationOrKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsPunctuationOrKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsPunctuationOrKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsPunctuationOrKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsPunctuationOrKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReDimStatement">
      <MemberSignature Language="C#" Value="public static bool IsReDimStatement (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsReDimStatement(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsReDimStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsReDimStatement (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsReDimStatement : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsReDimStatement kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsReDimStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsReDimStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsReDimStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRelationalCaseClause">
      <MemberSignature Language="C#" Value="public static bool IsRelationalCaseClause (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsRelationalCaseClause(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsRelationalCaseClause(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRelationalCaseClause (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsRelationalCaseClause : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsRelationalCaseClause kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsRelationalCaseClause(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsRelationalCaseClause(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsRelationalCaseClause(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRelationalCaseClauseOperatorToken">
      <MemberSignature Language="C#" Value="public static bool IsRelationalCaseClauseOperatorToken (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsRelationalCaseClauseOperatorToken(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsRelationalCaseClauseOperatorToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRelationalCaseClauseOperatorToken (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsRelationalCaseClauseOperatorToken : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsRelationalCaseClauseOperatorToken kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsRelationalCaseClauseOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsRelationalCaseClauseOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsRelationalCaseClauseOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRelationalOperator">
      <MemberSignature Language="C#" Value="public static bool IsRelationalOperator (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsRelationalOperator(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsRelationalOperator(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsRelationalOperator (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsRelationalOperator : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsRelationalOperator kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsRelationalOperator(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsRelationalOperator(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsRelationalOperator(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReservedKeyword">
      <MemberSignature Language="C#" Value="public static bool IsReservedKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsReservedKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsReservedKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsReservedKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsReservedKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsReservedKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsReservedKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsReservedKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsReservedKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>
 Determine if the kind represents a reserved keyword
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReservedTupleElementName">
      <MemberSignature Language="C#" Value="public static bool IsReservedTupleElementName (string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsReservedTupleElementName(string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsReservedTupleElementName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsReservedTupleElementName (elementName As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsReservedTupleElementName : string -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsReservedTupleElementName elementName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsReservedTupleElementName(System::String ^ elementName);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsReservedTupleElementName(Platform::String ^ elementName);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsReservedTupleElementName(std::wstring const &amp; elementName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="elementName">To be added.</param>
        <summary>
 Checks whether the element name is reserved.

 For example:
 "Item3" is reserved.
 "Rest", "ToString" and other members of System.ValueTuple are reserved.
 Names that are not reserved return False.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResumeStatement">
      <MemberSignature Language="C#" Value="public static bool IsResumeStatement (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsResumeStatement(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsResumeStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsResumeStatement (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsResumeStatement : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsResumeStatement kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsResumeStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsResumeStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsResumeStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSingleLineLambdaExpression">
      <MemberSignature Language="C#" Value="public static bool IsSingleLineLambdaExpression (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsSingleLineLambdaExpression(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsSingleLineLambdaExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSingleLineLambdaExpression (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsSingleLineLambdaExpression : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsSingleLineLambdaExpression kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSingleLineLambdaExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsSingleLineLambdaExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsSingleLineLambdaExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpecialConstraint">
      <MemberSignature Language="C#" Value="public static bool IsSpecialConstraint (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsSpecialConstraint(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsSpecialConstraint(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSpecialConstraint (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsSpecialConstraint : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsSpecialConstraint kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSpecialConstraint(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsSpecialConstraint(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsSpecialConstraint(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSpecialConstraintConstraintKeyword">
      <MemberSignature Language="C#" Value="public static bool IsSpecialConstraintConstraintKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsSpecialConstraintConstraintKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsSpecialConstraintConstraintKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSpecialConstraintConstraintKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsSpecialConstraintConstraintKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsSpecialConstraintConstraintKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSpecialConstraintConstraintKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsSpecialConstraintConstraintKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsSpecialConstraintConstraintKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStopOrEndStatement">
      <MemberSignature Language="C#" Value="public static bool IsStopOrEndStatement (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsStopOrEndStatement(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsStopOrEndStatement(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsStopOrEndStatement (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsStopOrEndStatement : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsStopOrEndStatement kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsStopOrEndStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsStopOrEndStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsStopOrEndStatement(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStopOrEndStatementStopOrEndKeyword">
      <MemberSignature Language="C#" Value="public static bool IsStopOrEndStatementStopOrEndKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsStopOrEndStatementStopOrEndKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsStopOrEndStatementStopOrEndKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsStopOrEndStatementStopOrEndKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsStopOrEndStatementStopOrEndKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsStopOrEndStatementStopOrEndKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsStopOrEndStatementStopOrEndKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsStopOrEndStatementStopOrEndKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsStopOrEndStatementStopOrEndKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTrivia">
      <MemberSignature Language="C#" Value="public static bool IsTrivia (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind this);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsTrivia(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind this) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsTrivia(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsTrivia (this As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsTrivia :  -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsTrivia " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTrivia(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind this);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsTrivia(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind this);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsTrivia(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind this);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="this" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="this">To be added.</param>
        <summary>
 Determine if the token instance represents a syntax trivia such as comment, whitespace, etc...
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTypeOfExpression">
      <MemberSignature Language="C#" Value="public static bool IsTypeOfExpression (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsTypeOfExpression(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsTypeOfExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsTypeOfExpression (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsTypeOfExpression : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsTypeOfExpression kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTypeOfExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsTypeOfExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsTypeOfExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTypeOfExpressionOperatorToken">
      <MemberSignature Language="C#" Value="public static bool IsTypeOfExpressionOperatorToken (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsTypeOfExpressionOperatorToken(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsTypeOfExpressionOperatorToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsTypeOfExpressionOperatorToken (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsTypeOfExpressionOperatorToken : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsTypeOfExpressionOperatorToken kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTypeOfExpressionOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsTypeOfExpressionOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsTypeOfExpressionOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTypeParameterVarianceKeyword">
      <MemberSignature Language="C#" Value="public static bool IsTypeParameterVarianceKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsTypeParameterVarianceKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsTypeParameterVarianceKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsTypeParameterVarianceKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsTypeParameterVarianceKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsTypeParameterVarianceKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTypeParameterVarianceKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsTypeParameterVarianceKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsTypeParameterVarianceKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnaryExpression">
      <MemberSignature Language="C#" Value="public static bool IsUnaryExpression (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsUnaryExpression(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsUnaryExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUnaryExpression (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsUnaryExpression : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsUnaryExpression kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUnaryExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsUnaryExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsUnaryExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnaryExpressionOperatorToken">
      <MemberSignature Language="C#" Value="public static bool IsUnaryExpressionOperatorToken (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsUnaryExpressionOperatorToken(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsUnaryExpressionOperatorToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUnaryExpressionOperatorToken (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsUnaryExpressionOperatorToken : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsUnaryExpressionOperatorToken kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUnaryExpressionOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsUnaryExpressionOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsUnaryExpressionOperatorToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnderscore">
      <MemberSignature Language="C#" Value="public static bool IsUnderscore (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsUnderscore(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsUnderscore(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsUnderscore (c As Char) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsUnderscore : char -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsUnderscore c" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUnderscore(char c);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsUnderscore(char16 c);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsUnderscore(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">The unicode character.</param>
        <summary>
 Determines if the unicode character is a underscore character.
 </summary>
        <returns>A boolean value set to True if character is an underscore character.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidIdentifier">
      <MemberSignature Language="C#" Value="public static bool IsValidIdentifier (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsValidIdentifier(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsValidIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsValidIdentifier (name As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsValidIdentifier : string -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsValidIdentifier name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsValidIdentifier(System::String ^ name);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsValidIdentifier(Platform::String ^ name);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsValidIdentifier(std::wstring const &amp; name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The identifier name.</param>
        <summary>
 Determines if the name is a valid identifier.
 </summary>
        <returns>A boolean value set to True if name is valid identifier.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWhileOrUntilClause">
      <MemberSignature Language="C#" Value="public static bool IsWhileOrUntilClause (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsWhileOrUntilClause(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsWhileOrUntilClause(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhileOrUntilClause (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsWhileOrUntilClause : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsWhileOrUntilClause kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhileOrUntilClause(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsWhileOrUntilClause(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsWhileOrUntilClause(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWhileOrUntilClauseWhileOrUntilKeyword">
      <MemberSignature Language="C#" Value="public static bool IsWhileOrUntilClauseWhileOrUntilKeyword (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsWhileOrUntilClauseWhileOrUntilKeyword(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsWhileOrUntilClauseWhileOrUntilKeyword(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhileOrUntilClauseWhileOrUntilKeyword (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsWhileOrUntilClauseWhileOrUntilKeyword : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsWhileOrUntilClauseWhileOrUntilKeyword kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhileOrUntilClauseWhileOrUntilKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsWhileOrUntilClauseWhileOrUntilKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsWhileOrUntilClauseWhileOrUntilKeyword(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWhitespace">
      <MemberSignature Language="C#" Value="public static bool IsWhitespace (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsWhitespace(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsWhitespace(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsWhitespace (c As Char) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsWhitespace : char -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsWhitespace c" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsWhitespace(char c);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsWhitespace(char16 c);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsWhitespace(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">The Unicode character.</param>
        <summary>
 Determines if Unicode character represents a whitespace.
 </summary>
        <returns>A boolean value set to True if character represents whitespace.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXmlCrefAttributeEndQuoteToken">
      <MemberSignature Language="C#" Value="public static bool IsXmlCrefAttributeEndQuoteToken (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsXmlCrefAttributeEndQuoteToken(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlCrefAttributeEndQuoteToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsXmlCrefAttributeEndQuoteToken (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsXmlCrefAttributeEndQuoteToken : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlCrefAttributeEndQuoteToken kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsXmlCrefAttributeEndQuoteToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsXmlCrefAttributeEndQuoteToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsXmlCrefAttributeEndQuoteToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXmlCrefAttributeStartQuoteToken">
      <MemberSignature Language="C#" Value="public static bool IsXmlCrefAttributeStartQuoteToken (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsXmlCrefAttributeStartQuoteToken(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlCrefAttributeStartQuoteToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsXmlCrefAttributeStartQuoteToken (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsXmlCrefAttributeStartQuoteToken : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlCrefAttributeStartQuoteToken kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsXmlCrefAttributeStartQuoteToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsXmlCrefAttributeStartQuoteToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsXmlCrefAttributeStartQuoteToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXmlMemberAccessExpression">
      <MemberSignature Language="C#" Value="public static bool IsXmlMemberAccessExpression (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsXmlMemberAccessExpression(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlMemberAccessExpression(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsXmlMemberAccessExpression (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsXmlMemberAccessExpression : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlMemberAccessExpression kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsXmlMemberAccessExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsXmlMemberAccessExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsXmlMemberAccessExpression(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXmlMemberAccessExpressionToken2">
      <MemberSignature Language="C#" Value="public static bool IsXmlMemberAccessExpressionToken2 (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsXmlMemberAccessExpressionToken2(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlMemberAccessExpressionToken2(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsXmlMemberAccessExpressionToken2 (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsXmlMemberAccessExpressionToken2 : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlMemberAccessExpressionToken2 kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsXmlMemberAccessExpressionToken2(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsXmlMemberAccessExpressionToken2(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsXmlMemberAccessExpressionToken2(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXmlNameAttributeEndQuoteToken">
      <MemberSignature Language="C#" Value="public static bool IsXmlNameAttributeEndQuoteToken (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsXmlNameAttributeEndQuoteToken(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlNameAttributeEndQuoteToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsXmlNameAttributeEndQuoteToken (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsXmlNameAttributeEndQuoteToken : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlNameAttributeEndQuoteToken kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsXmlNameAttributeEndQuoteToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsXmlNameAttributeEndQuoteToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsXmlNameAttributeEndQuoteToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXmlNameAttributeStartQuoteToken">
      <MemberSignature Language="C#" Value="public static bool IsXmlNameAttributeStartQuoteToken (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsXmlNameAttributeStartQuoteToken(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlNameAttributeStartQuoteToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsXmlNameAttributeStartQuoteToken (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsXmlNameAttributeStartQuoteToken : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlNameAttributeStartQuoteToken kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsXmlNameAttributeStartQuoteToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsXmlNameAttributeStartQuoteToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsXmlNameAttributeStartQuoteToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXmlStringEndQuoteToken">
      <MemberSignature Language="C#" Value="public static bool IsXmlStringEndQuoteToken (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsXmlStringEndQuoteToken(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlStringEndQuoteToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsXmlStringEndQuoteToken (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsXmlStringEndQuoteToken : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlStringEndQuoteToken kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsXmlStringEndQuoteToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsXmlStringEndQuoteToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsXmlStringEndQuoteToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXmlStringStartQuoteToken">
      <MemberSignature Language="C#" Value="public static bool IsXmlStringStartQuoteToken (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsXmlStringStartQuoteToken(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlStringStartQuoteToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsXmlStringStartQuoteToken (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsXmlStringStartQuoteToken : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlStringStartQuoteToken kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsXmlStringStartQuoteToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsXmlStringStartQuoteToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsXmlStringStartQuoteToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXmlTextToken">
      <MemberSignature Language="C#" Value="public static bool IsXmlTextToken (Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsXmlTextToken(valuetype Microsoft.CodeAnalysis.VisualBasic.SyntaxKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlTextToken(Microsoft.CodeAnalysis.VisualBasic.SyntaxKind)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsXmlTextToken (kind As SyntaxKind) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsXmlTextToken : Microsoft.CodeAnalysis.VisualBasic.SyntaxKind -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlTextToken kind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsXmlTextToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsXmlTextToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsXmlTextToken(Microsoft::CodeAnalysis::VisualBasic::SyntaxKind kind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.VisualBasic.SyntaxKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXmlWhitespace">
      <MemberSignature Language="C#" Value="public static bool IsXmlWhitespace (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public static bool IsXmlWhitespace(char c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlWhitespace(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsXmlWhitespace (c As Char) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsXmlWhitespace : char -&gt; bool" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.IsXmlWhitespace c" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsXmlWhitespace(char c);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static bool IsXmlWhitespace(char16 c);" />
      <MemberSignature Language="C++ WINRT" Value=" static bool IsXmlWhitespace(char c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">The unicode character</param>
        <summary>
 Determines if Unicode character represents a XML whitespace.
 </summary>
        <returns>A boolean value set to True if character represents XML whitespace.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeHalfWidthIdentifier">
      <MemberSignature Language="C#" Value="public static string MakeHalfWidthIdentifier (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public static string MakeHalfWidthIdentifier(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.MakeHalfWidthIdentifier(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function MakeHalfWidthIdentifier (text As String) As String" />
      <MemberSignature Language="F#" Value="static member MakeHalfWidthIdentifier : string -&gt; string" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.MakeHalfWidthIdentifier text" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ MakeHalfWidthIdentifier(System::String ^ text);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; static Platform::String ^ MakeHalfWidthIdentifier(Platform::String ^ text);" />
      <MemberSignature Language="C++ WINRT" Value=" static std::wstring MakeHalfWidthIdentifier(std::wstring const &amp; text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">The text representing the original identifier.  This can be in full width or half width Unicode form.  </param>
        <summary>
 Creates a half width form Unicode character string. 
 </summary>
        <returns>A string representing the text in a half width Unicode form.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VarianceKindFromToken">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.VarianceKind VarianceKindFromToken (Microsoft.CodeAnalysis.SyntaxToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public static valuetype Microsoft.CodeAnalysis.VarianceKind VarianceKindFromToken(valuetype Microsoft.CodeAnalysis.SyntaxToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.VarianceKindFromToken(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function VarianceKindFromToken (token As SyntaxToken) As VarianceKind" />
      <MemberSignature Language="F#" Value="static member VarianceKindFromToken : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VarianceKind" Usage="Microsoft.CodeAnalysis.VisualBasic.SyntaxFacts.VarianceKindFromToken token" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Microsoft::CodeAnalysis::VarianceKind VarianceKindFromToken(Microsoft::CodeAnalysis::SyntaxToken token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VarianceKind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>