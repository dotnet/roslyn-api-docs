<Type Name="EmitOptions" FullName="Microsoft.CodeAnalysis.Emit.EmitOptions">
  <TypeSignature Language="C#" Value="public sealed class EmitOptions : IEquatable&lt;Microsoft.CodeAnalysis.Emit.EmitOptions&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EmitOptions extends System.Object implements class System.IEquatable`1&lt;class Microsoft.CodeAnalysis.Emit.EmitOptions&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Emit.EmitOptions" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EmitOptions&#xA;Implements IEquatable(Of EmitOptions)" />
  <TypeSignature Language="F#" Value="type EmitOptions = class&#xA;    interface IEquatable&lt;EmitOptions&gt;" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmitOptions sealed : IEquatable&lt;Microsoft::CodeAnalysis::Emit::EmitOptions ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.CodeAnalysis.Emit.EmitOptions&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents compilation emit options.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmitOptions (bool metadataOnly, Microsoft.CodeAnalysis.Emit.DebugInformationFormat debugInformationFormat, string pdbFilePath, string outputNameOverride, int fileAlignment, ulong baseAddress, bool highEntropyVirtualAddressSpace, Microsoft.CodeAnalysis.SubsystemVersion subsystemVersion, string runtimeMetadataVersion, bool tolerateErrors, bool includePrivateMembers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool metadataOnly, valuetype Microsoft.CodeAnalysis.Emit.DebugInformationFormat debugInformationFormat, string pdbFilePath, string outputNameOverride, int32 fileAlignment, unsigned int64 baseAddress, bool highEntropyVirtualAddressSpace, valuetype Microsoft.CodeAnalysis.SubsystemVersion subsystemVersion, string runtimeMetadataVersion, bool tolerateErrors, bool includePrivateMembers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Emit.EmitOptions.#ctor(System.Boolean,Microsoft.CodeAnalysis.Emit.DebugInformationFormat,System.String,System.String,System.Int32,System.UInt64,System.Boolean,Microsoft.CodeAnalysis.SubsystemVersion,System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="F#" Value="new Microsoft.CodeAnalysis.Emit.EmitOptions : bool * Microsoft.CodeAnalysis.Emit.DebugInformationFormat * string * string * int * uint64 * bool * Microsoft.CodeAnalysis.SubsystemVersion * string * bool * bool -&gt; Microsoft.CodeAnalysis.Emit.EmitOptions" Usage="new Microsoft.CodeAnalysis.Emit.EmitOptions (metadataOnly, debugInformationFormat, pdbFilePath, outputNameOverride, fileAlignment, baseAddress, highEntropyVirtualAddressSpace, subsystemVersion, runtimeMetadataVersion, tolerateErrors, includePrivateMembers)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EmitOptions(bool metadataOnly, Microsoft::CodeAnalysis::Emit::DebugInformationFormat debugInformationFormat, System::String ^ pdbFilePath, System::String ^ outputNameOverride, int fileAlignment, System::UInt64 baseAddress, bool highEntropyVirtualAddressSpace, Microsoft::CodeAnalysis::SubsystemVersion subsystemVersion, System::String ^ runtimeMetadataVersion, bool tolerateErrors, bool includePrivateMembers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadataOnly" Type="System.Boolean" />
        <Parameter Name="debugInformationFormat" Type="Microsoft.CodeAnalysis.Emit.DebugInformationFormat" />
        <Parameter Name="pdbFilePath" Type="System.String" />
        <Parameter Name="outputNameOverride" Type="System.String" />
        <Parameter Name="fileAlignment" Type="System.Int32" />
        <Parameter Name="baseAddress" Type="System.UInt64" />
        <Parameter Name="highEntropyVirtualAddressSpace" Type="System.Boolean" />
        <Parameter Name="subsystemVersion" Type="Microsoft.CodeAnalysis.SubsystemVersion" />
        <Parameter Name="runtimeMetadataVersion" Type="System.String" />
        <Parameter Name="tolerateErrors" Type="System.Boolean" />
        <Parameter Name="includePrivateMembers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="metadataOnly">To be added.</param>
        <param name="debugInformationFormat">To be added.</param>
        <param name="pdbFilePath">To be added.</param>
        <param name="outputNameOverride">To be added.</param>
        <param name="fileAlignment">To be added.</param>
        <param name="baseAddress">To be added.</param>
        <param name="highEntropyVirtualAddressSpace">To be added.</param>
        <param name="subsystemVersion">To be added.</param>
        <param name="runtimeMetadataVersion">To be added.</param>
        <param name="tolerateErrors">To be added.</param>
        <param name="includePrivateMembers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EmitOptions (bool metadataOnly = false, Microsoft.CodeAnalysis.Emit.DebugInformationFormat debugInformationFormat = (Microsoft.CodeAnalysis.Emit.DebugInformationFormat) 0, string pdbFilePath = null, string outputNameOverride = null, int fileAlignment = 0, ulong baseAddress = 0, bool highEntropyVirtualAddressSpace = false, Microsoft.CodeAnalysis.SubsystemVersion subsystemVersion = null, string runtimeMetadataVersion = null, bool tolerateErrors = false, bool includePrivateMembers = true, System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.Emit.InstrumentationKind&gt; instrumentationKinds = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool metadataOnly, valuetype Microsoft.CodeAnalysis.Emit.DebugInformationFormat debugInformationFormat, string pdbFilePath, string outputNameOverride, int32 fileAlignment, unsigned int64 baseAddress, bool highEntropyVirtualAddressSpace, valuetype Microsoft.CodeAnalysis.SubsystemVersion subsystemVersion, string runtimeMetadataVersion, bool tolerateErrors, bool includePrivateMembers, valuetype System.Collections.Immutable.ImmutableArray`1&lt;valuetype Microsoft.CodeAnalysis.Emit.InstrumentationKind&gt; instrumentationKinds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Emit.EmitOptions.#ctor(System.Boolean,Microsoft.CodeAnalysis.Emit.DebugInformationFormat,System.String,System.String,System.Int32,System.UInt64,System.Boolean,Microsoft.CodeAnalysis.SubsystemVersion,System.String,System.Boolean,System.Boolean,System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Emit.InstrumentationKind})" />
      <MemberSignature Language="F#" Value="new Microsoft.CodeAnalysis.Emit.EmitOptions : bool * Microsoft.CodeAnalysis.Emit.DebugInformationFormat * string * string * int * uint64 * bool * Microsoft.CodeAnalysis.SubsystemVersion * string * bool * bool * System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.Emit.InstrumentationKind&gt; -&gt; Microsoft.CodeAnalysis.Emit.EmitOptions" Usage="new Microsoft.CodeAnalysis.Emit.EmitOptions (metadataOnly, debugInformationFormat, pdbFilePath, outputNameOverride, fileAlignment, baseAddress, highEntropyVirtualAddressSpace, subsystemVersion, runtimeMetadataVersion, tolerateErrors, includePrivateMembers, instrumentationKinds)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadataOnly" Type="System.Boolean" />
        <Parameter Name="debugInformationFormat" Type="Microsoft.CodeAnalysis.Emit.DebugInformationFormat" />
        <Parameter Name="pdbFilePath" Type="System.String" />
        <Parameter Name="outputNameOverride" Type="System.String" />
        <Parameter Name="fileAlignment" Type="System.Int32" />
        <Parameter Name="baseAddress" Type="System.UInt64" />
        <Parameter Name="highEntropyVirtualAddressSpace" Type="System.Boolean" />
        <Parameter Name="subsystemVersion" Type="Microsoft.CodeAnalysis.SubsystemVersion" />
        <Parameter Name="runtimeMetadataVersion" Type="System.String" />
        <Parameter Name="tolerateErrors" Type="System.Boolean" />
        <Parameter Name="includePrivateMembers" Type="System.Boolean" />
        <Parameter Name="instrumentationKinds" Type="System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.Emit.InstrumentationKind&gt;" />
      </Parameters>
      <Docs>
        <param name="metadataOnly">To be added.</param>
        <param name="debugInformationFormat">To be added.</param>
        <param name="pdbFilePath">To be added.</param>
        <param name="outputNameOverride">To be added.</param>
        <param name="fileAlignment">To be added.</param>
        <param name="baseAddress">To be added.</param>
        <param name="highEntropyVirtualAddressSpace">To be added.</param>
        <param name="subsystemVersion">To be added.</param>
        <param name="runtimeMetadataVersion">To be added.</param>
        <param name="tolerateErrors">To be added.</param>
        <param name="includePrivateMembers">To be added.</param>
        <param name="instrumentationKinds">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseAddress">
      <MemberSignature Language="C#" Value="public ulong BaseAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 BaseAddress" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Emit.EmitOptions.BaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseAddress As ULong" />
      <MemberSignature Language="F#" Value="member this.BaseAddress : uint64" Usage="Microsoft.CodeAnalysis.Emit.EmitOptions.BaseAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt64 BaseAddress { System::UInt64 get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property unsigned long long BaseAddress { unsigned long long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the preferred base address at which to load the output DLL.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DebugInformationFormat">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Emit.DebugInformationFormat DebugInformationFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.Emit.DebugInformationFormat DebugInformationFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Emit.EmitOptions.DebugInformationFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DebugInformationFormat As DebugInformationFormat" />
      <MemberSignature Language="F#" Value="member this.DebugInformationFormat : Microsoft.CodeAnalysis.Emit.DebugInformationFormat" Usage="Microsoft.CodeAnalysis.Emit.EmitOptions.DebugInformationFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::Emit::DebugInformationFormat DebugInformationFormat { Microsoft::CodeAnalysis::Emit::DebugInformationFormat get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::CodeAnalysis::Emit::DebugInformationFormat DebugInformationFormat { Microsoft::CodeAnalysis::Emit::DebugInformationFormat get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Emit.DebugInformationFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Debug information format.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitMetadataOnly">
      <MemberSignature Language="C#" Value="public bool EmitMetadataOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EmitMetadataOnly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Emit.EmitOptions.EmitMetadataOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmitMetadataOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.EmitMetadataOnly : bool" Usage="Microsoft.CodeAnalysis.Emit.EmitOptions.EmitMetadataOnly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EmitMetadataOnly { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool EmitMetadataOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            True to emit an assembly excluding executable code such as method bodies.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.CodeAnalysis.Emit.EmitOptions other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Microsoft.CodeAnalysis.Emit.EmitOptions other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Emit.EmitOptions.Equals(Microsoft.CodeAnalysis.Emit.EmitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As EmitOptions) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.CodeAnalysis.Emit.EmitOptions -&gt; bool" Usage="emitOptions.Equals other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Microsoft::CodeAnalysis::Emit::EmitOptions ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.CodeAnalysis.Emit.EmitOptions" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Emit.EmitOptions.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="emitOptions.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override bool Equals(Platform::Object ^ obj);" />
      <MemberSignature Language="C++ WINRT" Value=" override bool Equals(winrt::Windows::Foundation::IInspectable const &amp; obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileAlignment">
      <MemberSignature Language="C#" Value="public int FileAlignment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FileAlignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Emit.EmitOptions.FileAlignment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileAlignment As Integer" />
      <MemberSignature Language="F#" Value="member this.FileAlignment : int" Usage="Microsoft.CodeAnalysis.Emit.EmitOptions.FileAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FileAlignment { int get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int FileAlignment { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specifies the size of sections in the output file. 
            </summary>
        <value>To be added.</value>
        <remarks>
            Valid values are 0, 512, 1024, 2048, 4096 and 8192.
            If the value is 0 the file alignment is determined based upon the value of <see cref="T:Microsoft.CodeAnalysis.Platform" />.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Emit.EmitOptions.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="emitOptions.GetHashCode " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="C++ WINRT" Value=" override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HighEntropyVirtualAddressSpace">
      <MemberSignature Language="C#" Value="public bool HighEntropyVirtualAddressSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HighEntropyVirtualAddressSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Emit.EmitOptions.HighEntropyVirtualAddressSpace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HighEntropyVirtualAddressSpace As Boolean" />
      <MemberSignature Language="F#" Value="member this.HighEntropyVirtualAddressSpace : bool" Usage="Microsoft.CodeAnalysis.Emit.EmitOptions.HighEntropyVirtualAddressSpace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HighEntropyVirtualAddressSpace { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool HighEntropyVirtualAddressSpace { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            True to enable high entropy virtual address space for the output binary.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludePrivateMembers">
      <MemberSignature Language="C#" Value="public bool IncludePrivateMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludePrivateMembers" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Emit.EmitOptions.IncludePrivateMembers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludePrivateMembers As Boolean" />
      <MemberSignature Language="F#" Value="member this.IncludePrivateMembers : bool" Usage="Microsoft.CodeAnalysis.Emit.EmitOptions.IncludePrivateMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludePrivateMembers { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool IncludePrivateMembers { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Unless set (private) members that don't affect the language semantics of the resulting assembly will be excluded
            when emitting metadata-only assemblies as primary output (with <see cref="P:Microsoft.CodeAnalysis.Emit.EmitOptions.EmitMetadataOnly" /> on).
            If emitting a secondary output, this flag is required to be false.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InstrumentationKinds">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.Emit.InstrumentationKind&gt; InstrumentationKinds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;valuetype Microsoft.CodeAnalysis.Emit.InstrumentationKind&gt; InstrumentationKinds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Emit.EmitOptions.InstrumentationKinds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InstrumentationKinds As ImmutableArray(Of InstrumentationKind)" />
      <MemberSignature Language="F#" Value="member this.InstrumentationKinds : System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.Emit.InstrumentationKind&gt;" Usage="Microsoft.CodeAnalysis.Emit.EmitOptions.InstrumentationKinds" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::Emit::InstrumentationKind&gt; InstrumentationKinds { System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::Emit::InstrumentationKind&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.Emit.InstrumentationKind&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Type of instrumentation that should be added to the output binary.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.CodeAnalysis.Emit.EmitOptions left, Microsoft.CodeAnalysis.Emit.EmitOptions right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class Microsoft.CodeAnalysis.Emit.EmitOptions left, class Microsoft.CodeAnalysis.Emit.EmitOptions right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Emit.EmitOptions.op_Equality(Microsoft.CodeAnalysis.Emit.EmitOptions,Microsoft.CodeAnalysis.Emit.EmitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As EmitOptions, right As EmitOptions) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.CodeAnalysis.Emit.EmitOptions * Microsoft.CodeAnalysis.Emit.EmitOptions -&gt; bool" Usage="left = right" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::CodeAnalysis::Emit::EmitOptions ^ left, Microsoft::CodeAnalysis::Emit::EmitOptions ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.CodeAnalysis.Emit.EmitOptions" />
        <Parameter Name="right" Type="Microsoft.CodeAnalysis.Emit.EmitOptions" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.CodeAnalysis.Emit.EmitOptions left, Microsoft.CodeAnalysis.Emit.EmitOptions right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class Microsoft.CodeAnalysis.Emit.EmitOptions left, class Microsoft.CodeAnalysis.Emit.EmitOptions right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Emit.EmitOptions.op_Inequality(Microsoft.CodeAnalysis.Emit.EmitOptions,Microsoft.CodeAnalysis.Emit.EmitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As EmitOptions, right As EmitOptions) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.CodeAnalysis.Emit.EmitOptions * Microsoft.CodeAnalysis.Emit.EmitOptions -&gt; bool" Usage="Microsoft.CodeAnalysis.Emit.EmitOptions.op_Inequality (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::CodeAnalysis::Emit::EmitOptions ^ left, Microsoft::CodeAnalysis::Emit::EmitOptions ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.CodeAnalysis.Emit.EmitOptions" />
        <Parameter Name="right" Type="Microsoft.CodeAnalysis.Emit.EmitOptions" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputNameOverride">
      <MemberSignature Language="C#" Value="public string OutputNameOverride { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OutputNameOverride" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Emit.EmitOptions.OutputNameOverride" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputNameOverride As String" />
      <MemberSignature Language="F#" Value="member this.OutputNameOverride : string" Usage="Microsoft.CodeAnalysis.Emit.EmitOptions.OutputNameOverride" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OutputNameOverride { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ OutputNameOverride { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Assembly name override - file name and extension. If not specified the compilation name is used.
            </summary>
        <value>To be added.</value>
        <remarks>
            By default the name of the output assembly is <see cref="P:Microsoft.CodeAnalysis.Compilation.AssemblyName" />. Only in rare cases it is necessary
            to override the name.
            
            CAUTION: If this is set to a (non-null) value other than the existing compilation output name, then internals-visible-to
            and assembly references may not work as expected.  In particular, things that were visible at bind time, based on the 
            name of the compilation, may not be visible at runtime and vice-versa.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PdbFilePath">
      <MemberSignature Language="C#" Value="public string PdbFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PdbFilePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Emit.EmitOptions.PdbFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PdbFilePath As String" />
      <MemberSignature Language="F#" Value="member this.PdbFilePath : string" Usage="Microsoft.CodeAnalysis.Emit.EmitOptions.PdbFilePath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PdbFilePath { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ PdbFilePath { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the PDB file to be embedded in the PE image, or null to use the default.
            </summary>
        <value>To be added.</value>
        <remarks>
            If not specified the file name of the source module with an extension changed to "pdb" is used.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="RuntimeMetadataVersion">
      <MemberSignature Language="C#" Value="public string RuntimeMetadataVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RuntimeMetadataVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Emit.EmitOptions.RuntimeMetadataVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RuntimeMetadataVersion As String" />
      <MemberSignature Language="F#" Value="member this.RuntimeMetadataVersion : string" Usage="Microsoft.CodeAnalysis.Emit.EmitOptions.RuntimeMetadataVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RuntimeMetadataVersion { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Platform::String ^ RuntimeMetadataVersion { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Runtime metadata version. 
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubsystemVersion">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SubsystemVersion SubsystemVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SubsystemVersion SubsystemVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Emit.EmitOptions.SubsystemVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubsystemVersion As SubsystemVersion" />
      <MemberSignature Language="F#" Value="member this.SubsystemVersion : Microsoft.CodeAnalysis.SubsystemVersion" Usage="Microsoft.CodeAnalysis.Emit.EmitOptions.SubsystemVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SubsystemVersion SubsystemVersion { Microsoft::CodeAnalysis::SubsystemVersion get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SubsystemVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Subsystem version
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TolerateErrors">
      <MemberSignature Language="C#" Value="public bool TolerateErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TolerateErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Emit.EmitOptions.TolerateErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TolerateErrors As Boolean" />
      <MemberSignature Language="F#" Value="member this.TolerateErrors : bool" Usage="Microsoft.CodeAnalysis.Emit.EmitOptions.TolerateErrors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TolerateErrors { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool TolerateErrors { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Tolerate errors, producing a PE stream and a success result even in the presence of (some) errors. 
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithBaseAddress">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Emit.EmitOptions WithBaseAddress (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Emit.EmitOptions WithBaseAddress(unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithBaseAddress(System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithBaseAddress (value As ULong) As EmitOptions" />
      <MemberSignature Language="F#" Value="member this.WithBaseAddress : uint64 -&gt; Microsoft.CodeAnalysis.Emit.EmitOptions" Usage="emitOptions.WithBaseAddress value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Emit::EmitOptions ^ WithBaseAddress(System::UInt64 value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Emit.EmitOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDebugInformationFormat">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Emit.EmitOptions WithDebugInformationFormat (Microsoft.CodeAnalysis.Emit.DebugInformationFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Emit.EmitOptions WithDebugInformationFormat(valuetype Microsoft.CodeAnalysis.Emit.DebugInformationFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithDebugInformationFormat(Microsoft.CodeAnalysis.Emit.DebugInformationFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithDebugInformationFormat (format As DebugInformationFormat) As EmitOptions" />
      <MemberSignature Language="F#" Value="member this.WithDebugInformationFormat : Microsoft.CodeAnalysis.Emit.DebugInformationFormat -&gt; Microsoft.CodeAnalysis.Emit.EmitOptions" Usage="emitOptions.WithDebugInformationFormat format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Emit::EmitOptions ^ WithDebugInformationFormat(Microsoft::CodeAnalysis::Emit::DebugInformationFormat format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Emit.EmitOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="Microsoft.CodeAnalysis.Emit.DebugInformationFormat" />
      </Parameters>
      <Docs>
        <param name="format">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithEmitMetadataOnly">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Emit.EmitOptions WithEmitMetadataOnly (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Emit.EmitOptions WithEmitMetadataOnly(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithEmitMetadataOnly(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithEmitMetadataOnly (value As Boolean) As EmitOptions" />
      <MemberSignature Language="F#" Value="member this.WithEmitMetadataOnly : bool -&gt; Microsoft.CodeAnalysis.Emit.EmitOptions" Usage="emitOptions.WithEmitMetadataOnly value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Emit::EmitOptions ^ WithEmitMetadataOnly(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Emit.EmitOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithFileAlignment">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Emit.EmitOptions WithFileAlignment (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Emit.EmitOptions WithFileAlignment(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithFileAlignment(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithFileAlignment (value As Integer) As EmitOptions" />
      <MemberSignature Language="F#" Value="member this.WithFileAlignment : int -&gt; Microsoft.CodeAnalysis.Emit.EmitOptions" Usage="emitOptions.WithFileAlignment value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Emit::EmitOptions ^ WithFileAlignment(int value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Emit.EmitOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">Can be one of the following values: 0, 512, 1024, 2048, 4096, 8192</param>
        <summary>
            Sets the byte alignment for portable executable file sections.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithHighEntropyVirtualAddressSpace">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Emit.EmitOptions WithHighEntropyVirtualAddressSpace (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Emit.EmitOptions WithHighEntropyVirtualAddressSpace(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithHighEntropyVirtualAddressSpace(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithHighEntropyVirtualAddressSpace (value As Boolean) As EmitOptions" />
      <MemberSignature Language="F#" Value="member this.WithHighEntropyVirtualAddressSpace : bool -&gt; Microsoft.CodeAnalysis.Emit.EmitOptions" Usage="emitOptions.WithHighEntropyVirtualAddressSpace value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Emit::EmitOptions ^ WithHighEntropyVirtualAddressSpace(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Emit.EmitOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithIncludePrivateMembers">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Emit.EmitOptions WithIncludePrivateMembers (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Emit.EmitOptions WithIncludePrivateMembers(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithIncludePrivateMembers(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithIncludePrivateMembers (value As Boolean) As EmitOptions" />
      <MemberSignature Language="F#" Value="member this.WithIncludePrivateMembers : bool -&gt; Microsoft.CodeAnalysis.Emit.EmitOptions" Usage="emitOptions.WithIncludePrivateMembers value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Emit::EmitOptions ^ WithIncludePrivateMembers(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Emit.EmitOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithInstrumentationKinds">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Emit.EmitOptions WithInstrumentationKinds (System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.Emit.InstrumentationKind&gt; instrumentationKinds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Emit.EmitOptions WithInstrumentationKinds(valuetype System.Collections.Immutable.ImmutableArray`1&lt;valuetype Microsoft.CodeAnalysis.Emit.InstrumentationKind&gt; instrumentationKinds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithInstrumentationKinds(System.Collections.Immutable.ImmutableArray{Microsoft.CodeAnalysis.Emit.InstrumentationKind})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithInstrumentationKinds (instrumentationKinds As ImmutableArray(Of InstrumentationKind)) As EmitOptions" />
      <MemberSignature Language="F#" Value="member this.WithInstrumentationKinds : System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.Emit.InstrumentationKind&gt; -&gt; Microsoft.CodeAnalysis.Emit.EmitOptions" Usage="emitOptions.WithInstrumentationKinds instrumentationKinds" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Emit::EmitOptions ^ WithInstrumentationKinds(System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::Emit::InstrumentationKind&gt; instrumentationKinds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Emit.EmitOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instrumentationKinds" Type="System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.Emit.InstrumentationKind&gt;" />
      </Parameters>
      <Docs>
        <param name="instrumentationKinds">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithOutputNameOverride">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Emit.EmitOptions WithOutputNameOverride (string outputName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Emit.EmitOptions WithOutputNameOverride(string outputName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithOutputNameOverride(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithOutputNameOverride (outputName As String) As EmitOptions" />
      <MemberSignature Language="F#" Value="member this.WithOutputNameOverride : string -&gt; Microsoft.CodeAnalysis.Emit.EmitOptions" Usage="emitOptions.WithOutputNameOverride outputName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Emit::EmitOptions ^ WithOutputNameOverride(System::String ^ outputName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Emit.EmitOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outputName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outputName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithPdbFilePath">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Emit.EmitOptions WithPdbFilePath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Emit.EmitOptions WithPdbFilePath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithPdbFilePath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithPdbFilePath (path As String) As EmitOptions" />
      <MemberSignature Language="F#" Value="member this.WithPdbFilePath : string -&gt; Microsoft.CodeAnalysis.Emit.EmitOptions" Usage="emitOptions.WithPdbFilePath path" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Emit::EmitOptions ^ WithPdbFilePath(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Emit.EmitOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithRuntimeMetadataVersion">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Emit.EmitOptions WithRuntimeMetadataVersion (string version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Emit.EmitOptions WithRuntimeMetadataVersion(string version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithRuntimeMetadataVersion(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithRuntimeMetadataVersion (version As String) As EmitOptions" />
      <MemberSignature Language="F#" Value="member this.WithRuntimeMetadataVersion : string -&gt; Microsoft.CodeAnalysis.Emit.EmitOptions" Usage="emitOptions.WithRuntimeMetadataVersion version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Emit::EmitOptions ^ WithRuntimeMetadataVersion(System::String ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Emit.EmitOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="version">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSubsystemVersion">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Emit.EmitOptions WithSubsystemVersion (Microsoft.CodeAnalysis.SubsystemVersion subsystemVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Emit.EmitOptions WithSubsystemVersion(valuetype Microsoft.CodeAnalysis.SubsystemVersion subsystemVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithSubsystemVersion(Microsoft.CodeAnalysis.SubsystemVersion)" />
      <MemberSignature Language="F#" Value="member this.WithSubsystemVersion : Microsoft.CodeAnalysis.SubsystemVersion -&gt; Microsoft.CodeAnalysis.Emit.EmitOptions" Usage="emitOptions.WithSubsystemVersion subsystemVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Emit::EmitOptions ^ WithSubsystemVersion(Microsoft::CodeAnalysis::SubsystemVersion subsystemVersion);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Emit.EmitOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subsystemVersion" Type="Microsoft.CodeAnalysis.SubsystemVersion" />
      </Parameters>
      <Docs>
        <param name="subsystemVersion">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithTolerateErrors">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Emit.EmitOptions WithTolerateErrors (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Emit.EmitOptions WithTolerateErrors(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Emit.EmitOptions.WithTolerateErrors(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithTolerateErrors (value As Boolean) As EmitOptions" />
      <MemberSignature Language="F#" Value="member this.WithTolerateErrors : bool -&gt; Microsoft.CodeAnalysis.Emit.EmitOptions" Usage="emitOptions.WithTolerateErrors value" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::Emit::EmitOptions ^ WithTolerateErrors(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Emit.EmitOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>