<Type Name="CSharpCompilationOptions" FullName="Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions">
  <TypeSignature Language="C#" Value="public sealed class CSharpCompilationOptions : Microsoft.CodeAnalysis.CompilationOptions, IEquatable&lt;Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CSharpCompilationOptions extends Microsoft.CodeAnalysis.CompilationOptions implements class System.IEquatable`1&lt;class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.CompilationOptions</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents various options that affect compilation, such as 
            whether to emit an executable or a library, whether to optimize
            generated code, and so on.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpCompilationOptions (Microsoft.CodeAnalysis.OutputKind outputKind, string moduleName, string mainTypeName, string scriptClassName, System.Collections.Generic.IEnumerable&lt;string&gt; usings, Microsoft.CodeAnalysis.OptimizationLevel optimizationLevel, bool checkOverflow, bool allowUnsafe, string cryptoKeyContainer, string cryptoKeyFile, System.Collections.Immutable.ImmutableArray&lt;byte&gt; cryptoPublicKey, Nullable&lt;bool&gt; delaySign, Microsoft.CodeAnalysis.Platform platform, Microsoft.CodeAnalysis.ReportDiagnostic generalDiagnosticOption, int warningLevel, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Microsoft.CodeAnalysis.ReportDiagnostic&gt;&gt; specificDiagnosticOptions, bool concurrentBuild, Microsoft.CodeAnalysis.XmlReferenceResolver xmlReferenceResolver, Microsoft.CodeAnalysis.SourceReferenceResolver sourceReferenceResolver, Microsoft.CodeAnalysis.MetadataReferenceResolver metadataReferenceResolver, Microsoft.CodeAnalysis.AssemblyIdentityComparer assemblyIdentityComparer, Microsoft.CodeAnalysis.StrongNameProvider strongNameProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.CodeAnalysis.OutputKind outputKind, string moduleName, string mainTypeName, string scriptClassName, class System.Collections.Generic.IEnumerable`1&lt;string&gt; usings, valuetype Microsoft.CodeAnalysis.OptimizationLevel optimizationLevel, bool checkOverflow, bool allowUnsafe, string cryptoKeyContainer, string cryptoKeyFile, valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; cryptoPublicKey, valuetype System.Nullable`1&lt;bool&gt; delaySign, valuetype Microsoft.CodeAnalysis.Platform platform, valuetype Microsoft.CodeAnalysis.ReportDiagnostic generalDiagnosticOption, int32 warningLevel, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, valuetype Microsoft.CodeAnalysis.ReportDiagnostic&gt;&gt; specificDiagnosticOptions, bool concurrentBuild, class Microsoft.CodeAnalysis.XmlReferenceResolver xmlReferenceResolver, class Microsoft.CodeAnalysis.SourceReferenceResolver sourceReferenceResolver, class Microsoft.CodeAnalysis.MetadataReferenceResolver metadataReferenceResolver, class Microsoft.CodeAnalysis.AssemblyIdentityComparer assemblyIdentityComparer, class Microsoft.CodeAnalysis.StrongNameProvider strongNameProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.#ctor(Microsoft.CodeAnalysis.OutputKind,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.OptimizationLevel,System.Boolean,System.Boolean,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Nullable{System.Boolean},Microsoft.CodeAnalysis.Platform,Microsoft.CodeAnalysis.ReportDiagnostic,System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}},System.Boolean,Microsoft.CodeAnalysis.XmlReferenceResolver,Microsoft.CodeAnalysis.SourceReferenceResolver,Microsoft.CodeAnalysis.MetadataReferenceResolver,Microsoft.CodeAnalysis.AssemblyIdentityComparer,Microsoft.CodeAnalysis.StrongNameProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="outputKind" Type="Microsoft.CodeAnalysis.OutputKind" />
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="mainTypeName" Type="System.String" />
        <Parameter Name="scriptClassName" Type="System.String" />
        <Parameter Name="usings" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="optimizationLevel" Type="Microsoft.CodeAnalysis.OptimizationLevel" />
        <Parameter Name="checkOverflow" Type="System.Boolean" />
        <Parameter Name="allowUnsafe" Type="System.Boolean" />
        <Parameter Name="cryptoKeyContainer" Type="System.String" />
        <Parameter Name="cryptoKeyFile" Type="System.String" />
        <Parameter Name="cryptoPublicKey" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" />
        <Parameter Name="delaySign" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="platform" Type="Microsoft.CodeAnalysis.Platform" />
        <Parameter Name="generalDiagnosticOption" Type="Microsoft.CodeAnalysis.ReportDiagnostic" />
        <Parameter Name="warningLevel" Type="System.Int32" />
        <Parameter Name="specificDiagnosticOptions" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,Microsoft.CodeAnalysis.ReportDiagnostic&gt;&gt;" />
        <Parameter Name="concurrentBuild" Type="System.Boolean" />
        <Parameter Name="xmlReferenceResolver" Type="Microsoft.CodeAnalysis.XmlReferenceResolver" />
        <Parameter Name="sourceReferenceResolver" Type="Microsoft.CodeAnalysis.SourceReferenceResolver" />
        <Parameter Name="metadataReferenceResolver" Type="Microsoft.CodeAnalysis.MetadataReferenceResolver" />
        <Parameter Name="assemblyIdentityComparer" Type="Microsoft.CodeAnalysis.AssemblyIdentityComparer" />
        <Parameter Name="strongNameProvider" Type="Microsoft.CodeAnalysis.StrongNameProvider" />
      </Parameters>
      <Docs>
        <param name="outputKind">To be added.</param>
        <param name="moduleName">To be added.</param>
        <param name="mainTypeName">To be added.</param>
        <param name="scriptClassName">To be added.</param>
        <param name="usings">To be added.</param>
        <param name="optimizationLevel">To be added.</param>
        <param name="checkOverflow">To be added.</param>
        <param name="allowUnsafe">To be added.</param>
        <param name="cryptoKeyContainer">To be added.</param>
        <param name="cryptoKeyFile">To be added.</param>
        <param name="cryptoPublicKey">To be added.</param>
        <param name="delaySign">To be added.</param>
        <param name="platform">To be added.</param>
        <param name="generalDiagnosticOption">To be added.</param>
        <param name="warningLevel">To be added.</param>
        <param name="specificDiagnosticOptions">To be added.</param>
        <param name="concurrentBuild">To be added.</param>
        <param name="xmlReferenceResolver">To be added.</param>
        <param name="sourceReferenceResolver">To be added.</param>
        <param name="metadataReferenceResolver">To be added.</param>
        <param name="assemblyIdentityComparer">To be added.</param>
        <param name="strongNameProvider">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpCompilationOptions (Microsoft.CodeAnalysis.OutputKind outputKind, string moduleName, string mainTypeName, string scriptClassName, System.Collections.Generic.IEnumerable&lt;string&gt; usings, Microsoft.CodeAnalysis.OptimizationLevel optimizationLevel, bool checkOverflow, bool allowUnsafe, string cryptoKeyContainer, string cryptoKeyFile, System.Collections.Immutable.ImmutableArray&lt;byte&gt; cryptoPublicKey, Nullable&lt;bool&gt; delaySign, Microsoft.CodeAnalysis.Platform platform, Microsoft.CodeAnalysis.ReportDiagnostic generalDiagnosticOption, int warningLevel, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Microsoft.CodeAnalysis.ReportDiagnostic&gt;&gt; specificDiagnosticOptions, bool concurrentBuild, bool deterministic, Microsoft.CodeAnalysis.XmlReferenceResolver xmlReferenceResolver, Microsoft.CodeAnalysis.SourceReferenceResolver sourceReferenceResolver, Microsoft.CodeAnalysis.MetadataReferenceResolver metadataReferenceResolver, Microsoft.CodeAnalysis.AssemblyIdentityComparer assemblyIdentityComparer, Microsoft.CodeAnalysis.StrongNameProvider strongNameProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.CodeAnalysis.OutputKind outputKind, string moduleName, string mainTypeName, string scriptClassName, class System.Collections.Generic.IEnumerable`1&lt;string&gt; usings, valuetype Microsoft.CodeAnalysis.OptimizationLevel optimizationLevel, bool checkOverflow, bool allowUnsafe, string cryptoKeyContainer, string cryptoKeyFile, valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; cryptoPublicKey, valuetype System.Nullable`1&lt;bool&gt; delaySign, valuetype Microsoft.CodeAnalysis.Platform platform, valuetype Microsoft.CodeAnalysis.ReportDiagnostic generalDiagnosticOption, int32 warningLevel, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, valuetype Microsoft.CodeAnalysis.ReportDiagnostic&gt;&gt; specificDiagnosticOptions, bool concurrentBuild, bool deterministic, class Microsoft.CodeAnalysis.XmlReferenceResolver xmlReferenceResolver, class Microsoft.CodeAnalysis.SourceReferenceResolver sourceReferenceResolver, class Microsoft.CodeAnalysis.MetadataReferenceResolver metadataReferenceResolver, class Microsoft.CodeAnalysis.AssemblyIdentityComparer assemblyIdentityComparer, class Microsoft.CodeAnalysis.StrongNameProvider strongNameProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.#ctor(Microsoft.CodeAnalysis.OutputKind,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.OptimizationLevel,System.Boolean,System.Boolean,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Nullable{System.Boolean},Microsoft.CodeAnalysis.Platform,Microsoft.CodeAnalysis.ReportDiagnostic,System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}},System.Boolean,System.Boolean,Microsoft.CodeAnalysis.XmlReferenceResolver,Microsoft.CodeAnalysis.SourceReferenceResolver,Microsoft.CodeAnalysis.MetadataReferenceResolver,Microsoft.CodeAnalysis.AssemblyIdentityComparer,Microsoft.CodeAnalysis.StrongNameProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="outputKind" Type="Microsoft.CodeAnalysis.OutputKind" />
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="mainTypeName" Type="System.String" />
        <Parameter Name="scriptClassName" Type="System.String" />
        <Parameter Name="usings" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="optimizationLevel" Type="Microsoft.CodeAnalysis.OptimizationLevel" />
        <Parameter Name="checkOverflow" Type="System.Boolean" />
        <Parameter Name="allowUnsafe" Type="System.Boolean" />
        <Parameter Name="cryptoKeyContainer" Type="System.String" />
        <Parameter Name="cryptoKeyFile" Type="System.String" />
        <Parameter Name="cryptoPublicKey" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" />
        <Parameter Name="delaySign" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="platform" Type="Microsoft.CodeAnalysis.Platform" />
        <Parameter Name="generalDiagnosticOption" Type="Microsoft.CodeAnalysis.ReportDiagnostic" />
        <Parameter Name="warningLevel" Type="System.Int32" />
        <Parameter Name="specificDiagnosticOptions" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,Microsoft.CodeAnalysis.ReportDiagnostic&gt;&gt;" />
        <Parameter Name="concurrentBuild" Type="System.Boolean" />
        <Parameter Name="deterministic" Type="System.Boolean" />
        <Parameter Name="xmlReferenceResolver" Type="Microsoft.CodeAnalysis.XmlReferenceResolver" />
        <Parameter Name="sourceReferenceResolver" Type="Microsoft.CodeAnalysis.SourceReferenceResolver" />
        <Parameter Name="metadataReferenceResolver" Type="Microsoft.CodeAnalysis.MetadataReferenceResolver" />
        <Parameter Name="assemblyIdentityComparer" Type="Microsoft.CodeAnalysis.AssemblyIdentityComparer" />
        <Parameter Name="strongNameProvider" Type="Microsoft.CodeAnalysis.StrongNameProvider" />
      </Parameters>
      <Docs>
        <param name="outputKind">To be added.</param>
        <param name="moduleName">To be added.</param>
        <param name="mainTypeName">To be added.</param>
        <param name="scriptClassName">To be added.</param>
        <param name="usings">To be added.</param>
        <param name="optimizationLevel">To be added.</param>
        <param name="checkOverflow">To be added.</param>
        <param name="allowUnsafe">To be added.</param>
        <param name="cryptoKeyContainer">To be added.</param>
        <param name="cryptoKeyFile">To be added.</param>
        <param name="cryptoPublicKey">To be added.</param>
        <param name="delaySign">To be added.</param>
        <param name="platform">To be added.</param>
        <param name="generalDiagnosticOption">To be added.</param>
        <param name="warningLevel">To be added.</param>
        <param name="specificDiagnosticOptions">To be added.</param>
        <param name="concurrentBuild">To be added.</param>
        <param name="deterministic">To be added.</param>
        <param name="xmlReferenceResolver">To be added.</param>
        <param name="sourceReferenceResolver">To be added.</param>
        <param name="metadataReferenceResolver">To be added.</param>
        <param name="assemblyIdentityComparer">To be added.</param>
        <param name="strongNameProvider">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpCompilationOptions (Microsoft.CodeAnalysis.OutputKind outputKind, bool reportSuppressedDiagnostics, string moduleName, string mainTypeName, string scriptClassName, System.Collections.Generic.IEnumerable&lt;string&gt; usings, Microsoft.CodeAnalysis.OptimizationLevel optimizationLevel, bool checkOverflow, bool allowUnsafe, string cryptoKeyContainer, string cryptoKeyFile, System.Collections.Immutable.ImmutableArray&lt;byte&gt; cryptoPublicKey, Nullable&lt;bool&gt; delaySign, Microsoft.CodeAnalysis.Platform platform, Microsoft.CodeAnalysis.ReportDiagnostic generalDiagnosticOption, int warningLevel, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Microsoft.CodeAnalysis.ReportDiagnostic&gt;&gt; specificDiagnosticOptions, bool concurrentBuild, bool deterministic, Microsoft.CodeAnalysis.XmlReferenceResolver xmlReferenceResolver, Microsoft.CodeAnalysis.SourceReferenceResolver sourceReferenceResolver, Microsoft.CodeAnalysis.MetadataReferenceResolver metadataReferenceResolver, Microsoft.CodeAnalysis.AssemblyIdentityComparer assemblyIdentityComparer, Microsoft.CodeAnalysis.StrongNameProvider strongNameProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.CodeAnalysis.OutputKind outputKind, bool reportSuppressedDiagnostics, string moduleName, string mainTypeName, string scriptClassName, class System.Collections.Generic.IEnumerable`1&lt;string&gt; usings, valuetype Microsoft.CodeAnalysis.OptimizationLevel optimizationLevel, bool checkOverflow, bool allowUnsafe, string cryptoKeyContainer, string cryptoKeyFile, valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; cryptoPublicKey, valuetype System.Nullable`1&lt;bool&gt; delaySign, valuetype Microsoft.CodeAnalysis.Platform platform, valuetype Microsoft.CodeAnalysis.ReportDiagnostic generalDiagnosticOption, int32 warningLevel, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, valuetype Microsoft.CodeAnalysis.ReportDiagnostic&gt;&gt; specificDiagnosticOptions, bool concurrentBuild, bool deterministic, class Microsoft.CodeAnalysis.XmlReferenceResolver xmlReferenceResolver, class Microsoft.CodeAnalysis.SourceReferenceResolver sourceReferenceResolver, class Microsoft.CodeAnalysis.MetadataReferenceResolver metadataReferenceResolver, class Microsoft.CodeAnalysis.AssemblyIdentityComparer assemblyIdentityComparer, class Microsoft.CodeAnalysis.StrongNameProvider strongNameProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.#ctor(Microsoft.CodeAnalysis.OutputKind,System.Boolean,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.OptimizationLevel,System.Boolean,System.Boolean,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Nullable{System.Boolean},Microsoft.CodeAnalysis.Platform,Microsoft.CodeAnalysis.ReportDiagnostic,System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}},System.Boolean,System.Boolean,Microsoft.CodeAnalysis.XmlReferenceResolver,Microsoft.CodeAnalysis.SourceReferenceResolver,Microsoft.CodeAnalysis.MetadataReferenceResolver,Microsoft.CodeAnalysis.AssemblyIdentityComparer,Microsoft.CodeAnalysis.StrongNameProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="outputKind" Type="Microsoft.CodeAnalysis.OutputKind" />
        <Parameter Name="reportSuppressedDiagnostics" Type="System.Boolean" />
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="mainTypeName" Type="System.String" />
        <Parameter Name="scriptClassName" Type="System.String" />
        <Parameter Name="usings" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="optimizationLevel" Type="Microsoft.CodeAnalysis.OptimizationLevel" />
        <Parameter Name="checkOverflow" Type="System.Boolean" />
        <Parameter Name="allowUnsafe" Type="System.Boolean" />
        <Parameter Name="cryptoKeyContainer" Type="System.String" />
        <Parameter Name="cryptoKeyFile" Type="System.String" />
        <Parameter Name="cryptoPublicKey" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" />
        <Parameter Name="delaySign" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="platform" Type="Microsoft.CodeAnalysis.Platform" />
        <Parameter Name="generalDiagnosticOption" Type="Microsoft.CodeAnalysis.ReportDiagnostic" />
        <Parameter Name="warningLevel" Type="System.Int32" />
        <Parameter Name="specificDiagnosticOptions" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,Microsoft.CodeAnalysis.ReportDiagnostic&gt;&gt;" />
        <Parameter Name="concurrentBuild" Type="System.Boolean" />
        <Parameter Name="deterministic" Type="System.Boolean" />
        <Parameter Name="xmlReferenceResolver" Type="Microsoft.CodeAnalysis.XmlReferenceResolver" />
        <Parameter Name="sourceReferenceResolver" Type="Microsoft.CodeAnalysis.SourceReferenceResolver" />
        <Parameter Name="metadataReferenceResolver" Type="Microsoft.CodeAnalysis.MetadataReferenceResolver" />
        <Parameter Name="assemblyIdentityComparer" Type="Microsoft.CodeAnalysis.AssemblyIdentityComparer" />
        <Parameter Name="strongNameProvider" Type="Microsoft.CodeAnalysis.StrongNameProvider" />
      </Parameters>
      <Docs>
        <param name="outputKind">To be added.</param>
        <param name="reportSuppressedDiagnostics">To be added.</param>
        <param name="moduleName">To be added.</param>
        <param name="mainTypeName">To be added.</param>
        <param name="scriptClassName">To be added.</param>
        <param name="usings">To be added.</param>
        <param name="optimizationLevel">To be added.</param>
        <param name="checkOverflow">To be added.</param>
        <param name="allowUnsafe">To be added.</param>
        <param name="cryptoKeyContainer">To be added.</param>
        <param name="cryptoKeyFile">To be added.</param>
        <param name="cryptoPublicKey">To be added.</param>
        <param name="delaySign">To be added.</param>
        <param name="platform">To be added.</param>
        <param name="generalDiagnosticOption">To be added.</param>
        <param name="warningLevel">To be added.</param>
        <param name="specificDiagnosticOptions">To be added.</param>
        <param name="concurrentBuild">To be added.</param>
        <param name="deterministic">To be added.</param>
        <param name="xmlReferenceResolver">To be added.</param>
        <param name="sourceReferenceResolver">To be added.</param>
        <param name="metadataReferenceResolver">To be added.</param>
        <param name="assemblyIdentityComparer">To be added.</param>
        <param name="strongNameProvider">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CSharpCompilationOptions (Microsoft.CodeAnalysis.OutputKind outputKind, bool reportSuppressedDiagnostics = false, string moduleName = null, string mainTypeName = null, string scriptClassName = null, System.Collections.Generic.IEnumerable&lt;string&gt; usings = null, Microsoft.CodeAnalysis.OptimizationLevel optimizationLevel = Microsoft.CodeAnalysis.OptimizationLevel.Debug, bool checkOverflow = false, bool allowUnsafe = false, string cryptoKeyContainer = null, string cryptoKeyFile = null, System.Collections.Immutable.ImmutableArray&lt;byte&gt; cryptoPublicKey = null, Nullable&lt;bool&gt; delaySign = null, Microsoft.CodeAnalysis.Platform platform = Microsoft.CodeAnalysis.Platform.AnyCpu, Microsoft.CodeAnalysis.ReportDiagnostic generalDiagnosticOption = Microsoft.CodeAnalysis.ReportDiagnostic.Default, int warningLevel = 4, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Microsoft.CodeAnalysis.ReportDiagnostic&gt;&gt; specificDiagnosticOptions = null, bool concurrentBuild = true, bool deterministic = false, Microsoft.CodeAnalysis.XmlReferenceResolver xmlReferenceResolver = null, Microsoft.CodeAnalysis.SourceReferenceResolver sourceReferenceResolver = null, Microsoft.CodeAnalysis.MetadataReferenceResolver metadataReferenceResolver = null, Microsoft.CodeAnalysis.AssemblyIdentityComparer assemblyIdentityComparer = null, Microsoft.CodeAnalysis.StrongNameProvider strongNameProvider = null, bool publicSign = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.CodeAnalysis.OutputKind outputKind, bool reportSuppressedDiagnostics, string moduleName, string mainTypeName, string scriptClassName, class System.Collections.Generic.IEnumerable`1&lt;string&gt; usings, valuetype Microsoft.CodeAnalysis.OptimizationLevel optimizationLevel, bool checkOverflow, bool allowUnsafe, string cryptoKeyContainer, string cryptoKeyFile, valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; cryptoPublicKey, valuetype System.Nullable`1&lt;bool&gt; delaySign, valuetype Microsoft.CodeAnalysis.Platform platform, valuetype Microsoft.CodeAnalysis.ReportDiagnostic generalDiagnosticOption, int32 warningLevel, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, valuetype Microsoft.CodeAnalysis.ReportDiagnostic&gt;&gt; specificDiagnosticOptions, bool concurrentBuild, bool deterministic, class Microsoft.CodeAnalysis.XmlReferenceResolver xmlReferenceResolver, class Microsoft.CodeAnalysis.SourceReferenceResolver sourceReferenceResolver, class Microsoft.CodeAnalysis.MetadataReferenceResolver metadataReferenceResolver, class Microsoft.CodeAnalysis.AssemblyIdentityComparer assemblyIdentityComparer, class Microsoft.CodeAnalysis.StrongNameProvider strongNameProvider, bool publicSign) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.#ctor(Microsoft.CodeAnalysis.OutputKind,System.Boolean,System.String,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.OptimizationLevel,System.Boolean,System.Boolean,System.String,System.String,System.Collections.Immutable.ImmutableArray{System.Byte},System.Nullable{System.Boolean},Microsoft.CodeAnalysis.Platform,Microsoft.CodeAnalysis.ReportDiagnostic,System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}},System.Boolean,System.Boolean,Microsoft.CodeAnalysis.XmlReferenceResolver,Microsoft.CodeAnalysis.SourceReferenceResolver,Microsoft.CodeAnalysis.MetadataReferenceResolver,Microsoft.CodeAnalysis.AssemblyIdentityComparer,Microsoft.CodeAnalysis.StrongNameProvider,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="outputKind" Type="Microsoft.CodeAnalysis.OutputKind" />
        <Parameter Name="reportSuppressedDiagnostics" Type="System.Boolean" />
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="mainTypeName" Type="System.String" />
        <Parameter Name="scriptClassName" Type="System.String" />
        <Parameter Name="usings" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="optimizationLevel" Type="Microsoft.CodeAnalysis.OptimizationLevel" />
        <Parameter Name="checkOverflow" Type="System.Boolean" />
        <Parameter Name="allowUnsafe" Type="System.Boolean" />
        <Parameter Name="cryptoKeyContainer" Type="System.String" />
        <Parameter Name="cryptoKeyFile" Type="System.String" />
        <Parameter Name="cryptoPublicKey" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" />
        <Parameter Name="delaySign" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="platform" Type="Microsoft.CodeAnalysis.Platform" />
        <Parameter Name="generalDiagnosticOption" Type="Microsoft.CodeAnalysis.ReportDiagnostic" />
        <Parameter Name="warningLevel" Type="System.Int32" />
        <Parameter Name="specificDiagnosticOptions" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,Microsoft.CodeAnalysis.ReportDiagnostic&gt;&gt;" />
        <Parameter Name="concurrentBuild" Type="System.Boolean" />
        <Parameter Name="deterministic" Type="System.Boolean" />
        <Parameter Name="xmlReferenceResolver" Type="Microsoft.CodeAnalysis.XmlReferenceResolver" />
        <Parameter Name="sourceReferenceResolver" Type="Microsoft.CodeAnalysis.SourceReferenceResolver" />
        <Parameter Name="metadataReferenceResolver" Type="Microsoft.CodeAnalysis.MetadataReferenceResolver" />
        <Parameter Name="assemblyIdentityComparer" Type="Microsoft.CodeAnalysis.AssemblyIdentityComparer" />
        <Parameter Name="strongNameProvider" Type="Microsoft.CodeAnalysis.StrongNameProvider" />
        <Parameter Name="publicSign" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="outputKind">To be added.</param>
        <param name="reportSuppressedDiagnostics">To be added.</param>
        <param name="moduleName">To be added.</param>
        <param name="mainTypeName">To be added.</param>
        <param name="scriptClassName">To be added.</param>
        <param name="usings">To be added.</param>
        <param name="optimizationLevel">To be added.</param>
        <param name="checkOverflow">To be added.</param>
        <param name="allowUnsafe">To be added.</param>
        <param name="cryptoKeyContainer">To be added.</param>
        <param name="cryptoKeyFile">To be added.</param>
        <param name="cryptoPublicKey">To be added.</param>
        <param name="delaySign">To be added.</param>
        <param name="platform">To be added.</param>
        <param name="generalDiagnosticOption">To be added.</param>
        <param name="warningLevel">To be added.</param>
        <param name="specificDiagnosticOptions">To be added.</param>
        <param name="concurrentBuild">To be added.</param>
        <param name="deterministic">To be added.</param>
        <param name="xmlReferenceResolver">To be added.</param>
        <param name="sourceReferenceResolver">To be added.</param>
        <param name="metadataReferenceResolver">To be added.</param>
        <param name="assemblyIdentityComparer">To be added.</param>
        <param name="strongNameProvider">To be added.</param>
        <param name="publicSign">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowUnsafe">
      <MemberSignature Language="C#" Value="public bool AllowUnsafe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUnsafe" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.AllowUnsafe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Allow unsafe regions (i.e. unsafe modifiers on members and unsafe blocks).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithAssemblyIdentityComparer">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithAssemblyIdentityComparer (Microsoft.CodeAnalysis.AssemblyIdentityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithAssemblyIdentityComparer(class Microsoft.CodeAnalysis.AssemblyIdentityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithAssemblyIdentityComparer(Microsoft.CodeAnalysis.AssemblyIdentityComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="Microsoft.CodeAnalysis.AssemblyIdentityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithCheckOverflow">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithCheckOverflow (bool checkOverflow);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithCheckOverflow(bool checkOverflow) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithCheckOverflow(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="checkOverflow" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="checkOverflow">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithConcurrentBuild">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithConcurrentBuild (bool concurrent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithConcurrentBuild(bool concurrent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithConcurrentBuild(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="concurrent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="concurrent">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithCryptoKeyContainer">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithCryptoKeyContainer (string cryptoKeyContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithCryptoKeyContainer(string cryptoKeyContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithCryptoKeyContainer(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cryptoKeyContainer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cryptoKeyContainer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithCryptoKeyFile">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithCryptoKeyFile (string cryptoKeyFile);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithCryptoKeyFile(string cryptoKeyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithCryptoKeyFile(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cryptoKeyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="cryptoKeyFile">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithCryptoPublicKey">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithCryptoPublicKey (System.Collections.Immutable.ImmutableArray&lt;byte&gt; cryptoPublicKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithCryptoPublicKey(valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; cryptoPublicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithCryptoPublicKey(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cryptoPublicKey" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="cryptoPublicKey">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithDelaySign">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithDelaySign (Nullable&lt;bool&gt; delaySign);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithDelaySign(valuetype System.Nullable`1&lt;bool&gt; delaySign) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithDelaySign(System.Nullable{System.Boolean})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delaySign" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="delaySign">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithDeterministic">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithDeterministic (bool deterministic);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithDeterministic(bool deterministic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithDeterministic(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deterministic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deterministic">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithFeatures">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithFeatures (System.Collections.Immutable.ImmutableArray&lt;string&gt; features);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithFeatures(valuetype System.Collections.Immutable.ImmutableArray`1&lt;string&gt; features) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithFeatures(System.Collections.Immutable.ImmutableArray{System.String})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="features" Type="System.Collections.Immutable.ImmutableArray&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="features">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithGeneralDiagnosticOption">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithGeneralDiagnosticOption (Microsoft.CodeAnalysis.ReportDiagnostic value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithGeneralDiagnosticOption(valuetype Microsoft.CodeAnalysis.ReportDiagnostic value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithGeneralDiagnosticOption(Microsoft.CodeAnalysis.ReportDiagnostic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Microsoft.CodeAnalysis.ReportDiagnostic" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithMainTypeName">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithMainTypeName (string mainTypeName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithMainTypeName(string mainTypeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithMainTypeName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mainTypeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mainTypeName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithMetadataReferenceResolver">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithMetadataReferenceResolver (Microsoft.CodeAnalysis.MetadataReferenceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithMetadataReferenceResolver(class Microsoft.CodeAnalysis.MetadataReferenceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithMetadataReferenceResolver(Microsoft.CodeAnalysis.MetadataReferenceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Microsoft.CodeAnalysis.MetadataReferenceResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithModuleName">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithModuleName (string moduleName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithModuleName(string moduleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithModuleName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="moduleName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithOptimizationLevel">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithOptimizationLevel (Microsoft.CodeAnalysis.OptimizationLevel value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithOptimizationLevel(valuetype Microsoft.CodeAnalysis.OptimizationLevel value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithOptimizationLevel(Microsoft.CodeAnalysis.OptimizationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Microsoft.CodeAnalysis.OptimizationLevel" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithOutputKind">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithOutputKind (Microsoft.CodeAnalysis.OutputKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithOutputKind(valuetype Microsoft.CodeAnalysis.OutputKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithOutputKind(Microsoft.CodeAnalysis.OutputKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.OutputKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithPlatform">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithPlatform (Microsoft.CodeAnalysis.Platform platform);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithPlatform(valuetype Microsoft.CodeAnalysis.Platform platform) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithPlatform(Microsoft.CodeAnalysis.Platform)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="platform" Type="Microsoft.CodeAnalysis.Platform" />
      </Parameters>
      <Docs>
        <param name="platform">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithPublicSign">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithPublicSign (bool publicSign);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithPublicSign(bool publicSign) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithPublicSign(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicSign" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="publicSign">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithReportSuppressedDiagnostics">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithReportSuppressedDiagnostics (bool reportSuppressedDiagnostics);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithReportSuppressedDiagnostics(bool reportSuppressedDiagnostics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithReportSuppressedDiagnostics(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reportSuppressedDiagnostics" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reportSuppressedDiagnostics">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithScriptClassName">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithScriptClassName (string scriptClassName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithScriptClassName(string scriptClassName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithScriptClassName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scriptClassName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scriptClassName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithSourceReferenceResolver">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithSourceReferenceResolver (Microsoft.CodeAnalysis.SourceReferenceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithSourceReferenceResolver(class Microsoft.CodeAnalysis.SourceReferenceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithSourceReferenceResolver(Microsoft.CodeAnalysis.SourceReferenceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Microsoft.CodeAnalysis.SourceReferenceResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithSpecificDiagnosticOptions">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithSpecificDiagnosticOptions (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Microsoft.CodeAnalysis.ReportDiagnostic&gt;&gt; specificDiagnosticOptions);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithSpecificDiagnosticOptions(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, valuetype Microsoft.CodeAnalysis.ReportDiagnostic&gt;&gt; specificDiagnosticOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithSpecificDiagnosticOptions(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="specificDiagnosticOptions" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,Microsoft.CodeAnalysis.ReportDiagnostic&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="specificDiagnosticOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithSpecificDiagnosticOptions">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithSpecificDiagnosticOptions (System.Collections.Immutable.ImmutableDictionary&lt;string,Microsoft.CodeAnalysis.ReportDiagnostic&gt; specificDiagnosticOptions);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithSpecificDiagnosticOptions(class System.Collections.Immutable.ImmutableDictionary`2&lt;string, valuetype Microsoft.CodeAnalysis.ReportDiagnostic&gt; specificDiagnosticOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithSpecificDiagnosticOptions(System.Collections.Immutable.ImmutableDictionary{System.String,Microsoft.CodeAnalysis.ReportDiagnostic})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="specificDiagnosticOptions" Type="System.Collections.Immutable.ImmutableDictionary&lt;System.String,Microsoft.CodeAnalysis.ReportDiagnostic&gt;" />
      </Parameters>
      <Docs>
        <param name="specificDiagnosticOptions">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithStrongNameProvider">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithStrongNameProvider (Microsoft.CodeAnalysis.StrongNameProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithStrongNameProvider(class Microsoft.CodeAnalysis.StrongNameProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithStrongNameProvider(Microsoft.CodeAnalysis.StrongNameProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="Microsoft.CodeAnalysis.StrongNameProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonWithXmlReferenceResolver">
      <MemberSignature Language="C#" Value="protected override Microsoft.CodeAnalysis.CompilationOptions CommonWithXmlReferenceResolver (Microsoft.CodeAnalysis.XmlReferenceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class Microsoft.CodeAnalysis.CompilationOptions CommonWithXmlReferenceResolver(class Microsoft.CodeAnalysis.XmlReferenceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.CommonWithXmlReferenceResolver(Microsoft.CodeAnalysis.XmlReferenceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Microsoft.CodeAnalysis.XmlReferenceResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.Equals(Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.Equals(System.Object)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.GetHashCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public override string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Usings">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;string&gt; Usings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;string&gt; Usings" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.Usings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Global namespace usings.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAllowUnsafe">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithAllowUnsafe (bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithAllowUnsafe(bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithAllowUnsafe(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabled">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAssemblyIdentityComparer">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithAssemblyIdentityComparer (Microsoft.CodeAnalysis.AssemblyIdentityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithAssemblyIdentityComparer(class Microsoft.CodeAnalysis.AssemblyIdentityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithAssemblyIdentityComparer(Microsoft.CodeAnalysis.AssemblyIdentityComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="Microsoft.CodeAnalysis.AssemblyIdentityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithConcurrentBuild">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithConcurrentBuild (bool concurrentBuild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithConcurrentBuild(bool concurrentBuild) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithConcurrentBuild(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="concurrentBuild" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="concurrentBuild">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithCryptoKeyContainer">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithCryptoKeyContainer (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithCryptoKeyContainer(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithCryptoKeyContainer(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithCryptoKeyFile">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithCryptoKeyFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithCryptoKeyFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithCryptoKeyFile(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithCryptoPublicKey">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithCryptoPublicKey (System.Collections.Immutable.ImmutableArray&lt;byte&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithCryptoPublicKey(valuetype System.Collections.Immutable.ImmutableArray`1&lt;unsigned int8&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithCryptoPublicKey(System.Collections.Immutable.ImmutableArray{System.Byte})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Collections.Immutable.ImmutableArray&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDelaySign">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithDelaySign (Nullable&lt;bool&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithDelaySign(valuetype System.Nullable`1&lt;bool&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithDelaySign(System.Nullable{System.Boolean})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithDeterministic">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithDeterministic (bool deterministic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithDeterministic(bool deterministic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithDeterministic(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deterministic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="deterministic">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithGeneralDiagnosticOption">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithGeneralDiagnosticOption (Microsoft.CodeAnalysis.ReportDiagnostic value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithGeneralDiagnosticOption(valuetype Microsoft.CodeAnalysis.ReportDiagnostic value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithGeneralDiagnosticOption(Microsoft.CodeAnalysis.ReportDiagnostic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Microsoft.CodeAnalysis.ReportDiagnostic" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithMainTypeName">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithMainTypeName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithMainTypeName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithMainTypeName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithMetadataReferenceResolver">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithMetadataReferenceResolver (Microsoft.CodeAnalysis.MetadataReferenceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithMetadataReferenceResolver(class Microsoft.CodeAnalysis.MetadataReferenceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithMetadataReferenceResolver(Microsoft.CodeAnalysis.MetadataReferenceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Microsoft.CodeAnalysis.MetadataReferenceResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithModuleName">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithModuleName (string moduleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithModuleName(string moduleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithModuleName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="moduleName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithOptimizationLevel">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithOptimizationLevel (Microsoft.CodeAnalysis.OptimizationLevel value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithOptimizationLevel(valuetype Microsoft.CodeAnalysis.OptimizationLevel value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithOptimizationLevel(Microsoft.CodeAnalysis.OptimizationLevel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Microsoft.CodeAnalysis.OptimizationLevel" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithOutputKind">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithOutputKind (Microsoft.CodeAnalysis.OutputKind kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithOutputKind(valuetype Microsoft.CodeAnalysis.OutputKind kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithOutputKind(Microsoft.CodeAnalysis.OutputKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kind" Type="Microsoft.CodeAnalysis.OutputKind" />
      </Parameters>
      <Docs>
        <param name="kind">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithOverflowChecks">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithOverflowChecks (bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithOverflowChecks(bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithOverflowChecks(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabled">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithPlatform">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithPlatform (Microsoft.CodeAnalysis.Platform platform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithPlatform(valuetype Microsoft.CodeAnalysis.Platform platform) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithPlatform(Microsoft.CodeAnalysis.Platform)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="platform" Type="Microsoft.CodeAnalysis.Platform" />
      </Parameters>
      <Docs>
        <param name="platform">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithPublicSign">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithPublicSign (bool publicSign);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithPublicSign(bool publicSign) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithPublicSign(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicSign" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="publicSign">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithReportSuppressedDiagnostics">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithReportSuppressedDiagnostics (bool reportSuppressedDiagnostics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithReportSuppressedDiagnostics(bool reportSuppressedDiagnostics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithReportSuppressedDiagnostics(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reportSuppressedDiagnostics" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reportSuppressedDiagnostics">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithScriptClassName">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithScriptClassName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithScriptClassName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithScriptClassName(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSourceReferenceResolver">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithSourceReferenceResolver (Microsoft.CodeAnalysis.SourceReferenceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithSourceReferenceResolver(class Microsoft.CodeAnalysis.SourceReferenceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithSourceReferenceResolver(Microsoft.CodeAnalysis.SourceReferenceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Microsoft.CodeAnalysis.SourceReferenceResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSpecificDiagnosticOptions">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithSpecificDiagnosticOptions (System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,Microsoft.CodeAnalysis.ReportDiagnostic&gt;&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithSpecificDiagnosticOptions(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, valuetype Microsoft.CodeAnalysis.ReportDiagnostic&gt;&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithSpecificDiagnosticOptions(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.CodeAnalysis.ReportDiagnostic}})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,Microsoft.CodeAnalysis.ReportDiagnostic&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithSpecificDiagnosticOptions">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithSpecificDiagnosticOptions (System.Collections.Immutable.ImmutableDictionary&lt;string,Microsoft.CodeAnalysis.ReportDiagnostic&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithSpecificDiagnosticOptions(class System.Collections.Immutable.ImmutableDictionary`2&lt;string, valuetype Microsoft.CodeAnalysis.ReportDiagnostic&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithSpecificDiagnosticOptions(System.Collections.Immutable.ImmutableDictionary{System.String,Microsoft.CodeAnalysis.ReportDiagnostic})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.Immutable.ImmutableDictionary&lt;System.String,Microsoft.CodeAnalysis.ReportDiagnostic&gt;" />
      </Parameters>
      <Docs>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithStrongNameProvider">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithStrongNameProvider (Microsoft.CodeAnalysis.StrongNameProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithStrongNameProvider(class Microsoft.CodeAnalysis.StrongNameProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithStrongNameProvider(Microsoft.CodeAnalysis.StrongNameProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="Microsoft.CodeAnalysis.StrongNameProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithUsings">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithUsings (System.Collections.Generic.IEnumerable&lt;string&gt; usings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithUsings(class System.Collections.Generic.IEnumerable`1&lt;string&gt; usings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithUsings(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usings" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="usings">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithUsings">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithUsings (System.Collections.Immutable.ImmutableArray&lt;string&gt; usings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithUsings(valuetype System.Collections.Immutable.ImmutableArray`1&lt;string&gt; usings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithUsings(System.Collections.Immutable.ImmutableArray{System.String})" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usings" Type="System.Collections.Immutable.ImmutableArray&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="usings">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithUsings">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithUsings (params string[] usings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithUsings(string[] usings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithUsings(System.String[])" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usings" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="usings">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithWarningLevel">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithWarningLevel (int warningLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithWarningLevel(int32 warningLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithWarningLevel(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="warningLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="warningLevel">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithXmlReferenceResolver">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithXmlReferenceResolver (Microsoft.CodeAnalysis.XmlReferenceResolver resolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions WithXmlReferenceResolver(class Microsoft.CodeAnalysis.XmlReferenceResolver resolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions.WithXmlReferenceResolver(Microsoft.CodeAnalysis.XmlReferenceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.CSharpCompilationOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Microsoft.CodeAnalysis.XmlReferenceResolver" />
      </Parameters>
      <Docs>
        <param name="resolver">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>