<Type Name="GeneratorFilterContext" FullName="Microsoft.CodeAnalysis.GeneratorFilterContext">
  <TypeSignature Language="C#" Value="public readonly struct GeneratorFilterContext" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit GeneratorFilterContext extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.GeneratorFilterContext" />
  <TypeSignature Language="VB.NET" Value="Public Structure GeneratorFilterContext" />
  <TypeSignature Language="F#" Value="type GeneratorFilterContext = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>4.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Context passed to a filter to determine if a generator should be executed or not.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.GeneratorFilterContext.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancellationToken As CancellationToken" />
      <MemberSignature Language="F#" Value="member this.CancellationToken : System.Threading.CancellationToken" Usage="Microsoft.CodeAnalysis.GeneratorFilterContext.CancellationToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A <see cref="T:System.Threading.CancellationToken" /> that can be checked to see if the filtering should be cancelled.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Generator">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.ISourceGenerator Generator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.ISourceGenerator Generator" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.GeneratorFilterContext.Generator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Generator As ISourceGenerator" />
      <MemberSignature Language="F#" Value="member this.Generator : Microsoft.CodeAnalysis.ISourceGenerator" Usage="Microsoft.CodeAnalysis.GeneratorFilterContext.Generator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ISourceGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The generator instance that is being filtered
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
