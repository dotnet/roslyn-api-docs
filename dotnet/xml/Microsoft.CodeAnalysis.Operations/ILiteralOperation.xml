<Type Name="ILiteralOperation" FullName="Microsoft.CodeAnalysis.Operations.ILiteralOperation">
  <TypeSignature Language="C#" Value="public interface ILiteralOperation : Microsoft.CodeAnalysis.IOperation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ILiteralOperation implements class Microsoft.CodeAnalysis.IOperation" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Operations.ILiteralOperation" />
  <TypeSignature Language="VB.NET" Value="Public Interface ILiteralOperation&#xA;Implements IOperation" />
  <TypeSignature Language="F#" Value="type ILiteralOperation = interface&#xA;    interface IOperation" />
  <TypeSignature Language="C++ CLI" Value="public interface class ILiteralOperation : Microsoft::CodeAnalysis::IOperation" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.CodeAnalysis.IOperation</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents a textual literal numeric, string, etc.
            <para>
            Current usage:
             (1) C# literal expression.
             (2) VB literal expression.
            </para></summary>
    <remarks>
            This interface is reserved for implementation by its associated APIs. We reserve the right to
            change it in the future.
            </remarks>
  </Docs>
  <Members />
</Type>