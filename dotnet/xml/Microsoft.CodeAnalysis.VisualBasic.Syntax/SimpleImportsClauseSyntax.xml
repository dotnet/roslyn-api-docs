<Type Name="SimpleImportsClauseSyntax" FullName="Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax">
  <TypeSignature Language="C#" Value="public sealed class SimpleImportsClauseSyntax : Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsClauseSyntax" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SimpleImportsClauseSyntax extends Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsClauseSyntax" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SimpleImportsClauseSyntax&#xA;Inherits ImportsClauseSyntax" />
  <TypeSignature Language="F#" Value="type SimpleImportsClauseSyntax = class&#xA;    inherit ImportsClauseSyntax" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportsClauseSyntax</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
 Represents the clause of an Imports statement that imports all members of a
 type or namespace or aliases a type or namespace.
 </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor -&gt; unit" Usage="simpleImportsClauseSyntax.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public override TResult Accept&lt;TResult&gt; (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResult Accept&lt;TResult&gt;(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1&lt;!!TResult&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResult) (visitor As VisualBasicSyntaxVisitor(Of TResult)) As TResult" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;'Result&gt; -&gt; 'Result" Usage="simpleImportsClauseSyntax.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Alias">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax Alias { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax Alias" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax.Alias" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Alias As ImportAliasClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.Alias : Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax.Alias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 An optional alias for the namespace or type being imported.
 </summary>
        <value>To be added.</value>
        <remarks>
 This child is optional. If it is not present, then Nothing is returned.
 </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As NameSyntax" />
      <MemberSignature Language="F#" Value="member this.Name : Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The namespace or type being imported.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax Update (Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax alias, Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax name);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax Update(class Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax alias, class Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (alias As ImportAliasClauseSyntax, name As NameSyntax) As SimpleImportsClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.Update : Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax * Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax" Usage="simpleImportsClauseSyntax.Update (alias, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alias" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax" />
        <Parameter Name="name" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax" />
      </Parameters>
      <Docs>
        <param name="alias">
 The value for the Alias property.
 </param>
        <param name="name">
 The value for the Name property.
 </param>
        <summary>
 Returns a copy of this with the specified changes. Returns this instance if
 there are no actual changes.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAlias">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax WithAlias (Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax alias);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax WithAlias(class Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax.WithAlias(Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAlias (alias As ImportAliasClauseSyntax) As SimpleImportsClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithAlias : Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax" Usage="simpleImportsClauseSyntax.WithAlias alias" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alias" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.ImportAliasClauseSyntax" />
      </Parameters>
      <Docs>
        <param name="alias">To be added.</param>
        <summary>
 Returns a copy of this with the [Alias] property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithName">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax WithName (Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax name);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax WithName(class Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax.WithName(Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithName (name As NameSyntax) As SimpleImportsClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithName : Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax" Usage="simpleImportsClauseSyntax.WithName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.SimpleImportsClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.NameSyntax" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>
 Returns a copy of this with the Name property changed to the specified value.
 Returns this instance if the specified value is the same as the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>