<Type Name="Project" FullName="Microsoft.CodeAnalysis.Project">
  <TypeSignature Language="C#" Value="public class Project" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Project extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Project" />
  <TypeSignature Language="VB.NET" Value="Public Class Project" />
  <TypeSignature Language="F#" Value="type Project = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{GetDebuggerDisplay(),nq}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Represents a project that is part of a <see cref="P:Microsoft.CodeAnalysis.Project.Solution" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddAdditionalDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.TextDocument AddAdditionalDocument (string name, Microsoft.CodeAnalysis.Text.SourceText text, System.Collections.Generic.IEnumerable&lt;string&gt; folders = null, string filePath = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.TextDocument AddAdditionalDocument(string name, class Microsoft.CodeAnalysis.Text.SourceText text, class System.Collections.Generic.IEnumerable`1&lt;string&gt; folders, string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.AddAdditionalDocument(System.String,Microsoft.CodeAnalysis.Text.SourceText,System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddAdditionalDocument (name As String, text As SourceText, Optional folders As IEnumerable(Of String) = null, Optional filePath As String = null) As TextDocument" />
      <MemberSignature Language="F#" Value="member this.AddAdditionalDocument : string * Microsoft.CodeAnalysis.Text.SourceText * seq&lt;string&gt; * string -&gt; Microsoft.CodeAnalysis.TextDocument" Usage="project.AddAdditionalDocument (name, text, folders, filePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.TextDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="Microsoft.CodeAnalysis.Text.SourceText" />
        <Parameter Name="folders" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="text">To be added.</param>
        <param name="folders">To be added.</param>
        <param name="filePath">To be added.</param>
        <summary>
            Creates a new additional document in a new instance of this project.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAdditionalDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.TextDocument AddAdditionalDocument (string name, string text, System.Collections.Generic.IEnumerable&lt;string&gt; folders = null, string filePath = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.TextDocument AddAdditionalDocument(string name, string text, class System.Collections.Generic.IEnumerable`1&lt;string&gt; folders, string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.AddAdditionalDocument(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddAdditionalDocument (name As String, text As String, Optional folders As IEnumerable(Of String) = null, Optional filePath As String = null) As TextDocument" />
      <MemberSignature Language="F#" Value="member this.AddAdditionalDocument : string * string * seq&lt;string&gt; * string -&gt; Microsoft.CodeAnalysis.TextDocument" Usage="project.AddAdditionalDocument (name, text, folders, filePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.TextDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="folders" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="text">To be added.</param>
        <param name="folders">To be added.</param>
        <param name="filePath">To be added.</param>
        <summary>
            Creates a new additional document in a new instance of this project.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAnalyzerReference">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project AddAnalyzerReference (Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Project AddAnalyzerReference(class Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.AddAnalyzerReference(Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)" />
      <MemberSignature Language="F#" Value="member this.AddAnalyzerReference : Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference -&gt; Microsoft.CodeAnalysis.Project" Usage="project.AddAnalyzerReference analyzerReference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="analyzerReference" Type="Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference" />
      </Parameters>
      <Docs>
        <param name="analyzerReference">To be added.</param>
        <summary>
            Creates a new instance of this project updated to include the specified analyzer reference 
            in addition to already existing ones.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAnalyzerReferences">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project AddAnalyzerReferences (System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt; analyzerReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Project AddAnalyzerReferences(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt; analyzerReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.AddAnalyzerReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddAnalyzerReferences (analyzerReferences As IEnumerable(Of AnalyzerReference)) As Project" />
      <MemberSignature Language="F#" Value="member this.AddAnalyzerReferences : seq&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt; -&gt; Microsoft.CodeAnalysis.Project" Usage="project.AddAnalyzerReferences analyzerReferences" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="analyzerReferences" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt;" />
      </Parameters>
      <Docs>
        <param name="analyzerReferences">To be added.</param>
        <summary>
            Creates a new instance of this project updated to include the specified analyzer references
            in addition to already existing ones.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Document AddDocument (string name, Microsoft.CodeAnalysis.SyntaxNode syntaxRoot, System.Collections.Generic.IEnumerable&lt;string&gt; folders = null, string filePath = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Document AddDocument(string name, class Microsoft.CodeAnalysis.SyntaxNode syntaxRoot, class System.Collections.Generic.IEnumerable`1&lt;string&gt; folders, string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.AddDocument(System.String,Microsoft.CodeAnalysis.SyntaxNode,System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDocument (name As String, syntaxRoot As SyntaxNode, Optional folders As IEnumerable(Of String) = null, Optional filePath As String = null) As Document" />
      <MemberSignature Language="F#" Value="member this.AddDocument : string * Microsoft.CodeAnalysis.SyntaxNode * seq&lt;string&gt; * string -&gt; Microsoft.CodeAnalysis.Document" Usage="project.AddDocument (name, syntaxRoot, folders, filePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="syntaxRoot" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="folders" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="syntaxRoot">To be added.</param>
        <param name="folders">To be added.</param>
        <param name="filePath">To be added.</param>
        <summary>
            Creates a new document in a new instance of this project.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Document AddDocument (string name, Microsoft.CodeAnalysis.Text.SourceText text, System.Collections.Generic.IEnumerable&lt;string&gt; folders = null, string filePath = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Document AddDocument(string name, class Microsoft.CodeAnalysis.Text.SourceText text, class System.Collections.Generic.IEnumerable`1&lt;string&gt; folders, string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.AddDocument(System.String,Microsoft.CodeAnalysis.Text.SourceText,System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDocument (name As String, text As SourceText, Optional folders As IEnumerable(Of String) = null, Optional filePath As String = null) As Document" />
      <MemberSignature Language="F#" Value="member this.AddDocument : string * Microsoft.CodeAnalysis.Text.SourceText * seq&lt;string&gt; * string -&gt; Microsoft.CodeAnalysis.Document" Usage="project.AddDocument (name, text, folders, filePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="Microsoft.CodeAnalysis.Text.SourceText" />
        <Parameter Name="folders" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="text">To be added.</param>
        <param name="folders">To be added.</param>
        <param name="filePath">To be added.</param>
        <summary>
            Creates a new document in a new instance of this project.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Document AddDocument (string name, string text, System.Collections.Generic.IEnumerable&lt;string&gt; folders = null, string filePath = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Document AddDocument(string name, string text, class System.Collections.Generic.IEnumerable`1&lt;string&gt; folders, string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.AddDocument(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddDocument (name As String, text As String, Optional folders As IEnumerable(Of String) = null, Optional filePath As String = null) As Document" />
      <MemberSignature Language="F#" Value="member this.AddDocument : string * string * seq&lt;string&gt; * string -&gt; Microsoft.CodeAnalysis.Document" Usage="project.AddDocument (name, text, folders, filePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="folders" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="text">To be added.</param>
        <param name="folders">To be added.</param>
        <param name="filePath">To be added.</param>
        <summary>
            Creates a new document in a new instance of this project.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalDocumentIds">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.CodeAnalysis.DocumentId&gt; AdditionalDocumentIds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.CodeAnalysis.DocumentId&gt; AdditionalDocumentIds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.AdditionalDocumentIds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdditionalDocumentIds As IReadOnlyList(Of DocumentId)" />
      <MemberSignature Language="F#" Value="member this.AdditionalDocumentIds : System.Collections.Generic.IReadOnlyList&lt;Microsoft.CodeAnalysis.DocumentId&gt;" Usage="Microsoft.CodeAnalysis.Project.AdditionalDocumentIds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.CodeAnalysis.DocumentId&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            All the additional document IDs associated with this project.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalDocuments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.TextDocument&gt; AdditionalDocuments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.TextDocument&gt; AdditionalDocuments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.AdditionalDocuments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AdditionalDocuments As IEnumerable(Of TextDocument)" />
      <MemberSignature Language="F#" Value="member this.AdditionalDocuments : seq&lt;Microsoft.CodeAnalysis.TextDocument&gt;" Usage="Microsoft.CodeAnalysis.Project.AdditionalDocuments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.TextDocument&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            All the additional documents associated with this project.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMetadataReference">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project AddMetadataReference (Microsoft.CodeAnalysis.MetadataReference metadataReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Project AddMetadataReference(class Microsoft.CodeAnalysis.MetadataReference metadataReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.AddMetadataReference(Microsoft.CodeAnalysis.MetadataReference)" />
      <MemberSignature Language="F#" Value="member this.AddMetadataReference : Microsoft.CodeAnalysis.MetadataReference -&gt; Microsoft.CodeAnalysis.Project" Usage="project.AddMetadataReference metadataReference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReference" Type="Microsoft.CodeAnalysis.MetadataReference" />
      </Parameters>
      <Docs>
        <param name="metadataReference">To be added.</param>
        <summary>
            Creates a new instance of this project updated to include the specified metadata reference
            in addition to already existing ones.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMetadataReferences">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project AddMetadataReferences (System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.MetadataReference&gt; metadataReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Project AddMetadataReferences(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.MetadataReference&gt; metadataReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.AddMetadataReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddMetadataReferences (metadataReferences As IEnumerable(Of MetadataReference)) As Project" />
      <MemberSignature Language="F#" Value="member this.AddMetadataReferences : seq&lt;Microsoft.CodeAnalysis.MetadataReference&gt; -&gt; Microsoft.CodeAnalysis.Project" Usage="project.AddMetadataReferences metadataReferences" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReferences" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.MetadataReference&gt;" />
      </Parameters>
      <Docs>
        <param name="metadataReferences">To be added.</param>
        <summary>
            Creates a new instance of this project updated to include the specified metadata references
            in addition to already existing ones.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProjectReference">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project AddProjectReference (Microsoft.CodeAnalysis.ProjectReference projectReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Project AddProjectReference(class Microsoft.CodeAnalysis.ProjectReference projectReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.AddProjectReference(Microsoft.CodeAnalysis.ProjectReference)" />
      <MemberSignature Language="F#" Value="member this.AddProjectReference : Microsoft.CodeAnalysis.ProjectReference -&gt; Microsoft.CodeAnalysis.Project" Usage="project.AddProjectReference projectReference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectReference" Type="Microsoft.CodeAnalysis.ProjectReference" />
      </Parameters>
      <Docs>
        <param name="projectReference">To be added.</param>
        <summary>
            Creates a new instance of this project updated to include the specified project reference
            in addition to already existing ones.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProjectReferences">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project AddProjectReferences (System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.ProjectReference&gt; projectReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Project AddProjectReferences(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.ProjectReference&gt; projectReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.AddProjectReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectReference})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddProjectReferences (projectReferences As IEnumerable(Of ProjectReference)) As Project" />
      <MemberSignature Language="F#" Value="member this.AddProjectReferences : seq&lt;Microsoft.CodeAnalysis.ProjectReference&gt; -&gt; Microsoft.CodeAnalysis.Project" Usage="project.AddProjectReferences projectReferences" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectReferences" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.ProjectReference&gt;" />
      </Parameters>
      <Docs>
        <param name="projectReferences">To be added.</param>
        <summary>
            Creates a new instance of this project updated to include the specified project references
            in addition to already existing ones.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllProjectReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.CodeAnalysis.ProjectReference&gt; AllProjectReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.CodeAnalysis.ProjectReference&gt; AllProjectReferences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.AllProjectReferences" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllProjectReferences As IReadOnlyList(Of ProjectReference)" />
      <MemberSignature Language="F#" Value="member this.AllProjectReferences : System.Collections.Generic.IReadOnlyList&lt;Microsoft.CodeAnalysis.ProjectReference&gt;" Usage="Microsoft.CodeAnalysis.Project.AllProjectReferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.CodeAnalysis.ProjectReference&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The list of all other projects that this project references, including projects that 
            are not part of the solution.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnalyzerOptions">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions AnalyzerOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions AnalyzerOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.AnalyzerOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnalyzerOptions As AnalyzerOptions" />
      <MemberSignature Language="F#" Value="member this.AnalyzerOptions : Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions" Usage="Microsoft.CodeAnalysis.Project.AnalyzerOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The options used by analyzers for this project.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnalyzerReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt; AnalyzerReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt; AnalyzerReferences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.AnalyzerReferences" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AnalyzerReferences As IReadOnlyList(Of AnalyzerReference)" />
      <MemberSignature Language="F#" Value="member this.AnalyzerReferences : System.Collections.Generic.IReadOnlyList&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt;" Usage="Microsoft.CodeAnalysis.Project.AnalyzerReferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The list of all the diagnostic analyzer references for this project.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyName As String" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : string" Usage="Microsoft.CodeAnalysis.Project.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the assembly this project represents.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompilationOptions">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CompilationOptions CompilationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.CompilationOptions CompilationOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.CompilationOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompilationOptions As CompilationOptions" />
      <MemberSignature Language="F#" Value="member this.CompilationOptions : Microsoft.CodeAnalysis.CompilationOptions" Usage="Microsoft.CodeAnalysis.Project.CompilationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The options used when building the compilation for this project.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsAdditionalDocument">
      <MemberSignature Language="C#" Value="public bool ContainsAdditionalDocument (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsAdditionalDocument(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.ContainsAdditionalDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberSignature Language="F#" Value="member this.ContainsAdditionalDocument : Microsoft.CodeAnalysis.DocumentId -&gt; bool" Usage="project.ContainsAdditionalDocument documentId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            True if the project contains an additional document with the specified ID.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsDocument">
      <MemberSignature Language="C#" Value="public bool ContainsDocument (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsDocument(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.ContainsDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberSignature Language="F#" Value="member this.ContainsDocument : Microsoft.CodeAnalysis.DocumentId -&gt; bool" Usage="project.ContainsDocument documentId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            True if the project contains a document with the specified ID.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentIds">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.CodeAnalysis.DocumentId&gt; DocumentIds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.CodeAnalysis.DocumentId&gt; DocumentIds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.DocumentIds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentIds As IReadOnlyList(Of DocumentId)" />
      <MemberSignature Language="F#" Value="member this.DocumentIds : System.Collections.Generic.IReadOnlyList&lt;Microsoft.CodeAnalysis.DocumentId&gt;" Usage="Microsoft.CodeAnalysis.Project.DocumentIds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.CodeAnalysis.DocumentId&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            All the document IDs associated with this project.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Documents">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Document&gt; Documents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.Document&gt; Documents" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.Documents" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Documents As IEnumerable(Of Document)" />
      <MemberSignature Language="F#" Value="member this.Documents : seq&lt;Microsoft.CodeAnalysis.Document&gt;" Usage="Microsoft.CodeAnalysis.Project.Documents" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Document&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            All the documents associated with this project.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePath">
      <MemberSignature Language="C#" Value="public string FilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.FilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilePath As String" />
      <MemberSignature Language="F#" Value="member this.FilePath : string" Usage="Microsoft.CodeAnalysis.Project.FilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The path to the project file or null if there is no project file.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAdditionalDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.TextDocument GetAdditionalDocument (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.TextDocument GetAdditionalDocument(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.GetAdditionalDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberSignature Language="F#" Value="member this.GetAdditionalDocument : Microsoft.CodeAnalysis.DocumentId -&gt; Microsoft.CodeAnalysis.TextDocument" Usage="project.GetAdditionalDocument documentId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.TextDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            Get the additional document in this project with the specified document Id.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChanges">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.ProjectChanges GetChanges (Microsoft.CodeAnalysis.Project oldProject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype Microsoft.CodeAnalysis.ProjectChanges GetChanges(class Microsoft.CodeAnalysis.Project oldProject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.GetChanges(Microsoft.CodeAnalysis.Project)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChanges (oldProject As Project) As ProjectChanges" />
      <MemberSignature Language="F#" Value="member this.GetChanges : Microsoft.CodeAnalysis.Project -&gt; Microsoft.CodeAnalysis.ProjectChanges" Usage="project.GetChanges oldProject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ProjectChanges</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldProject" Type="Microsoft.CodeAnalysis.Project" />
      </Parameters>
      <Docs>
        <param name="oldProject">To be added.</param>
        <summary>
            Gets an object that lists the added, changed and removed documents between this project and the specified project.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCompilationAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.Compilation&gt; GetCompilationAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Microsoft.CodeAnalysis.Compilation&gt; GetCompilationAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.GetCompilationAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.GetCompilationAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.Compilation&gt;" Usage="project.GetCompilationAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.Compilation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>
            Get the <see cref="T:Microsoft.CodeAnalysis.Compilation" /> for this project asynchronously.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDependentSemanticVersionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.VersionStamp&gt; GetDependentSemanticVersionAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;valuetype Microsoft.CodeAnalysis.VersionStamp&gt; GetDependentSemanticVersionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.GetDependentSemanticVersionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.GetDependentSemanticVersionAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.VersionStamp&gt;" Usage="project.GetDependentSemanticVersionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.VersionStamp&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>
            The semantic version of this project including the semantics of referenced projects.
            This version changes whenever the consumable declarations of this project and/or projects it depends on change.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDependentVersionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.VersionStamp&gt; GetDependentVersionAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;valuetype Microsoft.CodeAnalysis.VersionStamp&gt; GetDependentVersionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.GetDependentVersionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.GetDependentVersionAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.VersionStamp&gt;" Usage="project.GetDependentVersionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.VersionStamp&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>
            The most recent version of the project, its documents and all dependent projects and documents.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Document GetDocument (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Document GetDocument(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.GetDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberSignature Language="F#" Value="member this.GetDocument : Microsoft.CodeAnalysis.DocumentId -&gt; Microsoft.CodeAnalysis.Document" Usage="project.GetDocument documentId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            Get the document in this project with the specified document Id.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Document GetDocument (Microsoft.CodeAnalysis.SyntaxTree syntaxTree);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Document GetDocument(class Microsoft.CodeAnalysis.SyntaxTree syntaxTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.GetDocument(Microsoft.CodeAnalysis.SyntaxTree)" />
      <MemberSignature Language="F#" Value="member this.GetDocument : Microsoft.CodeAnalysis.SyntaxTree -&gt; Microsoft.CodeAnalysis.Document" Usage="project.GetDocument syntaxTree" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Document</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="syntaxTree" Type="Microsoft.CodeAnalysis.SyntaxTree" />
      </Parameters>
      <Docs>
        <param name="syntaxTree">To be added.</param>
        <summary>
            Get the document in this project with the specified syntax tree.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDocumentId">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.DocumentId GetDocumentId (Microsoft.CodeAnalysis.SyntaxTree syntaxTree);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.DocumentId GetDocumentId(class Microsoft.CodeAnalysis.SyntaxTree syntaxTree) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.GetDocumentId(Microsoft.CodeAnalysis.SyntaxTree)" />
      <MemberSignature Language="F#" Value="member this.GetDocumentId : Microsoft.CodeAnalysis.SyntaxTree -&gt; Microsoft.CodeAnalysis.DocumentId" Usage="project.GetDocumentId syntaxTree" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.DocumentId</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="syntaxTree" Type="Microsoft.CodeAnalysis.SyntaxTree" />
      </Parameters>
      <Docs>
        <param name="syntaxTree">To be added.</param>
        <summary>
            Get the documentId in this project with the specified syntax tree.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLatestDocumentVersionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.VersionStamp&gt; GetLatestDocumentVersionAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;valuetype Microsoft.CodeAnalysis.VersionStamp&gt; GetLatestDocumentVersionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.GetLatestDocumentVersionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.GetLatestDocumentVersionAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.VersionStamp&gt;" Usage="project.GetLatestDocumentVersionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.VersionStamp&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>
            The version of the most recently modified document.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSemanticVersionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.VersionStamp&gt; GetSemanticVersionAsync (System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;valuetype Microsoft.CodeAnalysis.VersionStamp&gt; GetSemanticVersionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.GetSemanticVersionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="member this.GetSemanticVersionAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.VersionStamp&gt;" Usage="project.GetSemanticVersionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(Microsoft.CodeAnalysis.Project/&lt;GetSemanticVersionAsync&gt;d__74))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.CodeAnalysis.VersionStamp&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>
            The semantic version of this project not including the semantics of referenced projects.
            This version changes only when the consumable declarations of this project change.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasDocuments">
      <MemberSignature Language="C#" Value="public bool HasDocuments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasDocuments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.HasDocuments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasDocuments As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasDocuments : bool" Usage="Microsoft.CodeAnalysis.Project.HasDocuments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            True if the project has any documents.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.ProjectId Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.ProjectId Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As ProjectId" />
      <MemberSignature Language="F#" Value="member this.Id : Microsoft.CodeAnalysis.ProjectId" Usage="Microsoft.CodeAnalysis.Project.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ProjectId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The ID of the project. Multiple <see cref="T:Microsoft.CodeAnalysis.Project" /> instances may share the same ID. However, only
            one project may have this ID in any given solution.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubmission">
      <MemberSignature Language="C#" Value="public bool IsSubmission { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSubmission" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.IsSubmission" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSubmission As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsSubmission : bool" Usage="Microsoft.CodeAnalysis.Project.IsSubmission" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if this is a submission project.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.Language" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Language As String" />
      <MemberSignature Language="F#" Value="member this.Language : string" Usage="Microsoft.CodeAnalysis.Project.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The language associated with the project.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageServices">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Host.HostLanguageServices LanguageServices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.Host.HostLanguageServices LanguageServices" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.LanguageServices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LanguageServices As HostLanguageServices" />
      <MemberSignature Language="F#" Value="member this.LanguageServices : Microsoft.CodeAnalysis.Host.HostLanguageServices" Usage="Microsoft.CodeAnalysis.Project.LanguageServices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Host.HostLanguageServices</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The language services from the host environment associated with this project's language.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyList&lt;Microsoft.CodeAnalysis.MetadataReference&gt; MetadataReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyList`1&lt;class Microsoft.CodeAnalysis.MetadataReference&gt; MetadataReferences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.MetadataReferences" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataReferences As IReadOnlyList(Of MetadataReference)" />
      <MemberSignature Language="F#" Value="member this.MetadataReferences : System.Collections.Generic.IReadOnlyList&lt;Microsoft.CodeAnalysis.MetadataReference&gt;" Usage="Microsoft.CodeAnalysis.Project.MetadataReferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyList&lt;Microsoft.CodeAnalysis.MetadataReference&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The list of all other metadata sources (assemblies) that this project references.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.CodeAnalysis.Project.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The name of the project. This may be different than the assembly name.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputFilePath">
      <MemberSignature Language="C#" Value="public string OutputFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OutputFilePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.OutputFilePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputFilePath As String" />
      <MemberSignature Language="F#" Value="member this.OutputFilePath : string" Usage="Microsoft.CodeAnalysis.Project.OutputFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The path to the output file, or null if it is not known.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseOptions">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.ParseOptions ParseOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.ParseOptions ParseOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.ParseOptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParseOptions As ParseOptions" />
      <MemberSignature Language="F#" Value="member this.ParseOptions : Microsoft.CodeAnalysis.ParseOptions" Usage="Microsoft.CodeAnalysis.Project.ParseOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ParseOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The options used when parsing documents for this project.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.ProjectReference&gt; ProjectReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.ProjectReference&gt; ProjectReferences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.ProjectReferences" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectReferences As IEnumerable(Of ProjectReference)" />
      <MemberSignature Language="F#" Value="member this.ProjectReferences : seq&lt;Microsoft.CodeAnalysis.ProjectReference&gt;" Usage="Microsoft.CodeAnalysis.Project.ProjectReferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.ProjectReference&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The list of all other projects within the same solution that this project references.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAdditionalDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project RemoveAdditionalDocument (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Project RemoveAdditionalDocument(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.RemoveAdditionalDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberSignature Language="F#" Value="member this.RemoveAdditionalDocument : Microsoft.CodeAnalysis.DocumentId -&gt; Microsoft.CodeAnalysis.Project" Usage="project.RemoveAdditionalDocument documentId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            Creates a new instance of this project updated to no longer include the specified additional document.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAnalyzerReference">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project RemoveAnalyzerReference (Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Project RemoveAnalyzerReference(class Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference analyzerReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.RemoveAnalyzerReference(Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference)" />
      <MemberSignature Language="F#" Value="member this.RemoveAnalyzerReference : Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference -&gt; Microsoft.CodeAnalysis.Project" Usage="project.RemoveAnalyzerReference analyzerReference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="analyzerReference" Type="Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference" />
      </Parameters>
      <Docs>
        <param name="analyzerReference">To be added.</param>
        <summary>
            Creates a new instance of this project updated to no longer include the specified analyzer reference.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDocument">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project RemoveDocument (Microsoft.CodeAnalysis.DocumentId documentId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Project RemoveDocument(class Microsoft.CodeAnalysis.DocumentId documentId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.RemoveDocument(Microsoft.CodeAnalysis.DocumentId)" />
      <MemberSignature Language="F#" Value="member this.RemoveDocument : Microsoft.CodeAnalysis.DocumentId -&gt; Microsoft.CodeAnalysis.Project" Usage="project.RemoveDocument documentId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="documentId" Type="Microsoft.CodeAnalysis.DocumentId" />
      </Parameters>
      <Docs>
        <param name="documentId">To be added.</param>
        <summary>
            Creates a new instance of this project updated to no longer include the specified document.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMetadataReference">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project RemoveMetadataReference (Microsoft.CodeAnalysis.MetadataReference metadataReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Project RemoveMetadataReference(class Microsoft.CodeAnalysis.MetadataReference metadataReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.RemoveMetadataReference(Microsoft.CodeAnalysis.MetadataReference)" />
      <MemberSignature Language="F#" Value="member this.RemoveMetadataReference : Microsoft.CodeAnalysis.MetadataReference -&gt; Microsoft.CodeAnalysis.Project" Usage="project.RemoveMetadataReference metadataReference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReference" Type="Microsoft.CodeAnalysis.MetadataReference" />
      </Parameters>
      <Docs>
        <param name="metadataReference">To be added.</param>
        <summary>
            Creates a new instance of this project updated to no longer include the specified metadata reference.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProjectReference">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project RemoveProjectReference (Microsoft.CodeAnalysis.ProjectReference projectReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Project RemoveProjectReference(class Microsoft.CodeAnalysis.ProjectReference projectReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.RemoveProjectReference(Microsoft.CodeAnalysis.ProjectReference)" />
      <MemberSignature Language="F#" Value="member this.RemoveProjectReference : Microsoft.CodeAnalysis.ProjectReference -&gt; Microsoft.CodeAnalysis.Project" Usage="project.RemoveProjectReference projectReference" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectReference" Type="Microsoft.CodeAnalysis.ProjectReference" />
      </Parameters>
      <Docs>
        <param name="projectReference">To be added.</param>
        <summary>
            Creates a new instance of this project updated to no longer include the specified project reference.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Solution">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Solution Solution { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.Solution Solution" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.Solution" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Solution As Solution" />
      <MemberSignature Language="F#" Value="member this.Solution : Microsoft.CodeAnalysis.Solution" Usage="Microsoft.CodeAnalysis.Project.Solution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Solution</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The solution this project is part of.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsCompilation">
      <MemberSignature Language="C#" Value="public bool SupportsCompilation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsCompilation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.SupportsCompilation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SupportsCompilation As Boolean" />
      <MemberSignature Language="F#" Value="member this.SupportsCompilation : bool" Usage="Microsoft.CodeAnalysis.Project.SupportsCompilation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <code>true</code> if this <see cref="T:Microsoft.CodeAnalysis.Project" /> supports providing data through the
            <see cref="M:Microsoft.CodeAnalysis.Project.GetCompilationAsync(System.Threading.CancellationToken)" /> method.
            
            If <code>false</code> then this method will return <code>null</code> instead.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetCompilation">
      <MemberSignature Language="C#" Value="public bool TryGetCompilation (out Microsoft.CodeAnalysis.Compilation compilation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetCompilation([out] class Microsoft.CodeAnalysis.Compilation&amp; compilation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.TryGetCompilation(Microsoft.CodeAnalysis.Compilation@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetCompilation (ByRef compilation As Compilation) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryGetCompilation :  -&gt; bool" Usage="project.TryGetCompilation compilation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compilation" Type="Microsoft.CodeAnalysis.Compilation&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="compilation">To be added.</param>
        <summary>
            Tries to get the cached <see cref="T:Microsoft.CodeAnalysis.Compilation" /> for this project if it has already been created and is still cached. In almost all
            cases you should call <see cref="M:Microsoft.CodeAnalysis.Project.GetCompilationAsync(System.Threading.CancellationToken)" /> which will either return the cached <see cref="T:Microsoft.CodeAnalysis.Compilation" />
            or create a new one otherwise.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VersionStamp Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.VersionStamp Version" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Project.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As VersionStamp" />
      <MemberSignature Language="F#" Value="member this.Version : Microsoft.CodeAnalysis.VersionStamp" Usage="Microsoft.CodeAnalysis.Project.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VersionStamp</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The project version. This equates to the version of the project file.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAnalyzerReferences">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project WithAnalyzerReferences (System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt; analyzerReferencs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Project WithAnalyzerReferences(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt; analyzerReferencs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.WithAnalyzerReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAnalyzerReferences (analyzerReferencs As IEnumerable(Of AnalyzerReference)) As Project" />
      <MemberSignature Language="F#" Value="member this.WithAnalyzerReferences : seq&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt; -&gt; Microsoft.CodeAnalysis.Project" Usage="project.WithAnalyzerReferences analyzerReferencs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="analyzerReferencs" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt;" />
      </Parameters>
      <Docs>
        <param name="analyzerReferencs">To be added.</param>
        <summary>
            Creates a new instance of this project updated to replace existing analyzer references 
            with the specified ones.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAssemblyName">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project WithAssemblyName (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Project WithAssemblyName(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.WithAssemblyName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAssemblyName (assemblyName As String) As Project" />
      <MemberSignature Language="F#" Value="member this.WithAssemblyName : string -&gt; Microsoft.CodeAnalysis.Project" Usage="project.WithAssemblyName assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">To be added.</param>
        <summary>
            Creates a new instance of this project updated to have the new assembly name.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithCompilationOptions">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project WithCompilationOptions (Microsoft.CodeAnalysis.CompilationOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Project WithCompilationOptions(class Microsoft.CodeAnalysis.CompilationOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.WithCompilationOptions(Microsoft.CodeAnalysis.CompilationOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithCompilationOptions (options As CompilationOptions) As Project" />
      <MemberSignature Language="F#" Value="member this.WithCompilationOptions : Microsoft.CodeAnalysis.CompilationOptions -&gt; Microsoft.CodeAnalysis.Project" Usage="project.WithCompilationOptions options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.CodeAnalysis.CompilationOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Creates a new instance of this project updated to have the specified compilation options.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithMetadataReferences">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project WithMetadataReferences (System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.MetadataReference&gt; metadataReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Project WithMetadataReferences(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.MetadataReference&gt; metadataReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.WithMetadataReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.MetadataReference})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithMetadataReferences (metadataReferences As IEnumerable(Of MetadataReference)) As Project" />
      <MemberSignature Language="F#" Value="member this.WithMetadataReferences : seq&lt;Microsoft.CodeAnalysis.MetadataReference&gt; -&gt; Microsoft.CodeAnalysis.Project" Usage="project.WithMetadataReferences metadataReferences" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataReferences" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.MetadataReference&gt;" />
      </Parameters>
      <Docs>
        <param name="metadataReferences">To be added.</param>
        <summary>
            Creates a new instance of this project updated to replace existing metadata reference
            with the specified ones.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithParseOptions">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project WithParseOptions (Microsoft.CodeAnalysis.ParseOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Project WithParseOptions(class Microsoft.CodeAnalysis.ParseOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.WithParseOptions(Microsoft.CodeAnalysis.ParseOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithParseOptions (options As ParseOptions) As Project" />
      <MemberSignature Language="F#" Value="member this.WithParseOptions : Microsoft.CodeAnalysis.ParseOptions -&gt; Microsoft.CodeAnalysis.Project" Usage="project.WithParseOptions options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.CodeAnalysis.ParseOptions" />
      </Parameters>
      <Docs>
        <param name="options">To be added.</param>
        <summary>
            Creates a new instance of this project updated to have the specified parse options.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithProjectReferences">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project WithProjectReferences (System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.ProjectReference&gt; projectReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.Project WithProjectReferences(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.ProjectReference&gt; projectReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Project.WithProjectReferences(System.Collections.Generic.IEnumerable{Microsoft.CodeAnalysis.ProjectReference})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithProjectReferences (projectReferences As IEnumerable(Of ProjectReference)) As Project" />
      <MemberSignature Language="F#" Value="member this.WithProjectReferences : seq&lt;Microsoft.CodeAnalysis.ProjectReference&gt; -&gt; Microsoft.CodeAnalysis.Project" Usage="project.WithProjectReferences projectReferences" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectReferences" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.ProjectReference&gt;" />
      </Parameters>
      <Docs>
        <param name="projectReferences">To be added.</param>
        <summary>
            Creates a new instance of this project updated to replace existing project references 
            with the specified ones.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>