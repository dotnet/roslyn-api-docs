<Type Name="CommandLineParser" FullName="Microsoft.CodeAnalysis.CommandLineParser">
  <TypeSignature Language="C#" Value="public abstract class CommandLineParser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CommandLineParser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.CommandLineParser" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CommandLineParser" />
  <TypeSignature Language="F#" Value="type CommandLineParser = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandLineParser abstract" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class CommandLineParser abstract" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class CommandLineParser abstract" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CommandLineArguments Parse (System.Collections.Generic.IEnumerable&lt;string&gt; args, string baseDirectory, string sdkDirectory, string additionalReferenceDirectories);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CommandLineArguments Parse(class System.Collections.Generic.IEnumerable`1&lt;string&gt; args, string baseDirectory, string sdkDirectory, string additionalReferenceDirectories) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CommandLineParser.Parse(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (args As IEnumerable(Of String), baseDirectory As String, sdkDirectory As String, additionalReferenceDirectories As String) As CommandLineArguments" />
      <MemberSignature Language="F#" Value="member this.Parse : seq&lt;string&gt; * string * string * string -&gt; Microsoft.CodeAnalysis.CommandLineArguments" Usage="commandLineParser.Parse (args, baseDirectory, sdkDirectory, additionalReferenceDirectories)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::CommandLineArguments ^ Parse(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ args, System::String ^ baseDirectory, System::String ^ sdkDirectory, System::String ^ additionalReferenceDirectories);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CommandLineArguments</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="baseDirectory" Type="System.String" />
        <Parameter Name="sdkDirectory" Type="System.String" />
        <Parameter Name="additionalReferenceDirectories" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="args">A collection of strings representing the command line arguments.</param>
        <param name="baseDirectory">The base directory used for qualifying file locations.</param>
        <param name="sdkDirectory">The directory to search for mscorlib, or null if not available.</param>
        <param name="additionalReferenceDirectories">A string representing additional reference paths.</param>
        <summary>
            Parses a command line.
            </summary>
        <returns>a <see cref="T:Microsoft.CodeAnalysis.CommandLineArguments" /> object representing the parsed command line.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParsePathMap">
      <MemberSignature Language="C#" Value="protected System.Collections.Immutable.ImmutableArray&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; ParsePathMap (string pathMap, System.Collections.Generic.IList&lt;Microsoft.CodeAnalysis.Diagnostic&gt; errors);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; ParsePathMap(string pathMap, class System.Collections.Generic.IList`1&lt;class Microsoft.CodeAnalysis.Diagnostic&gt; errors) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CommandLineParser.ParsePathMap(System.String,System.Collections.Generic.IList{Microsoft.CodeAnalysis.Diagnostic})" />
      <MemberSignature Language="VB.NET" Value="Protected Function ParsePathMap (pathMap As String, errors As IList(Of Diagnostic)) As ImmutableArray(Of KeyValuePair(Of String, String))" />
      <MemberSignature Language="F#" Value="member this.ParsePathMap : string * System.Collections.Generic.IList&lt;Microsoft.CodeAnalysis.Diagnostic&gt; -&gt; System.Collections.Immutable.ImmutableArray&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt;" Usage="commandLineParser.ParsePathMap (pathMap, errors)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Collections::Immutable::ImmutableArray&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ParsePathMap(System::String ^ pathMap, System::Collections::Generic::IList&lt;Microsoft::CodeAnalysis::Diagnostic ^&gt; ^ errors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathMap" Type="System.String" />
        <Parameter Name="errors" Type="System.Collections.Generic.IList&lt;Microsoft.CodeAnalysis.Diagnostic&gt;" />
      </Parameters>
      <Docs>
        <param name="pathMap">To be added.</param>
        <param name="errors">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegularFileExtension">
      <MemberSignature Language="C#" Value="protected abstract string RegularFileExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegularFileExtension" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineParser.RegularFileExtension" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property RegularFileExtension As String" />
      <MemberSignature Language="F#" Value="member this.RegularFileExtension : string" Usage="Microsoft.CodeAnalysis.CommandLineParser.RegularFileExtension" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::String ^ RegularFileExtension { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; abstract property Platform::String ^ RegularFileExtension { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptFileExtension">
      <MemberSignature Language="C#" Value="protected abstract string ScriptFileExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScriptFileExtension" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineParser.ScriptFileExtension" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property ScriptFileExtension As String" />
      <MemberSignature Language="F#" Value="member this.ScriptFileExtension : string" Usage="Microsoft.CodeAnalysis.CommandLineParser.ScriptFileExtension" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::String ^ ScriptFileExtension { System::String ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; abstract property Platform::String ^ ScriptFileExtension { Platform::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitCommandLineIntoArguments">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;string&gt; SplitCommandLineIntoArguments (string commandLine, bool removeHashComments);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;string&gt; SplitCommandLineIntoArguments(string commandLine, bool removeHashComments) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CommandLineParser.SplitCommandLineIntoArguments(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SplitCommandLineIntoArguments (commandLine As String, removeHashComments As Boolean) As IEnumerable(Of String)" />
      <MemberSignature Language="F#" Value="static member SplitCommandLineIntoArguments : string * bool -&gt; seq&lt;string&gt;" Usage="Microsoft.CodeAnalysis.CommandLineParser.SplitCommandLineIntoArguments (commandLine, removeHashComments)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ SplitCommandLineIntoArguments(System::String ^ commandLine, bool removeHashComments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandLine" Type="System.String" />
        <Parameter Name="removeHashComments" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="commandLine">To be added.</param>
        <param name="removeHashComments">To be added.</param>
        <summary>
            See <see cref="M:Roslyn.Utilities.CommandLineUtilities.SplitCommandLineIntoArguments(System.String,System.Boolean)" /></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>