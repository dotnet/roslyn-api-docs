<Type Name="AssemblyIdentityComparer+ComparisonResult" FullName="Microsoft.CodeAnalysis.AssemblyIdentityComparer+ComparisonResult">
  <TypeSignature Language="C#" Value="public enum AssemblyIdentityComparer.ComparisonResult" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed AssemblyIdentityComparer/ComparisonResult extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
            A set of possible outcomes of <see cref="T:Microsoft.CodeAnalysis.AssemblyIdentity" /> comparison.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Equivalent">
      <MemberSignature Language="C#" Value="Equivalent" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.CodeAnalysis.AssemblyIdentityComparer/ComparisonResult Equivalent = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.Equivalent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.AssemblyIdentityComparer+ComparisonResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Strongly named reference matches strongly named definition (strong identity is identity with public key or token),
            Or weak reference matches weak definition.
            </summary>
      </Docs>
    </Member>
    <Member MemberName="EquivalentIgnoringVersion">
      <MemberSignature Language="C#" Value="EquivalentIgnoringVersion" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.CodeAnalysis.AssemblyIdentityComparer/ComparisonResult EquivalentIgnoringVersion = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.EquivalentIgnoringVersion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.AssemblyIdentityComparer+ComparisonResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Reference matches definition except for version (reference version is lower or higher than definition version).
            </summary>
      </Docs>
    </Member>
    <Member MemberName="NotEquivalent">
      <MemberSignature Language="C#" Value="NotEquivalent" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.CodeAnalysis.AssemblyIdentityComparer/ComparisonResult NotEquivalent = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.CodeAnalysis.AssemblyIdentityComparer.ComparisonResult.NotEquivalent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.AssemblyIdentityComparer+ComparisonResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Reference doesn't match definition.
            </summary>
      </Docs>
    </Member>
  </Members>
</Type>