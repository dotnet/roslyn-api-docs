<Type Name="VariableDeclaratorSyntax" FullName="Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax">
  <TypeSignature Language="C#" Value="public sealed class VariableDeclaratorSyntax : Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit VariableDeclaratorSyntax extends Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class VariableDeclaratorSyntax&#xA;Inherits CSharpSyntaxNode" />
  <TypeSignature Language="F#" Value="type VariableDeclaratorSyntax = class&#xA;    inherit CSharpSyntaxNode" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.Accept(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As CSharpSyntaxVisitor)" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor -&gt; unit" Usage="variableDeclaratorSyntax.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public override TResult Accept&lt;TResult&gt; (Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor&lt;TResult&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResult Accept&lt;TResult&gt;(class Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor`1&lt;!!TResult&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.Accept``1(Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResult) (visitor As CSharpSyntaxVisitor(Of TResult)) As TResult" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor&lt;'Result&gt; -&gt; 'Result" Usage="variableDeclaratorSyntax.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.CSharp.CSharpSyntaxVisitor&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArgumentListArguments">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax AddArgumentListArguments (params Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax AddArgumentListArguments(class Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.AddArgumentListArguments(Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddArgumentListArguments (ParamArray items As ArgumentSyntax()) As VariableDeclaratorSyntax" />
      <MemberSignature Language="F#" Value="member this.AddArgumentListArguments : Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax[] -&gt; Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax" Usage="variableDeclaratorSyntax.AddArgumentListArguments items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="Microsoft.CodeAnalysis.CSharp.Syntax.ArgumentSyntax[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArgumentList">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax ArgumentList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax ArgumentList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.ArgumentList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentList As BracketedArgumentListSyntax" />
      <MemberSignature Language="F#" Value="member this.ArgumentList : Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax" Usage="Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.ArgumentList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Identifier">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken Identifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken Identifier" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.Identifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Identifier As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.Identifier : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.Identifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the identifier.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initializer">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax Initializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax Initializer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.Initializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Initializer As EqualsValueClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.Initializer : Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax" Usage="Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.Initializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax Update (Microsoft.CodeAnalysis.SyntaxToken identifier, Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax argumentList, Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax Update(valuetype Microsoft.CodeAnalysis.SyntaxToken identifier, class Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax argumentList, class Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax,Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (identifier As SyntaxToken, argumentList As BracketedArgumentListSyntax, initializer As EqualsValueClauseSyntax) As VariableDeclaratorSyntax" />
      <MemberSignature Language="F#" Value="member this.Update : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax * Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax -&gt; Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax" Usage="variableDeclaratorSyntax.Update (identifier, argumentList, initializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="argumentList" Type="Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax" />
        <Parameter Name="initializer" Type="Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax" />
      </Parameters>
      <Docs>
        <param name="identifier">To be added.</param>
        <param name="argumentList">To be added.</param>
        <param name="initializer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithArgumentList">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax WithArgumentList (Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax argumentList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax WithArgumentList(class Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax argumentList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.WithArgumentList(Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithArgumentList (argumentList As BracketedArgumentListSyntax) As VariableDeclaratorSyntax" />
      <MemberSignature Language="F#" Value="member this.WithArgumentList : Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax -&gt; Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax" Usage="variableDeclaratorSyntax.WithArgumentList argumentList" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argumentList" Type="Microsoft.CodeAnalysis.CSharp.Syntax.BracketedArgumentListSyntax" />
      </Parameters>
      <Docs>
        <param name="argumentList">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithIdentifier">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax WithIdentifier (Microsoft.CodeAnalysis.SyntaxToken identifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax WithIdentifier(valuetype Microsoft.CodeAnalysis.SyntaxToken identifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.WithIdentifier(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithIdentifier (identifier As SyntaxToken) As VariableDeclaratorSyntax" />
      <MemberSignature Language="F#" Value="member this.WithIdentifier : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax" Usage="variableDeclaratorSyntax.WithIdentifier identifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identifier" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="identifier">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithInitializer">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax WithInitializer (Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax WithInitializer(class Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax.WithInitializer(Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithInitializer (initializer As EqualsValueClauseSyntax) As VariableDeclaratorSyntax" />
      <MemberSignature Language="F#" Value="member this.WithInitializer : Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax -&gt; Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax" Usage="variableDeclaratorSyntax.WithInitializer initializer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Syntax.VariableDeclaratorSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="Microsoft.CodeAnalysis.CSharp.Syntax.EqualsValueClauseSyntax" />
      </Parameters>
      <Docs>
        <param name="initializer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>