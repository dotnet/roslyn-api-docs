<Type Name="AnalyzerConfig" FullName="Microsoft.CodeAnalysis.AnalyzerConfig">
  <TypeSignature Language="C#" Value="public sealed class AnalyzerConfig" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AnalyzerConfig extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.AnalyzerConfig" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AnalyzerConfig" />
  <TypeSignature Language="F#" Value="type AnalyzerConfig = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a single EditorConfig file, see http://editorconfig.org for details about the format.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GlobalSection">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.AnalyzerConfig.Section GlobalSection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.AnalyzerConfig/Section GlobalSection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.AnalyzerConfig.GlobalSection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalSection As AnalyzerConfig.Section" />
      <MemberSignature Language="F#" Value="member this.GlobalSection : Microsoft.CodeAnalysis.AnalyzerConfig.Section" Usage="Microsoft.CodeAnalysis.AnalyzerConfig.GlobalSection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.AnalyzerConfig+Section</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRoot">
      <MemberSignature Language="C#" Value="public bool IsRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRoot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.AnalyzerConfig.IsRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRoot As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsRoot : bool" Usage="Microsoft.CodeAnalysis.AnalyzerConfig.IsRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets whether this editorconfig is a topmost editorconfig.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamedSections">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.AnalyzerConfig.Section&gt; NamedSections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.AnalyzerConfig/Section&gt; NamedSections" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.AnalyzerConfig.NamedSections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NamedSections As ImmutableArray(Of AnalyzerConfig.Section)" />
      <MemberSignature Language="F#" Value="member this.NamedSections : System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.AnalyzerConfig.Section&gt;" Usage="Microsoft.CodeAnalysis.AnalyzerConfig.NamedSections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.AnalyzerConfig+Section&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NormalizedDirectory">
      <MemberSignature Language="C#" Value="public string NormalizedDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NormalizedDirectory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.AnalyzerConfig.NormalizedDirectory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NormalizedDirectory As String" />
      <MemberSignature Language="F#" Value="member this.NormalizedDirectory : string" Usage="Microsoft.CodeAnalysis.AnalyzerConfig.NormalizedDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The directory the editorconfig was contained in, with all directory separators
            replaced with '/'.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.AnalyzerConfig Parse (Microsoft.CodeAnalysis.Text.SourceText text, string pathToFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CodeAnalysis.AnalyzerConfig Parse(class Microsoft.CodeAnalysis.Text.SourceText text, string pathToFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.AnalyzerConfig.Parse(Microsoft.CodeAnalysis.Text.SourceText,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (text As SourceText, pathToFile As String) As AnalyzerConfig" />
      <MemberSignature Language="F#" Value="static member Parse : Microsoft.CodeAnalysis.Text.SourceText * string -&gt; Microsoft.CodeAnalysis.AnalyzerConfig" Usage="Microsoft.CodeAnalysis.AnalyzerConfig.Parse (text, pathToFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.AnalyzerConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Microsoft.CodeAnalysis.Text.SourceText" />
        <Parameter Name="pathToFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="pathToFile">To be added.</param>
        <summary>
            Parses an editor config file text located at the given path. No parsing
            errors are reported. If any line contains a parse error, it is dropped.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.AnalyzerConfig Parse (string text, string pathToFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.CodeAnalysis.AnalyzerConfig Parse(string text, string pathToFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.AnalyzerConfig.Parse(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (text As String, pathToFile As String) As AnalyzerConfig" />
      <MemberSignature Language="F#" Value="static member Parse : string * string -&gt; Microsoft.CodeAnalysis.AnalyzerConfig" Usage="Microsoft.CodeAnalysis.AnalyzerConfig.Parse (text, pathToFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.AnalyzerConfig</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="pathToFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="pathToFile">To be added.</param>
        <summary>
            Parses an editor config file text located at the given path. No parsing
            errors are reported. If any line contains a parse error, it is dropped.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathToFile">
      <MemberSignature Language="C#" Value="public string PathToFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PathToFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.AnalyzerConfig.PathToFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathToFile As String" />
      <MemberSignature Language="F#" Value="member this.PathToFile : string" Usage="Microsoft.CodeAnalysis.AnalyzerConfig.PathToFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The path passed to <see cref="M:Microsoft.CodeAnalysis.AnalyzerConfig.Parse(System.String,System.String)" /> during construction.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReservedKeys">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableHashSet&lt;string&gt; ReservedKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Immutable.ImmutableHashSet`1&lt;string&gt; ReservedKeys" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.AnalyzerConfig.ReservedKeys" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ReservedKeys As ImmutableHashSet(Of String)" />
      <MemberSignature Language="F#" Value="member this.ReservedKeys : System.Collections.Immutable.ImmutableHashSet&lt;string&gt;" Usage="Microsoft.CodeAnalysis.AnalyzerConfig.ReservedKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableHashSet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A set of keys that are reserved for special interpretation for the editorconfig specification.
            All values corresponding to reserved keys in a (key,value) property pair are always lowercased
            during parsing.
            </summary>
        <value>To be added.</value>
        <remarks>
            This list was retrieved from https://github.com/editorconfig/editorconfig/wiki/EditorConfig-Properties
            at 2018-04-21 19:37:05Z. New keys may be added to this list in newer versions, but old ones will
            not be removed.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReservedValues">
      <MemberSignature Language="C#" Value="public static System.Collections.Immutable.ImmutableHashSet&lt;string&gt; ReservedValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Immutable.ImmutableHashSet`1&lt;string&gt; ReservedValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.AnalyzerConfig.ReservedValues" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ReservedValues As ImmutableHashSet(Of String)" />
      <MemberSignature Language="F#" Value="member this.ReservedValues : System.Collections.Immutable.ImmutableHashSet&lt;string&gt;" Usage="Microsoft.CodeAnalysis.AnalyzerConfig.ReservedValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableHashSet&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A set of values that are reserved for special use for the editorconfig specification
            and will always be lower-cased by the parser.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryCreateSectionNameMatcher">
      <MemberSignature Language="C#" Value="public static Nullable&lt;Microsoft.CodeAnalysis.AnalyzerConfig.SectionNameMatcher&gt; TryCreateSectionNameMatcher (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Nullable`1&lt;valuetype Microsoft.CodeAnalysis.AnalyzerConfig/SectionNameMatcher&gt; TryCreateSectionNameMatcher(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.AnalyzerConfig.TryCreateSectionNameMatcher(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryCreateSectionNameMatcher (sectionName As String) As Nullable(Of AnalyzerConfig.SectionNameMatcher)" />
      <MemberSignature Language="F#" Value="static member TryCreateSectionNameMatcher : string -&gt; Nullable&lt;Microsoft.CodeAnalysis.AnalyzerConfig.SectionNameMatcher&gt;" Usage="Microsoft.CodeAnalysis.AnalyzerConfig.TryCreateSectionNameMatcher sectionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.CodeAnalysis.AnalyzerConfig+SectionNameMatcher&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">To be added.</param>
        <summary>
            Takes a <see cref="P:Microsoft.CodeAnalysis.AnalyzerConfig.Section.Name" /> and creates a matcher that
            matches the the given language. Returns null if the section name is
            invalid.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>