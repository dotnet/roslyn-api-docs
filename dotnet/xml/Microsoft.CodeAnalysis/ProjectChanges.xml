<Type Name="ProjectChanges" FullName="Microsoft.CodeAnalysis.ProjectChanges">
  <TypeSignature Language="C#" Value="public struct ProjectChanges" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ProjectChanges extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.ProjectChanges" />
  <TypeSignature Language="VB.NET" Value="Public Structure ProjectChanges" />
  <TypeSignature Language="F#" Value="type ProjectChanges = struct" />
  <TypeSignature Language="C++ CLI" Value="public value class ProjectChanges" />
  <TypeSignature Language="C++ WINRT" Value="struct ProjectChanges" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAddedAdditionalDocuments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.DocumentId&gt; GetAddedAdditionalDocuments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.DocumentId&gt; GetAddedAdditionalDocuments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.ProjectChanges.GetAddedAdditionalDocuments" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetAddedAdditionalDocuments () As IEnumerable(Of DocumentId)" />
      <MemberSignature Language="F#" Value="member this.GetAddedAdditionalDocuments : unit -&gt; seq&lt;Microsoft.CodeAnalysis.DocumentId&gt;" Usage="projectChanges.GetAddedAdditionalDocuments " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::DocumentId ^&gt; ^ GetAddedAdditionalDocuments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.CodeAnalysis.ProjectChanges/&lt;GetAddedAdditionalDocuments&gt;d__16))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.DocumentId&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAddedAnalyzerReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt; GetAddedAnalyzerReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt; GetAddedAnalyzerReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.ProjectChanges.GetAddedAnalyzerReferences" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetAddedAnalyzerReferences () As IEnumerable(Of AnalyzerReference)" />
      <MemberSignature Language="F#" Value="member this.GetAddedAnalyzerReferences : unit -&gt; seq&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt;" Usage="projectChanges.GetAddedAnalyzerReferences " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::Diagnostics::AnalyzerReference ^&gt; ^ GetAddedAnalyzerReferences();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.CodeAnalysis.ProjectChanges/&lt;GetAddedAnalyzerReferences&gt;d__13))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAddedDocuments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.DocumentId&gt; GetAddedDocuments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.DocumentId&gt; GetAddedDocuments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.ProjectChanges.GetAddedDocuments" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetAddedDocuments () As IEnumerable(Of DocumentId)" />
      <MemberSignature Language="F#" Value="member this.GetAddedDocuments : unit -&gt; seq&lt;Microsoft.CodeAnalysis.DocumentId&gt;" Usage="projectChanges.GetAddedDocuments " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::DocumentId ^&gt; ^ GetAddedDocuments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.CodeAnalysis.ProjectChanges/&lt;GetAddedDocuments&gt;d__15))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.DocumentId&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAddedMetadataReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.MetadataReference&gt; GetAddedMetadataReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.MetadataReference&gt; GetAddedMetadataReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.ProjectChanges.GetAddedMetadataReferences" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetAddedMetadataReferences () As IEnumerable(Of MetadataReference)" />
      <MemberSignature Language="F#" Value="member this.GetAddedMetadataReferences : unit -&gt; seq&lt;Microsoft.CodeAnalysis.MetadataReference&gt;" Usage="projectChanges.GetAddedMetadataReferences " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::MetadataReference ^&gt; ^ GetAddedMetadataReferences();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.CodeAnalysis.ProjectChanges/&lt;GetAddedMetadataReferences&gt;d__11))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.MetadataReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAddedProjectReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.ProjectReference&gt; GetAddedProjectReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.ProjectReference&gt; GetAddedProjectReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.ProjectChanges.GetAddedProjectReferences" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetAddedProjectReferences () As IEnumerable(Of ProjectReference)" />
      <MemberSignature Language="F#" Value="member this.GetAddedProjectReferences : unit -&gt; seq&lt;Microsoft.CodeAnalysis.ProjectReference&gt;" Usage="projectChanges.GetAddedProjectReferences " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::ProjectReference ^&gt; ^ GetAddedProjectReferences();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.CodeAnalysis.ProjectChanges/&lt;GetAddedProjectReferences&gt;d__9))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.ProjectReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangedAdditionalDocuments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.DocumentId&gt; GetChangedAdditionalDocuments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.DocumentId&gt; GetChangedAdditionalDocuments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.ProjectChanges.GetChangedAdditionalDocuments" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetChangedAdditionalDocuments () As IEnumerable(Of DocumentId)" />
      <MemberSignature Language="F#" Value="member this.GetChangedAdditionalDocuments : unit -&gt; seq&lt;Microsoft.CodeAnalysis.DocumentId&gt;" Usage="projectChanges.GetChangedAdditionalDocuments " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::DocumentId ^&gt; ^ GetChangedAdditionalDocuments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.CodeAnalysis.ProjectChanges/&lt;GetChangedAdditionalDocuments&gt;d__19))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.DocumentId&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangedDocuments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.DocumentId&gt; GetChangedDocuments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.DocumentId&gt; GetChangedDocuments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.ProjectChanges.GetChangedDocuments" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChangedDocuments () As IEnumerable(Of DocumentId)" />
      <MemberSignature Language="F#" Value="member this.GetChangedDocuments : unit -&gt; seq&lt;Microsoft.CodeAnalysis.DocumentId&gt;" Usage="projectChanges.GetChangedDocuments " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::DocumentId ^&gt; ^ GetChangedDocuments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.DocumentId&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get Documents with any changes, including textual and non-textual changes
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChangedDocuments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.DocumentId&gt; GetChangedDocuments (bool onlyGetDocumentsWithTextChanges);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.DocumentId&gt; GetChangedDocuments(bool onlyGetDocumentsWithTextChanges) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.ProjectChanges.GetChangedDocuments(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetChangedDocuments (onlyGetDocumentsWithTextChanges As Boolean) As IEnumerable(Of DocumentId)" />
      <MemberSignature Language="F#" Value="member this.GetChangedDocuments : bool -&gt; seq&lt;Microsoft.CodeAnalysis.DocumentId&gt;" Usage="projectChanges.GetChangedDocuments onlyGetDocumentsWithTextChanges" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.CodeAnalysis.ProjectChanges/&lt;GetChangedDocuments&gt;d__18))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.DocumentId&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="onlyGetDocumentsWithTextChanges" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="onlyGetDocumentsWithTextChanges"></param>
        <summary>
            Get Changed Documents:
            When onlyGetDocumentsWithTextChanges is true, only get documents with text changes;
            otherwise get documents with any changes i.e. DocumentState changes:
            <see cref="P:Microsoft.CodeAnalysis.DocumentState.ParseOptions" />, <see cref="P:Microsoft.CodeAnalysis.DocumentState.SourceCodeKind" />, <see cref="P:Microsoft.CodeAnalysis.TextDocumentState.FilePath" /></summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemovedAdditionalDocuments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.DocumentId&gt; GetRemovedAdditionalDocuments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.DocumentId&gt; GetRemovedAdditionalDocuments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.ProjectChanges.GetRemovedAdditionalDocuments" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetRemovedAdditionalDocuments () As IEnumerable(Of DocumentId)" />
      <MemberSignature Language="F#" Value="member this.GetRemovedAdditionalDocuments : unit -&gt; seq&lt;Microsoft.CodeAnalysis.DocumentId&gt;" Usage="projectChanges.GetRemovedAdditionalDocuments " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::DocumentId ^&gt; ^ GetRemovedAdditionalDocuments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.CodeAnalysis.ProjectChanges/&lt;GetRemovedAdditionalDocuments&gt;d__21))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.DocumentId&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemovedAnalyzerReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt; GetRemovedAnalyzerReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt; GetRemovedAnalyzerReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.ProjectChanges.GetRemovedAnalyzerReferences" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetRemovedAnalyzerReferences () As IEnumerable(Of AnalyzerReference)" />
      <MemberSignature Language="F#" Value="member this.GetRemovedAnalyzerReferences : unit -&gt; seq&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt;" Usage="projectChanges.GetRemovedAnalyzerReferences " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::Diagnostics::AnalyzerReference ^&gt; ^ GetRemovedAnalyzerReferences();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.CodeAnalysis.ProjectChanges/&lt;GetRemovedAnalyzerReferences&gt;d__14))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemovedDocuments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.DocumentId&gt; GetRemovedDocuments ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.DocumentId&gt; GetRemovedDocuments() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.ProjectChanges.GetRemovedDocuments" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetRemovedDocuments () As IEnumerable(Of DocumentId)" />
      <MemberSignature Language="F#" Value="member this.GetRemovedDocuments : unit -&gt; seq&lt;Microsoft.CodeAnalysis.DocumentId&gt;" Usage="projectChanges.GetRemovedDocuments " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::DocumentId ^&gt; ^ GetRemovedDocuments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.CodeAnalysis.ProjectChanges/&lt;GetRemovedDocuments&gt;d__20))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.DocumentId&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemovedMetadataReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.MetadataReference&gt; GetRemovedMetadataReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.MetadataReference&gt; GetRemovedMetadataReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.ProjectChanges.GetRemovedMetadataReferences" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetRemovedMetadataReferences () As IEnumerable(Of MetadataReference)" />
      <MemberSignature Language="F#" Value="member this.GetRemovedMetadataReferences : unit -&gt; seq&lt;Microsoft.CodeAnalysis.MetadataReference&gt;" Usage="projectChanges.GetRemovedMetadataReferences " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::MetadataReference ^&gt; ^ GetRemovedMetadataReferences();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.CodeAnalysis.ProjectChanges/&lt;GetRemovedMetadataReferences&gt;d__12))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.MetadataReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemovedProjectReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.ProjectReference&gt; GetRemovedProjectReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.ProjectReference&gt; GetRemovedProjectReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.ProjectChanges.GetRemovedProjectReferences" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetRemovedProjectReferences () As IEnumerable(Of ProjectReference)" />
      <MemberSignature Language="F#" Value="member this.GetRemovedProjectReferences : unit -&gt; seq&lt;Microsoft.CodeAnalysis.ProjectReference&gt;" Usage="projectChanges.GetRemovedProjectReferences " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::ProjectReference ^&gt; ^ GetRemovedProjectReferences();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.CodeAnalysis.ProjectChanges/&lt;GetRemovedProjectReferences&gt;d__10))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.ProjectReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewProject">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project NewProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.Project NewProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.ProjectChanges.NewProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewProject As Project" />
      <MemberSignature Language="F#" Value="member this.NewProject : Microsoft.CodeAnalysis.Project" Usage="Microsoft.CodeAnalysis.ProjectChanges.NewProject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::Project ^ NewProject { Microsoft::CodeAnalysis::Project ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::CodeAnalysis::Project ^ NewProject { Microsoft::CodeAnalysis::Project ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OldProject">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Project OldProject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.Project OldProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.ProjectChanges.OldProject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldProject As Project" />
      <MemberSignature Language="F#" Value="member this.OldProject : Microsoft.CodeAnalysis.Project" Usage="Microsoft.CodeAnalysis.ProjectChanges.OldProject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::Project ^ OldProject { Microsoft::CodeAnalysis::Project ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::CodeAnalysis::Project ^ OldProject { Microsoft::CodeAnalysis::Project ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Project</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectId">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.ProjectId ProjectId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.ProjectId ProjectId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.ProjectChanges.ProjectId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectId As ProjectId" />
      <MemberSignature Language="F#" Value="member this.ProjectId : Microsoft.CodeAnalysis.ProjectId" Usage="Microsoft.CodeAnalysis.ProjectChanges.ProjectId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::ProjectId ^ ProjectId { Microsoft::CodeAnalysis::ProjectId ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.Workspaces</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ProjectId</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>