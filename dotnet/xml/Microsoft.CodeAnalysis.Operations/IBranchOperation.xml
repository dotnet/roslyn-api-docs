<Type Name="IBranchOperation" FullName="Microsoft.CodeAnalysis.Operations.IBranchOperation">
  <TypeSignature Language="C#" Value="public interface IBranchOperation : Microsoft.CodeAnalysis.IOperation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBranchOperation implements class Microsoft.CodeAnalysis.IOperation" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Operations.IBranchOperation" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBranchOperation&#xA;Implements IOperation" />
  <TypeSignature Language="F#" Value="type IBranchOperation = interface&#xA;    interface IOperation" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBranchOperation : Microsoft::CodeAnalysis::IOperation" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.CodeAnalysis.IOperation</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents a branch operation.
            <para>
            Current usage:
             (1) C# goto, break, or continue statement.
             (2) VB GoTo, Exit ***, or Continue *** statement.
            </para></summary>
    <remarks>
            This interface is reserved for implementation by its associated APIs. We reserve the right to
            change it in the future.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="BranchKind">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Operations.BranchKind BranchKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.Operations.BranchKind BranchKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.IBranchOperation.BranchKind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BranchKind As BranchKind" />
      <MemberSignature Language="F#" Value="member this.BranchKind : Microsoft.CodeAnalysis.Operations.BranchKind" Usage="Microsoft.CodeAnalysis.Operations.IBranchOperation.BranchKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::Operations::BranchKind BranchKind { Microsoft::CodeAnalysis::Operations::BranchKind get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Operations.BranchKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Kind of the branch.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.ILabelSymbol Target { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.ILabelSymbol Target" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.IBranchOperation.Target" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Target As ILabelSymbol" />
      <MemberSignature Language="F#" Value="member this.Target : Microsoft.CodeAnalysis.ILabelSymbol" Usage="Microsoft.CodeAnalysis.Operations.IBranchOperation.Target" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::ILabelSymbol ^ Target { Microsoft::CodeAnalysis::ILabelSymbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ILabelSymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Label that is the target of the branch.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>