<Type Name="GeneratorAttributeSyntaxContext" FullName="Microsoft.CodeAnalysis.GeneratorAttributeSyntaxContext">
  <TypeSignature Language="C#" Value="public readonly struct GeneratorAttributeSyntaxContext" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit GeneratorAttributeSyntaxContext extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.GeneratorAttributeSyntaxContext" />
  <TypeSignature Language="VB.NET" Value="Public Structure GeneratorAttributeSyntaxContext" />
  <TypeSignature Language="F#" Value="type GeneratorAttributeSyntaxContext = struct" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>4.8.0.0</AssemblyVersion>
    <AssemblyVersion>4.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.AttributeData&gt; Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.AttributeData&gt; Attributes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.GeneratorAttributeSyntaxContext.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As ImmutableArray(Of AttributeData)" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.AttributeData&gt;" Usage="Microsoft.CodeAnalysis.GeneratorAttributeSyntaxContext.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.AttributeData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:Microsoft.CodeAnalysis.AttributeData" />s for any matching attributes on <see cref="P:Microsoft.CodeAnalysis.GeneratorAttributeSyntaxContext.TargetSymbol" />.  Always non-empty.  All
            these attributes will have an <see cref="P:Microsoft.CodeAnalysis.AttributeData.AttributeClass" /> whose fully qualified name metadata
            name matches the name requested in <see cref="M:Microsoft.CodeAnalysis.SyntaxValueProvider.ForAttributeWithMetadataName``1(System.String,System.Func{Microsoft.CodeAnalysis.SyntaxNode,System.Threading.CancellationToken,System.Boolean},System.Func{Microsoft.CodeAnalysis.GeneratorAttributeSyntaxContext,System.Threading.CancellationToken,``0})" />.
            <para>
            To get the entire list of attributes, use <see cref="M:Microsoft.CodeAnalysis.ISymbol.GetAttributes" /> on <see cref="P:Microsoft.CodeAnalysis.GeneratorAttributeSyntaxContext.TargetSymbol" />.
            </para></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SemanticModel">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SemanticModel SemanticModel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.SemanticModel SemanticModel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.GeneratorAttributeSyntaxContext.SemanticModel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SemanticModel As SemanticModel" />
      <MemberSignature Language="F#" Value="member this.SemanticModel : Microsoft.CodeAnalysis.SemanticModel" Usage="Microsoft.CodeAnalysis.GeneratorAttributeSyntaxContext.SemanticModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SemanticModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Semantic model for the file that <see cref="P:Microsoft.CodeAnalysis.GeneratorAttributeSyntaxContext.TargetNode" /> is contained within.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNode">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxNode TargetNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.SyntaxNode TargetNode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.GeneratorAttributeSyntaxContext.TargetNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetNode As SyntaxNode" />
      <MemberSignature Language="F#" Value="member this.TargetNode : Microsoft.CodeAnalysis.SyntaxNode" Usage="Microsoft.CodeAnalysis.GeneratorAttributeSyntaxContext.TargetNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The syntax node the attribute is attached to.  For example, with <c>[CLSCompliant] class C { }</c> this would
            the class declaration node.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetSymbol">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.ISymbol TargetSymbol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.ISymbol TargetSymbol" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.GeneratorAttributeSyntaxContext.TargetSymbol" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetSymbol As ISymbol" />
      <MemberSignature Language="F#" Value="member this.TargetSymbol : Microsoft.CodeAnalysis.ISymbol" Usage="Microsoft.CodeAnalysis.GeneratorAttributeSyntaxContext.TargetSymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ISymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The symbol that the attribute is attached to.  For example, with <c>[CLSCompliant] class C { }</c> this would be
            the <see cref="T:Microsoft.CodeAnalysis.INamedTypeSymbol" /> for <c>"C"</c>.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
