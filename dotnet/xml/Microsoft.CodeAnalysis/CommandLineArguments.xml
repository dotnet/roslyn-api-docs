<Type Name="CommandLineArguments" FullName="Microsoft.CodeAnalysis.CommandLineArguments">
  <TypeSignature Language="C#" Value="public abstract class CommandLineArguments" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CommandLineArguments extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.CommandLineArguments" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The base class for representing command line arguments to a
            <see cref="T:Microsoft.CodeAnalysis.CommonCompiler" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AdditionalFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CommandLineSourceFile&gt; AdditionalFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;valuetype Microsoft.CodeAnalysis.CommandLineSourceFile&gt; AdditionalFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.AdditionalFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CommandLineSourceFile&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A set of additional non-code text files that can be used by analyzers.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AnalyzerReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CommandLineAnalyzerReference&gt; AnalyzerReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;valuetype Microsoft.CodeAnalysis.CommandLineAnalyzerReference&gt; AnalyzerReferences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.AnalyzerReferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CommandLineAnalyzerReference&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            References to analyzers supplied on the command line.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppConfigPath">
      <MemberSignature Language="C#" Value="public string AppConfigPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppConfigPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.AppConfigPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            An absolute path of the app.config file or null if not specified.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseDirectory">
      <MemberSignature Language="C#" Value="public string BaseDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseDirectory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.BaseDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Directory used to resolve relative paths stored in the arguments.
            </summary>
        <value>To be added.</value>
        <remarks>
            Except for paths stored in <see cref="P:Microsoft.CodeAnalysis.CommandLineArguments.MetadataReferences" />, all
            paths stored in the properties of this class are resolved and
            absolute. This is the directory that relative paths specified on
            command line were resolved against.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChecksumAlgorithm">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Text.SourceHashAlgorithm ChecksumAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.Text.SourceHashAlgorithm ChecksumAlgorithm" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.ChecksumAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Text.SourceHashAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Hash algorithm to use to calculate source file debug checksums.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompilationName">
      <MemberSignature Language="C#" Value="public string CompilationName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CompilationName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.CompilationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Compilation name or null if not specified.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompilationOptions">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CompilationOptions CompilationOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.CompilationOptions CompilationOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.CompilationOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Options to the <see cref="T:Microsoft.CodeAnalysis.Compilation" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompilationOptionsCore">
      <MemberSignature Language="C#" Value="protected abstract Microsoft.CodeAnalysis.CompilationOptions CompilationOptionsCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.CompilationOptions CompilationOptionsCore" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.CompilationOptionsCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CompilationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayHelp">
      <MemberSignature Language="C#" Value="public bool DisplayHelp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayHelp" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.DisplayHelp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If true, append the command line help during
            <see cref="M:Microsoft.CodeAnalysis.CommonCompiler.Run(System.IO.TextWriter,System.Threading.CancellationToken)" /></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayLogo">
      <MemberSignature Language="C#" Value="public bool DisplayLogo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayLogo" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.DisplayLogo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If true, prepend the command line header logo during 
            <see cref="M:Microsoft.CodeAnalysis.CommonCompiler.Run(System.IO.TextWriter,System.Threading.CancellationToken)" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayVersion">
      <MemberSignature Language="C#" Value="public bool DisplayVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.DisplayVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If true, append the compiler version during
            <see cref="M:Microsoft.CodeAnalysis.CommonCompiler.Run(System.IO.TextWriter,System.Threading.CancellationToken)" /></summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DocumentationPath">
      <MemberSignature Language="C#" Value="public string DocumentationPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentationPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.DocumentationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Absolute path of the documentation comment XML file or null if not specified.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmbeddedFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CommandLineSourceFile&gt; EmbeddedFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;valuetype Microsoft.CodeAnalysis.CommandLineSourceFile&gt; EmbeddedFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.EmbeddedFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CommandLineSourceFile&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A set of files to embed in the PDB.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitOptions">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Emit.EmitOptions EmitOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.Emit.EmitOptions EmitOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.EmitOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Emit.EmitOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the emit options.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EmitPdb">
      <MemberSignature Language="C#" Value="public bool EmitPdb { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EmitPdb" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.EmitPdb" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            True to emit PDB information (to a standalone PDB file or embedded into the PE file).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Encoding to be used for source files or 'null' for autodetect/default.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorLogPath">
      <MemberSignature Language="C#" Value="public string ErrorLogPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorLogPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.ErrorLogPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Absolute path of the error log file or null if not specified.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Errors">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.Diagnostic&gt; Errors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.Diagnostic&gt; Errors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.Errors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.Diagnostic&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Errors while parsing the command line arguments.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InteractiveMode">
      <MemberSignature Language="C#" Value="public bool InteractiveMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InteractiveMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.InteractiveMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Drop to an interactive loop. If a script is specified in <see cref="P:Microsoft.CodeAnalysis.CommandLineArguments.SourceFiles" /> executes the script first.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyFileSearchPaths">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;string&gt; KeyFileSearchPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;string&gt; KeyFileSearchPaths" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.KeyFileSearchPaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sequence of absolute paths used to search for key files.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManifestResources">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.ResourceDescription&gt; ManifestResources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.ResourceDescription&gt; ManifestResources" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.ManifestResources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.ResourceDescription&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Resources specified as arguments to the compilation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CommandLineReference&gt; MetadataReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;valuetype Microsoft.CodeAnalysis.CommandLineReference&gt; MetadataReferences" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.MetadataReferences" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CommandLineReference&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            References to metadata supplied on the command line. 
            Includes assemblies specified via /r and netmodules specified via /addmodule.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NoWin32Manifest">
      <MemberSignature Language="C#" Value="public bool NoWin32Manifest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoWin32Manifest" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.NoWin32Manifest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If true, do not embed any Win32 manifest, including
            one specified by <see cref="P:Microsoft.CodeAnalysis.CommandLineArguments.Win32Manifest" /> or any
            default manifest.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputDirectory">
      <MemberSignature Language="C#" Value="public string OutputDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OutputDirectory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.OutputDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Absolute path of the output directory.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputFileName">
      <MemberSignature Language="C#" Value="public string OutputFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OutputFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.OutputFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Name of the output file or null if not specified.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputRefFilePath">
      <MemberSignature Language="C#" Value="public string OutputRefFilePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OutputRefFilePath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.OutputRefFilePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Path of the output ref assembly or null if not specified.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseOptions">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.ParseOptions ParseOptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.ParseOptions ParseOptions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.ParseOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ParseOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Options to the <see cref="T:Microsoft.CodeAnalysis.CommandLineParser" />.
            </summary>
        <value />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseOptionsCore">
      <MemberSignature Language="C#" Value="protected abstract Microsoft.CodeAnalysis.ParseOptions ParseOptionsCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.ParseOptions ParseOptionsCore" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.ParseOptionsCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ParseOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathMap">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; PathMap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; PathMap" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.PathMap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A list of pairs of paths. This stores the value of the command-line compiler
            option /pathMap:X1=Y1;X2=Y2... which causes a prefix of X1 followed by a path
            separator to be replaced by Y1 followed by a path separator, and so on for each following pair.
            </summary>
        <value>To be added.</value>
        <remarks>
            This option is used to help get build-to-build determinism even when the build
            directory is different from one build to the next.  The prefix matching is case sensitive.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="PdbPath">
      <MemberSignature Language="C#" Value="public string PdbPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PdbPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.PdbPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Path of the PDB file or null if same as output binary path with .pdb extension.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredUILang">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo PreferredUILang { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo PreferredUILang" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.PreferredUILang" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Specify the preferred output language name.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrintFullPaths">
      <MemberSignature Language="C#" Value="public bool PrintFullPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrintFullPaths" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.PrintFullPaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If true, prints the full path of the file containing errors or
            warnings in diagnostics.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencePaths">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;string&gt; ReferencePaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;string&gt; ReferencePaths" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.ReferencePaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sequence of absolute paths used to search for references.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportAnalyzer">
      <MemberSignature Language="C#" Value="public bool ReportAnalyzer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReportAnalyzer" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.ReportAnalyzer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>
            Report additional information related to analyzers, such as analyzer execution time.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveAnalyzerReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt; ResolveAnalyzerReferences (Microsoft.CodeAnalysis.IAnalyzerAssemblyLoader analyzerLoader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt; ResolveAnalyzerReferences(class Microsoft.CodeAnalysis.IAnalyzerAssemblyLoader analyzerLoader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CommandLineArguments.ResolveAnalyzerReferences(Microsoft.CodeAnalysis.IAnalyzerAssemblyLoader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(Microsoft.CodeAnalysis.CommandLineArguments/&lt;ResolveAnalyzerReferences&gt;d__177))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.Diagnostics.AnalyzerReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="analyzerLoader" Type="Microsoft.CodeAnalysis.IAnalyzerAssemblyLoader" />
      </Parameters>
      <Docs>
        <param name="analyzerLoader">Load an assembly from a file path</param>
        <summary>
            Resolves analyzer references stored in <see cref="P:Microsoft.CodeAnalysis.CommandLineArguments.AnalyzerReferences" /> using given file resolver.
            </summary>
        <returns>Yields resolved <see cref="T:Microsoft.CodeAnalysis.Diagnostics.AnalyzerFileReference" /> or <see cref="T:Microsoft.CodeAnalysis.Diagnostics.UnresolvedAnalyzerReference" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveMetadataReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.MetadataReference&gt; ResolveMetadataReferences (Microsoft.CodeAnalysis.MetadataReferenceResolver metadataResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.MetadataReference&gt; ResolveMetadataReferences(class Microsoft.CodeAnalysis.MetadataReferenceResolver metadataResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CommandLineArguments.ResolveMetadataReferences(Microsoft.CodeAnalysis.MetadataReferenceResolver)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.MetadataReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadataResolver" Type="Microsoft.CodeAnalysis.MetadataReferenceResolver" />
      </Parameters>
      <Docs>
        <param name="metadataResolver">
          <see cref="T:Microsoft.CodeAnalysis.MetadataReferenceResolver" /> to use for assembly name and relative path resolution.</param>
        <summary>
            Resolves metadata references stored in <see cref="P:Microsoft.CodeAnalysis.CommandLineArguments.MetadataReferences" /> using given file resolver and metadata provider.
            </summary>
        <returns>Yields resolved metadata references or <see cref="T:Microsoft.CodeAnalysis.UnresolvedMetadataReference" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="metadataResolver" /> is null.</exception>
      </Docs>
    </Member>
    <Member MemberName="RuleSetPath">
      <MemberSignature Language="C#" Value="public string RuleSetPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RuleSetPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.RuleSetPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Absolute path of the .ruleset file or null if not specified.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScriptArguments">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;string&gt; ScriptArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;string&gt; ScriptArguments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.ScriptArguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Arguments following a script file or separator "--". Null if the command line parser is not interactive.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CommandLineSourceFile&gt; SourceFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;valuetype Microsoft.CodeAnalysis.CommandLineSourceFile&gt; SourceFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.SourceFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.CommandLineSourceFile&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Source file paths.
            </summary>
        <value>To be added.</value>
        <remarks>
            Includes files specified directly on command line as well as files matching patterns specified 
            on command line using '*' and '?' wildcards or /recurse option.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceLink">
      <MemberSignature Language="C#" Value="public string SourceLink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceLink" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.SourceLink" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Path of the file containing information linking the compilation to source server that stores 
            a snapshot of the source code included in the compilation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourcePaths">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;string&gt; SourcePaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;string&gt; SourcePaths" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.SourcePaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Sequence of absolute paths used to search for sources specified as #load directives.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchedFilesPath">
      <MemberSignature Language="C#" Value="public string TouchedFilesPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TouchedFilesPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.TouchedFilesPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Full path of a log of file paths accessed by the compiler, or null if file logging should be suppressed.
            </summary>
        <value>To be added.</value>
        <remarks>
            Two log files will be created: 
            One with path <see cref="P:Microsoft.CodeAnalysis.CommandLineArguments.TouchedFilesPath" /> and extension ".read" logging the files read,
            and second with path <see cref="P:Microsoft.CodeAnalysis.CommandLineArguments.TouchedFilesPath" /> and extension ".write" logging the files written to during compilation.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Utf8Output">
      <MemberSignature Language="C#" Value="public bool Utf8Output { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Utf8Output" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.Utf8Output" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If true, use UTF8 for output.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Win32Icon">
      <MemberSignature Language="C#" Value="public string Win32Icon { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Win32Icon" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.Win32Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The path to a .ico icon file.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Win32Manifest">
      <MemberSignature Language="C#" Value="public string Win32Manifest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Win32Manifest" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.Win32Manifest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The path to a Win32 manifest file to embed
            into the output portable executable (PE) file.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Win32ResourceFile">
      <MemberSignature Language="C#" Value="public string Win32ResourceFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Win32ResourceFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CommandLineArguments.Win32ResourceFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The path to a Win32 resource.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>