<Type Name="INamespaceSymbol" FullName="Microsoft.CodeAnalysis.INamespaceSymbol">
  <TypeSignature Language="C#" Value="public interface INamespaceSymbol : IEquatable&lt;Microsoft.CodeAnalysis.ISymbol&gt;, Microsoft.CodeAnalysis.INamespaceOrTypeSymbol" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract INamespaceSymbol implements class Microsoft.CodeAnalysis.INamespaceOrTypeSymbol, class Microsoft.CodeAnalysis.ISymbol, class System.IEquatable`1&lt;class Microsoft.CodeAnalysis.ISymbol&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.INamespaceSymbol" />
  <TypeSignature Language="VB.NET" Value="Public Interface INamespaceSymbol&#xA;Implements IEquatable(Of ISymbol), INamespaceOrTypeSymbol" />
  <TypeSignature Language="F#" Value="type INamespaceSymbol = interface&#xA;    interface INamespaceOrTypeSymbol&#xA;    interface ISymbol&#xA;    interface IEquatable&lt;ISymbol&gt;" />
  <TypeSignature Language="C++ CLI" Value="public interface class INamespaceSymbol : IEquatable&lt;Microsoft::CodeAnalysis::ISymbol ^&gt;, Microsoft::CodeAnalysis::INamespaceOrTypeSymbol" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.CodeAnalysis.INamespaceOrTypeSymbol</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.CodeAnalysis.ISymbol</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.CodeAnalysis.ISymbol&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents a namespace.
            </summary>
    <remarks>
            This interface is reserved for implementation by its associated APIs. We reserve the right to
            change it in the future.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="ConstituentNamespaces">
      <MemberSignature Language="C#" Value="public System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.INamespaceSymbol&gt; ConstituentNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Collections.Immutable.ImmutableArray`1&lt;class Microsoft.CodeAnalysis.INamespaceSymbol&gt; ConstituentNamespaces" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.INamespaceSymbol.ConstituentNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstituentNamespaces As ImmutableArray(Of INamespaceSymbol)" />
      <MemberSignature Language="F#" Value="member this.ConstituentNamespaces : System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.INamespaceSymbol&gt;" Usage="Microsoft.CodeAnalysis.INamespaceSymbol.ConstituentNamespaces" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::INamespaceSymbol ^&gt; ConstituentNamespaces { System::Collections::Immutable::ImmutableArray&lt;Microsoft::CodeAnalysis::INamespaceSymbol ^&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Immutable.ImmutableArray&lt;Microsoft.CodeAnalysis.INamespaceSymbol&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            If a namespace is an assembly or compilation namespace, it may be composed of multiple
            namespaces that are merged together. If so, ConstituentNamespaces returns
            all the namespaces that were merged. If this namespace was not merged, returns
            an array containing only this namespace.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainingCompilation">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Compilation ContainingCompilation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.Compilation ContainingCompilation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.INamespaceSymbol.ContainingCompilation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContainingCompilation As Compilation" />
      <MemberSignature Language="F#" Value="member this.ContainingCompilation : Microsoft.CodeAnalysis.Compilation" Usage="Microsoft.CodeAnalysis.INamespaceSymbol.ContainingCompilation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::Compilation ^ ContainingCompilation { Microsoft::CodeAnalysis::Compilation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Compilation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The containing compilation for compilation namespaces.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.INamespaceOrTypeSymbol&gt; GetMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.INamespaceOrTypeSymbol&gt; GetMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.INamespaceSymbol.GetMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers () As IEnumerable(Of INamespaceOrTypeSymbol)" />
      <MemberSignature Language="F#" Value="abstract member GetMembers : unit -&gt; seq&lt;Microsoft.CodeAnalysis.INamespaceOrTypeSymbol&gt;" Usage="iNamespaceSymbol.GetMembers " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::INamespaceOrTypeSymbol ^&gt; ^ GetMembers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.INamespaceOrTypeSymbol&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get all the members of this symbol.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.INamespaceOrTypeSymbol&gt; GetMembers (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.INamespaceOrTypeSymbol&gt; GetMembers(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.INamespaceSymbol.GetMembers(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (name As String) As IEnumerable(Of INamespaceOrTypeSymbol)" />
      <MemberSignature Language="F#" Value="abstract member GetMembers : string -&gt; seq&lt;Microsoft.CodeAnalysis.INamespaceOrTypeSymbol&gt;" Usage="iNamespaceSymbol.GetMembers name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::INamespaceOrTypeSymbol ^&gt; ^ GetMembers(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.INamespaceOrTypeSymbol&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>
            Get all the members of this symbol that have a particular name.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNamespaceMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.INamespaceSymbol&gt; GetNamespaceMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.CodeAnalysis.INamespaceSymbol&gt; GetNamespaceMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.INamespaceSymbol.GetNamespaceMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNamespaceMembers () As IEnumerable(Of INamespaceSymbol)" />
      <MemberSignature Language="F#" Value="abstract member GetNamespaceMembers : unit -&gt; seq&lt;Microsoft.CodeAnalysis.INamespaceSymbol&gt;" Usage="iNamespaceSymbol.GetNamespaceMembers " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::CodeAnalysis::INamespaceSymbol ^&gt; ^ GetNamespaceMembers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.CodeAnalysis.INamespaceSymbol&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Get all the members of this symbol that are namespaces.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGlobalNamespace">
      <MemberSignature Language="C#" Value="public bool IsGlobalNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGlobalNamespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.INamespaceSymbol.IsGlobalNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGlobalNamespace As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsGlobalNamespace : bool" Usage="Microsoft.CodeAnalysis.INamespaceSymbol.IsGlobalNamespace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGlobalNamespace { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns whether this namespace is the unnamed, global namespace that is 
            at the root of all namespaces.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceKind">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.NamespaceKind NamespaceKind { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.NamespaceKind NamespaceKind" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.INamespaceSymbol.NamespaceKind" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NamespaceKind As NamespaceKind" />
      <MemberSignature Language="F#" Value="member this.NamespaceKind : Microsoft.CodeAnalysis.NamespaceKind" Usage="Microsoft.CodeAnalysis.INamespaceSymbol.NamespaceKind" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::NamespaceKind NamespaceKind { Microsoft::CodeAnalysis::NamespaceKind get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.NamespaceKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The kind of namespace: Module, Assembly or Compilation.
            Module namespaces contain only members from the containing module that share the same namespace name.
            Assembly namespaces contain members for all modules in the containing assembly that share the same namespace name.
            Compilation namespaces contain all members, from source or referenced metadata (assemblies and modules) that share the same namespace name.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>