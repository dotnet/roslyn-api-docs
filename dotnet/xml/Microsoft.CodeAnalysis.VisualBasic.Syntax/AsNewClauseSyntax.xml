<Type Name="AsNewClauseSyntax" FullName="Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax">
  <TypeSignature Language="C#" Value="public sealed class AsNewClauseSyntax : Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AsNewClauseSyntax extends Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AsNewClauseSyntax&#xA;Inherits AsClauseSyntax" />
  <TypeSignature Language="F#" Value="type AsNewClauseSyntax = class&#xA;    inherit AsClauseSyntax" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsNewClauseSyntax sealed : Microsoft::CodeAnalysis::VisualBasic::Syntax::AsClauseSyntax" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.VisualBasic.Syntax.AsClauseSyntax</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
 Represents an "As New {type-name} [arguments] [initializers]" clause in a
 declaration. The type has optional attributes associated with it, although
 attributes are not permitted in many places where this node occurs (they are
 permitted, for example, on automatically implemented properties.)
 </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor -&gt; unit" Usage="asNewClauseSyntax.Accept visitor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public override TResult Accept&lt;TResult&gt; (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResult Accept&lt;TResult&gt;(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1&lt;!!TResult&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResult) (visitor As VisualBasicSyntaxVisitor(Of TResult)) As TResult" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;'Result&gt; -&gt; 'Result" Usage="asNewClauseSyntax.Accept visitor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; override TResult Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor&lt;TResult&gt; ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken AsKeyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken AsKeyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax.AsKeyword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsKeyword As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.AsKeyword : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax.AsKeyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken AsKeyword { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The "As" keyword.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewExpression">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax NewExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax NewExpression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax.NewExpression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewExpression As NewExpressionSyntax" />
      <MemberSignature Language="F#" Value="member this.NewExpression : Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax.NewExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::NewExpressionSyntax ^ NewExpression { Microsoft::CodeAnalysis::VisualBasic::Syntax::NewExpressionSyntax ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The New expression
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax Update (Microsoft.CodeAnalysis.SyntaxToken asKeyword, Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax newExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax Update(valuetype Microsoft.CodeAnalysis.SyntaxToken asKeyword, class Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax newExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax.Update(Microsoft.CodeAnalysis.SyntaxToken,Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (asKeyword As SyntaxToken, newExpression As NewExpressionSyntax) As AsNewClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.Update : Microsoft.CodeAnalysis.SyntaxToken * Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax" Usage="asNewClauseSyntax.Update (asKeyword, newExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::AsNewClauseSyntax ^ Update(Microsoft::CodeAnalysis::SyntaxToken asKeyword, Microsoft::CodeAnalysis::VisualBasic::Syntax::NewExpressionSyntax ^ newExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
        <Parameter Name="newExpression" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax" />
      </Parameters>
      <Docs>
        <param name="asKeyword">
 The value for the AsKeyword property.
 </param>
        <param name="newExpression">
 The value for the NewExpression property.
 </param>
        <summary>
 Returns a copy of this with the specified changes. Returns this instance if
 there are no actual changes.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithAsKeyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax WithAsKeyword (Microsoft.CodeAnalysis.SyntaxToken asKeyword);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax WithAsKeyword(valuetype Microsoft.CodeAnalysis.SyntaxToken asKeyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax.WithAsKeyword(Microsoft.CodeAnalysis.SyntaxToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithAsKeyword (asKeyword As SyntaxToken) As AsNewClauseSyntax" />
      <MemberSignature Language="F#" Value="override this.WithAsKeyword : Microsoft.CodeAnalysis.SyntaxToken -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax" Usage="asNewClauseSyntax.WithAsKeyword asKeyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::AsNewClauseSyntax ^ WithAsKeyword(Microsoft::CodeAnalysis::SyntaxToken asKeyword);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asKeyword" Type="Microsoft.CodeAnalysis.SyntaxToken" />
      </Parameters>
      <Docs>
        <param name="asKeyword">To be added.</param>
        <summary>
 Returns a copy of this with the AsKeyword property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithNewExpression">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax WithNewExpression (Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax newExpression);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax WithNewExpression(class Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax newExpression) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax.WithNewExpression(Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithNewExpression (newExpression As NewExpressionSyntax) As AsNewClauseSyntax" />
      <MemberSignature Language="F#" Value="member this.WithNewExpression : Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax" Usage="asNewClauseSyntax.WithNewExpression newExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::AsNewClauseSyntax ^ WithNewExpression(Microsoft::CodeAnalysis::VisualBasic::Syntax::NewExpressionSyntax ^ newExpression);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.AsNewClauseSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newExpression" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.NewExpressionSyntax" />
      </Parameters>
      <Docs>
        <param name="newExpression">To be added.</param>
        <summary>
 Returns a copy of this with the NewExpression property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>