<Type Name="CastExpressionSyntax" FullName="Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax">
  <TypeSignature Language="C#" Value="public abstract class CastExpressionSyntax : Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract CastExpressionSyntax extends Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CastExpressionSyntax&#xA;Inherits ExpressionSyntax" />
  <TypeSignature Language="F#" Value="type CastExpressionSyntax = class&#xA;    inherit ExpressionSyntax" />
  <TypeSignature Language="C++ CLI" Value="public ref class CastExpressionSyntax abstract : Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class CastExpressionSyntax abstract : Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class CastExpressionSyntax abstract : Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
 Represents a CType, DirectCast or TryCast conversion expression. The Kind
 property determines which kind of cast it is.
 </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CloseParenToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken CloseParenToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken CloseParenToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.CloseParenToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CloseParenToken As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.CloseParenToken : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.CloseParenToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken CloseParenToken { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The ")" token.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommaToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken CommaToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken CommaToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.CommaToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommaToken As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.CommaToken : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.CommaToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken CommaToken { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The "," token.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax Expression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.Expression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expression As ExpressionSyntax" />
      <MemberSignature Language="F#" Value="member this.Expression : Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ Expression { Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ Expression { Microsoft::CodeAnalysis::VisualBasic::Syntax::ExpressionSyntax ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ExpressionSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The expression being cast.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Keyword">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken Keyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken Keyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.Keyword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keyword As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.Keyword : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.Keyword" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken Keyword { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The "CType", "DirectCast" or "TryCast" keyword.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenParenToken">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxToken OpenParenToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SyntaxToken OpenParenToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.OpenParenToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OpenParenToken As SyntaxToken" />
      <MemberSignature Language="F#" Value="member this.OpenParenToken : Microsoft.CodeAnalysis.SyntaxToken" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.OpenParenToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxToken OpenParenToken { Microsoft::CodeAnalysis::SyntaxToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The "(" token.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax Type" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As TypeSyntax" />
      <MemberSignature Language="F#" Value="member this.Type : Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.CastExpressionSyntax.Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::TypeSyntax ^ Type { Microsoft::CodeAnalysis::VisualBasic::Syntax::TypeSyntax ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::TypeSyntax ^ Type { Microsoft::CodeAnalysis::VisualBasic::Syntax::TypeSyntax ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The type the expression is being cast to.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>