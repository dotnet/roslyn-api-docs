<Type Name="LinePosition" FullName="Microsoft.CodeAnalysis.Text.LinePosition">
  <TypeSignature Language="C#" Value="public struct LinePosition : IComparable&lt;Microsoft.CodeAnalysis.Text.LinePosition&gt;, IEquatable&lt;Microsoft.CodeAnalysis.Text.LinePosition&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit LinePosition extends System.ValueType implements class System.IComparable`1&lt;valuetype Microsoft.CodeAnalysis.Text.LinePosition&gt;, class System.IEquatable`1&lt;valuetype Microsoft.CodeAnalysis.Text.LinePosition&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Text.LinePosition" />
  <TypeSignature Language="VB.NET" Value="Public Structure LinePosition&#xA;Implements IComparable(Of LinePosition), IEquatable(Of LinePosition)" />
  <TypeSignature Language="F#" Value="type LinePosition = struct" />
  <TypeSignature Language="C++ CLI" Value="public value class LinePosition : IComparable&lt;Microsoft::CodeAnalysis::Text::LinePosition&gt;, IEquatable&lt;Microsoft::CodeAnalysis::Text::LinePosition&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable&lt;Microsoft.CodeAnalysis.Text.LinePosition&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.CodeAnalysis.Text.LinePosition&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Immutable representation of a line number and position within a SourceText instance.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinePosition (int line, int character);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 line, int32 character) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Text.LinePosition.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (line As Integer, character As Integer)" />
      <MemberSignature Language="F#" Value="new Microsoft.CodeAnalysis.Text.LinePosition : int * int -&gt; Microsoft.CodeAnalysis.Text.LinePosition" Usage="new Microsoft.CodeAnalysis.Text.LinePosition (line, character)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinePosition(int line, int character);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; LinePosition(int line, int character);" />
      <MemberSignature Language="C++ WINRT" Value=" LinePosition(int line, int character);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
        <Parameter Name="character" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">
            The line of the line position. The first line in a file is defined as line 0 (zero based line numbering).
            </param>
        <param name="character">
            The character position in the line.
            </param>
        <summary>
            Initializes a new instance of a <see cref="T:Microsoft.CodeAnalysis.Text.LinePosition" /> with the given line and character.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="line" /> or <paramref name="character" /> is less than zero. </exception>
      </Docs>
    </Member>
    <Member MemberName="Character">
      <MemberSignature Language="C#" Value="public int Character { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Character" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Text.LinePosition.Character" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Character As Integer" />
      <MemberSignature Language="F#" Value="member this.Character : int" Usage="Microsoft.CodeAnalysis.Text.LinePosition.Character" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Character { int get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int Character { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The character position within the line.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (Microsoft.CodeAnalysis.Text.LinePosition other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(valuetype Microsoft.CodeAnalysis.Text.LinePosition other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Text.LinePosition.CompareTo(Microsoft.CodeAnalysis.Text.LinePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As LinePosition) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : Microsoft.CodeAnalysis.Text.LinePosition -&gt; int&#xA;override this.CompareTo : Microsoft.CodeAnalysis.Text.LinePosition -&gt; int" Usage="linePosition.CompareTo other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(Microsoft::CodeAnalysis::Text::LinePosition other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.CodeAnalysis.Text.LinePosition" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.CodeAnalysis.Text.LinePosition other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Microsoft.CodeAnalysis.Text.LinePosition other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Text.LinePosition.Equals(Microsoft.CodeAnalysis.Text.LinePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As LinePosition) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.CodeAnalysis.Text.LinePosition -&gt; bool" Usage="linePosition.Equals other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Microsoft::CodeAnalysis::Text::LinePosition other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.CodeAnalysis.Text.LinePosition" />
      </Parameters>
      <Docs>
        <param name="other">The object to compare.</param>
        <summary>
            Determines whether two <see cref="T:Microsoft.CodeAnalysis.Text.LinePosition" /> are the same.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Text.LinePosition.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="linePosition.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override bool Equals(Platform::Object ^ obj);" />
      <MemberSignature Language="C++ WINRT" Value=" override bool Equals(winrt::Windows::Foundation::IInspectable const &amp; obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to compare.</param>
        <summary>
            Determines whether two <see cref="T:Microsoft.CodeAnalysis.Text.LinePosition" /> are the same.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Text.LinePosition.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="linePosition.GetHashCode " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="C++ WINRT" Value=" override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Provides a hash function for <see cref="T:Microsoft.CodeAnalysis.Text.LinePosition" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Line">
      <MemberSignature Language="C#" Value="public int Line { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Line" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Text.LinePosition.Line" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Line As Integer" />
      <MemberSignature Language="F#" Value="member this.Line : int" Usage="Microsoft.CodeAnalysis.Text.LinePosition.Line" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Line { int get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property int Line { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The line number. The first line in a file is defined as line 0 (zero based line numbering).
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Microsoft.CodeAnalysis.Text.LinePosition left, Microsoft.CodeAnalysis.Text.LinePosition right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype Microsoft.CodeAnalysis.Text.LinePosition left, valuetype Microsoft.CodeAnalysis.Text.LinePosition right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Text.LinePosition.op_Equality(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As LinePosition, right As LinePosition) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( = ) : Microsoft.CodeAnalysis.Text.LinePosition * Microsoft.CodeAnalysis.Text.LinePosition -&gt; bool" Usage="left = right" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Microsoft::CodeAnalysis::Text::LinePosition left, Microsoft::CodeAnalysis::Text::LinePosition right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.CodeAnalysis.Text.LinePosition" />
        <Parameter Name="right" Type="Microsoft.CodeAnalysis.Text.LinePosition" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
            Determines whether two <see cref="T:Microsoft.CodeAnalysis.Text.LinePosition" /> are the same.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThan">
      <MemberSignature Language="C#" Value="public static bool operator &gt; (Microsoft.CodeAnalysis.Text.LinePosition left, Microsoft.CodeAnalysis.Text.LinePosition right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThan(valuetype Microsoft.CodeAnalysis.Text.LinePosition left, valuetype Microsoft.CodeAnalysis.Text.LinePosition right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Text.LinePosition.op_GreaterThan(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt; (left As LinePosition, right As LinePosition) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt; ) : Microsoft.CodeAnalysis.Text.LinePosition * Microsoft.CodeAnalysis.Text.LinePosition -&gt; bool" Usage="left &gt; right" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;(Microsoft::CodeAnalysis::Text::LinePosition left, Microsoft::CodeAnalysis::Text::LinePosition right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.CodeAnalysis.Text.LinePosition" />
        <Parameter Name="right" Type="Microsoft.CodeAnalysis.Text.LinePosition" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_GreaterThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &gt;= (Microsoft.CodeAnalysis.Text.LinePosition left, Microsoft.CodeAnalysis.Text.LinePosition right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_GreaterThanOrEqual(valuetype Microsoft.CodeAnalysis.Text.LinePosition left, valuetype Microsoft.CodeAnalysis.Text.LinePosition right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Text.LinePosition.op_GreaterThanOrEqual(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &gt;= (left As LinePosition, right As LinePosition) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &gt;= ) : Microsoft.CodeAnalysis.Text.LinePosition * Microsoft.CodeAnalysis.Text.LinePosition -&gt; bool" Usage="left &gt;= right" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &gt;=(Microsoft::CodeAnalysis::Text::LinePosition left, Microsoft::CodeAnalysis::Text::LinePosition right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.CodeAnalysis.Text.LinePosition" />
        <Parameter Name="right" Type="Microsoft.CodeAnalysis.Text.LinePosition" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Microsoft.CodeAnalysis.Text.LinePosition left, Microsoft.CodeAnalysis.Text.LinePosition right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype Microsoft.CodeAnalysis.Text.LinePosition left, valuetype Microsoft.CodeAnalysis.Text.LinePosition right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Text.LinePosition.op_Inequality(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As LinePosition, right As LinePosition) As Boolean" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Microsoft.CodeAnalysis.Text.LinePosition * Microsoft.CodeAnalysis.Text.LinePosition -&gt; bool" Usage="Microsoft.CodeAnalysis.Text.LinePosition.op_Inequality (left, right)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Microsoft::CodeAnalysis::Text::LinePosition left, Microsoft::CodeAnalysis::Text::LinePosition right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.CodeAnalysis.Text.LinePosition" />
        <Parameter Name="right" Type="Microsoft.CodeAnalysis.Text.LinePosition" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>
            Determines whether two <see cref="T:Microsoft.CodeAnalysis.Text.LinePosition" /> are different.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThan">
      <MemberSignature Language="C#" Value="public static bool operator &lt; (Microsoft.CodeAnalysis.Text.LinePosition left, Microsoft.CodeAnalysis.Text.LinePosition right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThan(valuetype Microsoft.CodeAnalysis.Text.LinePosition left, valuetype Microsoft.CodeAnalysis.Text.LinePosition right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Text.LinePosition.op_LessThan(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt; (left As LinePosition, right As LinePosition) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt; ) : Microsoft.CodeAnalysis.Text.LinePosition * Microsoft.CodeAnalysis.Text.LinePosition -&gt; bool" Usage="left &lt; right" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;(Microsoft::CodeAnalysis::Text::LinePosition left, Microsoft::CodeAnalysis::Text::LinePosition right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.CodeAnalysis.Text.LinePosition" />
        <Parameter Name="right" Type="Microsoft.CodeAnalysis.Text.LinePosition" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_LessThanOrEqual">
      <MemberSignature Language="C#" Value="public static bool operator &lt;= (Microsoft.CodeAnalysis.Text.LinePosition left, Microsoft.CodeAnalysis.Text.LinePosition right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_LessThanOrEqual(valuetype Microsoft.CodeAnalysis.Text.LinePosition left, valuetype Microsoft.CodeAnalysis.Text.LinePosition right) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Text.LinePosition.op_LessThanOrEqual(Microsoft.CodeAnalysis.Text.LinePosition,Microsoft.CodeAnalysis.Text.LinePosition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator &lt;= (left As LinePosition, right As LinePosition) As Boolean" />
      <MemberSignature Language="F#" Value="static member ( &lt;= ) : Microsoft.CodeAnalysis.Text.LinePosition * Microsoft.CodeAnalysis.Text.LinePosition -&gt; bool" Usage="left &lt;= right" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator &lt;=(Microsoft::CodeAnalysis::Text::LinePosition left, Microsoft::CodeAnalysis::Text::LinePosition right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="Microsoft.CodeAnalysis.Text.LinePosition" />
        <Parameter Name="right" Type="Microsoft.CodeAnalysis.Text.LinePosition" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="right">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Text.LinePosition.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="linePosition.ToString " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override Platform::String ^ ToString();" />
      <MemberSignature Language="C++ WINRT" Value=" override std::wstring ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Provides a string representation for <see cref="T:Microsoft.CodeAnalysis.Text.LinePosition" />.
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <example>0,10</example>
      </Docs>
    </Member>
    <Member MemberName="Zero">
      <MemberSignature Language="C#" Value="public static Microsoft.CodeAnalysis.Text.LinePosition Zero { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype Microsoft.CodeAnalysis.Text.LinePosition Zero" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Text.LinePosition.Zero" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Zero As LinePosition" />
      <MemberSignature Language="F#" Value="member this.Zero : Microsoft.CodeAnalysis.Text.LinePosition" Usage="Microsoft.CodeAnalysis.Text.LinePosition.Zero" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::CodeAnalysis::Text::LinePosition Zero { Microsoft::CodeAnalysis::Text::LinePosition get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Text.LinePosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            A <see cref="T:Microsoft.CodeAnalysis.Text.LinePosition" /> that represents position 0 at line 0.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>