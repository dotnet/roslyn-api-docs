<Type Name="OperationVisitor" FullName="Microsoft.CodeAnalysis.Semantics.OperationVisitor">
  <TypeSignature Language="C#" Value="public abstract class OperationVisitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit OperationVisitor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Semantics.OperationVisitor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class OperationVisitor" />
  <TypeSignature Language="F#" Value="type OperationVisitor = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a <see cref="T:Microsoft.CodeAnalysis.IOperation" /> visitor that visits only the single IOperation
            passed into its Visit method.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OperationVisitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultVisit">
      <MemberSignature Language="C#" Value="public virtual void DefaultVisit (Microsoft.CodeAnalysis.IOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefaultVisit(class Microsoft.CodeAnalysis.IOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.DefaultVisit(Microsoft.CodeAnalysis.IOperation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DefaultVisit (operation As IOperation)" />
      <MemberSignature Language="F#" Value="abstract member DefaultVisit : Microsoft.CodeAnalysis.IOperation -&gt; unit&#xA;override this.DefaultVisit : Microsoft.CodeAnalysis.IOperation -&gt; unit" Usage="operationVisitor.DefaultVisit operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.IOperation" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public virtual void Visit (Microsoft.CodeAnalysis.IOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class Microsoft.CodeAnalysis.IOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.Visit(Microsoft.CodeAnalysis.IOperation)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Visit (operation As IOperation)" />
      <MemberSignature Language="F#" Value="abstract member Visit : Microsoft.CodeAnalysis.IOperation -&gt; unit&#xA;override this.Visit : Microsoft.CodeAnalysis.IOperation -&gt; unit" Usage="operationVisitor.Visit operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.IOperation" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAddressOfExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitAddressOfExpression (Microsoft.CodeAnalysis.Semantics.IAddressOfExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitAddressOfExpression(class Microsoft.CodeAnalysis.Semantics.IAddressOfExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitAddressOfExpression(Microsoft.CodeAnalysis.Semantics.IAddressOfExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitAddressOfExpression (operation As IAddressOfExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitAddressOfExpression : Microsoft.CodeAnalysis.Semantics.IAddressOfExpression -&gt; unit&#xA;override this.VisitAddressOfExpression : Microsoft.CodeAnalysis.Semantics.IAddressOfExpression -&gt; unit" Usage="operationVisitor.VisitAddressOfExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IAddressOfExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitArgument">
      <MemberSignature Language="C#" Value="public virtual void VisitArgument (Microsoft.CodeAnalysis.Semantics.IArgument operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitArgument(class Microsoft.CodeAnalysis.Semantics.IArgument operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitArgument(Microsoft.CodeAnalysis.Semantics.IArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitArgument (operation As IArgument)" />
      <MemberSignature Language="F#" Value="abstract member VisitArgument : Microsoft.CodeAnalysis.Semantics.IArgument -&gt; unit&#xA;override this.VisitArgument : Microsoft.CodeAnalysis.Semantics.IArgument -&gt; unit" Usage="operationVisitor.VisitArgument operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IArgument" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitArrayCreationExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitArrayCreationExpression (Microsoft.CodeAnalysis.Semantics.IArrayCreationExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitArrayCreationExpression(class Microsoft.CodeAnalysis.Semantics.IArrayCreationExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitArrayCreationExpression(Microsoft.CodeAnalysis.Semantics.IArrayCreationExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitArrayCreationExpression (operation As IArrayCreationExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitArrayCreationExpression : Microsoft.CodeAnalysis.Semantics.IArrayCreationExpression -&gt; unit&#xA;override this.VisitArrayCreationExpression : Microsoft.CodeAnalysis.Semantics.IArrayCreationExpression -&gt; unit" Usage="operationVisitor.VisitArrayCreationExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IArrayCreationExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitArrayElementReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitArrayElementReferenceExpression (Microsoft.CodeAnalysis.Semantics.IArrayElementReferenceExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitArrayElementReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IArrayElementReferenceExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitArrayElementReferenceExpression(Microsoft.CodeAnalysis.Semantics.IArrayElementReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitArrayElementReferenceExpression (operation As IArrayElementReferenceExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitArrayElementReferenceExpression : Microsoft.CodeAnalysis.Semantics.IArrayElementReferenceExpression -&gt; unit&#xA;override this.VisitArrayElementReferenceExpression : Microsoft.CodeAnalysis.Semantics.IArrayElementReferenceExpression -&gt; unit" Usage="operationVisitor.VisitArrayElementReferenceExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IArrayElementReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitArrayInitializer">
      <MemberSignature Language="C#" Value="public virtual void VisitArrayInitializer (Microsoft.CodeAnalysis.Semantics.IArrayInitializer operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitArrayInitializer(class Microsoft.CodeAnalysis.Semantics.IArrayInitializer operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitArrayInitializer(Microsoft.CodeAnalysis.Semantics.IArrayInitializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitArrayInitializer (operation As IArrayInitializer)" />
      <MemberSignature Language="F#" Value="abstract member VisitArrayInitializer : Microsoft.CodeAnalysis.Semantics.IArrayInitializer -&gt; unit&#xA;override this.VisitArrayInitializer : Microsoft.CodeAnalysis.Semantics.IArrayInitializer -&gt; unit" Usage="operationVisitor.VisitArrayInitializer operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IArrayInitializer" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAssignmentExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitAssignmentExpression (Microsoft.CodeAnalysis.Semantics.IAssignmentExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitAssignmentExpression(class Microsoft.CodeAnalysis.Semantics.IAssignmentExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitAssignmentExpression(Microsoft.CodeAnalysis.Semantics.IAssignmentExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitAssignmentExpression (operation As IAssignmentExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitAssignmentExpression : Microsoft.CodeAnalysis.Semantics.IAssignmentExpression -&gt; unit&#xA;override this.VisitAssignmentExpression : Microsoft.CodeAnalysis.Semantics.IAssignmentExpression -&gt; unit" Usage="operationVisitor.VisitAssignmentExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IAssignmentExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitAwaitExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitAwaitExpression (Microsoft.CodeAnalysis.Semantics.IAwaitExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitAwaitExpression(class Microsoft.CodeAnalysis.Semantics.IAwaitExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitAwaitExpression(Microsoft.CodeAnalysis.Semantics.IAwaitExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitAwaitExpression (operation As IAwaitExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitAwaitExpression : Microsoft.CodeAnalysis.Semantics.IAwaitExpression -&gt; unit&#xA;override this.VisitAwaitExpression : Microsoft.CodeAnalysis.Semantics.IAwaitExpression -&gt; unit" Usage="operationVisitor.VisitAwaitExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IAwaitExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitBinaryOperatorExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitBinaryOperatorExpression (Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitBinaryOperatorExpression(class Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitBinaryOperatorExpression(Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitBinaryOperatorExpression (operation As IBinaryOperatorExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitBinaryOperatorExpression : Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression -&gt; unit&#xA;override this.VisitBinaryOperatorExpression : Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression -&gt; unit" Usage="operationVisitor.VisitBinaryOperatorExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IBinaryOperatorExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitBlockStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitBlockStatement (Microsoft.CodeAnalysis.Semantics.IBlockStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitBlockStatement(class Microsoft.CodeAnalysis.Semantics.IBlockStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitBlockStatement(Microsoft.CodeAnalysis.Semantics.IBlockStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitBlockStatement (operation As IBlockStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitBlockStatement : Microsoft.CodeAnalysis.Semantics.IBlockStatement -&gt; unit&#xA;override this.VisitBlockStatement : Microsoft.CodeAnalysis.Semantics.IBlockStatement -&gt; unit" Usage="operationVisitor.VisitBlockStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IBlockStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitBranchStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitBranchStatement (Microsoft.CodeAnalysis.Semantics.IBranchStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitBranchStatement(class Microsoft.CodeAnalysis.Semantics.IBranchStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitBranchStatement(Microsoft.CodeAnalysis.Semantics.IBranchStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitBranchStatement (operation As IBranchStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitBranchStatement : Microsoft.CodeAnalysis.Semantics.IBranchStatement -&gt; unit&#xA;override this.VisitBranchStatement : Microsoft.CodeAnalysis.Semantics.IBranchStatement -&gt; unit" Usage="operationVisitor.VisitBranchStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IBranchStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCatchClause">
      <MemberSignature Language="C#" Value="public virtual void VisitCatchClause (Microsoft.CodeAnalysis.Semantics.ICatchClause operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitCatchClause(class Microsoft.CodeAnalysis.Semantics.ICatchClause operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitCatchClause(Microsoft.CodeAnalysis.Semantics.ICatchClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitCatchClause (operation As ICatchClause)" />
      <MemberSignature Language="F#" Value="abstract member VisitCatchClause : Microsoft.CodeAnalysis.Semantics.ICatchClause -&gt; unit&#xA;override this.VisitCatchClause : Microsoft.CodeAnalysis.Semantics.ICatchClause -&gt; unit" Usage="operationVisitor.VisitCatchClause operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ICatchClause" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitCompoundAssignmentExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitCompoundAssignmentExpression (Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitCompoundAssignmentExpression(class Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitCompoundAssignmentExpression(Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitCompoundAssignmentExpression (operation As ICompoundAssignmentExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitCompoundAssignmentExpression : Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression -&gt; unit&#xA;override this.VisitCompoundAssignmentExpression : Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression -&gt; unit" Usage="operationVisitor.VisitCompoundAssignmentExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ICompoundAssignmentExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitConditionalAccessExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitConditionalAccessExpression (Microsoft.CodeAnalysis.Semantics.IConditionalAccessExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitConditionalAccessExpression(class Microsoft.CodeAnalysis.Semantics.IConditionalAccessExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitConditionalAccessExpression(Microsoft.CodeAnalysis.Semantics.IConditionalAccessExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitConditionalAccessExpression (operation As IConditionalAccessExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitConditionalAccessExpression : Microsoft.CodeAnalysis.Semantics.IConditionalAccessExpression -&gt; unit&#xA;override this.VisitConditionalAccessExpression : Microsoft.CodeAnalysis.Semantics.IConditionalAccessExpression -&gt; unit" Usage="operationVisitor.VisitConditionalAccessExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IConditionalAccessExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitConditionalAccessInstanceExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitConditionalAccessInstanceExpression (Microsoft.CodeAnalysis.Semantics.IConditionalAccessInstanceExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitConditionalAccessInstanceExpression(class Microsoft.CodeAnalysis.Semantics.IConditionalAccessInstanceExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitConditionalAccessInstanceExpression(Microsoft.CodeAnalysis.Semantics.IConditionalAccessInstanceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitConditionalAccessInstanceExpression (operation As IConditionalAccessInstanceExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitConditionalAccessInstanceExpression : Microsoft.CodeAnalysis.Semantics.IConditionalAccessInstanceExpression -&gt; unit&#xA;override this.VisitConditionalAccessInstanceExpression : Microsoft.CodeAnalysis.Semantics.IConditionalAccessInstanceExpression -&gt; unit" Usage="operationVisitor.VisitConditionalAccessInstanceExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IConditionalAccessInstanceExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitConditionalChoiceExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitConditionalChoiceExpression (Microsoft.CodeAnalysis.Semantics.IConditionalChoiceExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitConditionalChoiceExpression(class Microsoft.CodeAnalysis.Semantics.IConditionalChoiceExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitConditionalChoiceExpression(Microsoft.CodeAnalysis.Semantics.IConditionalChoiceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitConditionalChoiceExpression (operation As IConditionalChoiceExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitConditionalChoiceExpression : Microsoft.CodeAnalysis.Semantics.IConditionalChoiceExpression -&gt; unit&#xA;override this.VisitConditionalChoiceExpression : Microsoft.CodeAnalysis.Semantics.IConditionalChoiceExpression -&gt; unit" Usage="operationVisitor.VisitConditionalChoiceExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IConditionalChoiceExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitConversionExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitConversionExpression (Microsoft.CodeAnalysis.Semantics.IConversionExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitConversionExpression(class Microsoft.CodeAnalysis.Semantics.IConversionExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitConversionExpression(Microsoft.CodeAnalysis.Semantics.IConversionExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitConversionExpression (operation As IConversionExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitConversionExpression : Microsoft.CodeAnalysis.Semantics.IConversionExpression -&gt; unit&#xA;override this.VisitConversionExpression : Microsoft.CodeAnalysis.Semantics.IConversionExpression -&gt; unit" Usage="operationVisitor.VisitConversionExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IConversionExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitDefaultValueExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitDefaultValueExpression (Microsoft.CodeAnalysis.Semantics.IDefaultValueExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitDefaultValueExpression(class Microsoft.CodeAnalysis.Semantics.IDefaultValueExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitDefaultValueExpression(Microsoft.CodeAnalysis.Semantics.IDefaultValueExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitDefaultValueExpression (operation As IDefaultValueExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitDefaultValueExpression : Microsoft.CodeAnalysis.Semantics.IDefaultValueExpression -&gt; unit&#xA;override this.VisitDefaultValueExpression : Microsoft.CodeAnalysis.Semantics.IDefaultValueExpression -&gt; unit" Usage="operationVisitor.VisitDefaultValueExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IDefaultValueExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitEmptyStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitEmptyStatement (Microsoft.CodeAnalysis.Semantics.IEmptyStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitEmptyStatement(class Microsoft.CodeAnalysis.Semantics.IEmptyStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitEmptyStatement(Microsoft.CodeAnalysis.Semantics.IEmptyStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitEmptyStatement (operation As IEmptyStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitEmptyStatement : Microsoft.CodeAnalysis.Semantics.IEmptyStatement -&gt; unit&#xA;override this.VisitEmptyStatement : Microsoft.CodeAnalysis.Semantics.IEmptyStatement -&gt; unit" Usage="operationVisitor.VisitEmptyStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IEmptyStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitEndStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitEndStatement (Microsoft.CodeAnalysis.Semantics.IEndStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitEndStatement(class Microsoft.CodeAnalysis.Semantics.IEndStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitEndStatement(Microsoft.CodeAnalysis.Semantics.IEndStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitEndStatement (operation As IEndStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitEndStatement : Microsoft.CodeAnalysis.Semantics.IEndStatement -&gt; unit&#xA;override this.VisitEndStatement : Microsoft.CodeAnalysis.Semantics.IEndStatement -&gt; unit" Usage="operationVisitor.VisitEndStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IEndStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitEventAssignmentExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitEventAssignmentExpression (Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitEventAssignmentExpression(class Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitEventAssignmentExpression(Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitEventAssignmentExpression (operation As IEventAssignmentExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitEventAssignmentExpression : Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression -&gt; unit&#xA;override this.VisitEventAssignmentExpression : Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression -&gt; unit" Usage="operationVisitor.VisitEventAssignmentExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitEventReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitEventReferenceExpression (Microsoft.CodeAnalysis.Semantics.IEventReferenceExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitEventReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IEventReferenceExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitEventReferenceExpression(Microsoft.CodeAnalysis.Semantics.IEventReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitEventReferenceExpression (operation As IEventReferenceExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitEventReferenceExpression : Microsoft.CodeAnalysis.Semantics.IEventReferenceExpression -&gt; unit&#xA;override this.VisitEventReferenceExpression : Microsoft.CodeAnalysis.Semantics.IEventReferenceExpression -&gt; unit" Usage="operationVisitor.VisitEventReferenceExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IEventReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitExpressionStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitExpressionStatement (Microsoft.CodeAnalysis.Semantics.IExpressionStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitExpressionStatement(class Microsoft.CodeAnalysis.Semantics.IExpressionStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitExpressionStatement(Microsoft.CodeAnalysis.Semantics.IExpressionStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitExpressionStatement (operation As IExpressionStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitExpressionStatement : Microsoft.CodeAnalysis.Semantics.IExpressionStatement -&gt; unit&#xA;override this.VisitExpressionStatement : Microsoft.CodeAnalysis.Semantics.IExpressionStatement -&gt; unit" Usage="operationVisitor.VisitExpressionStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IExpressionStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFieldInitializer">
      <MemberSignature Language="C#" Value="public virtual void VisitFieldInitializer (Microsoft.CodeAnalysis.Semantics.IFieldInitializer operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitFieldInitializer(class Microsoft.CodeAnalysis.Semantics.IFieldInitializer operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitFieldInitializer(Microsoft.CodeAnalysis.Semantics.IFieldInitializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitFieldInitializer (operation As IFieldInitializer)" />
      <MemberSignature Language="F#" Value="abstract member VisitFieldInitializer : Microsoft.CodeAnalysis.Semantics.IFieldInitializer -&gt; unit&#xA;override this.VisitFieldInitializer : Microsoft.CodeAnalysis.Semantics.IFieldInitializer -&gt; unit" Usage="operationVisitor.VisitFieldInitializer operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IFieldInitializer" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFieldReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitFieldReferenceExpression (Microsoft.CodeAnalysis.Semantics.IFieldReferenceExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitFieldReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IFieldReferenceExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitFieldReferenceExpression(Microsoft.CodeAnalysis.Semantics.IFieldReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitFieldReferenceExpression (operation As IFieldReferenceExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitFieldReferenceExpression : Microsoft.CodeAnalysis.Semantics.IFieldReferenceExpression -&gt; unit&#xA;override this.VisitFieldReferenceExpression : Microsoft.CodeAnalysis.Semantics.IFieldReferenceExpression -&gt; unit" Usage="operationVisitor.VisitFieldReferenceExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IFieldReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitFixedStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitFixedStatement (Microsoft.CodeAnalysis.Semantics.IFixedStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitFixedStatement(class Microsoft.CodeAnalysis.Semantics.IFixedStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitFixedStatement(Microsoft.CodeAnalysis.Semantics.IFixedStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitFixedStatement (operation As IFixedStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitFixedStatement : Microsoft.CodeAnalysis.Semantics.IFixedStatement -&gt; unit&#xA;override this.VisitFixedStatement : Microsoft.CodeAnalysis.Semantics.IFixedStatement -&gt; unit" Usage="operationVisitor.VisitFixedStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IFixedStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitForEachLoopStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitForEachLoopStatement (Microsoft.CodeAnalysis.Semantics.IForEachLoopStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitForEachLoopStatement(class Microsoft.CodeAnalysis.Semantics.IForEachLoopStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitForEachLoopStatement(Microsoft.CodeAnalysis.Semantics.IForEachLoopStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitForEachLoopStatement (operation As IForEachLoopStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitForEachLoopStatement : Microsoft.CodeAnalysis.Semantics.IForEachLoopStatement -&gt; unit&#xA;override this.VisitForEachLoopStatement : Microsoft.CodeAnalysis.Semantics.IForEachLoopStatement -&gt; unit" Usage="operationVisitor.VisitForEachLoopStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IForEachLoopStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitForLoopStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitForLoopStatement (Microsoft.CodeAnalysis.Semantics.IForLoopStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitForLoopStatement(class Microsoft.CodeAnalysis.Semantics.IForLoopStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitForLoopStatement(Microsoft.CodeAnalysis.Semantics.IForLoopStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitForLoopStatement (operation As IForLoopStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitForLoopStatement : Microsoft.CodeAnalysis.Semantics.IForLoopStatement -&gt; unit&#xA;override this.VisitForLoopStatement : Microsoft.CodeAnalysis.Semantics.IForLoopStatement -&gt; unit" Usage="operationVisitor.VisitForLoopStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IForLoopStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIfStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitIfStatement (Microsoft.CodeAnalysis.Semantics.IIfStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitIfStatement(class Microsoft.CodeAnalysis.Semantics.IIfStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitIfStatement(Microsoft.CodeAnalysis.Semantics.IIfStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitIfStatement (operation As IIfStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitIfStatement : Microsoft.CodeAnalysis.Semantics.IIfStatement -&gt; unit&#xA;override this.VisitIfStatement : Microsoft.CodeAnalysis.Semantics.IIfStatement -&gt; unit" Usage="operationVisitor.VisitIfStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IIfStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIncrementExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitIncrementExpression (Microsoft.CodeAnalysis.Semantics.IIncrementExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitIncrementExpression(class Microsoft.CodeAnalysis.Semantics.IIncrementExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitIncrementExpression(Microsoft.CodeAnalysis.Semantics.IIncrementExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitIncrementExpression (operation As IIncrementExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitIncrementExpression : Microsoft.CodeAnalysis.Semantics.IIncrementExpression -&gt; unit&#xA;override this.VisitIncrementExpression : Microsoft.CodeAnalysis.Semantics.IIncrementExpression -&gt; unit" Usage="operationVisitor.VisitIncrementExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IIncrementExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIndexedPropertyReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitIndexedPropertyReferenceExpression (Microsoft.CodeAnalysis.Semantics.IIndexedPropertyReferenceExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitIndexedPropertyReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IIndexedPropertyReferenceExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitIndexedPropertyReferenceExpression(Microsoft.CodeAnalysis.Semantics.IIndexedPropertyReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitIndexedPropertyReferenceExpression (operation As IIndexedPropertyReferenceExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitIndexedPropertyReferenceExpression : Microsoft.CodeAnalysis.Semantics.IIndexedPropertyReferenceExpression -&gt; unit&#xA;override this.VisitIndexedPropertyReferenceExpression : Microsoft.CodeAnalysis.Semantics.IIndexedPropertyReferenceExpression -&gt; unit" Usage="operationVisitor.VisitIndexedPropertyReferenceExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IIndexedPropertyReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInstanceReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitInstanceReferenceExpression (Microsoft.CodeAnalysis.Semantics.IInstanceReferenceExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitInstanceReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IInstanceReferenceExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitInstanceReferenceExpression(Microsoft.CodeAnalysis.Semantics.IInstanceReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitInstanceReferenceExpression (operation As IInstanceReferenceExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitInstanceReferenceExpression : Microsoft.CodeAnalysis.Semantics.IInstanceReferenceExpression -&gt; unit&#xA;override this.VisitInstanceReferenceExpression : Microsoft.CodeAnalysis.Semantics.IInstanceReferenceExpression -&gt; unit" Usage="operationVisitor.VisitInstanceReferenceExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IInstanceReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInvalidExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitInvalidExpression (Microsoft.CodeAnalysis.Semantics.IInvalidExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitInvalidExpression(class Microsoft.CodeAnalysis.Semantics.IInvalidExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitInvalidExpression(Microsoft.CodeAnalysis.Semantics.IInvalidExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitInvalidExpression (operation As IInvalidExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitInvalidExpression : Microsoft.CodeAnalysis.Semantics.IInvalidExpression -&gt; unit&#xA;override this.VisitInvalidExpression : Microsoft.CodeAnalysis.Semantics.IInvalidExpression -&gt; unit" Usage="operationVisitor.VisitInvalidExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IInvalidExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInvalidStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitInvalidStatement (Microsoft.CodeAnalysis.Semantics.IInvalidStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitInvalidStatement(class Microsoft.CodeAnalysis.Semantics.IInvalidStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitInvalidStatement(Microsoft.CodeAnalysis.Semantics.IInvalidStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitInvalidStatement (operation As IInvalidStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitInvalidStatement : Microsoft.CodeAnalysis.Semantics.IInvalidStatement -&gt; unit&#xA;override this.VisitInvalidStatement : Microsoft.CodeAnalysis.Semantics.IInvalidStatement -&gt; unit" Usage="operationVisitor.VisitInvalidStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IInvalidStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitInvocationExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitInvocationExpression (Microsoft.CodeAnalysis.Semantics.IInvocationExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitInvocationExpression(class Microsoft.CodeAnalysis.Semantics.IInvocationExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitInvocationExpression(Microsoft.CodeAnalysis.Semantics.IInvocationExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitInvocationExpression (operation As IInvocationExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitInvocationExpression : Microsoft.CodeAnalysis.Semantics.IInvocationExpression -&gt; unit&#xA;override this.VisitInvocationExpression : Microsoft.CodeAnalysis.Semantics.IInvocationExpression -&gt; unit" Usage="operationVisitor.VisitInvocationExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IInvocationExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitIsTypeExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitIsTypeExpression (Microsoft.CodeAnalysis.Semantics.IIsTypeExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitIsTypeExpression(class Microsoft.CodeAnalysis.Semantics.IIsTypeExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitIsTypeExpression(Microsoft.CodeAnalysis.Semantics.IIsTypeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitIsTypeExpression (operation As IIsTypeExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitIsTypeExpression : Microsoft.CodeAnalysis.Semantics.IIsTypeExpression -&gt; unit&#xA;override this.VisitIsTypeExpression : Microsoft.CodeAnalysis.Semantics.IIsTypeExpression -&gt; unit" Usage="operationVisitor.VisitIsTypeExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IIsTypeExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLabelStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitLabelStatement (Microsoft.CodeAnalysis.Semantics.ILabelStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitLabelStatement(class Microsoft.CodeAnalysis.Semantics.ILabelStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitLabelStatement(Microsoft.CodeAnalysis.Semantics.ILabelStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitLabelStatement (operation As ILabelStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitLabelStatement : Microsoft.CodeAnalysis.Semantics.ILabelStatement -&gt; unit&#xA;override this.VisitLabelStatement : Microsoft.CodeAnalysis.Semantics.ILabelStatement -&gt; unit" Usage="operationVisitor.VisitLabelStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ILabelStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLambdaExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitLambdaExpression (Microsoft.CodeAnalysis.Semantics.ILambdaExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitLambdaExpression(class Microsoft.CodeAnalysis.Semantics.ILambdaExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitLambdaExpression(Microsoft.CodeAnalysis.Semantics.ILambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitLambdaExpression (operation As ILambdaExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitLambdaExpression : Microsoft.CodeAnalysis.Semantics.ILambdaExpression -&gt; unit&#xA;override this.VisitLambdaExpression : Microsoft.CodeAnalysis.Semantics.ILambdaExpression -&gt; unit" Usage="operationVisitor.VisitLambdaExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ILambdaExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLateBoundMemberReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitLateBoundMemberReferenceExpression (Microsoft.CodeAnalysis.Semantics.ILateBoundMemberReferenceExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitLateBoundMemberReferenceExpression(class Microsoft.CodeAnalysis.Semantics.ILateBoundMemberReferenceExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitLateBoundMemberReferenceExpression(Microsoft.CodeAnalysis.Semantics.ILateBoundMemberReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitLateBoundMemberReferenceExpression (operation As ILateBoundMemberReferenceExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitLateBoundMemberReferenceExpression : Microsoft.CodeAnalysis.Semantics.ILateBoundMemberReferenceExpression -&gt; unit&#xA;override this.VisitLateBoundMemberReferenceExpression : Microsoft.CodeAnalysis.Semantics.ILateBoundMemberReferenceExpression -&gt; unit" Usage="operationVisitor.VisitLateBoundMemberReferenceExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ILateBoundMemberReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLiteralExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitLiteralExpression (Microsoft.CodeAnalysis.Semantics.ILiteralExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitLiteralExpression(class Microsoft.CodeAnalysis.Semantics.ILiteralExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitLiteralExpression(Microsoft.CodeAnalysis.Semantics.ILiteralExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitLiteralExpression (operation As ILiteralExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitLiteralExpression : Microsoft.CodeAnalysis.Semantics.ILiteralExpression -&gt; unit&#xA;override this.VisitLiteralExpression : Microsoft.CodeAnalysis.Semantics.ILiteralExpression -&gt; unit" Usage="operationVisitor.VisitLiteralExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ILiteralExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLocalReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitLocalReferenceExpression (Microsoft.CodeAnalysis.Semantics.ILocalReferenceExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitLocalReferenceExpression(class Microsoft.CodeAnalysis.Semantics.ILocalReferenceExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitLocalReferenceExpression(Microsoft.CodeAnalysis.Semantics.ILocalReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitLocalReferenceExpression (operation As ILocalReferenceExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitLocalReferenceExpression : Microsoft.CodeAnalysis.Semantics.ILocalReferenceExpression -&gt; unit&#xA;override this.VisitLocalReferenceExpression : Microsoft.CodeAnalysis.Semantics.ILocalReferenceExpression -&gt; unit" Usage="operationVisitor.VisitLocalReferenceExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ILocalReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitLockStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitLockStatement (Microsoft.CodeAnalysis.Semantics.ILockStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitLockStatement(class Microsoft.CodeAnalysis.Semantics.ILockStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitLockStatement(Microsoft.CodeAnalysis.Semantics.ILockStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitLockStatement (operation As ILockStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitLockStatement : Microsoft.CodeAnalysis.Semantics.ILockStatement -&gt; unit&#xA;override this.VisitLockStatement : Microsoft.CodeAnalysis.Semantics.ILockStatement -&gt; unit" Usage="operationVisitor.VisitLockStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ILockStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitMethodBindingExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitMethodBindingExpression (Microsoft.CodeAnalysis.Semantics.IMethodBindingExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitMethodBindingExpression(class Microsoft.CodeAnalysis.Semantics.IMethodBindingExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitMethodBindingExpression(Microsoft.CodeAnalysis.Semantics.IMethodBindingExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitMethodBindingExpression (operation As IMethodBindingExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitMethodBindingExpression : Microsoft.CodeAnalysis.Semantics.IMethodBindingExpression -&gt; unit&#xA;override this.VisitMethodBindingExpression : Microsoft.CodeAnalysis.Semantics.IMethodBindingExpression -&gt; unit" Usage="operationVisitor.VisitMethodBindingExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IMethodBindingExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitNullCoalescingExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitNullCoalescingExpression (Microsoft.CodeAnalysis.Semantics.INullCoalescingExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitNullCoalescingExpression(class Microsoft.CodeAnalysis.Semantics.INullCoalescingExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitNullCoalescingExpression(Microsoft.CodeAnalysis.Semantics.INullCoalescingExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitNullCoalescingExpression (operation As INullCoalescingExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitNullCoalescingExpression : Microsoft.CodeAnalysis.Semantics.INullCoalescingExpression -&gt; unit&#xA;override this.VisitNullCoalescingExpression : Microsoft.CodeAnalysis.Semantics.INullCoalescingExpression -&gt; unit" Usage="operationVisitor.VisitNullCoalescingExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.INullCoalescingExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitObjectCreationExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitObjectCreationExpression (Microsoft.CodeAnalysis.Semantics.IObjectCreationExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitObjectCreationExpression(class Microsoft.CodeAnalysis.Semantics.IObjectCreationExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitObjectCreationExpression(Microsoft.CodeAnalysis.Semantics.IObjectCreationExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitObjectCreationExpression (operation As IObjectCreationExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitObjectCreationExpression : Microsoft.CodeAnalysis.Semantics.IObjectCreationExpression -&gt; unit&#xA;override this.VisitObjectCreationExpression : Microsoft.CodeAnalysis.Semantics.IObjectCreationExpression -&gt; unit" Usage="operationVisitor.VisitObjectCreationExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IObjectCreationExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitOmittedArgumentExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitOmittedArgumentExpression (Microsoft.CodeAnalysis.Semantics.IOmittedArgumentExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitOmittedArgumentExpression(class Microsoft.CodeAnalysis.Semantics.IOmittedArgumentExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitOmittedArgumentExpression(Microsoft.CodeAnalysis.Semantics.IOmittedArgumentExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitOmittedArgumentExpression (operation As IOmittedArgumentExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitOmittedArgumentExpression : Microsoft.CodeAnalysis.Semantics.IOmittedArgumentExpression -&gt; unit&#xA;override this.VisitOmittedArgumentExpression : Microsoft.CodeAnalysis.Semantics.IOmittedArgumentExpression -&gt; unit" Usage="operationVisitor.VisitOmittedArgumentExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IOmittedArgumentExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitParameterInitializer">
      <MemberSignature Language="C#" Value="public virtual void VisitParameterInitializer (Microsoft.CodeAnalysis.Semantics.IParameterInitializer operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitParameterInitializer(class Microsoft.CodeAnalysis.Semantics.IParameterInitializer operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitParameterInitializer(Microsoft.CodeAnalysis.Semantics.IParameterInitializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitParameterInitializer (operation As IParameterInitializer)" />
      <MemberSignature Language="F#" Value="abstract member VisitParameterInitializer : Microsoft.CodeAnalysis.Semantics.IParameterInitializer -&gt; unit&#xA;override this.VisitParameterInitializer : Microsoft.CodeAnalysis.Semantics.IParameterInitializer -&gt; unit" Usage="operationVisitor.VisitParameterInitializer operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IParameterInitializer" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitParameterReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitParameterReferenceExpression (Microsoft.CodeAnalysis.Semantics.IParameterReferenceExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitParameterReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IParameterReferenceExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitParameterReferenceExpression(Microsoft.CodeAnalysis.Semantics.IParameterReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitParameterReferenceExpression (operation As IParameterReferenceExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitParameterReferenceExpression : Microsoft.CodeAnalysis.Semantics.IParameterReferenceExpression -&gt; unit&#xA;override this.VisitParameterReferenceExpression : Microsoft.CodeAnalysis.Semantics.IParameterReferenceExpression -&gt; unit" Usage="operationVisitor.VisitParameterReferenceExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IParameterReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitParenthesizedExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitParenthesizedExpression (Microsoft.CodeAnalysis.Semantics.IParenthesizedExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitParenthesizedExpression(class Microsoft.CodeAnalysis.Semantics.IParenthesizedExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitParenthesizedExpression(Microsoft.CodeAnalysis.Semantics.IParenthesizedExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitParenthesizedExpression (operation As IParenthesizedExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitParenthesizedExpression : Microsoft.CodeAnalysis.Semantics.IParenthesizedExpression -&gt; unit&#xA;override this.VisitParenthesizedExpression : Microsoft.CodeAnalysis.Semantics.IParenthesizedExpression -&gt; unit" Usage="operationVisitor.VisitParenthesizedExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IParenthesizedExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitPlaceholderExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitPlaceholderExpression (Microsoft.CodeAnalysis.Semantics.IPlaceholderExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitPlaceholderExpression(class Microsoft.CodeAnalysis.Semantics.IPlaceholderExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitPlaceholderExpression(Microsoft.CodeAnalysis.Semantics.IPlaceholderExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitPlaceholderExpression (operation As IPlaceholderExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitPlaceholderExpression : Microsoft.CodeAnalysis.Semantics.IPlaceholderExpression -&gt; unit&#xA;override this.VisitPlaceholderExpression : Microsoft.CodeAnalysis.Semantics.IPlaceholderExpression -&gt; unit" Usage="operationVisitor.VisitPlaceholderExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IPlaceholderExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitPointerIndirectionReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitPointerIndirectionReferenceExpression (Microsoft.CodeAnalysis.Semantics.IPointerIndirectionReferenceExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitPointerIndirectionReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IPointerIndirectionReferenceExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitPointerIndirectionReferenceExpression(Microsoft.CodeAnalysis.Semantics.IPointerIndirectionReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitPointerIndirectionReferenceExpression (operation As IPointerIndirectionReferenceExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitPointerIndirectionReferenceExpression : Microsoft.CodeAnalysis.Semantics.IPointerIndirectionReferenceExpression -&gt; unit&#xA;override this.VisitPointerIndirectionReferenceExpression : Microsoft.CodeAnalysis.Semantics.IPointerIndirectionReferenceExpression -&gt; unit" Usage="operationVisitor.VisitPointerIndirectionReferenceExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IPointerIndirectionReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitPropertyInitializer">
      <MemberSignature Language="C#" Value="public virtual void VisitPropertyInitializer (Microsoft.CodeAnalysis.Semantics.IPropertyInitializer operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitPropertyInitializer(class Microsoft.CodeAnalysis.Semantics.IPropertyInitializer operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitPropertyInitializer(Microsoft.CodeAnalysis.Semantics.IPropertyInitializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitPropertyInitializer (operation As IPropertyInitializer)" />
      <MemberSignature Language="F#" Value="abstract member VisitPropertyInitializer : Microsoft.CodeAnalysis.Semantics.IPropertyInitializer -&gt; unit&#xA;override this.VisitPropertyInitializer : Microsoft.CodeAnalysis.Semantics.IPropertyInitializer -&gt; unit" Usage="operationVisitor.VisitPropertyInitializer operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IPropertyInitializer" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitPropertyReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitPropertyReferenceExpression (Microsoft.CodeAnalysis.Semantics.IPropertyReferenceExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitPropertyReferenceExpression(class Microsoft.CodeAnalysis.Semantics.IPropertyReferenceExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitPropertyReferenceExpression(Microsoft.CodeAnalysis.Semantics.IPropertyReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitPropertyReferenceExpression (operation As IPropertyReferenceExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitPropertyReferenceExpression : Microsoft.CodeAnalysis.Semantics.IPropertyReferenceExpression -&gt; unit&#xA;override this.VisitPropertyReferenceExpression : Microsoft.CodeAnalysis.Semantics.IPropertyReferenceExpression -&gt; unit" Usage="operationVisitor.VisitPropertyReferenceExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IPropertyReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitRangeCaseClause">
      <MemberSignature Language="C#" Value="public virtual void VisitRangeCaseClause (Microsoft.CodeAnalysis.Semantics.IRangeCaseClause operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitRangeCaseClause(class Microsoft.CodeAnalysis.Semantics.IRangeCaseClause operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitRangeCaseClause(Microsoft.CodeAnalysis.Semantics.IRangeCaseClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitRangeCaseClause (operation As IRangeCaseClause)" />
      <MemberSignature Language="F#" Value="abstract member VisitRangeCaseClause : Microsoft.CodeAnalysis.Semantics.IRangeCaseClause -&gt; unit&#xA;override this.VisitRangeCaseClause : Microsoft.CodeAnalysis.Semantics.IRangeCaseClause -&gt; unit" Usage="operationVisitor.VisitRangeCaseClause operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IRangeCaseClause" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitRelationalCaseClause">
      <MemberSignature Language="C#" Value="public virtual void VisitRelationalCaseClause (Microsoft.CodeAnalysis.Semantics.IRelationalCaseClause operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitRelationalCaseClause(class Microsoft.CodeAnalysis.Semantics.IRelationalCaseClause operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitRelationalCaseClause(Microsoft.CodeAnalysis.Semantics.IRelationalCaseClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitRelationalCaseClause (operation As IRelationalCaseClause)" />
      <MemberSignature Language="F#" Value="abstract member VisitRelationalCaseClause : Microsoft.CodeAnalysis.Semantics.IRelationalCaseClause -&gt; unit&#xA;override this.VisitRelationalCaseClause : Microsoft.CodeAnalysis.Semantics.IRelationalCaseClause -&gt; unit" Usage="operationVisitor.VisitRelationalCaseClause operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IRelationalCaseClause" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitReturnStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitReturnStatement (Microsoft.CodeAnalysis.Semantics.IReturnStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitReturnStatement(class Microsoft.CodeAnalysis.Semantics.IReturnStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitReturnStatement(Microsoft.CodeAnalysis.Semantics.IReturnStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitReturnStatement (operation As IReturnStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitReturnStatement : Microsoft.CodeAnalysis.Semantics.IReturnStatement -&gt; unit&#xA;override this.VisitReturnStatement : Microsoft.CodeAnalysis.Semantics.IReturnStatement -&gt; unit" Usage="operationVisitor.VisitReturnStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IReturnStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSingleValueCaseClause">
      <MemberSignature Language="C#" Value="public virtual void VisitSingleValueCaseClause (Microsoft.CodeAnalysis.Semantics.ISingleValueCaseClause operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitSingleValueCaseClause(class Microsoft.CodeAnalysis.Semantics.ISingleValueCaseClause operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitSingleValueCaseClause(Microsoft.CodeAnalysis.Semantics.ISingleValueCaseClause)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitSingleValueCaseClause (operation As ISingleValueCaseClause)" />
      <MemberSignature Language="F#" Value="abstract member VisitSingleValueCaseClause : Microsoft.CodeAnalysis.Semantics.ISingleValueCaseClause -&gt; unit&#xA;override this.VisitSingleValueCaseClause : Microsoft.CodeAnalysis.Semantics.ISingleValueCaseClause -&gt; unit" Usage="operationVisitor.VisitSingleValueCaseClause operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ISingleValueCaseClause" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSizeOfExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitSizeOfExpression (Microsoft.CodeAnalysis.Semantics.ISizeOfExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitSizeOfExpression(class Microsoft.CodeAnalysis.Semantics.ISizeOfExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitSizeOfExpression(Microsoft.CodeAnalysis.Semantics.ISizeOfExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitSizeOfExpression (operation As ISizeOfExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitSizeOfExpression : Microsoft.CodeAnalysis.Semantics.ISizeOfExpression -&gt; unit&#xA;override this.VisitSizeOfExpression : Microsoft.CodeAnalysis.Semantics.ISizeOfExpression -&gt; unit" Usage="operationVisitor.VisitSizeOfExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ISizeOfExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitStopStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitStopStatement (Microsoft.CodeAnalysis.Semantics.IStopStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitStopStatement(class Microsoft.CodeAnalysis.Semantics.IStopStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitStopStatement(Microsoft.CodeAnalysis.Semantics.IStopStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitStopStatement (operation As IStopStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitStopStatement : Microsoft.CodeAnalysis.Semantics.IStopStatement -&gt; unit&#xA;override this.VisitStopStatement : Microsoft.CodeAnalysis.Semantics.IStopStatement -&gt; unit" Usage="operationVisitor.VisitStopStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IStopStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSwitchCase">
      <MemberSignature Language="C#" Value="public virtual void VisitSwitchCase (Microsoft.CodeAnalysis.Semantics.ISwitchCase operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitSwitchCase(class Microsoft.CodeAnalysis.Semantics.ISwitchCase operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitSwitchCase(Microsoft.CodeAnalysis.Semantics.ISwitchCase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitSwitchCase (operation As ISwitchCase)" />
      <MemberSignature Language="F#" Value="abstract member VisitSwitchCase : Microsoft.CodeAnalysis.Semantics.ISwitchCase -&gt; unit&#xA;override this.VisitSwitchCase : Microsoft.CodeAnalysis.Semantics.ISwitchCase -&gt; unit" Usage="operationVisitor.VisitSwitchCase operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ISwitchCase" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSwitchStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitSwitchStatement (Microsoft.CodeAnalysis.Semantics.ISwitchStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitSwitchStatement(class Microsoft.CodeAnalysis.Semantics.ISwitchStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitSwitchStatement(Microsoft.CodeAnalysis.Semantics.ISwitchStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitSwitchStatement (operation As ISwitchStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitSwitchStatement : Microsoft.CodeAnalysis.Semantics.ISwitchStatement -&gt; unit&#xA;override this.VisitSwitchStatement : Microsoft.CodeAnalysis.Semantics.ISwitchStatement -&gt; unit" Usage="operationVisitor.VisitSwitchStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ISwitchStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitSyntheticLocalReferenceExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitSyntheticLocalReferenceExpression (Microsoft.CodeAnalysis.Semantics.ISyntheticLocalReferenceExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitSyntheticLocalReferenceExpression(class Microsoft.CodeAnalysis.Semantics.ISyntheticLocalReferenceExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitSyntheticLocalReferenceExpression(Microsoft.CodeAnalysis.Semantics.ISyntheticLocalReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitSyntheticLocalReferenceExpression (operation As ISyntheticLocalReferenceExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitSyntheticLocalReferenceExpression : Microsoft.CodeAnalysis.Semantics.ISyntheticLocalReferenceExpression -&gt; unit&#xA;override this.VisitSyntheticLocalReferenceExpression : Microsoft.CodeAnalysis.Semantics.ISyntheticLocalReferenceExpression -&gt; unit" Usage="operationVisitor.VisitSyntheticLocalReferenceExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ISyntheticLocalReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitThrowStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitThrowStatement (Microsoft.CodeAnalysis.Semantics.IThrowStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitThrowStatement(class Microsoft.CodeAnalysis.Semantics.IThrowStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitThrowStatement(Microsoft.CodeAnalysis.Semantics.IThrowStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitThrowStatement (operation As IThrowStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitThrowStatement : Microsoft.CodeAnalysis.Semantics.IThrowStatement -&gt; unit&#xA;override this.VisitThrowStatement : Microsoft.CodeAnalysis.Semantics.IThrowStatement -&gt; unit" Usage="operationVisitor.VisitThrowStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IThrowStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTryStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitTryStatement (Microsoft.CodeAnalysis.Semantics.ITryStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitTryStatement(class Microsoft.CodeAnalysis.Semantics.ITryStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitTryStatement(Microsoft.CodeAnalysis.Semantics.ITryStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitTryStatement (operation As ITryStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitTryStatement : Microsoft.CodeAnalysis.Semantics.ITryStatement -&gt; unit&#xA;override this.VisitTryStatement : Microsoft.CodeAnalysis.Semantics.ITryStatement -&gt; unit" Usage="operationVisitor.VisitTryStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ITryStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTypeOfExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitTypeOfExpression (Microsoft.CodeAnalysis.Semantics.ITypeOfExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitTypeOfExpression(class Microsoft.CodeAnalysis.Semantics.ITypeOfExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitTypeOfExpression(Microsoft.CodeAnalysis.Semantics.ITypeOfExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitTypeOfExpression (operation As ITypeOfExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitTypeOfExpression : Microsoft.CodeAnalysis.Semantics.ITypeOfExpression -&gt; unit&#xA;override this.VisitTypeOfExpression : Microsoft.CodeAnalysis.Semantics.ITypeOfExpression -&gt; unit" Usage="operationVisitor.VisitTypeOfExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ITypeOfExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitTypeParameterObjectCreationExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitTypeParameterObjectCreationExpression (Microsoft.CodeAnalysis.Semantics.ITypeParameterObjectCreationExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitTypeParameterObjectCreationExpression(class Microsoft.CodeAnalysis.Semantics.ITypeParameterObjectCreationExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitTypeParameterObjectCreationExpression(Microsoft.CodeAnalysis.Semantics.ITypeParameterObjectCreationExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitTypeParameterObjectCreationExpression (operation As ITypeParameterObjectCreationExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitTypeParameterObjectCreationExpression : Microsoft.CodeAnalysis.Semantics.ITypeParameterObjectCreationExpression -&gt; unit&#xA;override this.VisitTypeParameterObjectCreationExpression : Microsoft.CodeAnalysis.Semantics.ITypeParameterObjectCreationExpression -&gt; unit" Usage="operationVisitor.VisitTypeParameterObjectCreationExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.ITypeParameterObjectCreationExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitUnaryOperatorExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitUnaryOperatorExpression (Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitUnaryOperatorExpression(class Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitUnaryOperatorExpression(Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitUnaryOperatorExpression (operation As IUnaryOperatorExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitUnaryOperatorExpression : Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression -&gt; unit&#xA;override this.VisitUnaryOperatorExpression : Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression -&gt; unit" Usage="operationVisitor.VisitUnaryOperatorExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IUnaryOperatorExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitUnboundLambdaExpression">
      <MemberSignature Language="C#" Value="public virtual void VisitUnboundLambdaExpression (Microsoft.CodeAnalysis.Semantics.IUnboundLambdaExpression operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitUnboundLambdaExpression(class Microsoft.CodeAnalysis.Semantics.IUnboundLambdaExpression operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitUnboundLambdaExpression(Microsoft.CodeAnalysis.Semantics.IUnboundLambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitUnboundLambdaExpression (operation As IUnboundLambdaExpression)" />
      <MemberSignature Language="F#" Value="abstract member VisitUnboundLambdaExpression : Microsoft.CodeAnalysis.Semantics.IUnboundLambdaExpression -&gt; unit&#xA;override this.VisitUnboundLambdaExpression : Microsoft.CodeAnalysis.Semantics.IUnboundLambdaExpression -&gt; unit" Usage="operationVisitor.VisitUnboundLambdaExpression operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IUnboundLambdaExpression" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitUsingStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitUsingStatement (Microsoft.CodeAnalysis.Semantics.IUsingStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitUsingStatement(class Microsoft.CodeAnalysis.Semantics.IUsingStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitUsingStatement(Microsoft.CodeAnalysis.Semantics.IUsingStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitUsingStatement (operation As IUsingStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitUsingStatement : Microsoft.CodeAnalysis.Semantics.IUsingStatement -&gt; unit&#xA;override this.VisitUsingStatement : Microsoft.CodeAnalysis.Semantics.IUsingStatement -&gt; unit" Usage="operationVisitor.VisitUsingStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IUsingStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitVariableDeclaration">
      <MemberSignature Language="C#" Value="public virtual void VisitVariableDeclaration (Microsoft.CodeAnalysis.Semantics.IVariableDeclaration operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitVariableDeclaration(class Microsoft.CodeAnalysis.Semantics.IVariableDeclaration operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitVariableDeclaration(Microsoft.CodeAnalysis.Semantics.IVariableDeclaration)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitVariableDeclaration (operation As IVariableDeclaration)" />
      <MemberSignature Language="F#" Value="abstract member VisitVariableDeclaration : Microsoft.CodeAnalysis.Semantics.IVariableDeclaration -&gt; unit&#xA;override this.VisitVariableDeclaration : Microsoft.CodeAnalysis.Semantics.IVariableDeclaration -&gt; unit" Usage="operationVisitor.VisitVariableDeclaration operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IVariableDeclaration" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitVariableDeclarationStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitVariableDeclarationStatement (Microsoft.CodeAnalysis.Semantics.IVariableDeclarationStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitVariableDeclarationStatement(class Microsoft.CodeAnalysis.Semantics.IVariableDeclarationStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitVariableDeclarationStatement(Microsoft.CodeAnalysis.Semantics.IVariableDeclarationStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitVariableDeclarationStatement (operation As IVariableDeclarationStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitVariableDeclarationStatement : Microsoft.CodeAnalysis.Semantics.IVariableDeclarationStatement -&gt; unit&#xA;override this.VisitVariableDeclarationStatement : Microsoft.CodeAnalysis.Semantics.IVariableDeclarationStatement -&gt; unit" Usage="operationVisitor.VisitVariableDeclarationStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IVariableDeclarationStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitWhileUntilLoopStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitWhileUntilLoopStatement (Microsoft.CodeAnalysis.Semantics.IWhileUntilLoopStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitWhileUntilLoopStatement(class Microsoft.CodeAnalysis.Semantics.IWhileUntilLoopStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitWhileUntilLoopStatement(Microsoft.CodeAnalysis.Semantics.IWhileUntilLoopStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitWhileUntilLoopStatement (operation As IWhileUntilLoopStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitWhileUntilLoopStatement : Microsoft.CodeAnalysis.Semantics.IWhileUntilLoopStatement -&gt; unit&#xA;override this.VisitWhileUntilLoopStatement : Microsoft.CodeAnalysis.Semantics.IWhileUntilLoopStatement -&gt; unit" Usage="operationVisitor.VisitWhileUntilLoopStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IWhileUntilLoopStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitWithStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitWithStatement (Microsoft.CodeAnalysis.Semantics.IWithStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitWithStatement(class Microsoft.CodeAnalysis.Semantics.IWithStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitWithStatement(Microsoft.CodeAnalysis.Semantics.IWithStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitWithStatement (operation As IWithStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitWithStatement : Microsoft.CodeAnalysis.Semantics.IWithStatement -&gt; unit&#xA;override this.VisitWithStatement : Microsoft.CodeAnalysis.Semantics.IWithStatement -&gt; unit" Usage="operationVisitor.VisitWithStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IWithStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisitYieldBreakStatement">
      <MemberSignature Language="C#" Value="public virtual void VisitYieldBreakStatement (Microsoft.CodeAnalysis.Semantics.IReturnStatement operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void VisitYieldBreakStatement(class Microsoft.CodeAnalysis.Semantics.IReturnStatement operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Semantics.OperationVisitor.VisitYieldBreakStatement(Microsoft.CodeAnalysis.Semantics.IReturnStatement)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub VisitYieldBreakStatement (operation As IReturnStatement)" />
      <MemberSignature Language="F#" Value="abstract member VisitYieldBreakStatement : Microsoft.CodeAnalysis.Semantics.IReturnStatement -&gt; unit&#xA;override this.VisitYieldBreakStatement : Microsoft.CodeAnalysis.Semantics.IReturnStatement -&gt; unit" Usage="operationVisitor.VisitYieldBreakStatement operation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.Semantics.IReturnStatement" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>