<Type Name="ForEachStatementInfo" FullName="Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo">
  <TypeSignature Language="C#" Value="public struct ForEachStatementInfo : IEquatable&lt;Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ForEachStatementInfo extends System.ValueType implements class System.IEquatable`1&lt;valuetype Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo" />
  <TypeSignature Language="VB.NET" Value="Public Structure ForEachStatementInfo&#xA;Implements IEquatable(Of ForEachStatementInfo)" />
  <TypeSignature Language="F#" Value="type ForEachStatementInfo = struct" />
  <TypeSignature Language="C++ CLI" Value="public value class ForEachStatementInfo : IEquatable&lt;Microsoft::CodeAnalysis::CSharp::ForEachStatementInfo&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Structure containing all semantic information about a for each statement.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CurrentConversion">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.Conversion CurrentConversion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.CSharp.Conversion CurrentConversion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.CurrentConversion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentConversion As Conversion" />
      <MemberSignature Language="F#" Value="member this.CurrentConversion : Microsoft.CodeAnalysis.CSharp.Conversion" Usage="Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.CurrentConversion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::CSharp::Conversion CurrentConversion { Microsoft::CodeAnalysis::CSharp::Conversion get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Conversion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The conversion from the type of the <see cref="P:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.CurrentProperty" /> to the <see cref="P:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.ElementType" />.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentProperty">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IPropertySymbol CurrentProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IPropertySymbol CurrentProperty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.CurrentProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentProperty As IPropertySymbol" />
      <MemberSignature Language="F#" Value="member this.CurrentProperty : Microsoft.CodeAnalysis.IPropertySymbol" Usage="Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.CurrentProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::IPropertySymbol ^ CurrentProperty { Microsoft::CodeAnalysis::IPropertySymbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IPropertySymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the "Current" property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeMethod">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IMethodSymbol DisposeMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IMethodSymbol DisposeMethod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.DisposeMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisposeMethod As IMethodSymbol" />
      <MemberSignature Language="F#" Value="member this.DisposeMethod : Microsoft.CodeAnalysis.IMethodSymbol" Usage="Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.DisposeMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::IMethodSymbol ^ DisposeMethod { Microsoft::CodeAnalysis::IMethodSymbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IMethodSymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the "Dispose" method.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementConversion">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.Conversion ElementConversion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.CSharp.Conversion ElementConversion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.ElementConversion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementConversion As Conversion" />
      <MemberSignature Language="F#" Value="member this.ElementConversion : Microsoft.CodeAnalysis.CSharp.Conversion" Usage="Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.ElementConversion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::CSharp::Conversion ElementConversion { Microsoft::CodeAnalysis::CSharp::Conversion get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Conversion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The conversion from the <see cref="P:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.ElementType" /> to the iteration variable type.
            </summary>
        <value>To be added.</value>
        <remarks>
            May be user-defined.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementType">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.ITypeSymbol ElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.ITypeSymbol ElementType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.ElementType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementType As ITypeSymbol" />
      <MemberSignature Language="F#" Value="member this.ElementType : Microsoft.CodeAnalysis.ITypeSymbol" Usage="Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.ElementType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::ITypeSymbol ^ ElementType { Microsoft::CodeAnalysis::ITypeSymbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ITypeSymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The intermediate type to which the output of the <see cref="P:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.CurrentProperty" /> is converted
            before being converted to the iteration variable type.
            </summary>
        <value>To be added.</value>
        <remarks>
            As you might hope, for an array, it is the element type of the array.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.Equals(Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As ForEachStatementInfo) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo -&gt; bool" Usage="forEachStatementInfo.Equals other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(Microsoft::CodeAnalysis::CSharp::ForEachStatementInfo other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="forEachStatementInfo.Equals obj" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override bool Equals(Platform::Object ^ obj);" />
      <MemberSignature Language="C++ WINRT" Value=" override bool Equals(winrt::Windows::Foundation::IInspectable const &amp; obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorMethod">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IMethodSymbol GetEnumeratorMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IMethodSymbol GetEnumeratorMethod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.GetEnumeratorMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GetEnumeratorMethod As IMethodSymbol" />
      <MemberSignature Language="F#" Value="member this.GetEnumeratorMethod : Microsoft.CodeAnalysis.IMethodSymbol" Usage="Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.GetEnumeratorMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::IMethodSymbol ^ GetEnumeratorMethod { Microsoft::CodeAnalysis::IMethodSymbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IMethodSymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the "GetEnumerator" method.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="forEachStatementInfo.GetHashCode " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="C++ WINRT" Value=" override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNextMethod">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IMethodSymbol MoveNextMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IMethodSymbol MoveNextMethod" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.MoveNextMethod" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MoveNextMethod As IMethodSymbol" />
      <MemberSignature Language="F#" Value="member this.MoveNextMethod : Microsoft.CodeAnalysis.IMethodSymbol" Usage="Microsoft.CodeAnalysis.CSharp.ForEachStatementInfo.MoveNextMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::IMethodSymbol ^ MoveNextMethod { Microsoft::CodeAnalysis::IMethodSymbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IMethodSymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the "MoveNext" method.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>