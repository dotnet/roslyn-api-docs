<Type Name="ISourceGenerator" FullName="Microsoft.CodeAnalysis.ISourceGenerator">
  <TypeSignature Language="C#" Value="public interface ISourceGenerator" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISourceGenerator" FrameworkAlternate="roslyn-dotnet-3.10.0;roslyn-dotnet-3.11.0;roslyn-dotnet-3.6.0;roslyn-dotnet-3.7.0;roslyn-dotnet-3.8.0;roslyn-dotnet-3.9.0;roslyn-dotnet-4.0.1;roslyn-dotnet-4.1.0;roslyn-dotnet-4.2.0;roslyn-dotnet-4.3.0;roslyn-dotnet-4.4.0;roslyn-dotnet-4.5.0;roslyn-dotnet-4.6.0;roslyn-dotnet-4.7.0;roslyn-dotnet-4.8.0" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.ISourceGenerator" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISourceGenerator" />
  <TypeSignature Language="F#" Value="type ISourceGenerator = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ISourceGenerator" FrameworkAlternate="roslyn-dotnet-4.12.0;roslyn-dotnet-4.9.0" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>3.6.0.0</AssemblyVersion>
    <AssemblyVersion>3.7.0.0</AssemblyVersion>
    <AssemblyVersion>3.8.0.0</AssemblyVersion>
    <AssemblyVersion>3.9.0.0</AssemblyVersion>
    <AssemblyVersion>3.10.0.0</AssemblyVersion>
    <AssemblyVersion>3.11.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.7.0.0</AssemblyVersion>
    <AssemblyVersion>4.8.0.0</AssemblyVersion>
    <AssemblyVersion>4.9.0.0</AssemblyVersion>
    <AssemblyVersion>4.12.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            The base interface required to implement a source generator
            </summary>
    <remarks>
            The lifetime of a generator is controlled by the compiler.
            State should not be stored directly on the generator, as there
            is no guarantee that the same instance will be used on a 
            subsequent generation pass.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (Microsoft.CodeAnalysis.GeneratorExecutionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(valuetype Microsoft.CodeAnalysis.GeneratorExecutionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.ISourceGenerator.Execute(Microsoft.CodeAnalysis.GeneratorExecutionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (context As GeneratorExecutionContext)" />
      <MemberSignature Language="F#" Value="abstract member Execute : Microsoft.CodeAnalysis.GeneratorExecutionContext -&gt; unit" Usage="iSourceGenerator.Execute context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.10.0.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.CodeAnalysis.GeneratorExecutionContext" Index="0" FrameworkAlternate="roslyn-dotnet-3.10.0;roslyn-dotnet-3.11.0;roslyn-dotnet-3.8.0;roslyn-dotnet-3.9.0;roslyn-dotnet-4.0.1;roslyn-dotnet-4.1.0;roslyn-dotnet-4.12.0;roslyn-dotnet-4.2.0;roslyn-dotnet-4.3.0;roslyn-dotnet-4.4.0;roslyn-dotnet-4.5.0;roslyn-dotnet-4.6.0;roslyn-dotnet-4.7.0;roslyn-dotnet-4.8.0;roslyn-dotnet-4.9.0" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Microsoft.CodeAnalysis.GeneratorExecutionContext" /> to add source to</param>
        <summary>
            Called to perform source generation. A generator can use the <paramref name="context" />
            to add source files via the <see cref="M:Microsoft.CodeAnalysis.GeneratorExecutionContext.AddSource(System.String,Microsoft.CodeAnalysis.Text.SourceText)" /> 
            method.
            </summary>
        <remarks>
            This call represents the main generation step. It is called after a <see cref="T:Microsoft.CodeAnalysis.Compilation" /> is 
            created that contains the user written code. 
            
            A generator can use the <see cref="P:Microsoft.CodeAnalysis.GeneratorExecutionContext.Compilation" /> property to
            discover information about the users compilation and make decisions on what source to 
            provide. 
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public void Execute (Microsoft.CodeAnalysis.SourceGeneratorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Execute(valuetype Microsoft.CodeAnalysis.SourceGeneratorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.ISourceGenerator.Execute(Microsoft.CodeAnalysis.SourceGeneratorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Execute (context As SourceGeneratorContext)" />
      <MemberSignature Language="F#" Value="abstract member Execute : Microsoft.CodeAnalysis.SourceGeneratorContext -&gt; unit" Usage="iSourceGenerator.Execute context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.CodeAnalysis.SourceGeneratorContext" Index="0" FrameworkAlternate="roslyn-dotnet-3.6.0;roslyn-dotnet-3.7.0" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Microsoft.CodeAnalysis.SourceGeneratorContext" /> to add source to</param>
        <summary>
            Called to perform source generation. A generator can use the <paramref name="context" />
            to add source files via the <see cref="M:Microsoft.CodeAnalysis.SourceGeneratorContext.AddSource(System.String,Microsoft.CodeAnalysis.Text.SourceText)" /> 
            method.
            </summary>
        <remarks>
            This call represents the main generation step. It is called after a <see cref="T:Microsoft.CodeAnalysis.Compilation" /> is 
            created that contains the user written code. 
            
            A generator can use the <see cref="P:Microsoft.CodeAnalysis.SourceGeneratorContext.Compilation" /> property to
            discover information about the users compilation and make decisions on what source to 
            provide. 
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.CodeAnalysis.GeneratorInitializationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(valuetype Microsoft.CodeAnalysis.GeneratorInitializationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.ISourceGenerator.Initialize(Microsoft.CodeAnalysis.GeneratorInitializationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (context As GeneratorInitializationContext)" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.CodeAnalysis.GeneratorInitializationContext -&gt; unit" Usage="iSourceGenerator.Initialize context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.8.0.0</AssemblyVersion>
        <AssemblyVersion>3.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.10.0.0</AssemblyVersion>
        <AssemblyVersion>3.11.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.7.0.0</AssemblyVersion>
        <AssemblyVersion>4.8.0.0</AssemblyVersion>
        <AssemblyVersion>4.9.0.0</AssemblyVersion>
        <AssemblyVersion>4.12.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.CodeAnalysis.GeneratorInitializationContext" Index="0" FrameworkAlternate="roslyn-dotnet-3.10.0;roslyn-dotnet-3.11.0;roslyn-dotnet-3.8.0;roslyn-dotnet-3.9.0;roslyn-dotnet-4.0.1;roslyn-dotnet-4.1.0;roslyn-dotnet-4.12.0;roslyn-dotnet-4.2.0;roslyn-dotnet-4.3.0;roslyn-dotnet-4.4.0;roslyn-dotnet-4.5.0;roslyn-dotnet-4.6.0;roslyn-dotnet-4.7.0;roslyn-dotnet-4.8.0;roslyn-dotnet-4.9.0" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Microsoft.CodeAnalysis.GeneratorInitializationContext" /> to register callbacks on</param>
        <summary>
            Called before generation occurs. A generator can use the <paramref name="context" />
            to register callbacks required to perform generation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.CodeAnalysis.InitializationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(valuetype Microsoft.CodeAnalysis.InitializationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.ISourceGenerator.Initialize(Microsoft.CodeAnalysis.InitializationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (context As InitializationContext)" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.CodeAnalysis.InitializationContext -&gt; unit" Usage="iSourceGenerator.Initialize context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.6.0.0</AssemblyVersion>
        <AssemblyVersion>3.7.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.CodeAnalysis.InitializationContext" Index="0" FrameworkAlternate="roslyn-dotnet-3.6.0;roslyn-dotnet-3.7.0" />
      </Parameters>
      <Docs>
        <param name="context">The <see cref="T:Microsoft.CodeAnalysis.InitializationContext" /> to register callbacks on</param>
        <summary>
            Called before generation occurs. A generator can use the <paramref name="context" />
            to register callbacks required to perform generation.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
