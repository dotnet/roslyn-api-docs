<Type Name="CommonConversion" FullName="Microsoft.CodeAnalysis.Operations.CommonConversion">
  <TypeSignature Language="C#" Value="public struct CommonConversion" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CommonConversion extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Operations.CommonConversion" />
  <TypeSignature Language="VB.NET" Value="Public Structure CommonConversion" />
  <TypeSignature Language="F#" Value="type CommonConversion = struct" />
  <TypeSignature Language="C++ CLI" Value="public value class CommonConversion" />
  <TypeSignature Language="C++ WINRT" Value="struct CommonConversion" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents the common, language-agnostic elements of a conversion.
            </summary>
    <remarks>
            We reserve the right to change this struct in the future.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="Exists">
      <MemberSignature Language="C#" Value="public bool Exists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Exists" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.CommonConversion.Exists" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exists As Boolean" />
      <MemberSignature Language="F#" Value="member this.Exists : bool" Usage="Microsoft.CodeAnalysis.Operations.CommonConversion.Exists" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Exists { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool Exists { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if the conversion exists, as defined by the target language.
            </summary>
        <value>To be added.</value>
        <remarks>
            The existence of a conversion does not necessarily imply that the conversion is valid.
            For example, an ambiguous user-defined conversion may exist but may not be valid.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIdentity">
      <MemberSignature Language="C#" Value="public bool IsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsIdentity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.CommonConversion.IsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsIdentity As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsIdentity : bool" Usage="Microsoft.CodeAnalysis.Operations.CommonConversion.IsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsIdentity { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool IsIdentity { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if the conversion is an identity conversion.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImplicit">
      <MemberSignature Language="C#" Value="public bool IsImplicit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImplicit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.CommonConversion.IsImplicit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImplicit As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsImplicit : bool" Usage="Microsoft.CodeAnalysis.Operations.CommonConversion.IsImplicit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if the conversion is an implicit (C#) or widening (VB) conversion.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNumeric">
      <MemberSignature Language="C#" Value="public bool IsNumeric { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNumeric" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.CommonConversion.IsNumeric" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNumeric As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsNumeric : bool" Usage="Microsoft.CodeAnalysis.Operations.CommonConversion.IsNumeric" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNumeric { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool IsNumeric { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if the conversion is a numeric conversion.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public bool IsReference { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReference" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.CommonConversion.IsReference" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReference As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsReference : bool" Usage="Microsoft.CodeAnalysis.Operations.CommonConversion.IsReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReference { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool IsReference { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if the conversion is a reference conversion.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserDefined">
      <MemberSignature Language="C#" Value="public bool IsUserDefined { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserDefined" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.CommonConversion.IsUserDefined" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUserDefined As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsUserDefined : bool" Usage="Microsoft.CodeAnalysis.Operations.CommonConversion.IsUserDefined" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUserDefined { bool get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property bool IsUserDefined { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns true if the conversion is a user-defined conversion.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodSymbol">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IMethodSymbol MethodSymbol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IMethodSymbol MethodSymbol" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.CommonConversion.MethodSymbol" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodSymbol As IMethodSymbol" />
      <MemberSignature Language="F#" Value="member this.MethodSymbol : Microsoft.CodeAnalysis.IMethodSymbol" Usage="Microsoft.CodeAnalysis.Operations.CommonConversion.MethodSymbol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::IMethodSymbol ^ MethodSymbol { Microsoft::CodeAnalysis::IMethodSymbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IMethodSymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the method used to perform the conversion for a user-defined conversion if <see cref="P:Microsoft.CodeAnalysis.Operations.CommonConversion.IsUserDefined" /> is true.
            Otherwise, returns null.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>