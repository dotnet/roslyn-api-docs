<Type Name="CodeBlockAnalysisContext" FullName="Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext">
  <TypeSignature Language="C#" Value="public struct CodeBlockAnalysisContext" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CodeBlockAnalysisContext extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext" />
  <TypeSignature Language="VB.NET" Value="Public Structure CodeBlockAnalysisContext" />
  <TypeSignature Language="F#" Value="type CodeBlockAnalysisContext = struct" />
  <TypeSignature Language="C++ CLI" Value="public value class CodeBlockAnalysisContext" />
  <TypeSignature Language="C++ WINRT" Value="struct CodeBlockAnalysisContext" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Context for a code block action or code block end action.
            A code block action or code block end action can use a <see cref="T:Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext" /> to report <see cref="T:Microsoft.CodeAnalysis.Diagnostic" />s about a code block.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CodeBlockAnalysisContext (Microsoft.CodeAnalysis.SyntaxNode codeBlock, Microsoft.CodeAnalysis.ISymbol owningSymbol, Microsoft.CodeAnalysis.SemanticModel semanticModel, Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions options, Action&lt;Microsoft.CodeAnalysis.Diagnostic&gt; reportDiagnostic, Func&lt;Microsoft.CodeAnalysis.Diagnostic,bool&gt; isSupportedDiagnostic, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.CodeAnalysis.SyntaxNode codeBlock, class Microsoft.CodeAnalysis.ISymbol owningSymbol, class Microsoft.CodeAnalysis.SemanticModel semanticModel, class Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions options, class System.Action`1&lt;class Microsoft.CodeAnalysis.Diagnostic&gt; reportDiagnostic, class System.Func`2&lt;class Microsoft.CodeAnalysis.Diagnostic, bool&gt; isSupportedDiagnostic, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.#ctor(Microsoft.CodeAnalysis.SyntaxNode,Microsoft.CodeAnalysis.ISymbol,Microsoft.CodeAnalysis.SemanticModel,Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions,System.Action{Microsoft.CodeAnalysis.Diagnostic},System.Func{Microsoft.CodeAnalysis.Diagnostic,System.Boolean},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="new Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext : Microsoft.CodeAnalysis.SyntaxNode * Microsoft.CodeAnalysis.ISymbol * Microsoft.CodeAnalysis.SemanticModel * Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions * Action&lt;Microsoft.CodeAnalysis.Diagnostic&gt; * Func&lt;Microsoft.CodeAnalysis.Diagnostic, bool&gt; * System.Threading.CancellationToken -&gt; Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext" Usage="new Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext (codeBlock, owningSymbol, semanticModel, options, reportDiagnostic, isSupportedDiagnostic, cancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CodeBlockAnalysisContext(Microsoft::CodeAnalysis::SyntaxNode ^ codeBlock, Microsoft::CodeAnalysis::ISymbol ^ owningSymbol, Microsoft::CodeAnalysis::SemanticModel ^ semanticModel, Microsoft::CodeAnalysis::Diagnostics::AnalyzerOptions ^ options, Action&lt;Microsoft::CodeAnalysis::Diagnostic ^&gt; ^ reportDiagnostic, Func&lt;Microsoft::CodeAnalysis::Diagnostic ^, bool&gt; ^ isSupportedDiagnostic, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="codeBlock" Type="Microsoft.CodeAnalysis.SyntaxNode" />
        <Parameter Name="owningSymbol" Type="Microsoft.CodeAnalysis.ISymbol" />
        <Parameter Name="semanticModel" Type="Microsoft.CodeAnalysis.SemanticModel" />
        <Parameter Name="options" Type="Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions" />
        <Parameter Name="reportDiagnostic" Type="System.Action&lt;Microsoft.CodeAnalysis.Diagnostic&gt;" />
        <Parameter Name="isSupportedDiagnostic" Type="System.Func&lt;Microsoft.CodeAnalysis.Diagnostic,System.Boolean&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="codeBlock">To be added.</param>
        <param name="owningSymbol">To be added.</param>
        <param name="semanticModel">To be added.</param>
        <param name="options">To be added.</param>
        <param name="reportDiagnostic">To be added.</param>
        <param name="isSupportedDiagnostic">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CancellationToken">
      <MemberSignature Language="C#" Value="public System.Threading.CancellationToken CancellationToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Threading.CancellationToken CancellationToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.CancellationToken" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancellationToken As CancellationToken" />
      <MemberSignature Language="F#" Value="member this.CancellationToken : System.Threading.CancellationToken" Usage="Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.CancellationToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::CancellationToken CancellationToken { System::Threading::CancellationToken get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.CancellationToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Token to check for requested cancellation of the analysis.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeBlock">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SyntaxNode CodeBlock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.SyntaxNode CodeBlock" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.CodeBlock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeBlock As SyntaxNode" />
      <MemberSignature Language="F#" Value="member this.CodeBlock : Microsoft.CodeAnalysis.SyntaxNode" Usage="Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.CodeBlock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxNode ^ CodeBlock { Microsoft::CodeAnalysis::SyntaxNode ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::CodeAnalysis::SyntaxNode ^ CodeBlock { Microsoft::CodeAnalysis::SyntaxNode ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SyntaxNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Code block that is the subject of the analysis.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions Options" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As AnalyzerOptions" />
      <MemberSignature Language="F#" Value="member this.Options : Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions" Usage="Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.Options" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::Diagnostics::AnalyzerOptions ^ Options { Microsoft::CodeAnalysis::Diagnostics::AnalyzerOptions ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.Diagnostics.AnalyzerOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Options specified for the analysis.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OwningSymbol">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.ISymbol OwningSymbol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.ISymbol OwningSymbol" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.OwningSymbol" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwningSymbol As ISymbol" />
      <MemberSignature Language="F#" Value="member this.OwningSymbol : Microsoft.CodeAnalysis.ISymbol" Usage="Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.OwningSymbol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::ISymbol ^ OwningSymbol { Microsoft::CodeAnalysis::ISymbol ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.ISymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:Microsoft.CodeAnalysis.ISymbol" /> for which the code block provides a definition or value.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportDiagnostic">
      <MemberSignature Language="C#" Value="public void ReportDiagnostic (Microsoft.CodeAnalysis.Diagnostic diagnostic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReportDiagnostic(class Microsoft.CodeAnalysis.Diagnostic diagnostic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.ReportDiagnostic(Microsoft.CodeAnalysis.Diagnostic)" />
      <MemberSignature Language="F#" Value="member this.ReportDiagnostic : Microsoft.CodeAnalysis.Diagnostic -&gt; unit" Usage="codeBlockAnalysisContext.ReportDiagnostic diagnostic" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportDiagnostic(Microsoft::CodeAnalysis::Diagnostic ^ diagnostic);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="diagnostic" Type="Microsoft.CodeAnalysis.Diagnostic" />
      </Parameters>
      <Docs>
        <param name="diagnostic">
          <see cref="T:Microsoft.CodeAnalysis.Diagnostic" /> to be reported.</param>
        <summary>
            Report a <see cref="T:Microsoft.CodeAnalysis.Diagnostic" /> about a code block.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SemanticModel">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.SemanticModel SemanticModel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.SemanticModel SemanticModel" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.SemanticModel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SemanticModel As SemanticModel" />
      <MemberSignature Language="F#" Value="member this.SemanticModel : Microsoft.CodeAnalysis.SemanticModel" Usage="Microsoft.CodeAnalysis.Diagnostics.CodeBlockAnalysisContext.SemanticModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::SemanticModel ^ SemanticModel { Microsoft::CodeAnalysis::SemanticModel ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::CodeAnalysis::SemanticModel ^ SemanticModel { Microsoft::CodeAnalysis::SemanticModel ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SemanticModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:Microsoft.CodeAnalysis.SemanticModel" /> that can provide semantic information about the <see cref="T:Microsoft.CodeAnalysis.SyntaxNode" />s in the code block.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>