<Type Name="IInterpolationOperation" FullName="Microsoft.CodeAnalysis.Operations.IInterpolationOperation">
  <TypeSignature Language="C#" Value="public interface IInterpolationOperation : Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInterpolationOperation implements class Microsoft.CodeAnalysis.IOperation, class Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Operations.IInterpolationOperation" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInterpolationOperation&#xA;Implements IInterpolatedStringContentOperation" />
  <TypeSignature Language="F#" Value="type IInterpolationOperation = interface&#xA;    interface IInterpolatedStringContentOperation&#xA;    interface IOperation" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInterpolationOperation : Microsoft::CodeAnalysis::Operations::IInterpolatedStringContentOperation" />
  <TypeSignature Language="C++ CX" Value="public interface class IInterpolationOperation : Microsoft::CodeAnalysis::Operations::IInterpolatedStringContentOperation" />
  <TypeSignature Language="C++ WINRT" Value="__interface IInterpolationOperation : Microsoft::CodeAnalysis::Operations::IInterpolatedStringContentOperation" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.CodeAnalysis.Operations.IInterpolatedStringContentOperation</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents a constituent interpolation part of an interpolated string operation.
            <para>
            Current usage:
             (1) C# interpolation part.
             (2) VB interpolation part.
            </para></summary>
    <remarks>
            This interface is reserved for implementation by its associated APIs. We reserve the right to
            change it in the future.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IOperation Alignment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IOperation Alignment" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.IInterpolationOperation.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Alignment As IOperation" />
      <MemberSignature Language="F#" Value="member this.Alignment : Microsoft.CodeAnalysis.IOperation" Usage="Microsoft.CodeAnalysis.Operations.IInterpolationOperation.Alignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::IOperation ^ Alignment { Microsoft::CodeAnalysis::IOperation ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::CodeAnalysis::IOperation ^ Alignment { Microsoft::CodeAnalysis::IOperation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Optional alignment of the interpolation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IOperation Expression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IOperation Expression" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.IInterpolationOperation.Expression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expression As IOperation" />
      <MemberSignature Language="F#" Value="member this.Expression : Microsoft.CodeAnalysis.IOperation" Usage="Microsoft.CodeAnalysis.Operations.IInterpolationOperation.Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::IOperation ^ Expression { Microsoft::CodeAnalysis::IOperation ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::CodeAnalysis::IOperation ^ Expression { Microsoft::CodeAnalysis::IOperation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Expression of the interpolation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatString">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IOperation FormatString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IOperation FormatString" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.IInterpolationOperation.FormatString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FormatString As IOperation" />
      <MemberSignature Language="F#" Value="member this.FormatString : Microsoft.CodeAnalysis.IOperation" Usage="Microsoft.CodeAnalysis.Operations.IInterpolationOperation.FormatString" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::IOperation ^ FormatString { Microsoft::CodeAnalysis::IOperation ^ get(); };" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; property Microsoft::CodeAnalysis::IOperation ^ FormatString { Microsoft::CodeAnalysis::IOperation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Optional format string of the interpolation.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>