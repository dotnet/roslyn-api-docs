<Type Name="AttributeSyntax" FullName="Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax">
  <TypeSignature Language="C#" Value="public sealed class AttributeSyntax : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed AttributeSyntax extends Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AttributeSyntax&#xA;Inherits VisualBasicSyntaxNode" />
  <TypeSignature Language="F#" Value="type AttributeSyntax = class&#xA;    inherit VisualBasicSyntaxNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeSyntax sealed : Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxNode" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
 Represents a single attribute declaration within an attribute list.
 </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.Accept(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As VisualBasicSyntaxVisitor)" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor -&gt; unit" Usage="attributeSyntax.Accept visitor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResult&gt;">
      <MemberSignature Language="C#" Value="public override TResult Accept&lt;TResult&gt; (Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResult Accept&lt;TResult&gt;(class Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor`1&lt;!!TResult&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.Accept``1(Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResult) (visitor As VisualBasicSyntaxVisitor(Of TResult)) As TResult" />
      <MemberSignature Language="F#" Value="override this.Accept : Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;'Result&gt; -&gt; 'Result" Usage="attributeSyntax.Accept visitor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResult&gt;&#xA; override TResult Accept(Microsoft::CodeAnalysis::VisualBasic::VisualBasicSyntaxVisitor&lt;TResult&gt; ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResult</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResult" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="Microsoft.CodeAnalysis.VisualBasic.VisualBasicSyntaxVisitor&lt;TResult&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResult">To be added.</typeparam>
        <param name="visitor">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArgumentListArguments">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax AddArgumentListArguments (params Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax AddArgumentListArguments(class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.AddArgumentListArguments(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddArgumentListArguments (ParamArray items As ArgumentSyntax()) As AttributeSyntax" />
      <MemberSignature Language="F#" Value="member this.AddArgumentListArguments : Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax[] -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax" Usage="attributeSyntax.AddArgumentListArguments items" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::AttributeSyntax ^ AddArgumentListArguments(... cli::array &lt;Microsoft::CodeAnalysis::VisualBasic::Syntax::ArgumentSyntax ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentSyntax[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArgumentList">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax ArgumentList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax ArgumentList" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.ArgumentList" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentList As ArgumentListSyntax" />
      <MemberSignature Language="F#" Value="member this.ArgumentList : Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.ArgumentList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::ArgumentListSyntax ^ ArgumentList { Microsoft::CodeAnalysis::VisualBasic::Syntax::ArgumentListSyntax ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The argument list, if present. If no argument list was supplied, Nothing is
 returned.
 </summary>
        <value>To be added.</value>
        <remarks>
 This child is optional. If it is not present, then Nothing is returned.
 </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As TypeSyntax" />
      <MemberSignature Language="F#" Value="member this.Name : Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.Name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::TypeSyntax ^ Name { Microsoft::CodeAnalysis::VisualBasic::Syntax::TypeSyntax ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 The name of the attribute.
 </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax Target { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax Target" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.Target" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Target As AttributeTargetSyntax" />
      <MemberSignature Language="F#" Value="member this.Target : Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax" Usage="Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.Target" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::CodeAnalysis::VisualBasic::Syntax::AttributeTargetSyntax ^ Target { Microsoft::CodeAnalysis::VisualBasic::Syntax::AttributeTargetSyntax ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
 Optional attribute target. Assembly|Module :
 </summary>
        <value>To be added.</value>
        <remarks>
 This child is optional. If it is not present, then Nothing is returned.
 </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax Update (Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax target, Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax name, Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax argumentList);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax Update(class Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax target, class Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax name, class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax argumentList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.Update(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax,Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (target As AttributeTargetSyntax, name As TypeSyntax, argumentList As ArgumentListSyntax) As AttributeSyntax" />
      <MemberSignature Language="F#" Value="member this.Update : Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax * Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax * Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax" Usage="attributeSyntax.Update (target, name, argumentList)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::AttributeSyntax ^ Update(Microsoft::CodeAnalysis::VisualBasic::Syntax::AttributeTargetSyntax ^ target, Microsoft::CodeAnalysis::VisualBasic::Syntax::TypeSyntax ^ name, Microsoft::CodeAnalysis::VisualBasic::Syntax::ArgumentListSyntax ^ argumentList);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax" />
        <Parameter Name="name" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax" />
        <Parameter Name="argumentList" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax" />
      </Parameters>
      <Docs>
        <param name="target">
 The value for the Target property.
 </param>
        <param name="name">
 The value for the Name property.
 </param>
        <param name="argumentList">
 The value for the ArgumentList property.
 </param>
        <summary>
 Returns a copy of this with the specified changes. Returns this instance if
 there are no actual changes.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithArgumentList">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax WithArgumentList (Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax argumentList);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax WithArgumentList(class Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax argumentList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.WithArgumentList(Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithArgumentList (argumentList As ArgumentListSyntax) As AttributeSyntax" />
      <MemberSignature Language="F#" Value="member this.WithArgumentList : Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax" Usage="attributeSyntax.WithArgumentList argumentList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::AttributeSyntax ^ WithArgumentList(Microsoft::CodeAnalysis::VisualBasic::Syntax::ArgumentListSyntax ^ argumentList);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argumentList" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.ArgumentListSyntax" />
      </Parameters>
      <Docs>
        <param name="argumentList">To be added.</param>
        <summary>
 Returns a copy of this with the ArgumentList property changed to the specified
 value. Returns this instance if the specified value is the same as the current
 value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithName">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax WithName (Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax name);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax WithName(class Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.WithName(Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithName (name As TypeSyntax) As AttributeSyntax" />
      <MemberSignature Language="F#" Value="member this.WithName : Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax" Usage="attributeSyntax.WithName name" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::AttributeSyntax ^ WithName(Microsoft::CodeAnalysis::VisualBasic::Syntax::TypeSyntax ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.TypeSyntax" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>
 Returns a copy of this with the Name property changed to the specified value.
 Returns this instance if the specified value is the same as the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithTarget">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax WithTarget (Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax target);" />
      <MemberSignature Language="ILAsm" Value=".method public instance class Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax WithTarget(class Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax.WithTarget(Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax)" />
      <MemberSignature Language="VB.NET" Value="Public Function WithTarget (target As AttributeTargetSyntax) As AttributeSyntax" />
      <MemberSignature Language="F#" Value="member this.WithTarget : Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax -&gt; Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax" Usage="attributeSyntax.WithTarget target" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::VisualBasic::Syntax::AttributeSyntax ^ WithTarget(Microsoft::CodeAnalysis::VisualBasic::Syntax::AttributeTargetSyntax ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.VisualBasic</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Microsoft.CodeAnalysis.VisualBasic.Syntax.AttributeTargetSyntax" />
      </Parameters>
      <Docs>
        <param name="target">To be added.</param>
        <summary>
 Returns a copy of this with the Target property changed to the specified value.
 Returns this instance if the specified value is the same as the current value.
 </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>