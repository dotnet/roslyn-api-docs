<Type Name="OperationWalker" FullName="Microsoft.CodeAnalysis.Operations.OperationWalker">
  <TypeSignature Language="C#" Value="public abstract class OperationWalker : Microsoft.CodeAnalysis.Operations.OperationVisitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit OperationWalker extends Microsoft.CodeAnalysis.Operations.OperationVisitor" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Operations.OperationWalker" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class OperationWalker&#xA;Inherits OperationVisitor" />
  <TypeSignature Language="F#" Value="type OperationWalker = class&#xA;    inherit OperationVisitor" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationWalker abstract : Microsoft::CodeAnalysis::Operations::OperationVisitor" />
  <TypeSignature Language="C++ CX" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;public ref class OperationWalker abstract : Microsoft::CodeAnalysis::Operations::OperationVisitor" />
  <TypeSignature Language="C++ WINRT" Value="[Windows::Foundation::Metadata::WebHostHidden]&#xA;class OperationWalker abstract : Microsoft::CodeAnalysis::Operations::OperationVisitor" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.Operations.OperationVisitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents a <see cref="T:Microsoft.CodeAnalysis.Operations.OperationVisitor" /> that descends an entire <see cref="T:Microsoft.CodeAnalysis.IOperation" /> tree
            visiting each IOperation and its child IOperation nodes in depth-first order.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OperationWalker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationWalker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; OperationWalker();" />
      <MemberSignature Language="C++ CX" Value="protected:&#xA; OperationWalker();" />
      <MemberSignature Language="C++ WINRT" Value=" OperationWalker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultVisit">
      <MemberSignature Language="C#" Value="public override void DefaultVisit (Microsoft.CodeAnalysis.IOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DefaultVisit(class Microsoft.CodeAnalysis.IOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationWalker.DefaultVisit(Microsoft.CodeAnalysis.IOperation)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DefaultVisit (operation As IOperation)" />
      <MemberSignature Language="F#" Value="override this.DefaultVisit : Microsoft.CodeAnalysis.IOperation -&gt; unit" Usage="operationWalker.DefaultVisit operation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DefaultVisit(Microsoft::CodeAnalysis::IOperation ^ operation);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override void DefaultVisit(Microsoft::CodeAnalysis::IOperation ^ operation);" />
      <MemberSignature Language="C++ WINRT" Value=" override void DefaultVisit(Microsoft::CodeAnalysis::IOperation const &amp; operation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.IOperation" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public override void Visit (Microsoft.CodeAnalysis.IOperation operation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Visit(class Microsoft.CodeAnalysis.IOperation operation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.Operations.OperationWalker.Visit(Microsoft.CodeAnalysis.IOperation)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Visit (operation As IOperation)" />
      <MemberSignature Language="F#" Value="override this.Visit : Microsoft.CodeAnalysis.IOperation -&gt; unit" Usage="operationWalker.Visit operation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Visit(Microsoft::CodeAnalysis::IOperation ^ operation);" />
      <MemberSignature Language="C++ CX" Value="public:&#xA; override void Visit(Microsoft::CodeAnalysis::IOperation ^ operation);" />
      <MemberSignature Language="C++ WINRT" Value=" override void Visit(Microsoft::CodeAnalysis::IOperation const &amp; operation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="operation" Type="Microsoft.CodeAnalysis.IOperation" />
      </Parameters>
      <Docs>
        <param name="operation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>