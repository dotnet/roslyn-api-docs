<Type Name="IEventAssignmentExpression" FullName="Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression">
  <TypeSignature Language="C#" Value="public interface IEventAssignmentExpression : Microsoft.CodeAnalysis.IOperation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IEventAssignmentExpression implements class Microsoft.CodeAnalysis.IOperation" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression" />
  <TypeSignature Language="VB.NET" Value="Public Interface IEventAssignmentExpression&#xA;Implements IOperation" />
  <TypeSignature Language="F#" Value="type IEventAssignmentExpression = interface&#xA;    interface IOperation" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>2.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.CodeAnalysis.IOperation</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents a binding of an event.
            </summary>
    <remarks>
            This interface is reserved for implementation by its associated APIs. We reserve the right to
            change it in the future.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="Adds">
      <MemberSignature Language="C#" Value="public bool Adds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Adds" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression.Adds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Adds As Boolean" />
      <MemberSignature Language="F#" Value="member this.Adds : bool" Usage="Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression.Adds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            True for adding a binding, false for removing one.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Event">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IEventSymbol Event { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IEventSymbol Event" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression.Event" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Event As IEventSymbol" />
      <MemberSignature Language="F#" Value="member this.Event : Microsoft.CodeAnalysis.IEventSymbol" Usage="Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression.Event" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IEventSymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Event being bound.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EventInstance">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IOperation EventInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IOperation EventInstance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression.EventInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventInstance As IOperation" />
      <MemberSignature Language="F#" Value="member this.EventInstance : Microsoft.CodeAnalysis.IOperation" Usage="Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression.EventInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Instance used to refer to the event being bound.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlerValue">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IOperation HandlerValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IOperation HandlerValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression.HandlerValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HandlerValue As IOperation" />
      <MemberSignature Language="F#" Value="member this.HandlerValue : Microsoft.CodeAnalysis.IOperation" Usage="Microsoft.CodeAnalysis.Semantics.IEventAssignmentExpression.HandlerValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>2.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Handler supplied for the event.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>