<Type Name="BaseCrefParameterListSyntax" FullName="Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax">
  <TypeSignature Language="C#" Value="public abstract class BaseCrefParameterListSyntax : Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseCrefParameterListSyntax extends Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseCrefParameterListSyntax&#xA;Inherits CSharpSyntaxNode" />
  <TypeSignature Language="F#" Value="type BaseCrefParameterListSyntax = class&#xA;    inherit CSharpSyntaxNode" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseCrefParameterListSyntax abstract : Microsoft::CodeAnalysis::CSharp::CSharpSyntaxNode" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
    <AssemblyVersion>2.9.0.0</AssemblyVersion>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.CodeAnalysis.CSharp.CSharpSyntaxNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A list of cref parameters with surrounding punctuation.
            Unlike regular parameters, cref parameters do not have names.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddParameters">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax AddParameters (params Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax AddParameters(class Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax.AddParameters(Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax[])" />
      <MemberSignature Language="VB.NET" Value="Public Function AddParameters (ParamArray items As CrefParameterSyntax()) As BaseCrefParameterListSyntax" />
      <MemberSignature Language="F#" Value="member this.AddParameters : Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax[] -&gt; Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax" Usage="baseCrefParameterListSyntax.AddParameters items" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::CSharp::Syntax::BaseCrefParameterListSyntax ^ AddParameters(... cli::array &lt;Microsoft::CodeAnalysis::CSharp::Syntax::CrefParameterSyntax ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="items">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public abstract Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax&gt; Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.CodeAnalysis.SeparatedSyntaxList`1&lt;class Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax&gt; Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Parameters As SeparatedSyntaxList(Of CrefParameterSyntax)" />
      <MemberSignature Language="F#" Value="member this.Parameters : Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax&gt;" Usage="Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax.Parameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Microsoft::CodeAnalysis::SeparatedSyntaxList&lt;Microsoft::CodeAnalysis::CSharp::Syntax::CrefParameterSyntax ^&gt; Parameters { Microsoft::CodeAnalysis::SeparatedSyntaxList&lt;Microsoft::CodeAnalysis::CSharp::Syntax::CrefParameterSyntax ^&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the parameter list.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WithParameters">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax WithParameters (Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax&gt; parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax WithParameters(valuetype Microsoft.CodeAnalysis.SeparatedSyntaxList`1&lt;class Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax&gt; parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax.WithParameters(Microsoft.CodeAnalysis.SeparatedSyntaxList{Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax})" />
      <MemberSignature Language="VB.NET" Value="Public Function WithParameters (parameters As SeparatedSyntaxList(Of CrefParameterSyntax)) As BaseCrefParameterListSyntax" />
      <MemberSignature Language="F#" Value="member this.WithParameters : Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax&gt; -&gt; Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax" Usage="baseCrefParameterListSyntax.WithParameters parameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::CodeAnalysis::CSharp::Syntax::BaseCrefParameterListSyntax ^ WithParameters(Microsoft::CodeAnalysis::SeparatedSyntaxList&lt;Microsoft::CodeAnalysis::CSharp::Syntax::CrefParameterSyntax ^&gt; parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis.CSharp</AssemblyName>
        <AssemblyVersion>2.9.0.0</AssemblyVersion>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.CSharp.Syntax.BaseCrefParameterListSyntax</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="Microsoft.CodeAnalysis.SeparatedSyntaxList&lt;Microsoft.CodeAnalysis.CSharp.Syntax.CrefParameterSyntax&gt;" />
      </Parameters>
      <Docs>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>