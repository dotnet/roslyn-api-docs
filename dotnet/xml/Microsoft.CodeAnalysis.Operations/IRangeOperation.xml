<Type Name="IRangeOperation" FullName="Microsoft.CodeAnalysis.Operations.IRangeOperation">
  <TypeSignature Language="C#" Value="public interface IRangeOperation : Microsoft.CodeAnalysis.IOperation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRangeOperation implements class Microsoft.CodeAnalysis.IOperation" />
  <TypeSignature Language="DocId" Value="T:Microsoft.CodeAnalysis.Operations.IRangeOperation" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRangeOperation&#xA;Implements IOperation" />
  <TypeSignature Language="F#" Value="type IRangeOperation = interface&#xA;    interface IOperation" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.CodeAnalysis.IOperation</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Represents a range operation.
            <para>
            Current Usage:
             (1) C# range expressions
            </para></summary>
    <remarks>
            This interface is reserved for implementation by its associated APIs. We reserve the right to change it in the future.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsLifted">
      <MemberSignature Language="C#" Value="public bool IsLifted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLifted" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.IRangeOperation.IsLifted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLifted As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsLifted : bool" Usage="Microsoft.CodeAnalysis.Operations.IRangeOperation.IsLifted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <code>true</code> if this is a 'lifted' range operation.  When there is an 
            operator that is defined to work on a value type, 'lifted' operators are 
            created to work on the <see cref="T:System.Nullable`1" /> versions of those
            value types.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftOperand">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IOperation LeftOperand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IOperation LeftOperand" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.IRangeOperation.LeftOperand" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeftOperand As IOperation" />
      <MemberSignature Language="F#" Value="member this.LeftOperand : Microsoft.CodeAnalysis.IOperation" Usage="Microsoft.CodeAnalysis.Operations.IRangeOperation.LeftOperand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Left operand.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IMethodSymbol Method { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IMethodSymbol Method" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.IRangeOperation.Method" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Method As IMethodSymbol" />
      <MemberSignature Language="F#" Value="member this.Method : Microsoft.CodeAnalysis.IMethodSymbol" Usage="Microsoft.CodeAnalysis.Operations.IRangeOperation.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IMethodSymbol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Factory method used to create this Range value. Can be null if appropriate
            symbol was not found.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightOperand">
      <MemberSignature Language="C#" Value="public Microsoft.CodeAnalysis.IOperation RightOperand { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.CodeAnalysis.IOperation RightOperand" />
      <MemberSignature Language="DocId" Value="P:Microsoft.CodeAnalysis.Operations.IRangeOperation.RightOperand" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RightOperand As IOperation" />
      <MemberSignature Language="F#" Value="member this.RightOperand : Microsoft.CodeAnalysis.IOperation" Usage="Microsoft.CodeAnalysis.Operations.IRangeOperation.RightOperand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.CodeAnalysis</AssemblyName>
        <AssemblyVersion>3.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.CodeAnalysis.IOperation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Right operand.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>